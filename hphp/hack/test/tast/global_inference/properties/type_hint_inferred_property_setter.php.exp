[(Class
    { c_span = [3:1-15:2]; c_annotation = (); c_mode = Mpartial;
      c_final = false; c_is_xhp = false; c_has_xhp_keyword = false;
      c_kind = Cnormal; c_name = ([3:7-8], "\\A"); c_tparams = [];
      c_extends = []; c_uses = []; c_use_as_alias = [];
      c_insteadof_alias = []; c_xhp_attr_uses = []; c_xhp_category = None;
      c_reqs = []; c_implements = []; c_where_constraints = [];
      c_consts = []; c_typeconsts = [];
      c_vars =
      [{ cv_final = false; cv_xhp_attr = None; cv_abstract = false;
         cv_visibility = Public; cv_type = ((int), None);
         cv_id = ([4:10-12], "x"); cv_expr = None; cv_user_attributes = [];
         cv_doc_comment = None; cv_is_promoted_variadic = false;
         cv_is_static = false; cv_span = [4:10-12] }
        ];
      c_methods =
      [{ m_span = [6:3-8:4]; m_annotation = (); m_final = false;
         m_abstract = false; m_static = false; m_visibility = Public;
         m_name = ([6:19-30], "__construct"); m_tparams = [];
         m_where_constraints = []; m_variadic = FVnonVariadic;
         m_params =
         [{ param_annotation = ([6:31-33], int);
            param_type_hint = ((int), None); param_is_variadic = false;
            param_pos = [6:31-33]; param_name = "$x"; param_expr = None;
            param_callconv = None; param_user_attributes = [];
            param_visibility = None }
           ];
         m_cap = ((mixed), None); m_unsafe_cap = ((mixed), None);
         m_body =
         { fb_ast =
           [([7:5-19],
             (Expr
                (([7:5-18], int),
                 (Binop ((Eq None),
                    (([7:5-13], int),
                     (Obj_get ((([7:5-10], this), This),
                        (([7:12-13], int), (Id ([7:12-13], "x"))),
                        OG_nullthrows))),
                    (([7:16-18], int), (Lvar ([7:16-18], $x))))))))
             ];
           fb_annotation = () };
         m_fun_kind = FSync; m_user_attributes = [];
         m_ret = ((void), (Some ([6:19-30], (Hprim Tvoid))));
         m_external = false; m_doc_comment = None };
        { m_span = [12:3-14:4]; m_annotation = (); m_final = false;
          m_abstract = false; m_static = false; m_visibility = Public;
          m_name = ([12:19-23], "getX"); m_tparams = [];
          m_where_constraints = []; m_variadic = FVnonVariadic;
          m_params = []; m_cap = ((mixed), None);
          m_unsafe_cap = ((mixed), None);
          m_body =
          { fb_ast =
            [([13:5-21],
              (Return
                 (Some (([13:12-20], int),
                        (Obj_get ((([13:12-17], this), This),
                           (([13:19-20], int), (Id ([13:19-20], "x"))),
                           OG_nullthrows))))))
              ];
            fb_annotation = () };
          m_fun_kind = FSync; m_user_attributes = []; m_ret = ((int), None);
          m_external = false; m_doc_comment = None }
        ];
      c_attributes = []; c_xhp_children = []; c_xhp_attrs = [];
      c_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
        ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
        ns_const_uses = <opaque>; ns_name = None; ns_auto_ns_map = [];
        ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      c_user_attributes = []; c_file_attributes = []; c_enum = None;
      c_pu_enums = []; c_doc_comment = None; c_emit_id = None });
  (Fun
     { f_span = [17:1-19:2]; f_annotation = (); f_mode = Mpartial;
       f_ret = ((void), (Some ([17:17-21], (Hprim Tvoid))));
       f_name = ([17:10-13], "\\foo"); f_tparams = [];
       f_where_constraints = []; f_variadic = FVnonVariadic; f_params = [];
       f_cap = ((nothing), None); f_unsafe_cap = ((mixed), None);
       f_body =
       { fb_ast =
         [([18:3-17],
           (Expr
              (([18:3-16], void),
               (Binop ((Eq None),
                  (([18:3-5], void), (Lplaceholder [18:3-5])),
                  (([18:8-16], A),
                   (New ((([18:12-13], A), (CI ([18:12-13], "\\A"))), 
                      [], [(([18:14-15], int), (Int "1"))], None,
                      ([18:12-13], (function(int $x): void)))))
                  )))))
           ];
         fb_annotation = () };
       f_fun_kind = FSync; f_user_attributes = []; f_file_attributes = [];
       f_external = false;
       f_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
         ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
         ns_const_uses = <opaque>; ns_name = None; ns_auto_ns_map = [];
         ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       f_doc_comment = None; f_static = false })
  ]
