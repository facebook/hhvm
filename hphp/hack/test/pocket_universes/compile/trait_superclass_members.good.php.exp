# trait_superclass_members.good.php starts here

.filepath "trait_superclass_members.good.php";

.adata A_0 = """Y:2:{s:4:\"kind\";i:21;s:13:\"generic_types\";y:1:{Y:1:{s:4:\"kind\";i:4;}}}""";
.adata A_1 = """k:1:{s:1:\"R\";}""";
.adata A_2 = """k:1:{s:1:\"J\";}""";
.adata A_3 = """v:1:{s:8:\"MyTraitC\";}""";
.adata A_4 = """k:1:{s:1:\"X\";}""";
.adata A_5 = """k:1:{s:1:\"K\";}""";
.adata A_6 = """k:1:{s:1:\"Y\";}""";
.adata A_7 = """v:2:{s:8:\"MyTraitA\";s:8:\"MyTraitB\";}""";

.function {} ["__EntryPoint"("""y:0:{}""")] (61,68) <"HH\\void" N > main() {
  .numiters 1;
  .declvars $member;
  .srcloc 62:12,62:26;
  NullUninit
  NullUninit
  NullUninit
  .srcloc 62:12,62:26;
  FCallClsMethodD <> 0 1 "" - "" "" "D" "pu$E$Members"
  .srcloc 62:12,62:26;
  IterInit 0 NK V:$member L0
  .try {
  L1:
    .srcloc 63:18,63:21;
    String ": "
    .srcloc 63:10,63:21;
    CGetL2 $member
    Concat
    .srcloc 63:24,63:43;
    NullUninit
    NullUninit
    NullUninit
    .srcloc 63:36,63:42;
    CGetL $member
    .srcloc 63:24,63:43;
    FCallClsMethodD <> 1 1 "0" - "" "" "D" "pu$E$value"
    .srcloc 63:10,63:44;
    Concat
    .srcloc 63:46,63:49;
    String "\n"
    .srcloc 63:10,63:49;
    Concat
    .srcloc 63:5,63:50;
    Print
    .srcloc 63:5,63:50;
    PopC
    .srcloc 62:3,64:95;
    IterNext 0 NK V:$member L1
    Jmp L0
  } .catch {
    IterFree 0
    Throw
  }
L0:
  .srcloc 65:12,65:26;
  NullUninit
  NullUninit
  NullUninit
  .srcloc 65:12,65:26;
  FCallClsMethodD <> 0 1 "" - "" "" "D" "pu$E$Members"
  .srcloc 65:12,65:26;
  IterInit 0 NK V:$member L2
  .try {
  L3:
    .srcloc 66:18,66:21;
    String ": "
    .srcloc 66:10,66:21;
    CGetL2 $member
    Concat
    .srcloc 66:24,66:43;
    NullUninit
    NullUninit
    NullUninit
    .srcloc 66:36,66:42;
    CGetL $member
    .srcloc 66:24,66:43;
    FCallClsMethodD <> 1 1 "0" - "" "" "D" "pu$E$value"
    .srcloc 66:10,66:44;
    Concat
    .srcloc 66:46,66:49;
    String "\n"
    .srcloc 66:10,66:49;
    Concat
    .srcloc 66:5,66:50;
    Print
    .srcloc 66:5,66:50;
    PopC
    .srcloc 65:3,67:95;
    IterNext 0 NK V:$member L3
    Jmp L2
  } .catch {
    IterFree 0
    Throw
  }
L2:
  .srcloc 68:2,68:2;
  Null
  RetC
}

.class {} [final trait] MyTraitC (7,14) {
  .method {}{} [private static "__Memoize"("""y:0:{}""")] (8,8) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members$memoize_impl() {
    .srcloc 8:8,8:8;
    Keyset @A_1
    .srcloc 8:8,8:8;
    Array @A_0
    VerifyRetTypeTS
    RetC
  }
  .method {}{} [private static "__Memoize"("""y:0:{}""")] (8,8) <"HH\\mixed" N > pu$E$value$memoize_impl(<"HH\\string" "HH\\string" > $atom) {
    .srcloc 8:8,8:8;
    VerifyParamType $atom
    .srcloc 8:8,8:8;
    String "R"
    .srcloc 8:8,8:8;
    CGetL2 $atom
    Eq
    JmpNZ L0
    Jmp L1
  L0:
    .srcloc 11:15,11:18;
    Int 1792
    .srcloc 8:8,8:8;
    RetC
  L1:
    .srcloc 8:8,8:8;
    NewObjD "Exception"
    Dup
    NullUninit
    NullUninit
    .srcloc 8:8,8:8;
    String "\\MyTraitC:@E::value unknown atom access: "
    .srcloc 8:8,8:8;
    CGetL $atom
    Concat
    .srcloc 8:8,8:8;
    FCallCtor <LockWhileUnwinding> 1 1 "0" - "" ""
    PopC
    LockObj
    .srcloc 8:8,8:8;
    Throw
    .srcloc 8:9,8:9;
    Null
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""")] (8,8) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members() {
    .ismemoizewrapper;
    .srcloc 8:8,8:8;
    MemoGet L0 L:0+0
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    FCallClsMethodSD <> 0 1 "" - "" "" Self "pu$E$Members$memoize_impl"
    MemoSet L:0+0
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""")] (8,8) <"HH\\mixed" N > pu$E$value(<"HH\\string" "HH\\string" > $atom) {
    .ismemoizewrapper;
    .srcloc 8:8,8:8;
    VerifyParamType $atom
    GetMemoKeyL $atom
    SetL _1
    PopC
    MemoGet L0 L:1+1
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    CGetL $atom
    FCallClsMethodSD <> 1 1 "" - "" "" Self "pu$E$value$memoize_impl"
    MemoSet L:1+1
    RetC
  }
}

.class {} [final trait] MyTraitA (16,24) {
  .use MyTraitC;
  .method {}{} [private static "__Memoize"("""y:0:{}""") "__Override"("""y:0:{}""")] (18,18) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members$memoize_impl() {
    .numiters 2;
    .declvars $result $traits_classes $traits_class $class $method $parent_members $p $_;
    .srcloc 18:8,18:8;
    Keyset @A_2
    .srcloc 18:8,18:8;
    SetL $result
    .srcloc 18:8,18:8;
    PopC
    .srcloc 18:8,18:8;
    Vec @A_3
    .srcloc 18:8,18:8;
    SetL $traits_classes
    .srcloc 18:8,18:8;
    PopC
    .srcloc 18:8,18:8;
    CGetL $traits_classes
    .srcloc 18:8,18:8;
    IterInit 0 NK V:$traits_class L0
    .try {
    L5:
      .try {
        .srcloc 18:8,18:8;
        NewObjD "ReflectionClass"
        Dup
        NullUninit
        NullUninit
        .srcloc 18:8,18:8;
        CGetL $traits_class
        .srcloc 18:8,18:8;
        FCallCtor <LockWhileUnwinding> 1 1 "0" - "" ""
        PopC
        LockObj
        .srcloc 18:8,18:8;
        SetL $class
        .srcloc 18:8,18:8;
        PopC
        .srcloc 18:8,18:8;
        CGetL $class
        NullUninit
        NullUninit
        .srcloc 18:8,18:8;
        String "pu$E$Members"
        .srcloc 18:8,18:8;
        FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "getMethod"
        .srcloc 18:8,18:8;
        SetL $method
        .srcloc 18:8,18:8;
        PopC
        .srcloc 18:8,18:8;
        CGetL $method
        NullUninit
        NullUninit
        .srcloc 18:8,18:8;
        Null
        .srcloc 18:8,18:8;
        FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "invoke"
        .srcloc 18:8,18:8;
        SetL $parent_members
        .srcloc 18:8,18:8;
        PopC
        .srcloc 18:8,18:8;
        CGetL $parent_members
        .srcloc 18:8,18:8;
        IterInit 1 NK V:$p L1
        .try {
        L2:
          .srcloc 18:8,18:8;
          CGetL $p
          .srcloc 18:8,18:8;
          BaseL $result Define
          .srcloc 18:8,18:8;
          SetM 0 W
          .srcloc 18:8,18:8;
          PopC
          .srcloc 18:8,18:8;
          IterNext 1 NK V:$p L2
          Jmp L1
        } .catch {
          IterFree 1
          Throw
        }
      L1:
        .srcloc 18:8,18:8;
        Jmp L3
      } .catch {
        Dup
        InstanceOfD "ReflectionException"
        JmpZ L4
        SetL $_
        PopC
        .srcloc 18:8,18:8;
        Jmp L3
      L4:
        Throw
      }
    L3:
      .srcloc 18:8,18:8;
      IterNext 0 NK V:$traits_class L5
      Jmp L0
    } .catch {
      IterFree 0
      Throw
    }
  L0:
    .srcloc 18:8,18:8;
    CGetL $result
    .srcloc 18:8,18:8;
    Array @A_0
    VerifyRetTypeTS
    RetC
  }
  .method {}{} [private static "__Memoize"("""y:0:{}""")] (18,18) <"HH\\mixed" N > pu$E$value$memoize_impl(<"HH\\string" "HH\\string" > $atom) {
    .numiters 1;
    .declvars $trait_classes $trait_class $class $method $_;
    .srcloc 18:8,18:8;
    VerifyParamType $atom
    .srcloc 18:8,18:8;
    String "J"
    .srcloc 18:8,18:8;
    CGetL2 $atom
    Eq
    JmpNZ L0
    Jmp L1
  L0:
    .srcloc 21:15,21:18;
    Int 1664
    .srcloc 18:8,18:8;
    RetC
  L1:
    .srcloc 18:8,18:8;
    Vec @A_3
    .srcloc 18:8,18:8;
    SetL $trait_classes
    .srcloc 18:8,18:8;
    PopC
    .srcloc 18:8,18:8;
    CGetL $trait_classes
    .srcloc 18:8,18:8;
    IterInit 0 NK V:$trait_class L2
    .try {
    L5:
      .try {
        .srcloc 18:8,18:8;
        NewObjD "ReflectionClass"
        Dup
        NullUninit
        NullUninit
        .srcloc 18:8,18:8;
        CGetL $trait_class
        .srcloc 18:8,18:8;
        FCallCtor <LockWhileUnwinding> 1 1 "0" - "" ""
        PopC
        LockObj
        .srcloc 18:8,18:8;
        SetL $class
        .srcloc 18:8,18:8;
        PopC
        .srcloc 18:8,18:8;
        CGetL $class
        NullUninit
        NullUninit
        .srcloc 18:8,18:8;
        String "pu$E$value"
        .srcloc 18:8,18:8;
        FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "getMethod"
        .srcloc 18:8,18:8;
        SetL $method
        .srcloc 18:8,18:8;
        PopC
        .srcloc 18:8,18:8;
        CGetL $method
        NullUninit
        NullUninit
        .srcloc 18:8,18:8;
        Null
        .srcloc 18:8,18:8;
        CGetL $atom
        .srcloc 18:8,18:8;
        FCallObjMethodD <> 2 1 "00" - "" "" NullThrows "invoke"
        .srcloc 18:8,18:8;
        IterFree 0
        RetC
        .srcloc 18:8,18:8;
        Jmp L3
      } .catch {
        Dup
        InstanceOfD "Exception"
        JmpZ L4
        SetL $_
        PopC
        .srcloc 18:8,18:8;
        Jmp L3
      L4:
        Throw
      }
    L3:
      .srcloc 18:8,18:8;
      IterNext 0 NK V:$trait_class L5
      Jmp L2
    } .catch {
      IterFree 0
      Throw
    }
  L2:
    .srcloc 18:8,18:8;
    NewObjD "Exception"
    Dup
    NullUninit
    NullUninit
    .srcloc 18:8,18:8;
    String "\\MyTraitA:@E::value unknown atom access: "
    .srcloc 18:8,18:8;
    CGetL $atom
    Concat
    .srcloc 18:8,18:8;
    FCallCtor <LockWhileUnwinding> 1 1 "0" - "" ""
    PopC
    LockObj
    .srcloc 18:8,18:8;
    Throw
    .srcloc 18:9,18:9;
    Null
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""") "__Override"("""y:0:{}""")] (18,18) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members() {
    .ismemoizewrapper;
    .srcloc 18:8,18:8;
    MemoGet L0 L:0+0
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    FCallClsMethodSD <> 0 1 "" - "" "" Self "pu$E$Members$memoize_impl"
    MemoSet L:0+0
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""")] (18,18) <"HH\\mixed" N > pu$E$value(<"HH\\string" "HH\\string" > $atom) {
    .ismemoizewrapper;
    .srcloc 18:8,18:8;
    VerifyParamType $atom
    GetMemoKeyL $atom
    SetL _1
    PopC
    MemoGet L0 L:1+1
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    CGetL $atom
    FCallClsMethodSD <> 1 1 "" - "" "" Self "pu$E$value$memoize_impl"
    MemoSet L:1+1
    RetC
  }
}

.class {} [final trait] MyTraitB (26,33) {
  .method {}{} [private static "__Memoize"("""y:0:{}""")] (27,27) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members$memoize_impl() {
    .srcloc 27:8,27:8;
    Keyset @A_4
    .srcloc 27:8,27:8;
    Array @A_0
    VerifyRetTypeTS
    RetC
  }
  .method {}{} [private static "__Memoize"("""y:0:{}""")] (27,27) <"HH\\mixed" N > pu$E$value$memoize_impl(<"HH\\string" "HH\\string" > $atom) {
    .srcloc 27:8,27:8;
    VerifyParamType $atom
    .srcloc 27:8,27:8;
    String "X"
    .srcloc 27:8,27:8;
    CGetL2 $atom
    Eq
    JmpNZ L0
    Jmp L1
  L0:
    .srcloc 30:15,30:16;
    Int 42
    .srcloc 27:8,27:8;
    RetC
  L1:
    .srcloc 27:8,27:8;
    NewObjD "Exception"
    Dup
    NullUninit
    NullUninit
    .srcloc 27:8,27:8;
    String "\\MyTraitB:@E::value unknown atom access: "
    .srcloc 27:8,27:8;
    CGetL $atom
    Concat
    .srcloc 27:8,27:8;
    FCallCtor <LockWhileUnwinding> 1 1 "0" - "" ""
    PopC
    LockObj
    .srcloc 27:8,27:8;
    Throw
    .srcloc 27:9,27:9;
    Null
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""")] (27,27) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members() {
    .ismemoizewrapper;
    .srcloc 27:8,27:8;
    MemoGet L0 L:0+0
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    FCallClsMethodSD <> 0 1 "" - "" "" Self "pu$E$Members$memoize_impl"
    MemoSet L:0+0
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""")] (27,27) <"HH\\mixed" N > pu$E$value(<"HH\\string" "HH\\string" > $atom) {
    .ismemoizewrapper;
    .srcloc 27:8,27:8;
    VerifyParamType $atom
    GetMemoKeyL $atom
    SetL _1
    PopC
    MemoGet L0 L:1+1
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    CGetL $atom
    FCallClsMethodSD <> 1 1 "" - "" "" Self "pu$E$value$memoize_impl"
    MemoSet L:1+1
    RetC
  }
}

.class {} C (35,47) {
  .method {}{} [private static "__Memoize"("""y:0:{}""")] (39,39) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members$memoize_impl() {
    .srcloc 39:8,39:8;
    Keyset @A_5
    .srcloc 39:8,39:8;
    Array @A_0
    VerifyRetTypeTS
    RetC
  }
  .method {}{} [private static "__Memoize"("""y:0:{}""")] (39,39) <"HH\\mixed" N > pu$E$value$memoize_impl(<"HH\\string" "HH\\string" > $atom) {
    .srcloc 39:8,39:8;
    VerifyParamType $atom
    .srcloc 39:8,39:8;
    String "K"
    .srcloc 39:8,39:8;
    CGetL2 $atom
    Eq
    JmpNZ L0
    Jmp L1
  L0:
    .srcloc 44:15,44:18;
    String "yo"
    .srcloc 39:8,39:8;
    RetC
  L1:
    .srcloc 39:8,39:8;
    NewObjD "Exception"
    Dup
    NullUninit
    NullUninit
    .srcloc 39:8,39:8;
    String "\\C:@E::value unknown atom access: "
    .srcloc 39:8,39:8;
    CGetL $atom
    Concat
    .srcloc 39:8,39:8;
    FCallCtor <LockWhileUnwinding> 1 1 "0" - "" ""
    PopC
    LockObj
    .srcloc 39:8,39:8;
    Throw
    .srcloc 39:9,39:9;
    Null
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""")] (39,39) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members() {
    .ismemoizewrapper;
    .srcloc 39:8,39:8;
    MemoGet L0 L:0+0
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    FCallClsMethodD <> 0 1 "" - "" "" "C" "pu$E$Members$memoize_impl"
    MemoSet L:0+0
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""")] (39,39) <"HH\\mixed" N > pu$E$value(<"HH\\string" "HH\\string" > $atom) {
    .ismemoizewrapper;
    .srcloc 39:8,39:8;
    VerifyParamType $atom
    GetMemoKeyL $atom
    SetL _1
    PopC
    MemoGet L0 L:1+1
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    CGetL $atom
    FCallClsMethodD <> 1 1 "" - "" "" "C" "pu$E$value$memoize_impl"
    MemoSet L:1+1
    RetC
  }
}

.class {} D (49,58) extends C {
  .use MyTraitA MyTraitB;
  .method {}{} [private static "__Memoize"("""y:0:{}""") "__Override"("""y:0:{}""")] (52,52) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members$memoize_impl() {
    .numiters 2;
    .declvars $result $traits_classes $traits_class $class $method $parent_members $p $_;
    .srcloc 52:8,52:8;
    Keyset @A_6
    .srcloc 52:8,52:8;
    SetL $result
    .srcloc 52:8,52:8;
    PopC
    .srcloc 52:8,52:8;
    Vec @A_7
    .srcloc 52:8,52:8;
    SetL $traits_classes
    .srcloc 52:8,52:8;
    PopC
    .srcloc 52:8,52:8;
    CGetL $traits_classes
    .srcloc 52:8,52:8;
    IterInit 0 NK V:$traits_class L0
    .try {
    L5:
      .try {
        .srcloc 52:8,52:8;
        NewObjD "ReflectionClass"
        Dup
        NullUninit
        NullUninit
        .srcloc 52:8,52:8;
        CGetL $traits_class
        .srcloc 52:8,52:8;
        FCallCtor <LockWhileUnwinding> 1 1 "0" - "" ""
        PopC
        LockObj
        .srcloc 52:8,52:8;
        SetL $class
        .srcloc 52:8,52:8;
        PopC
        .srcloc 52:8,52:8;
        CGetL $class
        NullUninit
        NullUninit
        .srcloc 52:8,52:8;
        String "pu$E$Members"
        .srcloc 52:8,52:8;
        FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "getMethod"
        .srcloc 52:8,52:8;
        SetL $method
        .srcloc 52:8,52:8;
        PopC
        .srcloc 52:8,52:8;
        CGetL $method
        NullUninit
        NullUninit
        .srcloc 52:8,52:8;
        Null
        .srcloc 52:8,52:8;
        FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "invoke"
        .srcloc 52:8,52:8;
        SetL $parent_members
        .srcloc 52:8,52:8;
        PopC
        .srcloc 52:8,52:8;
        CGetL $parent_members
        .srcloc 52:8,52:8;
        IterInit 1 NK V:$p L1
        .try {
        L2:
          .srcloc 52:8,52:8;
          CGetL $p
          .srcloc 52:8,52:8;
          BaseL $result Define
          .srcloc 52:8,52:8;
          SetM 0 W
          .srcloc 52:8,52:8;
          PopC
          .srcloc 52:8,52:8;
          IterNext 1 NK V:$p L2
          Jmp L1
        } .catch {
          IterFree 1
          Throw
        }
      L1:
        .srcloc 52:8,52:8;
        Jmp L3
      } .catch {
        Dup
        InstanceOfD "ReflectionException"
        JmpZ L4
        SetL $_
        PopC
        .srcloc 52:8,52:8;
        Jmp L3
      L4:
        Throw
      }
    L3:
      .srcloc 52:8,52:8;
      IterNext 0 NK V:$traits_class L5
      Jmp L0
    } .catch {
      IterFree 0
      Throw
    }
  L0:
    .try {
      .srcloc 52:8,52:8;
      NewObjD "ReflectionClass"
      Dup
      NullUninit
      NullUninit
      .srcloc 52:8,52:8;
      String "C"
      .srcloc 52:8,52:8;
      FCallCtor <LockWhileUnwinding> 1 1 "0" - "" ""
      PopC
      LockObj
      .srcloc 52:8,52:8;
      SetL $class
      .srcloc 52:8,52:8;
      PopC
      .srcloc 52:8,52:8;
      CGetL $class
      NullUninit
      NullUninit
      .srcloc 52:8,52:8;
      String "pu$E$Members"
      .srcloc 52:8,52:8;
      FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "getMethod"
      .srcloc 52:8,52:8;
      SetL $method
      .srcloc 52:8,52:8;
      PopC
      .srcloc 52:8,52:8;
      CGetL $method
      NullUninit
      NullUninit
      .srcloc 52:8,52:8;
      Null
      .srcloc 52:8,52:8;
      FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "invoke"
      .srcloc 52:8,52:8;
      SetL $parent_members
      .srcloc 52:8,52:8;
      PopC
      .srcloc 52:8,52:8;
      CGetL $parent_members
      .srcloc 52:8,52:8;
      IterInit 0 NK V:$p L6
      .try {
      L7:
        .srcloc 52:8,52:8;
        CGetL $p
        .srcloc 52:8,52:8;
        BaseL $result Define
        .srcloc 52:8,52:8;
        SetM 0 W
        .srcloc 52:8,52:8;
        PopC
        .srcloc 52:8,52:8;
        IterNext 0 NK V:$p L7
        Jmp L6
      } .catch {
        IterFree 0
        Throw
      }
    L6:
      .srcloc 52:8,52:8;
      Jmp L8
    } .catch {
      Dup
      InstanceOfD "ReflectionException"
      JmpZ L9
      SetL $_
      PopC
      .srcloc 52:8,52:8;
      Jmp L8
    L9:
      Throw
    }
  L8:
    .srcloc 52:8,52:8;
    CGetL $result
    .srcloc 52:8,52:8;
    Array @A_0
    VerifyRetTypeTS
    RetC
  }
  .method {}{} [private static "__Memoize"("""y:0:{}""")] (52,52) <"HH\\mixed" N > pu$E$value$memoize_impl(<"HH\\string" "HH\\string" > $atom) {
    .numiters 1;
    .declvars $trait_classes $trait_class $class $method $_;
    .srcloc 52:8,52:8;
    VerifyParamType $atom
    .srcloc 52:8,52:8;
    String "Y"
    .srcloc 52:8,52:8;
    CGetL2 $atom
    Eq
    JmpNZ L0
    Jmp L1
  L0:
    .srcloc 55:15,55:16;
    Int 44
    .srcloc 52:8,52:8;
    RetC
  L1:
    .srcloc 52:8,52:8;
    Vec @A_7
    .srcloc 52:8,52:8;
    SetL $trait_classes
    .srcloc 52:8,52:8;
    PopC
    .srcloc 52:8,52:8;
    CGetL $trait_classes
    .srcloc 52:8,52:8;
    IterInit 0 NK V:$trait_class L2
    .try {
    L5:
      .try {
        .srcloc 52:8,52:8;
        NewObjD "ReflectionClass"
        Dup
        NullUninit
        NullUninit
        .srcloc 52:8,52:8;
        CGetL $trait_class
        .srcloc 52:8,52:8;
        FCallCtor <LockWhileUnwinding> 1 1 "0" - "" ""
        PopC
        LockObj
        .srcloc 52:8,52:8;
        SetL $class
        .srcloc 52:8,52:8;
        PopC
        .srcloc 52:8,52:8;
        CGetL $class
        NullUninit
        NullUninit
        .srcloc 52:8,52:8;
        String "pu$E$value"
        .srcloc 52:8,52:8;
        FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "getMethod"
        .srcloc 52:8,52:8;
        SetL $method
        .srcloc 52:8,52:8;
        PopC
        .srcloc 52:8,52:8;
        CGetL $method
        NullUninit
        NullUninit
        .srcloc 52:8,52:8;
        Null
        .srcloc 52:8,52:8;
        CGetL $atom
        .srcloc 52:8,52:8;
        FCallObjMethodD <> 2 1 "00" - "" "" NullThrows "invoke"
        .srcloc 52:8,52:8;
        IterFree 0
        RetC
        .srcloc 52:8,52:8;
        Jmp L3
      } .catch {
        Dup
        InstanceOfD "Exception"
        JmpZ L4
        SetL $_
        PopC
        .srcloc 52:8,52:8;
        Jmp L3
      L4:
        Throw
      }
    L3:
      .srcloc 52:8,52:8;
      IterNext 0 NK V:$trait_class L5
      Jmp L2
    } .catch {
      IterFree 0
      Throw
    }
  L2:
    .srcloc 52:8,52:8;
    NullUninit
    NullUninit
    NullUninit
    .srcloc 52:8,52:8;
    CGetL $atom
    .srcloc 52:8,52:8;
    FCallClsMethodSD <> 1 1 "0" - "" "" Parent "pu$E$value"
    .srcloc 52:8,52:8;
    RetC
    .srcloc 52:9,52:9;
    Null
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""") "__Override"("""y:0:{}""")] (52,52) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members() {
    .ismemoizewrapper;
    .srcloc 52:8,52:8;
    MemoGet L0 L:0+0
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    FCallClsMethodD <> 0 1 "" - "" "" "D" "pu$E$Members$memoize_impl"
    MemoSet L:0+0
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""")] (52,52) <"HH\\mixed" N > pu$E$value(<"HH\\string" "HH\\string" > $atom) {
    .ismemoizewrapper;
    .srcloc 52:8,52:8;
    VerifyParamType $atom
    GetMemoKeyL $atom
    SetL _1
    PopC
    MemoGet L0 L:1+1
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    CGetL $atom
    FCallClsMethodD <> 1 1 "" - "" "" "D" "pu$E$value$memoize_impl"
    MemoSet L:1+1
    RetC
  }
}

.file_attributes ["__EnableUnstableFeatures"("""y:1:{s:16:\"pocket_universes\";}""")] ;

# trait_superclass_members.good.php ends here
