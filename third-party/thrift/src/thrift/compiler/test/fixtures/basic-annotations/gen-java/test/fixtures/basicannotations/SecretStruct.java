/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package test.fixtures.basicannotations;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.thrift.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="SecretStruct", builder=SecretStruct.Builder.class)
public final class SecretStruct implements com.facebook.thrift.payload.ThriftSerializable {

    @ThriftConstructor
    public SecretStruct(
        @com.facebook.swift.codec.ThriftField(value=1, name="id", requiredness=Requiredness.NONE) final long id,
        @com.facebook.swift.codec.ThriftField(value=2, name="password", requiredness=Requiredness.NONE) final String password
    ) {
        this.id = id;
        this.password = password;
    }
    
    @ThriftConstructor
    protected SecretStruct() {
      this.id = 0L;
      this.password = null;
    }
    
    public static class Builder {
    
        private long id = 0L;
        private String password = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="id", requiredness=Requiredness.NONE)
        public Builder setId(long id) {
            this.id = id;
            return this;
        }
    
        public long getId() { return id; }
    
            @org.apache.thrift.annotations.Sensitive
        @com.facebook.swift.codec.ThriftField(value=2, name="password", requiredness=Requiredness.NONE)
        public Builder setPassword(String password) {
            this.password = password;
            return this;
        }
    
        public String getPassword() { return password; }
    
        public Builder() { }
        public Builder(SecretStruct other) {
            this.id = other.id;
            this.password = other.password;
        }
    
        @ThriftConstructor
        public SecretStruct build() {
            SecretStruct result = new SecretStruct (
                this.id,
                this.password
            );
            return result;
        }
    }
        
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("SecretStruct");
    private final long id;
    public static final int _ID = 1;
    private static final TField ID_FIELD_DESC = new TField("id", TType.I64, (short)1);
        @org.apache.thrift.annotations.Sensitive
    private final String password;
    public static final int _PASSWORD = 2;
    private static final TField PASSWORD_FIELD_DESC = new TField("password", TType.STRING, (short)2);
    static {
      NAMES_TO_IDS.put("id", 1);
      THRIFT_NAMES_TO_IDS.put("id", 1);
      FIELD_METADATA.put(1, ID_FIELD_DESC);
      NAMES_TO_IDS.put("password", 2);
      THRIFT_NAMES_TO_IDS.put("password", 2);
      FIELD_METADATA.put(2, PASSWORD_FIELD_DESC);
    }
    
    
    @com.facebook.swift.codec.ThriftField(value=1, name="id", requiredness=Requiredness.NONE)
    public long getId() { return id; }
    
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="password", requiredness=Requiredness.NONE)
    public String getPassword() { return password; }
    
    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("id", id);
        helper.add("password", "<SENSITIVE FIELD>");
        return helper.toString();
    }
    
    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        SecretStruct other = (SecretStruct)o;
    
        return
            Objects.equals(id, other.id) &&
            Objects.equals(password, other.password) &&
            true;
    }
    
    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            id,
            password
        });
    }
    
    
    public static com.facebook.thrift.payload.Reader<SecretStruct> asReader() {
      return SecretStruct::read0;
    }
    
    public static SecretStruct read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(SecretStruct.NAMES_TO_IDS, SecretStruct.THRIFT_NAMES_TO_IDS, SecretStruct.FIELD_METADATA);
      SecretStruct.Builder builder = new SecretStruct.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _ID:
          if (__field.type == TType.I64) {
            long id = oprot.readI64();
            builder.setId(id);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PASSWORD:
          if (__field.type == TType.STRING) {
            String password = oprot.readString();
            builder.setPassword(password);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }
    
    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI64(this.id);
      oprot.writeFieldEnd();
      if (password != null) {
        oprot.writeFieldBegin(PASSWORD_FIELD_DESC);
        oprot.writeString(this.password);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }
    
    private static class _SecretStructLazy {
        private static final SecretStruct _DEFAULT = new SecretStruct.Builder().build();
    }
    
    public static SecretStruct defaultInstance() {
        return  _SecretStructLazy._DEFAULT;
    }
}
