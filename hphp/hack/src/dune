(env
  (_ (flags (:standard -w @a-4-6-20-29-35-41-42-44-45-48-50 \ -strict-sequence))))

(library
  (name html_entities)
  (modules html_entities)
  (ocamlc_flags (:standard -custom))
  (libraries
    core_kernel
    str)
)

(executable
  (name hh_single_type_check)
  (modules
    hh_single_type_check)
  (ocamlc_flags (:standard -custom))
  (link_flags (:standard (:include dune_config/ld-opts.sexp)))
  (libraries
    ai
    client
    default_injector_config
    file_content
    gen_deps
    glean_dependency_graph_stubs
    hhi
    nast
    parent
    server
    server_env
    sys_utils
    tast
    tast_typecheck
    temp_file
    typing
    utils_core
    utils_multifile))

(executable
  (name hh_server)
  (modules
    hh_server)
  (ocamlc_flags (:standard -custom))
  (link_flags (:standard (:include dune_config/ld-opts.sexp)))
  (libraries
    ai
    client
    default_injector_config
    file_content
    gen_deps
    hhi
    hh_server_monitor
    nast
    parent
    server
    server_env
    sys_utils
    tast
    typing
    utils_core))

(executable
  (name hh_client)
  (modules
    hh_client)
  (ocamlc_flags (:standard -custom))
  (link_flags (:standard (:include dune_config/ld-opts.sexp)))
  (libraries
    ai
    client
    default_injector_config
    file_content
    gen_deps
    hhi
    hh_server_monitor
    nast
    parent
    server
    server_env
    sys_utils
    tast
    typing
    utils_core))

(executable
  (name hh_single_compile)
  (modules
    hh_single_compile)
  (libraries
    compiler_id
    default_injector_config
    facts
    global_config
    global_options
    hhbc
    hhi
    heap_ident
    logging
    naming
    typing)
  (ocamlc_flags (:standard -custom))
  (link_flags (:standard (:include dune_config/ld-opts.sexp)))
  (flags (:standard -unsafe-string)))

(executable
  (name hh_parse)
  (modules
    hh_parse)
  (ocamlc_flags (:standard -custom))
  (link_flags (:standard (:include dune_config/ld-opts.sexp)))
  (libraries
    debug
    default_injector_config
    global_config
    hackfmt
    nast
    parser
    utils_core))

(executable
  (name hackfmt)
  (modules
    hackfmt)
  (ocamlc_flags (:standard -custom))
  (link_flags (:standard (:include dune_config/ld-opts.sexp)))
  (libraries
    default_injector_config
    hackfmt
    hackfmt_debug
    utils_config_file
    utils_ocaml_overrides))

(executable
  (name generate_full_fidelity)
  (modules
    generate_full_fidelity
    generate_full_fidelity_data)
  (ocamlc_flags (:standard -custom))
  (link_flags (:standard (:include dune_config/ld-opts.sexp)))
  (libraries
    core_kernel
    html_entities
    str
    parser_schema
    collections))
