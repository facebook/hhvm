#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

import typing as _typing

import folly.iobuf as _fbthrift_iobuf
import thrift.py3.builder

import facebook.thrift.annotation.cpp.types as _facebook_thrift_annotation_cpp_types
import facebook.thrift.annotation.cpp.builders as _facebook_thrift_annotation_cpp_builders
import includes.types as _includes_types
import includes.builders as _includes_builders

import module.types as _module_types


class Empty_Builder(thrift.py3.builder.StructBuilder):

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class ASimpleStruct_Builder(thrift.py3.builder.StructBuilder):
    boolField: _typing.Optional[int]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class ASimpleStructNoexcept_Builder(thrift.py3.builder.StructBuilder):
    boolField: _typing.Optional[int]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class MyStruct_Builder(thrift.py3.builder.StructBuilder):
    MyBoolField: _typing.Optional[bool]
    MyIntField: _typing.Optional[int]
    MyStringField: _typing.Optional[str]
    MyStringField2: _typing.Optional[str]
    MyBinaryField: _typing.Optional[bytes]
    MyBinaryField2: _typing.Optional[bytes]
    MyBinaryField3: _typing.Optional[bytes]
    MyBinaryListField4: _typing.Optional[list]
    MyMapEnumAndInt: _typing.Optional[dict]
    MyCustomField: _typing.Optional[bytes]
    MyOptCustomField: _typing.Optional[bytes]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class SimpleUnion_Builder(thrift.py3.builder.StructBuilder):
    intValue: _typing.Optional[int]
    stringValue: _typing.Optional[str]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class ComplexUnion_Builder(thrift.py3.builder.StructBuilder):
    intValue: _typing.Optional[int]
    opt_intValue: _typing.Optional[int]
    stringValue: _typing.Optional[str]
    opt_stringValue: _typing.Optional[str]
    intValue2: _typing.Optional[int]
    intValue3: _typing.Optional[int]
    doubelValue: _typing.Optional[float]
    boolValue: _typing.Optional[bool]
    union_list: _typing.Optional[list]
    union_set: _typing.Optional[set]
    union_map: _typing.Optional[dict]
    opt_union_map: _typing.Optional[dict]
    enum_field: _typing.Optional[_module_types.MyEnumA]
    enum_container: _typing.Optional[list]
    a_struct: _typing.Any
    a_set_struct: _typing.Optional[set]
    a_union: _typing.Any
    opt_a_union: _typing.Any
    a_union_list: _typing.Optional[list]
    a_union_typedef: _typing.Optional[set]
    a_union_typedef_list: _typing.Optional[list]
    MyBinaryField: _typing.Optional[bytes]
    MyBinaryField2: _typing.Optional[bytes]
    MyBinaryListField4: _typing.Optional[list]
    ref_field: _typing.Any
    ref_field2: _typing.Any
    excp_field: _typing.Any
    MyCustomField: _typing.Optional[bytes]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class AnException_Builder(thrift.py3.builder.StructBuilder):
    code: _typing.Optional[int]
    req_code: _typing.Optional[int]
    message2: _typing.Optional[str]
    req_message: _typing.Optional[str]
    exception_list: _typing.Optional[list]
    exception_set: _typing.Optional[set]
    exception_map: _typing.Optional[dict]
    req_exception_map: _typing.Optional[dict]
    enum_field: _typing.Optional[_module_types.MyEnumA]
    enum_container: _typing.Optional[list]
    a_struct: _typing.Any
    a_set_struct: _typing.Optional[set]
    a_union_list: _typing.Optional[list]
    union_typedef: _typing.Optional[set]
    a_union_typedef_list: _typing.Optional[list]
    MyCustomField: _typing.Optional[bytes]
    MyOptCustomField: _typing.Optional[bytes]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class AnotherException_Builder(thrift.py3.builder.StructBuilder):
    code: _typing.Optional[int]
    req_code: _typing.Optional[int]
    message: _typing.Optional[str]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class containerStruct_Builder(thrift.py3.builder.StructBuilder):
    fieldA: _typing.Optional[bool]
    req_fieldA: _typing.Optional[bool]
    opt_fieldA: _typing.Optional[bool]
    fieldB: _typing.Optional[dict]
    req_fieldB: _typing.Optional[dict]
    opt_fieldB: _typing.Optional[dict]
    fieldC: _typing.Optional[set]
    req_fieldC: _typing.Optional[set]
    opt_fieldC: _typing.Optional[set]
    fieldD: _typing.Optional[str]
    fieldE: _typing.Optional[str]
    req_fieldE: _typing.Optional[str]
    opt_fieldE: _typing.Optional[str]
    fieldF: _typing.Optional[list]
    fieldG: _typing.Optional[dict]
    fieldH: _typing.Optional[list]
    fieldI: _typing.Optional[bool]
    fieldJ: _typing.Optional[dict]
    fieldK: _typing.Optional[list]
    fieldL: _typing.Optional[set]
    fieldM: _typing.Optional[dict]
    fieldN: _typing.Optional[int]
    fieldO: _typing.Optional[list]
    fieldP: _typing.Optional[list]
    fieldQ: _typing.Optional[_module_types.MyEnumA]
    fieldR: _typing.Optional[_module_types.MyEnumA]
    req_fieldR: _typing.Optional[_module_types.MyEnumA]
    opt_fieldR: _typing.Optional[_module_types.MyEnumA]
    fieldS: _typing.Optional[_module_types.MyEnumA]
    fieldT: _typing.Optional[list]
    fieldU: _typing.Optional[list]
    fieldV: _typing.Any
    req_fieldV: _typing.Any
    opt_fieldV: _typing.Any
    fieldW: _typing.Optional[set]
    fieldX: _typing.Any
    req_fieldX: _typing.Any
    opt_fieldX: _typing.Any
    fieldY: _typing.Optional[list]
    fieldZ: _typing.Optional[set]
    fieldAA: _typing.Optional[list]
    fieldAB: _typing.Optional[dict]
    fieldAC: _typing.Optional[_module_types.MyEnumB]
    fieldAD: _typing.Optional[_includes_types.AnEnum]
    fieldAE: _typing.Optional[dict]
    fieldSD: _typing.Optional[str]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class MyIncludedStruct_Builder(thrift.py3.builder.StructBuilder):
    MyIncludedInt: _typing.Optional[int]
    MyIncludedStruct: _typing.Any
    ARefField: _typing.Any
    ARequiredField: _typing.Any

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class AnnotatedStruct_Builder(thrift.py3.builder.StructBuilder):
    no_annotation: _typing.Any
    cpp_unique_ref: _typing.Any
    cpp2_unique_ref: _typing.Any
    container_with_ref: _typing.Optional[dict]
    req_cpp_unique_ref: _typing.Any
    req_cpp2_unique_ref: _typing.Any
    req_container_with_ref: _typing.Optional[list]
    opt_cpp_unique_ref: _typing.Any
    opt_cpp2_unique_ref: _typing.Any
    opt_container_with_ref: _typing.Optional[set]
    ref_type_unique: _typing.Any
    ref_type_shared: _typing.Any
    ref_type_const: _typing.Optional[dict]
    req_ref_type_shared: _typing.Any
    req_ref_type_const: _typing.Any
    req_ref_type_unique: _typing.Optional[list]
    opt_ref_type_const: _typing.Any
    opt_ref_type_unique: _typing.Any
    opt_ref_type_shared: _typing.Optional[set]
    base_type: _typing.Optional[int]
    list_type: _typing.Optional[list]
    set_type: _typing.Optional[set]
    map_type: _typing.Optional[dict]
    map_struct_type: _typing.Optional[dict]
    iobuf_type: _typing.Optional[_fbthrift_iobuf.IOBuf]
    iobuf_ptr: _typing.Optional[_fbthrift_iobuf.IOBuf]
    list_i32_template: _typing.Optional[list]
    list_string_template: _typing.Optional[list]
    set_template: _typing.Optional[set]
    map_template: _typing.Optional[dict]
    typedef_list_template: _typing.Optional[list]
    typedef_deque_template: _typing.Optional[list]
    typedef_set_template: _typing.Optional[set]
    typedef_map_template: _typing.Optional[dict]
    indirection_a: _typing.Optional[int]
    indirection_b: _typing.Optional[list]
    indirection_c: _typing.Optional[set]
    iobuf_type_val: _typing.Optional[_fbthrift_iobuf.IOBuf]
    iobuf_ptr_val: _typing.Optional[_fbthrift_iobuf.IOBuf]
    struct_struct: _typing.Any

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class ComplexContainerStruct_Builder(thrift.py3.builder.StructBuilder):
    map_of_iobufs: _typing.Optional[dict]
    map_of_iobuf_ptrs: _typing.Optional[dict]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class FloatStruct_Builder(thrift.py3.builder.StructBuilder):
    floatField: _typing.Optional[float]
    doubleField: _typing.Optional[float]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class FloatUnion_Builder(thrift.py3.builder.StructBuilder):
    floatSide: _typing.Optional[float]
    doubleSide: _typing.Optional[float]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class AllRequiredNoExceptMoveCtrStruct_Builder(thrift.py3.builder.StructBuilder):
    intField: _typing.Optional[int]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


