[("\\C",
  (Shallow_decl_defs.Class
     { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
       sc_abstract = false; sc_is_xhp = false; sc_internal = false;
       sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
       sc_module = None; sc_name = ([3:7-8], "\\C"); sc_tparams = [];
       sc_where_constraints = []; sc_extends = []; sc_uses = [];
       sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
       sc_xhp_marked_empty = false; sc_req_extends = [];
       sc_req_implements = []; sc_req_class = []; sc_implements = [];
       sc_support_dynamic_type = false; sc_consts = [];
       sc_typeconsts =
       [{ Shallow_decl_defs.stc_name = ([4:14-15], "T");
          stc_kind =
          (Typing_defs.TCConcrete
             { Typing_defs.tc_type = (Rhint ([4:18-21]), (Tprim Tint)) });
          stc_enforceable = ([Pos.none], false); stc_reifiable = None;
          stc_is_ctx = false };
         { Shallow_decl_defs.stc_name = ([5:14-15], "U");
           stc_kind =
           (Typing_defs.TCConcrete
              { Typing_defs.tc_type =
                (Rhint ([5:18-25]),
                 (Taccess
                    ((Rhint ([5:18-25]), (Tapply (([3:7-8], "\\C"), []))),
                     [([5:24-25], "T")])))
                });
           stc_enforceable = ([Pos.none], false); stc_reifiable = None;
           stc_is_ctx = false }
         ];
       sc_props = []; sc_sprops = []; sc_constructor = None;
       sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
       sc_enum_type = None; sc_docs_url = None }));
  ("\\I",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = false; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = Cinterface; sc_module = None;
        sc_name = ([8:11-12], "\\I"); sc_tparams = [];
        sc_where_constraints = []; sc_extends = []; sc_uses = [];
        sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false; sc_req_extends = [];
        sc_req_implements = []; sc_req_class = []; sc_implements = [];
        sc_support_dynamic_type = false; sc_consts = [];
        sc_typeconsts =
        [{ Shallow_decl_defs.stc_name = ([9:14-15], "V");
           stc_kind =
           (Typing_defs.TCConcrete
              { Typing_defs.tc_type = (Rhint ([9:18-21]), (Tprim Tint)) });
           stc_enforceable = ([Pos.none], false); stc_reifiable = None;
           stc_is_ctx = false };
          { Shallow_decl_defs.stc_name = ([10:14-15], "W");
            stc_kind =
            (Typing_defs.TCConcrete
               { Typing_defs.tc_type =
                 (Rhint ([10:18-25]),
                  (Taccess
                     ((Rhint ([10:18-25]), (Tapply (([8:11-12], "\\I"), []))),
                      [([10:24-25], "V")])))
                 });
            stc_enforceable = ([Pos.none], false); stc_reifiable = None;
            stc_is_ctx = false }
          ];
        sc_props = []; sc_sprops = []; sc_constructor = None;
        sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
        sc_enum_type = None; sc_docs_url = None }));
  ("\\T",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = false; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = Ctrait; sc_module = None;
        sc_name = ([13:7-8], "\\T"); sc_tparams = [];
        sc_where_constraints = []; sc_extends = []; sc_uses = [];
        sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false;
        sc_req_extends =
        [(Rhint ([14:19-20]), (Tapply (([14:19-20], "\\C"), [])))];
        sc_req_implements = []; sc_req_class = []; sc_implements = [];
        sc_support_dynamic_type = false; sc_consts = []; sc_typeconsts = [];
        sc_props = []; sc_sprops = []; sc_constructor = None;
        sc_static_methods = [];
        sc_methods =
        [{ Shallow_decl_defs.sm_name = ([15:28-29], "f");
           sm_type =
           (Rwitness_from_decl ([15:28-29]),
            (Tfun
               { ft_tparams = []; ft_where_constraints = []; ft_params = [];
                 ft_implicit_params =
                 { capability = (CapDefaults [15:28-29]) };
                 ft_ret =
                 { et_enforced = Typing_defs_core.Unenforced;
                   et_type =
                   (Rhint ([15:33-40]),
                    (Taccess
                       ((Rhint ([15:33-40]), (Tapply (([13:7-8], "\\T"), []))),
                        [([15:39-40], "U")])))
                   };
                 ft_flags =
                 (make_ft_flags FSync ~return_disposable:false
                   ~returns_readonly:false ~support_dynamic_type:false
                   ~readonly_this:false ~is_memoized:false ~variadic:false);
                 ft_ifc_decl = FDPolicied {PUBLIC}ft_cross_package = None }));
           sm_visibility = Public; sm_deprecated = None; sm_flags = abstract;
           sm_attributes = [] }
          ];
        sc_user_attributes = []; sc_enum_type = None; sc_docs_url = None }))
  ]
