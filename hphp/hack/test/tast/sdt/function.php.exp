[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([3:10-11], "\\f");
      fd_fun =
      { f_span = [3:1-5:2]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_ret = ((~vec<int>), (Some ([3:37-45], (Happly (([3:37-40], "\\HH\\vec"), [([3:41-44], (Hprim Tint))])))));
        f_params =
        [{ param_annotation = (vec<int>); param_type_hint = ((vec<int>), (Some ([3:12-20], (Happly (([3:12-15], "\\HH\\vec"), [([3:16-19], (Hprim Tint))]))))); 
           param_is_variadic = false; param_pos = [3:21-23]; param_name = "$v"; 
           param_expr = None; param_readonly = None; param_callconv = Pnormal; 
           param_user_attributes = []; param_visibility = None };
          { param_annotation = (string); param_type_hint = ((string), (Some ([3:25-31], (Hprim Tstring)))); 
            param_is_variadic = false; param_pos = [3:32-34]; param_name = "$s"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([4:3-13], (Return (Some ((vec<int>), [4:10-12], (Lvar ([4:10-12], $v))))))] }; 
        f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([3:10-11], "__SupportDynamicType"); ua_params = [] }]; 
        f_external = false; f_doc_comment = None };
      fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] })