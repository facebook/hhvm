{
    "preamble": "\n\/\/ Avoid dragging in the icu namespace.\n#ifndef U_USING_ICU_NAMESPACE\n#define U_USING_ICU_NAMESPACE 0\n#endif\n",
    "consts": [
        {
            "name": "UREGEX_CASE_INSENSITIVE",
            "type": "Int64"
        },
        {
            "name": "UREGEX_COMMENTS",
            "type": "Int64"
        },
        {
            "name": "UREGEX_DOTALL",
            "type": "Int64"
        },
        {
            "name": "UREGEX_MULTILINE",
            "type": "Int64"
        },
        {
            "name": "UREGEX_UWORD",
            "type": "Int64"
        },
        {
            "name": "UREGEX_OFFSET_CAPTURE",
            "type": "Int64"
        }
    ],
    "funcs": [
        {
            "name": "icu_match",
            "desc": "Searches subject for a match to the regular expression given in pattern. See http:\/\/userguide.icu-project.org\/strings\/regexp",
            "flags": [
            ],
            "return": {
                "type": "Variant",
                "desc": "icu_match() returns the number of times pattern matches. That will be either 0 times (no match) or 1 time because icu_match() will stop searching after the first match. icu_match() returns FALSE if an error occurred."
            },
            "args": [
                {
                    "name": "pattern",
                    "type": "String",
                    "desc": "The pattern to search for, as a string."
                },
                {
                    "name": "subject",
                    "type": "String",
                    "desc": "The input string."
                },
                {
                    "name": "matches",
                    "type": "Variant",
                    "value": "null",
                    "desc": "If matches is provided, then it is filled with the results of search. $matches[0] will contain the text that matched the full pattern, $matches[1] will have the text that matched the first captured parenthesized subpattern, and so on.",
                    "ref": true
                },
                {
                    "name": "flags",
                    "type": "Int64",
                    "value": "0",
                    "desc": "OR together a combination of UREGEX_* constants."
                }
            ]
        },
        {
            "name": "icu_transliterate",
            "flags": [
            ],
            "return": {
                "type": "String"
            },
            "args": [
                {
                    "name": "str",
                    "type": "String"
                },
                {
                    "name": "remove_accents",
                    "type": "Boolean"
                }
            ]
        },
        {
            "name": "icu_tokenize",
            "return": {
                "type": "StringVec"
            },
            "args": [
                {
                    "name": "text",
                    "type": "String"
                }
            ],
            "flags": [
            ]
        }
    ],
    "classes": [
    ]
}