Parsed decls:

{ Direct_decl_parser.classes =
  { "\\C" ->
    { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
      sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
      sc_name = ([3:7-8], "\\C"); sc_tparams = []; sc_where_constraints = [];
      sc_extends = []; sc_uses = []; sc_xhp_attr_uses = [];
      sc_req_extends = []; sc_req_implements = []; sc_implements = [];
      sc_consts = [];
      sc_typeconsts =
      [{ Shallow_decl_defs.stc_abstract = TCConcrete; stc_constraint = None;
         stc_name = ([4:14-15], "T");
         stc_type =
         (Some (Rhint (root|typeconst_property_promotion.php line 4, characters 18-20),
                (Tprim Tint)));
         stc_enforceable = ([Pos.none], false); stc_reifiable = None }
        ];
      sc_pu_enums = [];
      sc_props =
      [{ Shallow_decl_defs.sp_const = false; sp_xhp_attr = None;
         sp_lateinit = false; sp_lsb = false; sp_name = ([6:21-23], "a");
         sp_needs_init = true;
         sp_type =
         (Some (Rhint (root|typeconst_property_promotion.php line 6, characters 13-19),
                (Taccess
                   ((Rhint (root|typeconst_property_promotion.php line 6, characters 13-16),
                     Tthis),
                    [([6:19-20], "T")]))));
         sp_abstract = false; sp_visibility = Private }
        ];
      sc_sprops = [];
      sc_constructor =
      (Some { Shallow_decl_defs.sm_abstract = false; sm_final = false;
              sm_memoizelsb = false; sm_name = ([5:19-30], "__construct");
              sm_override = false; sm_dynamicallycallable = false;
              sm_reactivity = None;
              sm_type =
              (Rwitness (root|typeconst_property_promotion.php line 5, characters 19-29),
               (Tfun
                  { ft_arity = (Fstandard ()); ft_tparams = [];
                    ft_where_constraints = [];
                    ft_params =
                    [{ fp_pos = [6:21-23]; fp_name = (Some "$a");
                       fp_type =
                       { et_enforced = false;
                         et_type =
                         (Rhint (root|typeconst_property_promotion.php line 6, characters 13-19),
                          (Taccess
                             ((Rhint (root|typeconst_property_promotion.php line 6, characters 13-16),
                               Tthis),
                              [([6:19-20], "T")])))
                         };
                       fp_flags =
                       (make_fp_flags ~mutability:none
                         ~accept_disposable:false ~has_default:false
                         ~mode:FPnormal);
                        }
                      ];
                    ft_implicit_params =
                    { capability =
                      (Rhint (root|typeconst_property_promotion.php line 5, characters 19-29),
                       (Tunion []))
                      };
                    ft_ret =
                    { et_enforced = false;
                      et_type =
                      (Rwitness (root|typeconst_property_promotion.php line 5, characters 19-29),
                       (Tprim Tvoid))
                      };
                    ft_flags =
                    (make_ft_flags sync none ~return_disposable:false
                      ~returns_mutable:false ~returns_void_to_rx:false);
                    ft_reactive = Nonreactive }));
              sm_visibility = Public; sm_deprecated = None });
      sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
      sc_enum_type = None; sc_decl_errors = <opaque> } };
  funs = {}; typedefs = {}; consts = {} }

They matched!
