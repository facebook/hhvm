********** static string **********
true, false, string(15) "a boring string"

true, false, string(15) "a boring string"

********** dynamic string **********
true, false, string(11) "hello world"

true, false, string(11) "hello world"

********** explicit implements **********
true, true, object(CExplicit) (0) {
}

true, true, object(CExplicit) (0) {
}

********** implicit implements **********
true, true, object(CImplicit) (0) {
}

true, true, object(CImplicit) (0) {
}

********** via trait implements **********
true, true, object(CThruTrait) (0) {
}

true, true, object(CThruTrait) (0) {
}

********** null **********
false, false, NULL

Handled 2: Argument 1 to f2() must be of type @Stringish, null given
false, false, NULL

********** array **********
Handled 2: Argument 1 to f1() must be of type @?Stringish, varray given
false, false, varray(3) {
  int(1)
  int(2)
  int(3)
}

Handled 2: Argument 1 to f2() must be of type @Stringish, varray given
false, false, varray(3) {
  int(1)
  int(2)
  int(3)
}

********** number **********
Handled 2: Argument 1 to f1() must be of type @?Stringish, int given
false, false, int(10)

Handled 2: Argument 1 to f2() must be of type @Stringish, int given
false, false, int(10)

Handled 2: Argument 1 to f1() must be of type @?Stringish, float given
false, false, float(-4.2)

Handled 2: Argument 1 to f2() must be of type @Stringish, float given
false, false, float(-4.2)


-------------------- test_reflection --------------------

bool(true)
bool(false)
bool(true)
bool(false)
bool(true)
varray(2) {
  string(9) "Stringish"
  string(8) "XHPChild"
}
bool(true)
bool(true)
varray(2) {
  string(9) "Stringish"
  string(8) "XHPChild"
}
bool(true)
bool(true)
varray(2) {
  string(9) "Stringish"
  string(8) "XHPChild"
}
bool(true)
bool(true)
varray(2) {
  string(9) "Stringish"
  string(8) "XHPChild"
}
bool(false)
bool(false)
varray(2) {
  string(9) "Stringish"
  string(8) "XHPChild"
}
bool(true)
bool(true)