[(Typedef
    { t_annotation = (); t_name = ([4:11-14], "\\CT1");
      t_tparams =
      [{ tp_variance = Covariant; tp_name = ([4:16-18], "T1");
         tp_constraints = [(Constraint_as, ([4:16-18], (Happly (([4:16-18], "\\HH\\supportdyn"), [([4:16-18], Hmixed)])))); (Constraint_as, ([4:22-30], (Hprim Tarraykey)))]; 
         tp_reified = Erased; tp_user_attributes = [] };
        { tp_variance = Contravariant; tp_name = ([4:33-35], "T2"); tp_constraints = [(Constraint_as, ([4:33-35], (Happly (([4:33-35], "\\HH\\supportdyn"), [([4:33-35], Hmixed)]))))];
          tp_reified = Erased; tp_user_attributes = [] };
        { tp_variance = Invariant; tp_name = ([4:37-38], "T"); tp_constraints = [(Constraint_as, ([4:37-38], (Happly (([4:37-38], "\\HH\\supportdyn"), [([4:37-38], Hmixed)]))))]; 
          tp_reified = Erased; tp_user_attributes = [] }
        ];
      t_as_constraint = (Some ([4:43-50], (Happly (([4:43-50], "\\HH\\supportdyn"), [([4:43-50], Hnonnull)])))); 
      t_super_constraint = None;
      t_assignment =
      (CaseType ({ tctv_hint = ([4:53-63], (Happly (([4:53-59], "\\HH\\keyset"), [([4:60-62], (Habstr "T1"))]))); tctv_where_constraints = [] },
         [{ tctv_hint =
            ([4:66-83],
             (Happly (([4:66-83], "\\HH\\supportdyn"),
                [([4:66-83],
                  (Hfun
                     { hf_is_readonly = None; hf_tparams = []; hf_param_tys = [([4:76-78], (Habstr "T2"))];
                       hf_param_info = [(Some { hfparam_kind = Pnormal; hfparam_readonlyness = None; hfparam_optional = None; hfparam_splat = None; hfparam_named = None })]; 
                       hf_variadic_ty = None; hf_ctxs = None; hf_return_ty = ([4:81-82], (Hlike ([4:81-82], (Habstr "T")))); 
                       hf_is_readonly_return = None }))
                  ]
                )));
            tctv_where_constraints = [] }
           ]
         ));
      t_runtime_type =
      ([4:53-83],
       (Hunion
          [([4:53-63], (Happly (([4:53-59], "\\HH\\keyset"), [([4:60-62], (Habstr "T1"))])));
            ([4:66-83],
             (Happly (([4:66-83], "\\HH\\supportdyn"),
                [([4:66-83],
                  (Hfun
                     { hf_is_readonly = None; hf_tparams = []; hf_param_tys = [([4:76-78], (Habstr "T2"))];
                       hf_param_info = [(Some { hfparam_kind = Pnormal; hfparam_readonlyness = None; hfparam_optional = None; hfparam_splat = None; hfparam_named = None })]; 
                       hf_variadic_ty = None; hf_ctxs = None; hf_return_ty = ([4:81-82], (Hlike ([4:81-82], (Habstr "T")))); 
                       hf_is_readonly_return = None }))
                  ]
                )))
            ]));
      t_user_attributes = [];
      t_file_attributes =
      [{ fa_user_attributes = [{ ua_name = ([2:8-32], "__EnableUnstableFeatures"); ua_params = [((), [2:33-45], (String "case_types"))] }];
         fa_namespace =
         { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
           ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
           ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false }
         }
        ];
      t_mode = Mstrict;
      t_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
      t_span = [4:1-84]; t_emit_id = None; t_is_ctx = false; t_internal = false; 
      t_module = None; t_docs_url = None; t_doc_comment = None; t_package = None });
  (Typedef
     { t_annotation = (); t_name = ([6:11-14], "\\CT2"); t_tparams = []; 
       t_as_constraint = (Some ([6:18-31], (Hintersection [([6:18-26], (Hprim Tarraykey)); ([6:28-31], (Hprim Tnum))]))); 
       t_super_constraint = None; t_assignment = (CaseType ({ tctv_hint = ([6:34-37], (Hprim Tint)); tctv_where_constraints = [] }, [])); 
       t_runtime_type = ([6:34-37], (Hprim Tint)); t_user_attributes = [];
       t_file_attributes =
       [{ fa_user_attributes = [{ ua_name = ([2:8-32], "__EnableUnstableFeatures"); ua_params = [((), [2:33-45], (String "case_types"))] }];
          fa_namespace =
          { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
            ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
            ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false }
          }
         ];
       t_mode = Mstrict;
       t_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
       t_span = [6:1-38]; t_emit_id = None; t_is_ctx = false; t_internal = false; 
       t_module = None; t_docs_url = None; t_doc_comment = None; t_package = None });
  (Typedef
     { t_annotation = (); t_name = ([8:11-14], "\\CT3"); t_tparams = []; 
       t_as_constraint = (Some ([8:11-14], (Happly (([8:11-14], "\\HH\\supportdyn"), [([8:11-14], Hmixed)])))); 
       t_super_constraint = None;
       t_assignment = (CaseType ({ tctv_hint = ([8:17-23], (Hprim Tstring)); tctv_where_constraints = [] }, [{ tctv_hint = ([8:26-30], (Hprim Tbool)); tctv_where_constraints = [] }]));
       t_runtime_type = ([8:17-30], (Hunion [([8:17-23], (Hprim Tstring)); ([8:26-30], (Hprim Tbool))])); 
       t_user_attributes = [];
       t_file_attributes =
       [{ fa_user_attributes = [{ ua_name = ([2:8-32], "__EnableUnstableFeatures"); ua_params = [((), [2:33-45], (String "case_types"))] }];
          fa_namespace =
          { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
            ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
            ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false }
          }
         ];
       t_mode = Mstrict;
       t_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
       t_span = [8:1-31]; t_emit_id = None; t_is_ctx = false; t_internal = false; 
       t_module = None; t_docs_url = None; t_doc_comment = None; t_package = None })
  ]
