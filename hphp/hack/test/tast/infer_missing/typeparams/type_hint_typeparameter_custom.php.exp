Errors:
  [10:14-15] The type C expects 1 type parameter(s)
  [3:7-8] Definition is here
[(Class
    { c_span = [3:1-8:2]; c_annotation = (); c_mode = <opaque>;
      c_final = false; c_is_xhp = false; c_kind = Cnormal;
      c_name = ([3:7-8], "\\C");
      c_tparams =
      { c_tparam_list =
        [{ tp_variance = Invariant; tp_name = ([3:9-10], "T");
           tp_constraints = []; tp_reified = Erased; tp_user_attributes = []
           }
          ];
        c_tparam_constraints = <opaque> };
      c_extends = []; c_uses = []; c_use_as_alias = [];
      c_insteadof_alias = []; c_method_redeclarations = [];
      c_xhp_attr_uses = []; c_xhp_category = None; c_reqs = [];
      c_implements = []; c_where_constraints = []; c_consts = [];
      c_typeconsts = [];
      c_vars =
      [{ cv_final = false; cv_xhp_attr = None; cv_abstract = false;
         cv_visibility = Public; cv_type = (Some ([4:10-11], (Habstr "T")));
         cv_id = ([4:12-14], "y"); cv_expr = None; cv_user_attributes = [];
         cv_doc_comment = None; cv_is_promoted_variadic = false;
         cv_is_static = false; cv_span = [4:12-14] }
        ];
      c_methods =
      [{ m_span = [5:3-7:4]; m_annotation = (); m_final = false;
         m_abstract = false; m_static = false; m_visibility = Public;
         m_name = ([5:19-30], "__construct"); m_tparams = [];
         m_where_constraints = []; m_variadic = FVnonVariadic;
         m_params =
         [{ param_annotation = ([5:33-35], T);
            param_type_hint = ((T), (Some ([5:31-32], (Habstr "T"))));
            param_is_reference = false; param_is_variadic = false;
            param_pos = [5:33-35]; param_name = "$x"; param_expr = None;
            param_callconv = None; param_user_attributes = [];
            param_visibility = None }
           ];
         m_body =
         { fb_ast =
           [([6:5-19],
             (Expr
                (([6:5-18], T),
                 (Binop ((Eq None),
                    (([6:5-13], T),
                     (Obj_get ((([6:5-10], this), This),
                        (([6:12-13], T), (Id ([6:12-13], "y"))),
                        OG_nullthrows))),
                    (([6:16-18], T), (Lvar ([6:16-18], $x))))))))
             ];
           fb_annotation = No unsafe blocks };
         m_fun_kind = FSync; m_user_attributes = [];
         m_ret = ((void), (Some ([5:19-30], (Hprim Tvoid))));
         m_external = false; m_doc_comment = None }
        ];
      c_attributes = []; c_xhp_children = []; c_xhp_attrs = [];
      c_namespace = <opaque>; c_user_attributes = []; c_file_attributes = [];
      c_enum = None; c_pu_enums = []; c_doc_comment = None });
  (Fun
     { f_span = [10:1-12:2]; f_annotation = (); f_mode = <opaque>;
       f_ret = ((_), None); f_name = ([10:10-13], "\\foo"); f_tparams = [];
       f_where_constraints = []; f_variadic = FVnonVariadic;
       f_params =
       [{ param_annotation = ([10:16-18], C<int>);
          param_type_hint =
          ((C<int>), (Some ([10:14-15], (Happly (([10:14-15], "\\C"), [])))));
          param_is_reference = false; param_is_variadic = false;
          param_pos = [10:16-18]; param_name = "$x"; param_expr = None;
          param_callconv = None; param_user_attributes = [];
          param_visibility = None }
         ];
       f_body =
       { fb_ast =
         [([11:3-13],
           (Expr
              (([11:3-12], int),
               (Binop ((Eq None),
                  (([11:3-8], int),
                   (Obj_get ((([11:3-5], C<int>), (Lvar ([11:3-5], $x))),
                      (([11:7-8], int), (Id ([11:7-8], "y"))), OG_nullthrows
                      ))),
                  (([11:11-12], int), (Int "4")))))))
           ];
         fb_annotation = No unsafe blocks };
       f_fun_kind = FSync; f_user_attributes = []; f_file_attributes = [];
       f_external = false; f_namespace = <opaque>; f_doc_comment = None;
       f_static = false })
  ]
