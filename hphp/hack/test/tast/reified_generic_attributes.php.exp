Errors:
  [7:17-28] Unbound name: `Enforceable` (an object type)
  [7:17-28] Unrecognized user attribute: `Enforceable` does not have a class. Please declare a class for the attribute.
  [11:15-16] This constructor expects no argument
  [6:10-11] Was expecting a return type hint
  [7:10-11] Was expecting a return type hint
  [8:10-11] Was expecting a return type hint
  [9:10-11] Was expecting a return type hint
  [11:10-12] Was expecting a return type hint
  [6:48-49] The type parameter `T` has the `<<__Newable>>` attribute. Newable type parameters must be constrained with `as`, and exactly one of those constraints must be a valid newable class. The class must either be final, or it must have the `<<__ConsistentConstruct>>` attribute or extend a class that has it. No constraints are valid newable classes
  [7:47-49] The type parameter `Tu` has the `<<__Newable>>` attribute. Newable type parameters must be constrained with `as`, and exactly one of those constraints must be a valid newable class. The class must either be final, or it must have the `<<__ConsistentConstruct>>` attribute or extend a class that has it. No constraints are valid newable classes
[(Class
    { c_span = [3:1-48]; c_annotation = (); c_mode = Mstrict; c_final = false; 
      c_is_xhp = false; c_has_xhp_keyword = false; c_kind = (Cclass Concrete); 
      c_name = ([3:7-8], "\\A"); c_tparams = []; c_extends = []; c_uses = []; 
      c_xhp_attr_uses = []; c_xhp_category = None; c_reqs = []; c_implements = [([3:20-45], (Happly (([3:20-45], "\\HH\\TypeParameterAttribute"), [])))]; 
      c_where_constraints = []; c_consts = []; c_typeconsts = []; c_vars = []; 
      c_methods = []; c_xhp_children = []; c_xhp_attrs = [];
      c_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      c_user_attributes = []; c_file_attributes = []; c_docs_url = None; 
      c_enum = None; c_doc_comment = None; c_emit_id = None; c_internal = false; 
      c_module = None });
  (Class
     { c_span = [4:1-48]; c_annotation = (); c_mode = Mstrict; c_final = false; 
       c_is_xhp = false; c_has_xhp_keyword = false; c_kind = (Cclass Concrete); 
       c_name = ([4:7-8], "\\B"); c_tparams = []; c_extends = []; c_uses = []; 
       c_xhp_attr_uses = []; c_xhp_category = None; c_reqs = []; c_implements = [([4:20-45], (Happly (([4:20-45], "\\HH\\TypeParameterAttribute"), [])))]; 
       c_where_constraints = []; c_consts = []; c_typeconsts = []; c_vars = []; 
       c_methods = []; c_xhp_children = []; c_xhp_attrs = [];
       c_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       c_user_attributes = []; c_file_attributes = []; c_docs_url = None; 
       c_enum = None; c_doc_comment = None; c_emit_id = None; c_internal = false; 
       c_module = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([6:10-11], "\\f");
       fd_fun =
       { f_span = [6:1-57]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), None); f_params = []; 
         f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([Pos.none], Noop)] }; 
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None;
       fd_tparams =
       [{ tp_variance = Invariant; tp_name = ([6:48-49], "T"); tp_parameters = []; 
          tp_constraints = []; tp_reified = Reified;
          tp_user_attributes = [{ ua_name = ([6:14-23], "__Newable"); ua_params = [] }; { ua_name = ([6:24-37], "__Enforceable"); ua_params = [] }; { ua_name = ([6:38-39], "\\A"); ua_params = [] }] }
         ];
       fd_where_constraints = [] });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([7:10-11], "\\g");
       fd_fun =
       { f_span = [7:1-55]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), None); f_params = []; 
         f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([Pos.none], Noop)] }; 
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None;
       fd_tparams =
       [{ tp_variance = Invariant; tp_name = ([7:12-13], "T"); tp_parameters = []; tp_constraints = []; tp_reified = Erased; tp_user_attributes = [] };
         { tp_variance = Invariant; tp_name = ([7:47-49], "Tu"); tp_parameters = []; 
           tp_constraints = []; tp_reified = Reified; tp_user_attributes = [{ ua_name = ([7:17-28], "\\Enforceable"); ua_params = [] }; { ua_name = ([7:29-38], "__Newable"); ua_params = [] }] }
         ];
       fd_where_constraints = [] });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([8:10-11], "\\h");
       fd_fun =
       { f_span = [8:1-24]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), None); f_params = []; 
         f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([Pos.none], Noop)] }; 
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None;
       fd_tparams =
       [{ tp_variance = Invariant; tp_name = ([8:17-18], "T"); tp_parameters = []; tp_constraints = []; tp_reified = Erased; tp_user_attributes = [{ ua_name = ([8:14-15], "\\B"); ua_params = [] }] }];
       fd_where_constraints = [] });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([9:10-11], "\\j");
       fd_fun =
       { f_span = [9:1-37]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), None); f_params = []; 
         f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([Pos.none], Noop)] }; 
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None;
       fd_tparams =
       [{ tp_variance = Invariant; tp_name = ([9:29-31], "Tv"); tp_parameters = []; 
          tp_constraints = []; tp_reified = SoftReified; tp_user_attributes = [{ ua_name = ([9:14-20], "__Soft"); ua_params = [] }] }
         ];
       fd_where_constraints = [] });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([11:10-12], "\\ff");
       fd_fun =
       { f_span = [11:1-29]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), None); f_params = []; 
         f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([Pos.none], Noop)] }; 
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None;
       fd_tparams =
       [{ tp_variance = Invariant; tp_name = ([11:22-23], "T"); tp_parameters = []; 
          tp_constraints = []; tp_reified = Erased; tp_user_attributes = [{ ua_name = ([11:15-16], "\\A"); ua_params = [((int), [11:17-18], (Int "1"))] }] }
         ];
       fd_where_constraints = [] })