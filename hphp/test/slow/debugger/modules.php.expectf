Program %s/modules.php loaded. Type '[r]un' or '[c]ontinue' to go.
include "%s/modules.php.inc";

Warning: include(%s/modules.php.inc): File not found
include "%s/modules.php.inc2";

Warning: include(%s/modules.php.inc2): File not found
=new Foo();
Hit fatal : Failure to resolve undefined class Foo
    #0 at [:1]
    #1 include(), called at [:1]
    #2 include(), called at [:0]

=fooFun();
Hit fatal : Call to undefined function fooFun()
    #0 at [:1]
    #1 include(), called at [:1]
    #2 include(), called at [:0]

$x = new Foo();
Hit fatal : Failure to resolve undefined class Foo
    #0 at [:1]
    #1 include(), called at [:1]
    #2 include(), called at [:0]

$x = getFoo();
Hit fatal : Call to undefined function getFoo()
    #0 at [:1]
    #1 include(), called at [:1]
    #2 include(), called at [:0]

=$x->foo();
Hit a php exception : exception 'UndefinedVariableException' with message 'Undefined variable: x' in :1
Stack trace:
#0 (1): include()
#1 (): include()
#2 {main}
=$x->fooProp;
Hit a php exception : exception 'UndefinedVariableException' with message 'Undefined variable: x' in :1
Stack trace:
#0 (1): include()
#1 (): include()
#2 {main}
=$x::$fooStaticProp;
Hit a php exception : exception 'UndefinedVariableException' with message 'Undefined variable: x' in :1
Stack trace:
#0 (1): include()
#1 (): include()
#2 {main}
=Foo::$fooStaticProp;
Hit fatal : Failure to resolve undefined class Foo
    #0 at [:1]
    #1 include(), called at [:1]
    #2 include(), called at [:0]

=HH\dynamic_meth_caller(Foo::class, $fooStatic)();
Hit a php exception : exception 'UndefinedVariableException' with message 'Undefined variable: fooStatic' in :1
Stack trace:
#0 (1): include()
#1 (): include()
#2 {main}
=$cls="Foo";
"Foo"
=$cls::fooStatic();
Hit fatal : Class undefined: Foo
    #0 at [:1]
    #1 include(), called at [:1]
    #2 include(), called at [:0]

set bac on
BypassAccessCheck(bac) set to on.
All code executed from debugger is bypassing access check!
=new Foo();
Hit fatal : Failure to resolve undefined class Foo
    #0 at [:1]
    #1 include(), called at [:1]
    #2 include(), called at [:0]

=fooFun();
Hit fatal : Call to undefined function fooFun()
    #0 at [:1]
    #1 include(), called at [:1]
    #2 include(), called at [:0]

$x = new Foo();
Hit fatal : Failure to resolve undefined class Foo
    #0 at [:1]
    #1 include(), called at [:1]
    #2 include(), called at [:0]

=$x->foo();
Hit a php exception : exception 'UndefinedVariableException' with message 'Undefined variable: x' in :1
Stack trace:
#0 (1): include()
#1 (): include()
#2 {main}
=Foo::fooStatic();
Hit fatal : Class undefined: Foo
    #0 at [:1]
    #1 include(), called at [:1]
    #2 include(), called at [:0]

=$x->fooProp;
Hit a php exception : exception 'UndefinedVariableException' with message 'Undefined variable: x' in :1
Stack trace:
#0 (1): include()
#1 (): include()
#2 {main}
$x->fooProp = 5;
Hit a php exception : exception 'Exception' with message 'Setting a property on a non-object' in :1
Stack trace:
#0 (1): include()
#1 (): include()
#2 {main}
=$x->fooProp;
Hit a php exception : exception 'UndefinedVariableException' with message 'Undefined variable: x' in :1
Stack trace:
#0 (1): include()
#1 (): include()
#2 {main}
Foo::$fooStaticProp = 6;
Notice: Attempted to interpret unknown debugger command as PHP!

Hit fatal : Failure to resolve undefined class Foo
    #0 at [:1]
    #1 include(), called at [:1]
    #2 include(), called at [:0]

$x::$fooStaticProp = 7;
Hit a php exception : exception 'UndefinedVariableException' with message 'Undefined variable: x' in :1
Stack trace:
#0 (1): include()
#1 (): include()
#2 {main}
=Foo::$fooStaticProp;
Hit fatal : Failure to resolve undefined class Foo
    #0 at [:1]
    #1 include(), called at [:1]
    #2 include(), called at [:0]

=$x::$fooStaticProp;
Hit a php exception : exception 'UndefinedVariableException' with message 'Undefined variable: x' in :1
Stack trace:
#0 (1): include()
#1 (): include()
#2 {main}
quit
