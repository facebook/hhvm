[(Fun
    { f_span = [3:1-9:2]; f_annotation = (); f_mode = Mstrict;
      f_ret = ((void), (Some ([3:30-34], (Hprim Tvoid))));
      f_name = ([3:10-11], "\\f"); f_tparams = []; f_where_constraints = [];
      f_variadic = FVnonVariadic;
      f_params =
      [{ param_annotation = ([3:17-19], bool);
         param_type_hint = ((bool), (Some ([3:12-16], (Hprim Tbool))));
         param_is_variadic = false; param_pos = [3:17-19]; param_name = "$b";
         param_expr = None; param_callconv = None;
         param_user_attributes = []; param_visibility = None };
        { param_annotation = ([3:25-27], int);
          param_type_hint = ((int), (Some ([3:21-24], (Hprim Tint))));
          param_is_variadic = false; param_pos = [3:25-27];
          param_name = "$a"; param_expr = None; param_callconv = None;
          param_user_attributes = []; param_visibility = None }
        ];
      f_body =
      { fb_ast =
        [([4:3-7:4],
          (While ((([4:10-12], bool), (Lvar ([4:10-12], $b))),
             [([5:5-8],
               (Expr (([5:5-7], (int | string)), (Lvar ([5:5-7], $a)))));
               ([6:5-13],
                (Expr
                   (([6:5-12], string),
                    (Binop ((Eq None),
                       (([6:5-7], string), (Lvar ([6:5-7], $a))),
                       (([6:10-12], string), (String "")))))))
               ]
             )));
          ([8:3-6], (Expr (([8:3-5], (int | string)), (Lvar ([8:3-5], $a)))))
          ];
        fb_annotation = No unsafe blocks };
      f_fun_kind = FSync; f_user_attributes = []; f_file_attributes = [];
      f_external = false;
      f_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
        ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
        ns_const_uses = <opaque>; ns_name = None; ns_auto_ns_map = [];
        ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      f_doc_comment = None; f_static = false })
  ]
