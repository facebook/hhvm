[("\\EE",
  (Shallow_decl_defs.Class
     { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
       sc_is_xhp = false; sc_has_xhp_keyword = false;
       sc_kind = (Cenum_class Concrete); sc_module = None;
       sc_name = ([8:12-14], "\\EE"); sc_tparams = [];
       sc_where_constraints = [];
       sc_extends =
       [(Rhint ([8:12-14]),
         (Tapply (([8:12-14], "\\HH\\BuiltinEnumClass"),
            [(Rhint ([8:12-14]),
              (Tapply (([8:12-14], "\\HH\\MemberOf"),
                 [(Rhint ([8:12-14]), (Tapply (([8:12-14], "\\EE"), [])));
                   (Rhint ([8:17-18]), (Tapply (([8:17-18], "\\I"), [])))]
                 )))
              ]
            )))
         ];
       sc_uses = []; sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
       sc_req_extends = []; sc_req_implements = []; sc_implements = [];
       sc_support_dynamic_type = false;
       sc_consts =
       [{ Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
          scc_name = ([9:7-8], "A");
          scc_type =
          (Rhint ([9:7-8]),
           (Tapply (([9:7-8], "\\HH\\MemberOf"),
              [(Rhint ([9:7-8]), (Tapply (([9:7-8], "\\EE"), [])));
                (Rhint ([9:3-6]), (Tapply (([9:3-6], "\\Box"), [])))]
              )));
          scc_refs = [] }
         ];
       sc_typeconsts = []; sc_props = []; sc_sprops = [];
       sc_constructor = None; sc_static_methods = []; sc_methods = [];
       sc_user_attributes =
       [{ Typing_defs_core.ua_name = ([8:12-14], "__EnumClass");
          ua_classname_params = [] }
         ];
       sc_enum_type =
       (Some { Typing_defs.te_base =
               (Rhint ([8:17-18]), (Tapply (([8:17-18], "\\I"), [])));
               te_constraint = None; te_includes = [] })
       }));
  ("\\FF",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_is_xhp = false; sc_has_xhp_keyword = false;
        sc_kind = (Cenum_class Concrete); sc_module = None;
        sc_name = ([12:12-14], "\\FF"); sc_tparams = [];
        sc_where_constraints = [];
        sc_extends =
        [(Rhint ([12:12-14]),
          (Tapply (([12:12-14], "\\HH\\BuiltinEnumClass"),
             [(Rhint ([12:12-14]),
               (Tapply (([12:12-14], "\\HH\\MemberOf"),
                  [(Rhint ([12:12-14]), (Tapply (([12:12-14], "\\FF"), [])));
                    (Rhint ([12:17-18]), (Tapply (([12:17-18], "\\I"), [])))]
                  )))
               ]
             )));
          (Rhint ([12:27-29]), (Tapply (([12:27-29], "\\EE"), [])))];
        sc_uses = []; sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_req_extends = []; sc_req_implements = []; sc_implements = [];
        sc_support_dynamic_type = false;
        sc_consts =
        [{ Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
           scc_name = ([13:7-8], "C");
           scc_type =
           (Rhint ([13:7-8]),
            (Tapply (([13:7-8], "\\HH\\MemberOf"),
               [(Rhint ([13:7-8]), (Tapply (([13:7-8], "\\FF"), [])));
                 (Rhint ([13:3-6]), (Tapply (([13:3-6], "\\Box"), [])))]
               )));
           scc_refs = [] }
          ];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = []; sc_methods = [];
        sc_user_attributes =
        [{ Typing_defs_core.ua_name = ([12:12-14], "__EnumClass");
           ua_classname_params = [] }
          ];
        sc_enum_type =
        (Some { Typing_defs.te_base =
                (Rhint ([12:17-18]), (Tapply (([12:17-18], "\\I"), [])));
                te_constraint = None;
                te_includes =
                [(Rhint ([12:27-29]), (Tapply (([12:27-29], "\\EE"), [])))] })
        }));
  ("\\Foo",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_is_xhp = false; sc_has_xhp_keyword = false;
        sc_kind = (Cenum_class Concrete); sc_module = None;
        sc_name = ([16:12-15], "\\Foo"); sc_tparams = [];
        sc_where_constraints = [];
        sc_extends =
        [(Rhint ([16:12-15]),
          (Tapply (([16:12-15], "\\HH\\BuiltinEnumClass"),
             [(Rhint ([16:12-15]),
               (Tapply (([16:12-15], "\\HH\\MemberOf"),
                  [(Rhint ([16:12-15]), (Tapply (([16:12-15], "\\Foo"), [])));
                    (Rhint ([16:17-22]), Tmixed)]
                  )))
               ]
             )))
          ];
        sc_uses = []; sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_req_extends = []; sc_req_implements = []; sc_implements = [];
        sc_support_dynamic_type = false;
        sc_consts =
        [{ Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
           scc_name = ([17:16-19], "Str");
           scc_type =
           (Rhint ([17:16-19]),
            (Tapply (([17:16-19], "\\HH\\MemberOf"),
               [(Rhint ([17:16-19]), (Tapply (([17:16-19], "\\Foo"), [])));
                 (Rhint ([17:4-15]),
                  (Tapply (([17:4-7], "\\Box"),
                     [(Rhint ([17:8-14]), (Tprim Tstring))])))
                 ]
               )));
           scc_refs = [] }
          ];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = []; sc_methods = [];
        sc_user_attributes =
        [{ Typing_defs_core.ua_name = ([16:12-15], "__EnumClass");
           ua_classname_params = [] }
          ];
        sc_enum_type =
        (Some { Typing_defs.te_base = (Rhint ([16:17-22]), Tmixed);
                te_constraint = None; te_includes = [] })
        }));
  ("\\ff",
   (Shallow_decl_defs.Fun
      { Typing_defs.fe_deprecated = None; fe_module = None;
        fe_internal = false;
        fe_type =
        (Rwitness_from_decl ([20:10-12]),
         (Tfun
            { ft_arity = (Fstandard ()); ft_tparams = [];
              ft_where_constraints = [];
              ft_params =
              [{ fp_pos = [20:49-51]; fp_name = (Some "$x");
                 fp_type =
                 { et_enforced = Typing_defs_core.Unenforced;
                   et_type =
                   (Rhint ([20:28-48]),
                    (Tapply (([20:28-39], "\\HH\\MemberOf"),
                       [(Rhint ([20:40-42]),
                         (Tapply (([20:40-42], "\\EE"), [])));
                         (Rhint ([20:44-47]),
                          (Tapply (([20:44-47], "\\Box"), [])))
                         ]
                       )))
                   };
                 fp_flags =
                 (make_fp_flags ~accept_disposable:false ~has_default:false
                   ~mode:Typing_defs_core.FPnormal ~ifc_external:false
                   ~ifc_can_call:false ~via_label:true ~readonly:false);
                  }
                ];
              ft_implicit_params = { capability = (CapDefaults [20:10-12]) };
              ft_ret =
              { et_enforced = Typing_defs_core.Unenforced;
                et_type = (Rhint ([20:55-58]), (Tprim Tint)) };
              ft_flags =
              (make_ft_flags FSync ~return_disposable:false
                ~returns_readonly:false ~support_dynamic_type:false
                ~readonly_this:false);
              ft_ifc_decl = FDPolicied {PUBLIC} }));
        fe_pos = [20:10-12]; fe_php_std_lib = false;
        fe_support_dynamic_type = false }))
  ]

They matched!
