#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

import typing as _typing

import folly.iobuf as _fbthrift_iobuf
import thrift.py3.builder

import facebook.thrift.annotation.thrift.types as _facebook_thrift_annotation_thrift_types
import facebook.thrift.annotation.thrift.builders as _facebook_thrift_annotation_thrift_builders

import test.fixtures.nolegacy.module.types as _test_fixtures_nolegacy_module_types


class TestError_Builder(thrift.py3.builder.StructBuilder):
    test_enum: _typing.Optional[_test_fixtures_nolegacy_module_types.TestEnum]
    code: _typing.Optional[int]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class TestMixin_Builder(thrift.py3.builder.StructBuilder):
    field1: _typing.Optional[str]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class TestStruct_Builder(thrift.py3.builder.StructBuilder):
    bar: _typing.Optional[str]
    baropt: _typing.Optional[str]
    test_error: _typing.Any
    test_mixin: _typing.Any

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class TestUnion_Builder(thrift.py3.builder.StructBuilder):
    enumVal: _typing.Optional[_test_fixtures_nolegacy_module_types.TestEnum]
    structVal: _typing.Any

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


