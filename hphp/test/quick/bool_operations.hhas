#
# Test boolean binary operations which cannot be generated directly via PHP
#

.main {
  FPushFuncD 0 "main"
  FCall 0 0 1 - "" ""
  PopR
  Int 1
  RetC
}

.function print_bool_result($res) {
  CGetL $res
  String "\n"
  Concat
  Print
  PopC

  Null
  RetC
}

# These functions are needed because otherwise the constants will be folded
.function g_true() {
  True
  RetC
}
.function g_false() {
  False
  RetC
}

.function main() {

# two registers
  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  Add
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  Add
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  Add
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  Add
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  Sub
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  Sub
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  Sub
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  Sub
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  BitOr
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  BitOr
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  BitOr
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  BitOr
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  BitAnd
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  BitAnd
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  BitAnd
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  BitAnd
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  BitXor
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  BitXor
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  BitXor
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  BitXor
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  Mul
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  Mul
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  Mul
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  Mul
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  Div
  FCall 1 0 1 - "" ""
  PopR

# exclude divide by zero

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  Div
  FCall 1 0 1 - "" ""
  PopR

# exclude divide by zero

# try a few cases with one register and one immediate

  FPushFuncD 1 "print_bool_result"
  False
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  Add
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  True
  Sub
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  False
  BitOr
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  True
  BitAnd
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_false"
  FCall 0 0 1 - "" ""
  UnboxR
  False
  BitXor
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  FPushFuncD 0 "g_true"
  FCall 0 0 1 - "" ""
  UnboxR
  True
  Mul
  FCall 1 0 1 - "" ""
  PopR

# HHIRSimplification == false to test two immediates

  FPushFuncD 1 "print_bool_result"
  True
  True
  Add
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  True
  False
  Sub
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  False
  False
  BitOr
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  False
  True
  BitAnd
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  True
  False
  BitXor
  FCall 1 0 1 - "" ""
  PopR

  FPushFuncD 1 "print_bool_result"
  False
  True
  Mul
  FCall 1 0 1 - "" ""
  PopR

  Null
  RetC
}
