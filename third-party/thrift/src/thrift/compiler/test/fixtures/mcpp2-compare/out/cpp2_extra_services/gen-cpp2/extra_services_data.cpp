/**
 * Autogenerated by Thrift for thrift/compiler/test/fixtures/mcpp2-compare/src/extra_services.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */

#include "thrift/compiler/test/fixtures/mcpp2-compare/gen-cpp2/extra_services_data.h"
#include "thrift/compiler/test/fixtures/mcpp2-compare/gen-cpp2/extra_services_constants.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

namespace apache::thrift {

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::extra::svc::containerStruct2>::name = "containerStruct2";
THRIFT_DATA_MEMBER const std::array<std::string_view, 13> TStructDataStorage<::extra::svc::containerStruct2>::fields_names = { {
  "fieldA"sv,
  "req_fieldA"sv,
  "opt_fieldA"sv,
  "fieldB"sv,
  "req_fieldB"sv,
  "opt_fieldB"sv,
  "fieldC"sv,
  "req_fieldC"sv,
  "opt_fieldC"sv,
  "fieldD"sv,
  "fieldE"sv,
  "req_fieldE"sv,
  "opt_fieldE"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 13> TStructDataStorage<::extra::svc::containerStruct2>::fields_ids = { {
  1,
  101,
  201,
  2,
  102,
  202,
  3,
  103,
  203,
  4,
  5,
  105,
  205,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 13> TStructDataStorage<::extra::svc::containerStruct2>::fields_types = { {
  TType::T_BOOL,
  TType::T_BOOL,
  TType::T_BOOL,
  TType::T_MAP,
  TType::T_MAP,
  TType::T_MAP,
  TType::T_SET,
  TType::T_SET,
  TType::T_SET,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_STRING,
}};
THRIFT_DATA_MEMBER const std::array<int, 13> TStructDataStorage<::extra::svc::containerStruct2>::isset_indexes = { {
  0,
  -1,
  1,
  2,
  -1,
  3,
  4,
  -1,
  5,
  6,
  7,
  -1,
  8,
}};

namespace detail {


} // namespace detail
} // namespace apache::thrift
