{
  "parse_tree":{
    "kind":"script",
    "script_declarations":{
      "kind":"list",
      "elements":[
        {
          "kind":"markup_section",
          "markup_text":{
            "kind":"token",
            "token":{
              "kind":"markup",
              "text":"",
              "offset":0,
              "leading_width":0,
              "width":0,
              "trailing_width":0,
              "leading":[],
              "trailing":[],
              "line_number":1
            }
          },
          "markup_suffix":{
            "kind":"markup_suffix",
            "markup_suffix_less_than_question":{
              "kind":"token",
              "token":{
                "kind":"<?",
                "text":"<?",
                "offset":0,
                "leading_width":0,
                "width":2,
                "trailing_width":0,
                "leading":[],
                "trailing":[],
                "line_number":1
              }
            },
            "markup_suffix_name":{
              "kind":"token",
              "token":{
                "kind":"name",
                "text":"hh",
                "offset":2,
                "leading_width":0,
                "width":2,
                "trailing_width":1,
                "leading":[],
                "trailing":[{"kind":"end_of_line","text":"\n","offset":4,"width":1}],
                "line_number":1
              }
            }
          }
        },
        {
          "kind":"classish_declaration",
          "classish_attribute":{"kind":"missing"},
          "classish_modifiers":{
            "kind":"list",
            "elements":[
              {
                "kind":"token",
                "token":{
                  "kind":"abstract",
                  "text":"abstract",
                  "offset":5,
                  "leading_width":202,
                  "width":8,
                  "trailing_width":1,
                  "leading":[
                    {"kind":"end_of_line","text":"\n","offset":5,"width":1},
                    {
                      "kind":"single_line_comment",
                      "text":"// We can't write many of the modifiers or this won't parse as an interface (yet).",
                      "offset":6,
                      "width":82
                    },
                    {"kind":"end_of_line","text":"\n","offset":88,"width":1},
                    {
                      "kind":"single_line_comment",
                      "text":"// Eventually we want to be testing:",
                      "offset":89,
                      "width":36
                    },
                    {"kind":"end_of_line","text":"\n","offset":125,"width":1},
                    {
                      "kind":"single_line_comment",
                      "text":"// abstract final static private protected public async coroutine interface C {}",
                      "offset":126,
                      "width":80
                    },
                    {"kind":"end_of_line","text":"\n","offset":206,"width":1}
                  ],
                  "trailing":[{"kind":"whitespace","text":" ","offset":215,"width":1}],
                  "line_number":6
                }
              },
              {
                "kind":"token",
                "token":{
                  "kind":"final",
                  "text":"final",
                  "offset":216,
                  "leading_width":0,
                  "width":5,
                  "trailing_width":1,
                  "leading":[],
                  "trailing":[{"kind":"whitespace","text":" ","offset":221,"width":1}],
                  "line_number":6
                }
              }
            ]
          },
          "classish_xhp":{"kind":"missing"},
          "classish_keyword":{
            "kind":"token",
            "token":{
              "kind":"interface",
              "text":"interface",
              "offset":222,
              "leading_width":0,
              "width":9,
              "trailing_width":1,
              "leading":[],
              "trailing":[{"kind":"whitespace","text":" ","offset":231,"width":1}],
              "line_number":6
            }
          },
          "classish_name":{
            "kind":"token",
            "token":{
              "kind":"name",
              "text":"C",
              "offset":232,
              "leading_width":0,
              "width":1,
              "trailing_width":1,
              "leading":[],
              "trailing":[{"kind":"whitespace","text":" ","offset":233,"width":1}],
              "line_number":6
            }
          },
          "classish_type_parameters":{"kind":"missing"},
          "classish_extends_keyword":{"kind":"missing"},
          "classish_extends_list":{"kind":"missing"},
          "classish_implements_keyword":{"kind":"missing"},
          "classish_implements_list":{"kind":"missing"},
          "classish_where_clause":{"kind":"missing"},
          "classish_body":{
            "kind":"classish_body",
            "classish_body_left_brace":{
              "kind":"token",
              "token":{
                "kind":"{",
                "text":"{",
                "offset":234,
                "leading_width":0,
                "width":1,
                "trailing_width":0,
                "leading":[],
                "trailing":[],
                "line_number":6
              }
            },
            "classish_body_elements":{"kind":"missing"},
            "classish_body_right_brace":{
              "kind":"token",
              "token":{
                "kind":"}",
                "text":"}",
                "offset":235,
                "leading_width":0,
                "width":1,
                "trailing_width":1,
                "leading":[],
                "trailing":[{"kind":"end_of_line","text":"\n","offset":236,"width":1}],
                "line_number":6
              }
            }
          }
        },
        {
          "kind":"classish_declaration",
          "classish_attribute":{"kind":"missing"},
          "classish_modifiers":{
            "kind":"list",
            "elements":[
              {
                "kind":"token",
                "token":{
                  "kind":"abstract",
                  "text":"abstract",
                  "offset":237,
                  "leading_width":1,
                  "width":8,
                  "trailing_width":1,
                  "leading":[{"kind":"end_of_line","text":"\n","offset":237,"width":1}],
                  "trailing":[{"kind":"whitespace","text":" ","offset":246,"width":1}],
                  "line_number":8
                }
              },
              {
                "kind":"token",
                "token":{
                  "kind":"abstract",
                  "text":"abstract",
                  "offset":247,
                  "leading_width":0,
                  "width":8,
                  "trailing_width":1,
                  "leading":[],
                  "trailing":[{"kind":"whitespace","text":" ","offset":255,"width":1}],
                  "line_number":8
                }
              }
            ]
          },
          "classish_xhp":{"kind":"missing"},
          "classish_keyword":{
            "kind":"token",
            "token":{
              "kind":"interface",
              "text":"interface",
              "offset":256,
              "leading_width":0,
              "width":9,
              "trailing_width":1,
              "leading":[],
              "trailing":[{"kind":"whitespace","text":" ","offset":265,"width":1}],
              "line_number":8
            }
          },
          "classish_name":{
            "kind":"token",
            "token":{
              "kind":"name",
              "text":"D",
              "offset":266,
              "leading_width":0,
              "width":1,
              "trailing_width":1,
              "leading":[],
              "trailing":[{"kind":"whitespace","text":" ","offset":267,"width":1}],
              "line_number":8
            }
          },
          "classish_type_parameters":{"kind":"missing"},
          "classish_extends_keyword":{"kind":"missing"},
          "classish_extends_list":{"kind":"missing"},
          "classish_implements_keyword":{"kind":"missing"},
          "classish_implements_list":{"kind":"missing"},
          "classish_where_clause":{"kind":"missing"},
          "classish_body":{
            "kind":"classish_body",
            "classish_body_left_brace":{
              "kind":"token",
              "token":{
                "kind":"{",
                "text":"{",
                "offset":268,
                "leading_width":0,
                "width":1,
                "trailing_width":0,
                "leading":[],
                "trailing":[],
                "line_number":8
              }
            },
            "classish_body_elements":{"kind":"missing"},
            "classish_body_right_brace":{
              "kind":"token",
              "token":{
                "kind":"}",
                "text":"}",
                "offset":269,
                "leading_width":0,
                "width":1,
                "trailing_width":1,
                "leading":[],
                "trailing":[{"kind":"end_of_line","text":"\n","offset":270,"width":1}],
                "line_number":8
              }
            }
          }
        },
        {
          "kind":"end_of_file",
          "end_of_file_token":{
            "kind":"token",
            "token":{
              "kind":"end_of_file",
              "text":"",
              "offset":271,
              "leading_width":0,
              "width":0,
              "trailing_width":0,
              "leading":[],
              "trailing":[],
              "line_number":9
            }
          }
        }
      ]
    }
  },
  "program_text":"<?hh\n\n// We can't write many of the modifiers or this won't parse as an interface (yet).\n// Eventually we want to be testing:\n// abstract final static private protected public async coroutine interface C {}\nabstract final interface C {}\n\nabstract abstract interface D {}\n",
  "version":"2020-06-23-0001"
}
