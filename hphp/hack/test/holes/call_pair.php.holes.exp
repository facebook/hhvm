[(Class
    { c_span = [3:1-5:2]; c_annotation = (); c_mode = Mstrict; c_final = false; 
      c_is_xhp = false; c_has_xhp_keyword = false; c_kind = (Cclass Concrete); 
      c_name = ([3:7-15], "\\TestPair"); c_tparams = []; c_extends = []; 
      c_uses = []; c_xhp_attr_uses = []; c_xhp_category = None; c_reqs = []; 
      c_implements = []; c_where_constraints = []; c_consts = []; c_typeconsts = []; 
      c_vars = [];
      c_methods =
      [{ m_span = [4:3-48]; m_annotation = (); m_final = false; m_abstract = false; 
         m_static = false; m_readonly_this = false; m_visibility = Public; 
         m_name = ([4:19-20], "b"); m_tparams = []; m_where_constraints = [];
         m_params =
         [{ param_annotation = (Pair<int, int>);
            param_type_hint = ((Pair<int, int>), (Some ([4:21-35], (Happly (([4:21-25], "\\HH\\Pair"), [([4:26-29], (Hprim Tint)); ([4:31-34], (Hprim Tint))]))))); 
            param_is_variadic = false; param_pos = [4:36-38]; param_name = "$b"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         m_ctxs = None; m_unsafe_ctxs = None; m_body = { fb_ast = [([Pos.none], Noop)] }; 
         m_fun_kind = FSync; m_user_attributes = []; m_readonly_ret = None; 
         m_ret = ((void), (Some ([4:41-45], (Hprim Tvoid)))); m_external = false; 
         m_doc_comment = None }
        ];
      c_xhp_children = []; c_xhp_attrs = [];
      c_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      c_user_attributes = []; c_file_attributes = []; c_docs_url = None; 
      c_enum = None; c_doc_comment = None; c_emit_id = None; c_internal = false; 
      c_module = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([7:10-11], "\\b");
       fd_fun =
       { f_span = [7:1-39]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([7:32-36], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = (Pair<int, int>);
            param_type_hint = ((Pair<int, int>), (Some ([7:12-26], (Happly (([7:12-16], "\\HH\\Pair"), [([7:17-20], (Hprim Tint)); ([7:22-25], (Hprim Tint))]))))); 
            param_is_variadic = false; param_pos = [7:27-29]; param_name = "$b"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([Pos.none], Noop)] }; 
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([9:10-19], "\\call_pair");
       fd_fun =
       { f_span = [9:1-24:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([12:4-8], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = (Pair<bool, int>);
            param_type_hint = ((Pair<bool, int>), (Some ([10:3-18], (Happly (([10:3-7], "\\HH\\Pair"), [([10:8-12], (Hprim Tbool)); ([10:14-17], (Hprim Tint))]))))); 
            param_is_variadic = false; param_pos = [10:19-22]; param_name = "$b1"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None };
           { param_annotation = (Pair<int, bool>);
             param_type_hint = ((Pair<int, bool>), (Some ([11:3-18], (Happly (([11:3-7], "\\HH\\Pair"), [([11:8-11], (Hprim Tint)); ([11:13-17], (Hprim Tbool))]))))); 
             param_is_variadic = false; param_pos = [11:19-22]; param_name = "$b2"; 
             param_expr = None; param_readonly = None; param_callconv = Pnormal; 
             param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([14:3-10],
             (Expr
                ((void), [14:3-9],
                 (Call ((((function(Pair<int, int> $b): void)), [14:3-4], (Id ([14:3-4], "\\b"))), 
                    [], [(Pnormal, ((Pair<bool, int>), [14:5-8], (Hole (((Pair<bool, int>), [14:5-8], (Lvar ([14:5-8], $b1))), (Pair<bool, int>), (Pair<int, int>), Typing))))], None)))));
             ([16:3-10],
              (Expr
                 ((void), [16:3-9],
                  (Call ((((function(Pair<int, int> $b): void)), [16:3-4], (Id ([16:3-4], "\\b"))), 
                     [], [(Pnormal, ((Pair<int, bool>), [16:5-8], (Hole (((Pair<int, bool>), [16:5-8], (Lvar ([16:5-8], $b2))), (Pair<int, bool>), (Pair<int, int>), Typing))))], None)))));
             ([18:3-25],
              (Expr
                 ((TestPair), [18:3-24],
                  (Binop
                     { bop = (Eq None); lhs = ((TestPair), [18:3-7], (Lvar ([18:3-7], $foo)));
                       rhs = ((TestPair), [18:10-24], (New (((TestPair), [18:14-22], (CI ([18:14-22], "\\TestPair"))), [], [], None, ((function(): void))))) }))));
             ([21:3-16],
              (Expr
                 ((void), [21:3-15],
                  (Call (
                     (((function(Pair<int, int> $b): void)), [21:3-10],
                      (Obj_get (((TestPair), [21:3-7], (Lvar ([21:3-7], $foo))), (((function(Pair<int, int> $b): void)), [21:9-10], (Id ([21:9-10], "b"))), OG_nullthrows, Is_method))),
                     [], [(Pnormal, ((Pair<bool, int>), [21:11-14], (Hole (((Pair<bool, int>), [21:11-14], (Lvar ([21:11-14], $b1))), (Pair<bool, int>), (Pair<int, int>), Typing))))], None)))));
             ([23:3-16],
              (Expr
                 ((void), [23:3-15],
                  (Call (
                     (((function(Pair<int, int> $b): void)), [23:3-10],
                      (Obj_get (((TestPair), [23:3-7], (Lvar ([23:3-7], $foo))), (((function(Pair<int, int> $b): void)), [23:9-10], (Id ([23:9-10], "b"))), OG_nullthrows, Is_method))),
                     [], [(Pnormal, ((Pair<int, bool>), [23:11-14], (Hole (((Pair<int, bool>), [23:11-14], (Lvar ([23:11-14], $b2))), (Pair<int, bool>), (Pair<int, int>), Typing))))], None)))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([26:10-24], "\\call_pair_cast");
       fd_fun =
       { f_span = [26:1-41:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([29:4-8], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = (Pair<bool, int>);
            param_type_hint = ((Pair<bool, int>), (Some ([27:3-18], (Happly (([27:3-7], "\\HH\\Pair"), [([27:8-12], (Hprim Tbool)); ([27:14-17], (Hprim Tint))]))))); 
            param_is_variadic = false; param_pos = [27:19-22]; param_name = "$b1"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None };
           { param_annotation = (Pair<int, bool>);
             param_type_hint = ((Pair<int, bool>), (Some ([28:3-18], (Happly (([28:3-7], "\\HH\\Pair"), [([28:8-11], (Hprim Tint)); ([28:13-17], (Hprim Tbool))]))))); 
             param_is_variadic = false; param_pos = [28:19-22]; param_name = "$b2"; 
             param_expr = None; param_readonly = None; param_callconv = Pnormal; 
             param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([31:3-63],
             (Expr
                ((void), [31:3-62],
                 (Call ((((function(Pair<int, int> $b): void)), [31:3-4], (Id ([31:3-4], "\\b"))), 
                    [],
                    [(Pnormal,
                      ((Pair<int, int>), [31:5-61],
                       (Hole (((Pair<bool, int>), [31:57-60], (Lvar ([31:57-60], $b1))), (Pair<bool, int>), (Pair<int, int>),
                          (UnsafeCast
                             [([31:27-41], (Happly (([31:27-31], "\\HH\\Pair"), [([31:32-36], (Hprim Tbool)); ([31:37-40], (Hprim Tint))])));
                               ([31:42-55], (Happly (([31:42-46], "\\HH\\Pair"), [([31:47-50], (Hprim Tint)); ([31:51-54], (Hprim Tint))])))])
                          ))))
                      ],
                    None)))));
             ([33:3-63],
              (Expr
                 ((void), [33:3-62],
                  (Call ((((function(Pair<int, int> $b): void)), [33:3-4], (Id ([33:3-4], "\\b"))), 
                     [],
                     [(Pnormal,
                       ((Pair<int, int>), [33:5-61],
                        (Hole (((Pair<int, bool>), [33:57-60], (Lvar ([33:57-60], $b2))), (Pair<int, bool>), (Pair<int, int>),
                           (UnsafeCast
                              [([33:27-41], (Happly (([33:27-31], "\\HH\\Pair"), [([33:32-35], (Hprim Tint)); ([33:36-40], (Hprim Tbool))])));
                                ([33:42-55], (Happly (([33:42-46], "\\HH\\Pair"), [([33:47-50], (Hprim Tint)); ([33:51-54], (Hprim Tint))])))])
                           ))))
                       ],
                     None)))));
             ([35:3-25],
              (Expr
                 ((TestPair), [35:3-24],
                  (Binop
                     { bop = (Eq None); lhs = ((TestPair), [35:3-7], (Lvar ([35:3-7], $foo)));
                       rhs = ((TestPair), [35:10-24], (New (((TestPair), [35:14-22], (CI ([35:14-22], "\\TestPair"))), [], [], None, ((function(): void))))) }))));
             ([38:3-69],
              (Expr
                 ((void), [38:3-68],
                  (Call (
                     (((function(Pair<int, int> $b): void)), [38:3-10],
                      (Obj_get (((TestPair), [38:3-7], (Lvar ([38:3-7], $foo))), (((function(Pair<int, int> $b): void)), [38:9-10], (Id ([38:9-10], "b"))), OG_nullthrows, Is_method))),
                     [],
                     [(Pnormal,
                       ((Pair<int, int>), [38:11-67],
                        (Hole (((Pair<bool, int>), [38:63-66], (Lvar ([38:63-66], $b1))), (Pair<bool, int>), (Pair<int, int>),
                           (UnsafeCast
                              [([38:33-47], (Happly (([38:33-37], "\\HH\\Pair"), [([38:38-42], (Hprim Tbool)); ([38:43-46], (Hprim Tint))])));
                                ([38:48-61], (Happly (([38:48-52], "\\HH\\Pair"), [([38:53-56], (Hprim Tint)); ([38:57-60], (Hprim Tint))])))])
                           ))))
                       ],
                     None)))));
             ([40:3-69],
              (Expr
                 ((void), [40:3-68],
                  (Call (
                     (((function(Pair<int, int> $b): void)), [40:3-10],
                      (Obj_get (((TestPair), [40:3-7], (Lvar ([40:3-7], $foo))), (((function(Pair<int, int> $b): void)), [40:9-10], (Id ([40:9-10], "b"))), OG_nullthrows, Is_method))),
                     [],
                     [(Pnormal,
                       ((Pair<int, int>), [40:11-67],
                        (Hole (((Pair<int, bool>), [40:63-66], (Lvar ([40:63-66], $b2))), (Pair<int, bool>), (Pair<int, int>),
                           (UnsafeCast
                              [([40:33-47], (Happly (([40:33-37], "\\HH\\Pair"), [([40:38-41], (Hprim Tint)); ([40:42-46], (Hprim Tbool))])));
                                ([40:48-61], (Happly (([40:48-52], "\\HH\\Pair"), [([40:53-56], (Hprim Tint)); ([40:57-60], (Hprim Tint))])))])
                           ))))
                       ],
                     None)))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] })