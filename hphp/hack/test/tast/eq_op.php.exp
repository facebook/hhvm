[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([3:10-11], "\\f");
      fd_fun =
      { f_span = [3:1-12:2]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_tparams = []; f_ret = ((~int), (Some ([3:21-24], (Hprim Tint))));
        f_params =
        [{ param_annotation = (int); param_type_hint = ((int), (Some ([3:12-15], (Hprim Tint)))); 
           param_pos = [3:16-18]; param_name = "$x"; param_info = Param_required; 
           param_readonly = None; param_splat = None; param_callconv = Pnormal; 
           param_named = None; param_user_attributes = []; param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None;
        f_body =
        { fb_ast =
          [([4:3-11], (Expr ((int), [4:3-10], (Assign (((int), [4:3-5], (Lvar ([4:3-5], $x))), (Some Minus), ((int), [4:9-10], (Int "4")))))));
            ([5:3-11], (Expr ((int), [5:3-10], (Assign (((int), [5:3-5], (Lvar ([5:3-5], $x))), (Some Plus), ((int), [5:9-10], (Int "4")))))));
            ([6:3-11], (Expr ((int), [6:3-10], (Assign (((int), [6:3-5], (Lvar ([6:3-5], $x))), (Some Star), ((int), [6:9-10], (Int "4")))))));
            ([8:3-26],
             (Expr
                ((vec<int>), [8:3-25],
                 (Assign (((vec<int>), [8:3-7], (Lvar ([8:3-7], $arr))), None,
                    ((vec<int>), [8:10-25],
                     (ValCollection (([8:10-13], Vec), None, [((int), [8:14-15], (Int "1")); ((int), [8:17-18], (Int "2")); ((int), [8:20-21], (Int "3")); ((int), [8:23-24], (Int "4"))])))
                    )))));
            ([8:27-34], (Expr ((int), [8:27-33], (Assign (((int), [8:27-29], (Lvar ([8:27-29], $i))), None, ((int), [8:32-33], (Int "2")))))));
            ([9:3-21],
             (Expr
                ((int), [9:3-20],
                 (Assign (
                    ((int), [9:3-15],
                     (Array_get (((vec<int>), [9:3-7], (Lvar ([9:3-7], $arr))),
                        (Some ((int), [9:8-14], (Binop { bop = Minus; lhs = ((int), [9:8-10], (Lvar ([9:8-10], $i))); rhs = ((int), [9:13-14], (Int "1")) })))))),
                    (Some Plus), ((int), [9:19-20], (Int "4")))))));
            ([11:3-13], (Return (Some ((int), [11:10-12], (Lvar ([11:10-12], $x))))))]
          };
        f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([3:10-11], "__SupportDynamicType"); ua_params = [] }]; 
        f_external = false; f_doc_comment = None };
      fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
      fd_package = None })