[(Class
    { c_span = [4:1-19]; c_annotation = (); c_mode = Mstrict;
      c_final = false; c_is_xhp = false; c_has_xhp_keyword = false;
      c_kind = Cinterface; c_name = ([4:11-12], "\\I");
      c_tparams =
      [{ tp_variance = Contravariant; tp_name = ([4:14-15], "T");
         tp_parameters = []; tp_constraints = []; tp_reified = Erased;
         tp_user_attributes = [] }
        ];
      c_extends = []; c_uses = []; c_use_as_alias = [];
      c_insteadof_alias = []; c_xhp_attr_uses = []; c_xhp_category = None;
      c_reqs = []; c_implements = []; c_where_constraints = [];
      c_consts = []; c_typeconsts = []; c_vars = []; c_methods = [];
      c_attributes = []; c_xhp_children = []; c_xhp_attrs = [];
      c_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
        ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
        ns_const_uses = <opaque>; ns_name = None; ns_auto_ns_map = [];
        ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      c_user_attributes = []; c_file_attributes = []; c_enum = None;
      c_pu_enums = []; c_doc_comment = None; c_emit_id = None });
  (Class
     { c_span = [6:1-30]; c_annotation = (); c_mode = Mstrict;
       c_final = false; c_is_xhp = false; c_has_xhp_keyword = false;
       c_kind = Cnormal; c_name = ([6:7-8], "\\E");
       c_tparams =
       [{ tp_variance = Invariant; tp_name = ([6:9-10], "T");
          tp_parameters = []; tp_constraints = []; tp_reified = Erased;
          tp_user_attributes = [] }
         ];
       c_extends = []; c_uses = []; c_use_as_alias = [];
       c_insteadof_alias = []; c_xhp_attr_uses = []; c_xhp_category = None;
       c_reqs = [];
       c_implements =
       [([6:23-27],
         (Happly (([6:23-24], "\\I"), [([6:25-26], (Habstr ("T", [])))])))];
       c_where_constraints = []; c_consts = []; c_typeconsts = [];
       c_vars = []; c_methods = []; c_attributes = []; c_xhp_children = [];
       c_xhp_attrs = [];
       c_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
         ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
         ns_const_uses = <opaque>; ns_name = None; ns_auto_ns_map = [];
         ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       c_user_attributes = []; c_file_attributes = []; c_enum = None;
       c_pu_enums = []; c_doc_comment = None; c_emit_id = None });
  (Fun
     { f_span = [8:1-10:2]; f_annotation = (); f_mode = Mstrict;
       f_ret =
       ((I<T>),
        (Some ([8:34-38],
               (Happly (([8:34-35], "\\I"), [([8:36-37], (Habstr ("T", [])))]
                  )))));
       f_name = ([8:10-11], "\\f");
       f_tparams =
       [{ tp_variance = Invariant; tp_name = ([8:12-13], "T");
          tp_parameters = []; tp_constraints = []; tp_reified = Erased;
          tp_user_attributes = [] }
         ];
       f_where_constraints = []; f_variadic = FVnonVariadic;
       f_params =
       [{ param_annotation = ([8:20-22], I<T>);
          param_type_hint =
          ((I<T>),
           (Some ([8:15-19],
                  (Happly (([8:15-16], "\\I"),
                     [([8:17-18], (Habstr ("T", [])))])))));
          param_is_variadic = false; param_pos = [8:20-22];
          param_name = "$_"; param_expr = None; param_callconv = None;
          param_user_attributes = []; param_visibility = None };
         { param_annotation = ([8:29-31], I<T>);
           param_type_hint =
           ((I<T>),
            (Some ([8:24-28],
                   (Happly (([8:24-25], "\\I"),
                      [([8:26-27], (Habstr ("T", [])))])))));
           param_is_variadic = false; param_pos = [8:29-31];
           param_name = "$_"; param_expr = None; param_callconv = None;
           param_user_attributes = []; param_visibility = None }
         ];
       f_cap = ((nothing), None); f_unsafe_cap = ((mixed), None);
       f_body =
       { fb_ast =
         [([9:3-25],
           (Throw
              (([9:9-24], Exception),
               (New (
                  (([9:13-22], Exception), (CI ([9:13-22], "\\Exception"))),
                  [], [], None,
                  ([9:13-22], (function(string $message=_, int $code=_, ?Exception $previous=_): void))
                  )))))
           ];
         fb_annotation = () };
       f_fun_kind = FSync; f_user_attributes = []; f_file_attributes = [];
       f_external = false;
       f_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
         ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
         ns_const_uses = <opaque>; ns_name = None; ns_auto_ns_map = [];
         ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       f_doc_comment = None; f_static = false });
  (Fun
     { f_span = [12:1-14:2]; f_annotation = (); f_mode = Mstrict;
       f_ret =
       ((E<T>),
        (Some ([12:22-26],
               (Happly (([12:22-23], "\\E"),
                  [([12:24-25], (Habstr ("T", [])))])))));
       f_name = ([12:10-11], "\\g");
       f_tparams =
       [{ tp_variance = Invariant; tp_name = ([12:12-13], "T");
          tp_parameters = []; tp_constraints = []; tp_reified = Erased;
          tp_user_attributes = [] }
         ];
       f_where_constraints = []; f_variadic = FVnonVariadic;
       f_params =
       [{ param_annotation = ([12:17-19], T);
          param_type_hint = ((T), (Some ([12:15-16], (Habstr ("T", [])))));
          param_is_variadic = false; param_pos = [12:17-19];
          param_name = "$_"; param_expr = None; param_callconv = None;
          param_user_attributes = []; param_visibility = None }
         ];
       f_cap = ((nothing), None); f_unsafe_cap = ((mixed), None);
       f_body =
       { fb_ast =
         [([13:3-25],
           (Throw
              (([13:9-24], Exception),
               (New (
                  (([13:13-22], Exception), (CI ([13:13-22], "\\Exception"))),
                  [], [], None,
                  ([13:13-22], (function(string $message=_, int $code=_, ?Exception $previous=_): void))
                  )))))
           ];
         fb_annotation = () };
       f_fun_kind = FSync; f_user_attributes = []; f_file_attributes = [];
       f_external = false;
       f_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
         ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
         ns_const_uses = <opaque>; ns_name = None; ns_auto_ns_map = [];
         ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       f_doc_comment = None; f_static = false });
  (Fun
     { f_span = [16:1-18:2]; f_annotation = (); f_mode = Mstrict;
       f_ret = ((void), (Some ([16:18-22], (Hprim Tvoid))));
       f_name = ([16:10-14], "\\test"); f_tparams = [];
       f_where_constraints = []; f_variadic = FVnonVariadic; f_params = [];
       f_cap = ((nothing), None); f_unsafe_cap = ((mixed), None);
       f_body =
       { fb_ast =
         [([17:3-22],
           (Expr
              (([17:3-21], void),
               (Binop ((Eq None),
                  (([17:3-5], void), (Lplaceholder [17:3-5])),
                  (([17:8-21], I<int>),
                   (Call (
                      (([17:8-9], (function<T>(I<int> $_, I<int> $_): I<int>)),
                       (Id ([17:8-9], "\\f"))),
                      [((int), ([17:8-9], (Happly (([Pos.none], "_"), []))))],
                      [(([17:10-14], E<int>),
                        (Call (
                           (([17:10-11], (function<T>(int $_): E<int>)),
                            (Id ([17:10-11], "\\g"))),
                           [((int),
                             ([17:10-11], (Happly (([Pos.none], "_"), []))))],
                           [(([17:12-13], int), (Int "1"))], None)));
                        (([17:16-20], E<int>),
                         (Call (
                            (([17:16-17], (function<T>(int $_): E<int>)),
                             (Id ([17:16-17], "\\g"))),
                            [((int),
                              ([17:16-17], (Happly (([Pos.none], "_"), []))))
                              ],
                            [(([17:18-19], int), (Int "2"))], None)))
                        ],
                      None)))
                  )))))
           ];
         fb_annotation = () };
       f_fun_kind = FSync; f_user_attributes = []; f_file_attributes = [];
       f_external = false;
       f_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
         ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
         ns_const_uses = <opaque>; ns_name = None; ns_auto_ns_map = [];
         ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       f_doc_comment = None; f_static = false })
  ]
