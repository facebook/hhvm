.class [unique] Foo {
  .default_ctor;

  .property [public] x = """s:3:"heh";""";

  .method [public] __toString() {
    String "hey\n"
    RetC
  }

  # Do all this work in a member function so that we will assert
  # specific object types without RepoAuthoritative mode
  .method [public] main($x) {
    # Test that the guard for an optional AssertObj stays: we could be
    # called with the object or nulls.

    AssertRATL $x ?Obj=Foo
    CGetL $x
    Print
    PopC
    BaseL $x Warn Any
    QueryM 0 CGet PT:"x" Any
    PopC
    Int 1
    RetC
  }
}

.function ["__EntryPoint"("""y:0:{}""")] main() {
  .declvars $object;
  NewObjD "Foo"
  Dup
  NullUninit
  FCallCtor <LockWhileUnwinding> 0 1 "" "" - "" ""
  PopC
  LockObj
  SetL $object
  PopC

  CGetL $object
  NullUninit
   NewObjD "Foo"
   Dup
   NullUninit
   FCallCtor <LockWhileUnwinding> 0 1 "" "" - "" ""
   PopC
   LockObj
  FCallObjMethodD <> 1 1 "" "" - "" "" NullThrows "main"
  PopC

  CGetL $object
  NullUninit
   Null
  FCallObjMethodD <> 1 1 "" "" - "" "" NullThrows "main"
  PopC

  Int 1
  RetC
}
