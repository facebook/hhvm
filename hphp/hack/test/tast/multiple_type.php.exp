[(Fun
    { Aast.AnnotatedAST.f_annotation = (); f_mode = <opaque>;
      f_ret = (Some ([16:44-52], (Hprim Tarraykey)));
      f_name = ([16:10-14], "\\test"); f_tparams = [];
      f_where_constraints = []; f_variadic = FVnonVariadic;
      f_params =
      [{ Aast.AnnotatedAST.param_annotation = ([16:18-21], C1);
         param_hint =
         (Some ([16:15-17], (Happly (([16:15-17], "\\C1"), []))));
         param_is_reference = false; param_is_variadic = false;
         param_pos = [16:18-21]; param_name = "$c1"; param_expr = None;
         param_callconv = None; param_user_attributes = [] };
        { Aast.AnnotatedAST.param_annotation = ([16:26-29], C2);
          param_hint =
          (Some ([16:23-25], (Happly (([16:23-25], "\\C2"), []))));
          param_is_reference = false; param_is_variadic = false;
          param_pos = [16:26-29]; param_name = "$c2"; param_expr = None;
          param_callconv = None; param_user_attributes = [] };
        { Aast.AnnotatedAST.param_annotation = ([16:36-41], bool);
          param_hint = (Some ([16:31-35], (Hprim Tbool)));
          param_is_reference = false; param_is_variadic = false;
          param_pos = [16:36-41]; param_name = "$cond"; param_expr = None;
          param_callconv = None; param_user_attributes = [] }
        ];
      f_body =
      (NamedBody
         { Aast.AnnotatedAST.fnb_nast =
           [(Expr
               (([17:3-25], (C1 | C2)),
                (Binop ((Eq None),
                   (([17:3-5], (C1 | C2)), (Lvar ([17:3-5], $x))),
                   (([17:8-25], (C1 | C2)),
                    (Eif ((([17:8-13], bool), (Lvar ([17:8-13], $cond))),
                       (Some (([17:16-19], C1), (Lvar ([17:16-19], $c1)))),
                       (([17:22-25], C2), (Lvar ([17:22-25], $c2))))))
                   ))));
             (Return ([18:3-20],
                (Some (([18:10-19], (int | string)),
                       (Call (Cnormal,
                          (([18:10-17], ((function(): string) | (function(): int))),
                           (Obj_get (
                              (([18:10-12], (C1 | C2)),
                               (Lvar ([18:10-12], $x))),
                              (([18:14-17], ((function(): string) | (function(): int))),
                               (Id ([18:14-17], "foo"))),
                              OG_nullthrows))),
                          [], [], []))))
                ))
             ];
           fnb_unsafe = false });
      f_fun_kind = FSync; f_user_attributes = []; f_ret_by_ref = false;
      f_external = false });
  (Class
     { Aast.AnnotatedAST.c_annotation = (); c_mode = <opaque>;
       c_final = false; c_is_xhp = false; c_kind = Cnormal;
       c_name = ([4:7-9], "\\C1"); c_tparams = <opaque>; c_extends = [];
       c_uses = []; c_xhp_attr_uses = []; c_xhp_category = [];
       c_req_extends = []; c_req_implements = []; c_implements = [];
       c_consts = []; c_typeconsts = []; c_static_vars = []; c_vars = [];
       c_constructor = None; c_static_methods = [];
       c_methods =
       [{ Aast.AnnotatedAST.m_annotation = (); m_final = false;
          m_abstract = false; m_visibility = Public;
          m_name = ([5:19-22], "foo"); m_tparams = [];
          m_where_constraints = []; m_variadic = FVnonVariadic;
          m_params = [];
          m_body =
          (NamedBody
             { Aast.AnnotatedAST.fnb_nast =
               [(Return ([6:5-14], (Some (([6:12-13], int), (Int "5")))))];
               fnb_unsafe = false });
          m_fun_kind = FSync; m_user_attributes = [];
          m_ret = (Some ([5:26-29], (Hprim Tint))); m_ret_by_ref = false;
          m_external = false }
         ];
       c_user_attributes = []; c_enum = None });
  (Class
     { Aast.AnnotatedAST.c_annotation = (); c_mode = <opaque>;
       c_final = false; c_is_xhp = false; c_kind = Cnormal;
       c_name = ([10:7-9], "\\C2"); c_tparams = <opaque>; c_extends = [];
       c_uses = []; c_xhp_attr_uses = []; c_xhp_category = [];
       c_req_extends = []; c_req_implements = []; c_implements = [];
       c_consts = []; c_typeconsts = []; c_static_vars = []; c_vars = [];
       c_constructor = None; c_static_methods = [];
       c_methods =
       [{ Aast.AnnotatedAST.m_annotation = (); m_final = false;
          m_abstract = false; m_visibility = Public;
          m_name = ([11:19-22], "foo"); m_tparams = [];
          m_where_constraints = []; m_variadic = FVnonVariadic;
          m_params = [];
          m_body =
          (NamedBody
             { Aast.AnnotatedAST.fnb_nast =
               [(Return ([12:5-16],
                   (Some (([12:12-15], string), (String "s")))))
                 ];
               fnb_unsafe = false });
          m_fun_kind = FSync; m_user_attributes = [];
          m_ret = (Some ([11:26-32], (Hprim Tstring))); m_ret_by_ref = false;
          m_external = false }
         ];
       c_user_attributes = []; c_enum = None })
  ]
