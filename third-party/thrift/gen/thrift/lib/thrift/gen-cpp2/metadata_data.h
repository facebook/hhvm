/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#pragma once

#include <thrift/lib/cpp2/gen/module_data_h.h>

#include "thrift/lib/thrift/gen-cpp2/metadata_types.h"

namespace apache { namespace thrift { namespace metadata {

struct _ThriftPrimitiveTypeEnumDataStorage {
  using type = ThriftPrimitiveType;
  static constexpr const std::size_t size = 10;
  static constexpr const std::array<ThriftPrimitiveType, 10> values = {{
    ThriftPrimitiveType::BOOL,
    ThriftPrimitiveType::BYTE,
    ThriftPrimitiveType::I16,
    ThriftPrimitiveType::I32,
    ThriftPrimitiveType::I64,
    ThriftPrimitiveType::FLOAT,
    ThriftPrimitiveType::DOUBLE,
    ThriftPrimitiveType::BINARY,
    ThriftPrimitiveType::STRING,
    ThriftPrimitiveType::VOID,
  }};
  static constexpr const std::array<folly::StringPiece, 10> names = {{
    "BOOL",
    "BYTE",
    "I16",
    "I32",
    "I64",
    "FLOAT",
    "DOUBLE",
    "BINARY",
    "STRING",
    "VOID",
  }};
};

}}} // apache::thrift::metadata
namespace apache { namespace thrift {

template <> struct TEnumDataStorage<::apache::thrift::metadata::ThriftPrimitiveType> {
  using storage_type = ::apache::thrift::metadata::_ThriftPrimitiveTypeEnumDataStorage;
};

}} // apache::thrift

