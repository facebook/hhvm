/**
 * Autogenerated by Thrift for thrift/compiler/test/fixtures/mcpp2-compare/src/extra_services.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */
#pragma once

#include <thrift/lib/cpp2/gen/service_h.h>

#include "thrift/compiler/test/fixtures/mcpp2-compare/gen-cpp2/ExtraServiceAsyncClient.h"
#include "thrift/compiler/test/fixtures/mcpp2-compare/gen-cpp2/extra_services_types.h"
#if __has_include("thrift/compiler/test/fixtures/mcpp2-compare/gen-cpp2/ParamService.h")
#include "thrift/compiler/test/fixtures/mcpp2-compare/gen-cpp2/ParamService.h"
#else
#include "thrift/compiler/test/fixtures/mcpp2-compare/gen-cpp2/module_handlers.h"
#endif
#include "thrift/compiler/test/fixtures/mcpp2-compare/gen-cpp2/module_types.h"

namespace folly {
  class IOBuf;
  class IOBufQueue;
}
namespace apache { namespace thrift {
  class Cpp2RequestContext;
  class BinaryProtocolReader;
  class CompactProtocolReader;
  namespace transport { class THeader; }
}}

namespace extra::svc {
class ExtraService;
class ExtraServiceAsyncProcessor;

class ExtraServiceServiceInfoHolder : public apache::thrift::ServiceInfoHolder {
  public:
   apache::thrift::ServiceRequestInfoMap const& requestInfoMap() const override;
   static apache::thrift::ServiceRequestInfoMap staticRequestInfoMap();
};
} // namespace extra::svc

namespace apache::thrift {
template <>
class ServiceHandler<::extra::svc::ExtraService> : virtual public ::some::valid::ns::ParamServiceSvIf {
  static_assert(!folly::is_detected_v<::apache::thrift::detail::st::detect_complete, ::extra::svc::ExtraService>, "Definition collision with service tag. Either rename the Thrift service using @cpp.Name annotation or rename the conflicting C++ type.");

 public:
  std::string_view getGeneratedName() const override { return "ExtraService"; }

  typedef ::extra::svc::ExtraServiceAsyncProcessor ProcessorType;
  std::unique_ptr<apache::thrift::AsyncProcessor> getProcessor() override;
  CreateMethodMetadataResult createMethodMetadata() override;
 private:
  std::optional<std::reference_wrapper<apache::thrift::ServiceRequestInfoMap const>> getServiceRequestInfoMap() const;
 public:

  virtual bool sync_simple_function();
  [[deprecated("Use sync_simple_function instead")]] virtual bool simple_function();
  virtual folly::Future<bool> future_simple_function();
  virtual folly::SemiFuture<bool> semifuture_simple_function();
#if FOLLY_HAS_COROUTINES
  virtual folly::coro::Task<bool> co_simple_function();
  virtual folly::coro::Task<bool> co_simple_function(apache::thrift::RequestParams params);
#endif
  virtual void async_tm_simple_function(apache::thrift::HandlerCallbackPtr<bool> callback);
  virtual void async_eb_throws_function(apache::thrift::HandlerCallbackPtr<void> callback);
  virtual bool sync_throws_function2(bool /*param1*/);
  [[deprecated("Use sync_throws_function2 instead")]] virtual bool throws_function2(bool /*param1*/);
  virtual folly::Future<bool> future_throws_function2(bool p_param1);
  virtual folly::SemiFuture<bool> semifuture_throws_function2(bool p_param1);
#if FOLLY_HAS_COROUTINES
  virtual folly::coro::Task<bool> co_throws_function2(bool p_param1);
  virtual folly::coro::Task<bool> co_throws_function2(apache::thrift::RequestParams params, bool p_param1);
#endif
  virtual void async_tm_throws_function2(apache::thrift::HandlerCallbackPtr<bool> callback, bool p_param1);
  virtual void sync_throws_function3(::std::map<::std::int32_t, ::std::string>& /*_return*/, bool /*param1*/, const ::std::string& /*param2*/);
  [[deprecated("Use sync_throws_function3 instead")]] virtual void throws_function3(::std::map<::std::int32_t, ::std::string>& /*_return*/, bool /*param1*/, const ::std::string& /*param2*/);
  virtual folly::Future<::std::map<::std::int32_t, ::std::string>> future_throws_function3(bool p_param1, const ::std::string& p_param2);
  virtual folly::SemiFuture<::std::map<::std::int32_t, ::std::string>> semifuture_throws_function3(bool p_param1, const ::std::string& p_param2);
#if FOLLY_HAS_COROUTINES
  virtual folly::coro::Task<::std::map<::std::int32_t, ::std::string>> co_throws_function3(bool p_param1, const ::std::string& p_param2);
  virtual folly::coro::Task<::std::map<::std::int32_t, ::std::string>> co_throws_function3(apache::thrift::RequestParams params, bool p_param1, const ::std::string& p_param2);
#endif
  virtual void async_tm_throws_function3(apache::thrift::HandlerCallbackPtr<::std::map<::std::int32_t, ::std::string>> callback, bool p_param1, const ::std::string& p_param2);
  virtual void sync_oneway_void_ret();
  [[deprecated("Use sync_oneway_void_ret instead")]] virtual void oneway_void_ret();
  virtual folly::Future<folly::Unit> future_oneway_void_ret();
  virtual folly::SemiFuture<folly::Unit> semifuture_oneway_void_ret();
#if FOLLY_HAS_COROUTINES
  virtual folly::coro::Task<void> co_oneway_void_ret();
  virtual folly::coro::Task<void> co_oneway_void_ret(apache::thrift::RequestParams params);
#endif
  virtual void async_tm_oneway_void_ret(apache::thrift::HandlerCallbackOneWay::Ptr callback);
  virtual void sync_oneway_void_ret_i32_i32_i32_i32_i32_param(::std::int32_t /*param1*/, ::std::int32_t /*param2*/, ::std::int32_t /*param3*/, ::std::int32_t /*param4*/, ::std::int32_t /*param5*/);
  [[deprecated("Use sync_oneway_void_ret_i32_i32_i32_i32_i32_param instead")]] virtual void oneway_void_ret_i32_i32_i32_i32_i32_param(::std::int32_t /*param1*/, ::std::int32_t /*param2*/, ::std::int32_t /*param3*/, ::std::int32_t /*param4*/, ::std::int32_t /*param5*/);
  virtual folly::Future<folly::Unit> future_oneway_void_ret_i32_i32_i32_i32_i32_param(::std::int32_t p_param1, ::std::int32_t p_param2, ::std::int32_t p_param3, ::std::int32_t p_param4, ::std::int32_t p_param5);
  virtual folly::SemiFuture<folly::Unit> semifuture_oneway_void_ret_i32_i32_i32_i32_i32_param(::std::int32_t p_param1, ::std::int32_t p_param2, ::std::int32_t p_param3, ::std::int32_t p_param4, ::std::int32_t p_param5);
#if FOLLY_HAS_COROUTINES
  virtual folly::coro::Task<void> co_oneway_void_ret_i32_i32_i32_i32_i32_param(::std::int32_t p_param1, ::std::int32_t p_param2, ::std::int32_t p_param3, ::std::int32_t p_param4, ::std::int32_t p_param5);
  virtual folly::coro::Task<void> co_oneway_void_ret_i32_i32_i32_i32_i32_param(apache::thrift::RequestParams params, ::std::int32_t p_param1, ::std::int32_t p_param2, ::std::int32_t p_param3, ::std::int32_t p_param4, ::std::int32_t p_param5);
#endif
  virtual void async_tm_oneway_void_ret_i32_i32_i32_i32_i32_param(apache::thrift::HandlerCallbackOneWay::Ptr callback, ::std::int32_t p_param1, ::std::int32_t p_param2, ::std::int32_t p_param3, ::std::int32_t p_param4, ::std::int32_t p_param5);
  virtual void async_eb_oneway_void_ret_map_setlist_param(apache::thrift::HandlerCallbackOneWay::Ptr callback, const ::std::map<::std::string, ::std::int64_t>& p_param1, const ::std::set<::std::vector<::std::string>>& p_param2);
  virtual void sync_oneway_void_ret_struct_param(const ::some::valid::ns::MyStruct& /*param1*/);
  [[deprecated("Use sync_oneway_void_ret_struct_param instead")]] virtual void oneway_void_ret_struct_param(const ::some::valid::ns::MyStruct& /*param1*/);
  virtual folly::Future<folly::Unit> future_oneway_void_ret_struct_param(const ::some::valid::ns::MyStruct& p_param1);
  virtual folly::SemiFuture<folly::Unit> semifuture_oneway_void_ret_struct_param(const ::some::valid::ns::MyStruct& p_param1);
#if FOLLY_HAS_COROUTINES
  virtual folly::coro::Task<void> co_oneway_void_ret_struct_param(const ::some::valid::ns::MyStruct& p_param1);
  virtual folly::coro::Task<void> co_oneway_void_ret_struct_param(apache::thrift::RequestParams params, const ::some::valid::ns::MyStruct& p_param1);
#endif
  virtual void async_tm_oneway_void_ret_struct_param(apache::thrift::HandlerCallbackOneWay::Ptr callback, const ::some::valid::ns::MyStruct& p_param1);
  virtual void sync_oneway_void_ret_listunion_param(const ::std::vector<::some::valid::ns::ComplexUnion>& /*param1*/);
  [[deprecated("Use sync_oneway_void_ret_listunion_param instead")]] virtual void oneway_void_ret_listunion_param(const ::std::vector<::some::valid::ns::ComplexUnion>& /*param1*/);
  virtual folly::Future<folly::Unit> future_oneway_void_ret_listunion_param(const ::std::vector<::some::valid::ns::ComplexUnion>& p_param1);
  virtual folly::SemiFuture<folly::Unit> semifuture_oneway_void_ret_listunion_param(const ::std::vector<::some::valid::ns::ComplexUnion>& p_param1);
#if FOLLY_HAS_COROUTINES
  virtual folly::coro::Task<void> co_oneway_void_ret_listunion_param(const ::std::vector<::some::valid::ns::ComplexUnion>& p_param1);
  virtual folly::coro::Task<void> co_oneway_void_ret_listunion_param(apache::thrift::RequestParams params, const ::std::vector<::some::valid::ns::ComplexUnion>& p_param1);
#endif
  virtual void async_tm_oneway_void_ret_listunion_param(apache::thrift::HandlerCallbackOneWay::Ptr callback, const ::std::vector<::some::valid::ns::ComplexUnion>& p_param1);
 private:
  static ::extra::svc::ExtraServiceServiceInfoHolder __fbthrift_serviceInfoHolder;
  std::atomic<apache::thrift::detail::si::InvocationType> __fbthrift_invocation_simple_function{apache::thrift::detail::si::InvocationType::AsyncTm};
  std::atomic<apache::thrift::detail::si::InvocationType> __fbthrift_invocation_throws_function2{apache::thrift::detail::si::InvocationType::AsyncTm};
  std::atomic<apache::thrift::detail::si::InvocationType> __fbthrift_invocation_throws_function3{apache::thrift::detail::si::InvocationType::AsyncTm};
  std::atomic<apache::thrift::detail::si::InvocationType> __fbthrift_invocation_oneway_void_ret{apache::thrift::detail::si::InvocationType::AsyncTm};
  std::atomic<apache::thrift::detail::si::InvocationType> __fbthrift_invocation_oneway_void_ret_i32_i32_i32_i32_i32_param{apache::thrift::detail::si::InvocationType::AsyncTm};
  std::atomic<apache::thrift::detail::si::InvocationType> __fbthrift_invocation_oneway_void_ret_struct_param{apache::thrift::detail::si::InvocationType::AsyncTm};
  std::atomic<apache::thrift::detail::si::InvocationType> __fbthrift_invocation_oneway_void_ret_listunion_param{apache::thrift::detail::si::InvocationType::AsyncTm};
 public:
  void fbthrift_execute_decorators_before_void_ret_i16_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::int16_t>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_void_ret_i16_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/) override {}
  void fbthrift_execute_decorators_before_void_ret_byte_i16_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::int8_t>::type /*p_param1*/, apache::thrift::detail::DecoratorArgType<::std::int16_t>::type /*p_param2*/) override {}
  void fbthrift_execute_decorators_after_void_ret_byte_i16_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/) override {}
  void fbthrift_execute_decorators_before_void_ret_map_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::map<::std::string, ::std::int64_t>>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_void_ret_map_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/) override {}
  void fbthrift_execute_decorators_before_void_ret_map_setlist_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::map<::std::string, ::std::int64_t>>::type /*p_param1*/, apache::thrift::detail::DecoratorArgType<::std::set<::std::vector<::std::string>>>::type /*p_param2*/) override {}
  void fbthrift_execute_decorators_after_void_ret_map_setlist_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/) override {}
  void fbthrift_execute_decorators_before_void_ret_map_typedef_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::simpleTypeDef>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_void_ret_map_typedef_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/) override {}
  void fbthrift_execute_decorators_before_void_ret_enum_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::MyEnumA>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_void_ret_enum_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/) override {}
  void fbthrift_execute_decorators_before_void_ret_struct_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::MyStruct>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_void_ret_struct_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/) override {}
  void fbthrift_execute_decorators_before_void_ret_listunion_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::vector<::some::valid::ns::ComplexUnion>>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_void_ret_listunion_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/) override {}
  void fbthrift_execute_decorators_before_bool_ret_i32_i64_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::int32_t>::type /*p_param1*/, apache::thrift::detail::DecoratorArgType<::std::int64_t>::type /*p_param2*/) override {}
  void fbthrift_execute_decorators_after_bool_ret_i32_i64_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<bool>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_bool_ret_map_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::map<::std::string, ::std::int64_t>>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_bool_ret_map_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<bool>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_bool_ret_union_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::ComplexUnion>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_bool_ret_union_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<bool>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_i64_ret_float_double_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<float>::type /*p_param1*/, apache::thrift::detail::DecoratorArgType<double>::type /*p_param2*/) override {}
  void fbthrift_execute_decorators_after_i64_ret_float_double_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<::std::int64_t>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_i64_ret_string_typedef_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::string>::type /*p_param1*/, apache::thrift::detail::DecoratorArgType<::std::set<::some::valid::ns::mostComplexTypeDef>>::type /*p_param2*/) override {}
  void fbthrift_execute_decorators_after_i64_ret_string_typedef_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<::std::int64_t>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_i64_ret_i32_i32_i32_i32_i32_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::int32_t>::type /*p_param1*/, apache::thrift::detail::DecoratorArgType<::std::int32_t>::type /*p_param2*/, apache::thrift::detail::DecoratorArgType<::std::int32_t>::type /*p_param3*/, apache::thrift::detail::DecoratorArgType<::std::int32_t>::type /*p_param4*/, apache::thrift::detail::DecoratorArgType<::std::int32_t>::type /*p_param5*/) override {}
  void fbthrift_execute_decorators_after_i64_ret_i32_i32_i32_i32_i32_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<::std::int64_t>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_double_ret_setstruct_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::set<::some::valid::ns::MyStruct>>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_double_ret_setstruct_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<double>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_string_ret_string_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::string>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_string_ret_string_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<::std::string>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_binary_ret_binary_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::string>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_binary_ret_binary_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<::std::string>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_map_ret_bool_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<bool>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_map_ret_bool_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<::std::map<::std::string, ::std::int64_t>>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_list_ret_map_setlist_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::map<::std::int32_t, ::std::vector<::std::string>>>::type /*p_param1*/, apache::thrift::detail::DecoratorArgType<::std::vector<::std::string>>::type /*p_param2*/) override {}
  void fbthrift_execute_decorators_after_list_ret_map_setlist_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<::std::vector<bool>>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_mapsetlistmapliststring_ret_listlistlist_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::vector<::std::vector<::std::vector<::std::vector<::std::int32_t>>>>>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_mapsetlistmapliststring_ret_listlistlist_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<::std::map<::std::set<::std::vector<::std::int32_t>>, ::std::map<::std::vector<::std::set<::std::string>>, ::std::string>>>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_typedef_ret_i32_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::int32_t>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_typedef_ret_i32_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<::some::valid::ns::simpleTypeDef>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_listtypedef_ret_typedef_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::complexStructTypeDef>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_listtypedef_ret_typedef_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<::std::vector<::some::valid::ns::simpleTypeDef>>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_enum_ret_double_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<double>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_enum_ret_double_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<::some::valid::ns::MyEnumA>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_enum_ret_double_enum_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<double>::type /*p_param1*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::MyEnumA>::type /*p_param2*/) override {}
  void fbthrift_execute_decorators_after_enum_ret_double_enum_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<::some::valid::ns::MyEnumA>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_listenum_ret_map_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::map<::std::string, ::std::int64_t>>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_listenum_ret_map_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<::std::vector<::some::valid::ns::MyEnumA>>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_struct_ret_i16_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::int16_t>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_struct_ret_i16_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<::some::valid::ns::MyStruct>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_setstruct_ret_set_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::set<::std::string>>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_setstruct_ret_set_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<::std::set<::some::valid::ns::MyStruct>>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_union_ret_i32_i32_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::int32_t>::type /*p_param1*/, apache::thrift::detail::DecoratorArgType<::std::int32_t>::type /*p_param2*/) override {}
  void fbthrift_execute_decorators_after_union_ret_i32_i32_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<::some::valid::ns::ComplexUnion>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_listunion_string_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::string>::type /*p_param1*/) override {}
  void fbthrift_execute_decorators_after_listunion_string_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<::std::vector<::some::valid::ns::ComplexUnion>>::type /*result*/) override {}
  void fbthrift_execute_decorators_before_annotatedParams(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::containerStruct>::type /*p_no_annotation*/, apache::thrift::detail::DecoratorArgType<::std::set<::std::int32_t>>::type /*p_opt_ref_type_shared*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::CppFakeI32>::type /*p_base_type*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::FollySmallVectorI64>::type /*p_list_type*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::SortedVectorSetString>::type /*p_set_type*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::FakeMap>::type /*p_map_type*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::UnorderedMapStruct>::type /*p_map_struct_type*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::IOBuf>::type /*p_iobuf_type*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::IOBufPtr>::type /*p_iobuf_ptr*/, apache::thrift::detail::DecoratorArgType<::std::vector<::std::int32_t>>::type /*p_list_i32_template*/, apache::thrift::detail::DecoratorArgType<::std::vector<::std::string>>::type /*p_list_string_template*/, apache::thrift::detail::DecoratorArgType<::std::set<::std::string>>::type /*p_set_template*/, apache::thrift::detail::DecoratorArgType<::std::map<::std::int64_t, ::std::string>>::type /*p_map_template*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::std_list>::type /*p_typedef_list_template*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::std_deque>::type /*p_typedef_deque_template*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::folly_set>::type /*p_typedef_set_template*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::folly_map>::type /*p_typedef_map_template*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::IOBuf>::type /*p_iobuf_type_val*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::IOBufPtr>::type /*p_iobuf_ptr_val*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::containerStruct>::type /*p_struct_struct*/) override {}
  void fbthrift_execute_decorators_after_annotatedParams(apache::thrift::Cpp2RequestContext& /*requestCtx*/) override {}

  virtual void fbthrift_execute_decorators_before_simple_function(apache::thrift::Cpp2RequestContext& /*requestCtx*/) {}
  virtual void fbthrift_execute_decorators_after_simple_function(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<bool>::type /*result*/) {}
  static void fbthrift_invoke_decorator_after_simple_function(void* iface, apache::thrift::Cpp2RequestContext* ctx, apache::thrift::detail::DecoratorReturnType<bool>::type result) {
    static_cast<ServiceHandler<::extra::svc::ExtraService>*>(iface)->fbthrift_execute_decorators_after_simple_function(*ctx, result);
  }
  virtual void fbthrift_execute_decorators_before_throws_function(apache::thrift::Cpp2RequestContext& /*requestCtx*/) {}
  virtual void fbthrift_execute_decorators_after_throws_function(apache::thrift::Cpp2RequestContext& /*requestCtx*/) {}
  static void fbthrift_invoke_decorator_after_throws_function(void* iface, apache::thrift::Cpp2RequestContext* ctx) {
    static_cast<ServiceHandler<::extra::svc::ExtraService>*>(iface)->fbthrift_execute_decorators_after_throws_function(*ctx);
  }
  virtual void fbthrift_execute_decorators_before_throws_function2(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<bool>::type /*p_param1*/) {}
  virtual void fbthrift_execute_decorators_after_throws_function2(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<bool>::type /*result*/) {}
  static void fbthrift_invoke_decorator_after_throws_function2(void* iface, apache::thrift::Cpp2RequestContext* ctx, apache::thrift::detail::DecoratorReturnType<bool>::type result) {
    static_cast<ServiceHandler<::extra::svc::ExtraService>*>(iface)->fbthrift_execute_decorators_after_throws_function2(*ctx, result);
  }
  virtual void fbthrift_execute_decorators_before_throws_function3(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<bool>::type /*p_param1*/, apache::thrift::detail::DecoratorArgType<::std::string>::type /*p_param2*/) {}
  virtual void fbthrift_execute_decorators_after_throws_function3(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorReturnType<::std::map<::std::int32_t, ::std::string>>::type /*result*/) {}
  static void fbthrift_invoke_decorator_after_throws_function3(void* iface, apache::thrift::Cpp2RequestContext* ctx, apache::thrift::detail::DecoratorReturnType<::std::map<::std::int32_t, ::std::string>>::type result) {
    static_cast<ServiceHandler<::extra::svc::ExtraService>*>(iface)->fbthrift_execute_decorators_after_throws_function3(*ctx, result);
  }
  virtual void fbthrift_execute_decorators_before_oneway_void_ret(apache::thrift::Cpp2RequestContext& /*requestCtx*/) {}
  virtual void fbthrift_execute_decorators_after_oneway_void_ret(apache::thrift::Cpp2RequestContext& /*requestCtx*/) {}
  static void fbthrift_invoke_decorator_after_oneway_void_ret(void* iface, apache::thrift::Cpp2RequestContext* ctx) {
    static_cast<ServiceHandler<::extra::svc::ExtraService>*>(iface)->fbthrift_execute_decorators_after_oneway_void_ret(*ctx);
  }
  virtual void fbthrift_execute_decorators_before_oneway_void_ret_i32_i32_i32_i32_i32_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::int32_t>::type /*p_param1*/, apache::thrift::detail::DecoratorArgType<::std::int32_t>::type /*p_param2*/, apache::thrift::detail::DecoratorArgType<::std::int32_t>::type /*p_param3*/, apache::thrift::detail::DecoratorArgType<::std::int32_t>::type /*p_param4*/, apache::thrift::detail::DecoratorArgType<::std::int32_t>::type /*p_param5*/) {}
  virtual void fbthrift_execute_decorators_after_oneway_void_ret_i32_i32_i32_i32_i32_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/) {}
  static void fbthrift_invoke_decorator_after_oneway_void_ret_i32_i32_i32_i32_i32_param(void* iface, apache::thrift::Cpp2RequestContext* ctx) {
    static_cast<ServiceHandler<::extra::svc::ExtraService>*>(iface)->fbthrift_execute_decorators_after_oneway_void_ret_i32_i32_i32_i32_i32_param(*ctx);
  }
  virtual void fbthrift_execute_decorators_before_oneway_void_ret_map_setlist_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::map<::std::string, ::std::int64_t>>::type /*p_param1*/, apache::thrift::detail::DecoratorArgType<::std::set<::std::vector<::std::string>>>::type /*p_param2*/) {}
  virtual void fbthrift_execute_decorators_after_oneway_void_ret_map_setlist_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/) {}
  static void fbthrift_invoke_decorator_after_oneway_void_ret_map_setlist_param(void* iface, apache::thrift::Cpp2RequestContext* ctx) {
    static_cast<ServiceHandler<::extra::svc::ExtraService>*>(iface)->fbthrift_execute_decorators_after_oneway_void_ret_map_setlist_param(*ctx);
  }
  virtual void fbthrift_execute_decorators_before_oneway_void_ret_struct_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::some::valid::ns::MyStruct>::type /*p_param1*/) {}
  virtual void fbthrift_execute_decorators_after_oneway_void_ret_struct_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/) {}
  static void fbthrift_invoke_decorator_after_oneway_void_ret_struct_param(void* iface, apache::thrift::Cpp2RequestContext* ctx) {
    static_cast<ServiceHandler<::extra::svc::ExtraService>*>(iface)->fbthrift_execute_decorators_after_oneway_void_ret_struct_param(*ctx);
  }
  virtual void fbthrift_execute_decorators_before_oneway_void_ret_listunion_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/, apache::thrift::detail::DecoratorArgType<::std::vector<::some::valid::ns::ComplexUnion>>::type /*p_param1*/) {}
  virtual void fbthrift_execute_decorators_after_oneway_void_ret_listunion_param(apache::thrift::Cpp2RequestContext& /*requestCtx*/) {}
  static void fbthrift_invoke_decorator_after_oneway_void_ret_listunion_param(void* iface, apache::thrift::Cpp2RequestContext* ctx) {
    static_cast<ServiceHandler<::extra::svc::ExtraService>*>(iface)->fbthrift_execute_decorators_after_oneway_void_ret_listunion_param(*ctx);
  }
};

namespace detail {
template <> struct TSchemaAssociation<::extra::svc::ExtraService, false> {
  static ::folly::Range<const ::std::string_view*>(*bundle)();
  static constexpr int64_t programId = -1731276921098640572;
  static constexpr ::std::string_view definitionKey = {"\x62\xe6\x56\xb8\x62\xe2\x42\xd4\x4a\xb6\x57\x96\xe0\x39\x18\xd2", 16};
};
}
} // namespace apache::thrift

namespace extra::svc {
using ExtraServiceSvIf [[deprecated("Use apache::thrift::ServiceHandler<ExtraService> instead")]] = ::apache::thrift::ServiceHandler<ExtraService>;
} // namespace extra::svc

namespace extra::svc {
class ExtraServiceSvNull : public ::apache::thrift::ServiceHandler<ExtraService>, virtual public ::apache::thrift::ServiceHandler<::some::valid::ns::ParamService> {
 public:
  bool simple_function() override;
  bool throws_function2(bool /*param1*/) override;
  void throws_function3(::std::map<::std::int32_t, ::std::string>& /*_return*/, bool /*param1*/, const ::std::string& /*param2*/) override;
  void oneway_void_ret() override;
  void oneway_void_ret_i32_i32_i32_i32_i32_param(::std::int32_t /*param1*/, ::std::int32_t /*param2*/, ::std::int32_t /*param3*/, ::std::int32_t /*param4*/, ::std::int32_t /*param5*/) override;
  void oneway_void_ret_struct_param(const ::some::valid::ns::MyStruct& /*param1*/) override;
  void oneway_void_ret_listunion_param(const ::std::vector<::some::valid::ns::ComplexUnion>& /*param1*/) override;
};

class ExtraServiceAsyncProcessor : public ::some::valid::ns::ParamServiceAsyncProcessor {
 public:
  std::string_view getServiceName() override;
  void getServiceMetadata(apache::thrift::metadata::ThriftServiceMetadataResponse& response) override;
  using BaseAsyncProcessor = ::some::valid::ns::ParamServiceAsyncProcessor;
 protected:
  ::apache::thrift::ServiceHandler<::extra::svc::ExtraService>* iface_;
 public:
  void processSerializedCompressedRequestWithMetadata(apache::thrift::ResponseChannelRequest::UniquePtr req, apache::thrift::SerializedCompressedRequest&& serializedRequest, const apache::thrift::AsyncProcessorFactory::MethodMetadata& methodMetadata, apache::thrift::protocol::PROTOCOL_TYPES protType, apache::thrift::Cpp2RequestContext* context, folly::EventBase* eb, apache::thrift::concurrency::ThreadManager* tm) override;
  void executeRequest(apache::thrift::ServerRequest&& serverRequest, const apache::thrift::AsyncProcessorFactory::MethodMetadata& methodMetadata) override;
 public:
  using ProcessFuncs = GeneratedAsyncProcessorBase::ProcessFuncs<ExtraServiceAsyncProcessor>;
  using ProcessMap = GeneratedAsyncProcessorBase::ProcessMap<ProcessFuncs>;
  static const ExtraServiceAsyncProcessor::ProcessMap& getOwnProcessMap();
 private:
  static const ExtraServiceAsyncProcessor::ProcessMap kOwnProcessMap_;
 private:
  //
  // Service Methods
  //

  //
  // Method 'simple_function'
  //
  template <typename ProtocolIn_, typename ProtocolOut_>
  void setUpAndProcess_simple_function(
      apache::thrift::ResponseChannelRequest::UniquePtr req,
      apache::thrift::SerializedCompressedRequest&& serializedRequest,
      apache::thrift::Cpp2RequestContext* ctx,
      folly::EventBase* eb,
      apache::thrift::concurrency::ThreadManager* tm);

  template <typename ProtocolIn_, typename ProtocolOut_>
  void executeRequest_simple_function(apache::thrift::ServerRequest&& serverRequest);

  template <class ProtocolIn_, class ProtocolOut_>
  static apache::thrift::SerializedResponse return_simple_function(
      apache::thrift::ContextStack* ctx,
      bool const& _return);

  template <class ProtocolIn_, class ProtocolOut_>
  static void throw_wrapped_simple_function(
      apache::thrift::ResponseChannelRequest::UniquePtr req,
      int32_t protoSeqId,
      apache::thrift::ContextStack* ctx,
      folly::exception_wrapper ew,
      apache::thrift::Cpp2RequestContext* reqCtx);
  //
  // End of Method 'simple_function'
  //

  //
  // End of Service Methods
  //
  //
  // Service Methods
  //

  //
  // Method 'throws_function'
  //
  template <typename ProtocolIn_, typename ProtocolOut_>
  void setUpAndProcess_throws_function(
      apache::thrift::ResponseChannelRequest::UniquePtr req,
      apache::thrift::SerializedCompressedRequest&& serializedRequest,
      apache::thrift::Cpp2RequestContext* ctx,
      folly::EventBase* eb,
      apache::thrift::concurrency::ThreadManager* tm);

  template <typename ProtocolIn_, typename ProtocolOut_>
  void executeRequest_throws_function(apache::thrift::ServerRequest&& serverRequest);

  template <class ProtocolIn_, class ProtocolOut_>
  static apache::thrift::SerializedResponse return_throws_function(
      apache::thrift::ContextStack* ctx);

  template <class ProtocolIn_, class ProtocolOut_>
  static void throw_wrapped_throws_function(
      apache::thrift::ResponseChannelRequest::UniquePtr req,
      int32_t protoSeqId,
      apache::thrift::ContextStack* ctx,
      folly::exception_wrapper ew,
      apache::thrift::Cpp2RequestContext* reqCtx);
  //
  // End of Method 'throws_function'
  //

  //
  // End of Service Methods
  //
  //
  // Service Methods
  //

  //
  // Method 'throws_function2'
  //
  template <typename ProtocolIn_, typename ProtocolOut_>
  void setUpAndProcess_throws_function2(
      apache::thrift::ResponseChannelRequest::UniquePtr req,
      apache::thrift::SerializedCompressedRequest&& serializedRequest,
      apache::thrift::Cpp2RequestContext* ctx,
      folly::EventBase* eb,
      apache::thrift::concurrency::ThreadManager* tm);

  template <typename ProtocolIn_, typename ProtocolOut_>
  void executeRequest_throws_function2(apache::thrift::ServerRequest&& serverRequest);

  template <class ProtocolIn_, class ProtocolOut_>
  static apache::thrift::SerializedResponse return_throws_function2(
      apache::thrift::ContextStack* ctx,
      bool const& _return);

  template <class ProtocolIn_, class ProtocolOut_>
  static void throw_wrapped_throws_function2(
      apache::thrift::ResponseChannelRequest::UniquePtr req,
      int32_t protoSeqId,
      apache::thrift::ContextStack* ctx,
      folly::exception_wrapper ew,
      apache::thrift::Cpp2RequestContext* reqCtx);
  //
  // End of Method 'throws_function2'
  //

  //
  // End of Service Methods
  //
  //
  // Service Methods
  //

  //
  // Method 'throws_function3'
  //
  template <typename ProtocolIn_, typename ProtocolOut_>
  void setUpAndProcess_throws_function3(
      apache::thrift::ResponseChannelRequest::UniquePtr req,
      apache::thrift::SerializedCompressedRequest&& serializedRequest,
      apache::thrift::Cpp2RequestContext* ctx,
      folly::EventBase* eb,
      apache::thrift::concurrency::ThreadManager* tm);

  template <typename ProtocolIn_, typename ProtocolOut_>
  void executeRequest_throws_function3(apache::thrift::ServerRequest&& serverRequest);

  template <class ProtocolIn_, class ProtocolOut_>
  static apache::thrift::SerializedResponse return_throws_function3(
      apache::thrift::ContextStack* ctx,
      ::std::map<::std::int32_t, ::std::string> const& _return);

  template <class ProtocolIn_, class ProtocolOut_>
  static void throw_wrapped_throws_function3(
      apache::thrift::ResponseChannelRequest::UniquePtr req,
      int32_t protoSeqId,
      apache::thrift::ContextStack* ctx,
      folly::exception_wrapper ew,
      apache::thrift::Cpp2RequestContext* reqCtx);
  //
  // End of Method 'throws_function3'
  //

  //
  // End of Service Methods
  //
  //
  // Service Methods
  //

  //
  // Method 'oneway_void_ret'
  //
  template <typename ProtocolIn_, typename ProtocolOut_>
  void setUpAndProcess_oneway_void_ret(
      apache::thrift::ResponseChannelRequest::UniquePtr req,
      apache::thrift::SerializedCompressedRequest&& serializedRequest,
      apache::thrift::Cpp2RequestContext* ctx,
      folly::EventBase* eb,
      apache::thrift::concurrency::ThreadManager* tm);

  template <typename ProtocolIn_, typename ProtocolOut_>
  void executeRequest_oneway_void_ret(apache::thrift::ServerRequest&& serverRequest);

  //
  // End of Method 'oneway_void_ret'
  //

  //
  // End of Service Methods
  //
  //
  // Service Methods
  //

  //
  // Method 'oneway_void_ret_i32_i32_i32_i32_i32_param'
  //
  template <typename ProtocolIn_, typename ProtocolOut_>
  void setUpAndProcess_oneway_void_ret_i32_i32_i32_i32_i32_param(
      apache::thrift::ResponseChannelRequest::UniquePtr req,
      apache::thrift::SerializedCompressedRequest&& serializedRequest,
      apache::thrift::Cpp2RequestContext* ctx,
      folly::EventBase* eb,
      apache::thrift::concurrency::ThreadManager* tm);

  template <typename ProtocolIn_, typename ProtocolOut_>
  void executeRequest_oneway_void_ret_i32_i32_i32_i32_i32_param(apache::thrift::ServerRequest&& serverRequest);

  //
  // End of Method 'oneway_void_ret_i32_i32_i32_i32_i32_param'
  //

  //
  // End of Service Methods
  //
  //
  // Service Methods
  //

  //
  // Method 'oneway_void_ret_map_setlist_param'
  //
  template <typename ProtocolIn_, typename ProtocolOut_>
  void setUpAndProcess_oneway_void_ret_map_setlist_param(
      apache::thrift::ResponseChannelRequest::UniquePtr req,
      apache::thrift::SerializedCompressedRequest&& serializedRequest,
      apache::thrift::Cpp2RequestContext* ctx,
      folly::EventBase* eb,
      apache::thrift::concurrency::ThreadManager* tm);

  template <typename ProtocolIn_, typename ProtocolOut_>
  void executeRequest_oneway_void_ret_map_setlist_param(apache::thrift::ServerRequest&& serverRequest);

  //
  // End of Method 'oneway_void_ret_map_setlist_param'
  //

  //
  // End of Service Methods
  //
  //
  // Service Methods
  //

  //
  // Method 'oneway_void_ret_struct_param'
  //
  template <typename ProtocolIn_, typename ProtocolOut_>
  void setUpAndProcess_oneway_void_ret_struct_param(
      apache::thrift::ResponseChannelRequest::UniquePtr req,
      apache::thrift::SerializedCompressedRequest&& serializedRequest,
      apache::thrift::Cpp2RequestContext* ctx,
      folly::EventBase* eb,
      apache::thrift::concurrency::ThreadManager* tm);

  template <typename ProtocolIn_, typename ProtocolOut_>
  void executeRequest_oneway_void_ret_struct_param(apache::thrift::ServerRequest&& serverRequest);

  //
  // End of Method 'oneway_void_ret_struct_param'
  //

  //
  // End of Service Methods
  //
  //
  // Service Methods
  //

  //
  // Method 'oneway_void_ret_listunion_param'
  //
  template <typename ProtocolIn_, typename ProtocolOut_>
  void setUpAndProcess_oneway_void_ret_listunion_param(
      apache::thrift::ResponseChannelRequest::UniquePtr req,
      apache::thrift::SerializedCompressedRequest&& serializedRequest,
      apache::thrift::Cpp2RequestContext* ctx,
      folly::EventBase* eb,
      apache::thrift::concurrency::ThreadManager* tm);

  template <typename ProtocolIn_, typename ProtocolOut_>
  void executeRequest_oneway_void_ret_listunion_param(apache::thrift::ServerRequest&& serverRequest);

  //
  // End of Method 'oneway_void_ret_listunion_param'
  //

  //
  // End of Service Methods
  //
 public:
  ExtraServiceAsyncProcessor(::apache::thrift::ServiceHandler<::extra::svc::ExtraService>* iface) :
      ::some::valid::ns::ParamServiceAsyncProcessor(iface),
      iface_(iface) {}
  ~ExtraServiceAsyncProcessor() override {}
};

} // namespace extra::svc
