(*
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the "hack" directory of this source tree.
 *
 *)

module LMap = Local_id.Map

type mode =
  | FlagTargets
      (** Flag all possible targets, e.g., `dict['k1' => 42, 'k2' =>
          'meaning']` without performing any analysis *)
  | DumpConstraints  (** Dump constraints generated by analysing the program *)
  | SolveConstraints
      (** Solve the key constraints and report back `dict`s that can be
          `shape`s along with the `shape` keys *)

type options = { mode: mode }

type entity_ = Literal of Pos.t

type entity = entity_ option

type constraint_ =
  | Exists of entity_  (** Records existence of a dict *)
  | Has_static_key of entity_ * Tast.expr_ * Typing_defs.locl_ty
      (** Records the static key an entity is accessed with along with the Hack
          type of the key *)
  | Has_dynamic_key of entity_
      (** Records that an entity is accessed with a dynamic key *)

type env = {
  constraints: constraint_ list;  (** Append-only set of constraints *)
  lenv: entity LMap.t;  (** Local variable information *)
}
