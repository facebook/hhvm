Errors:
  [4:38-40] Please add a type hint `public SomeType $x`
  [4:38-40] Was expecting a type hint
[(Class
    { c_span = [3:1-5:2]; c_annotation = (); c_mode = Mstrict; c_final = false; 
      c_is_xhp = false; c_has_xhp_keyword = false; c_kind = (Cclass Concrete); 
      c_name = ([3:7-8], "\\A"); c_tparams = []; c_extends = []; c_uses = []; 
      c_xhp_attr_uses = []; c_xhp_category = None; c_reqs = []; c_implements = []; 
      c_where_constraints = []; c_consts = []; c_typeconsts = [];
      c_vars =
      [{ cv_final = false; cv_xhp_attr = None; cv_abstract = false; cv_readonly = false; 
         cv_visibility = Public; cv_type = ((int), None); cv_id = ([4:38-40], "x"); 
         cv_expr = None; cv_user_attributes = []; cv_doc_comment = None; 
         cv_is_promoted_variadic = false; cv_is_static = false; cv_span = [4:38-44] }
        ];
      c_methods =
      [{ m_span = [4:3-48]; m_annotation = (); m_final = false; m_abstract = false; 
         m_static = false; m_readonly_this = false; m_visibility = Public; 
         m_name = ([4:19-30], "__construct"); m_tparams = []; m_where_constraints = [];
         m_params =
         [{ param_annotation = (int); param_type_hint = ((int), None); 
            param_is_variadic = false; param_pos = [4:38-40]; param_name = "$x"; 
            param_expr = (Some ((int), [4:43-44], (Int "3"))); param_readonly = None; 
            param_callconv = Pnormal; param_user_attributes = []; param_visibility = (Some Public) }
           ];
         m_ctxs = None; m_unsafe_ctxs = None;
         m_body =
         { fb_ast =
           [([4:38-40],
             (Expr
                ((int), [4:38-40],
                 (Binop
                    { bop = (Eq None); lhs = ((int), [4:38-40], (Obj_get (((this), [4:38-40], This), ((int), [4:38-40], (Id ([4:38-40], "x"))), OG_nullthrows, Is_prop)));
                      rhs = ((int), [4:38-40], (Lvar ([4:38-40], $x))) }))));
             ([Pos.none], Noop)]
           };
         m_fun_kind = FSync; m_user_attributes = []; m_readonly_ret = None; 
         m_ret = ((void), (Some ([4:19-30], (Hprim Tvoid)))); m_external = false; 
         m_doc_comment = None }
        ];
      c_xhp_children = []; c_xhp_attrs = [];
      c_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      c_user_attributes = []; c_file_attributes = []; c_docs_url = None; 
      c_enum = None; c_doc_comment = None; c_emit_id = None; c_internal = false; 
      c_module = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([7:10-13], "\\foo");
       fd_fun =
       { f_span = [7:1-30]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([7:23-27], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = (int); param_type_hint = ((int), (Some ([7:14-17], (Hprim Tint)))); 
            param_is_variadic = false; param_pos = [7:18-20]; param_name = "$_"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([Pos.none], Noop)] }; 
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([9:10-13], "\\bar");
       fd_fun =
       { f_span = [9:1-13:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([9:17-21], (Hprim Tvoid)))); 
         f_params = []; f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([10:3-19],
             (Expr
                ((A), [10:3-18],
                 (Binop
                    { bop = (Eq None); lhs = ((A), [10:3-7], (Lvar ([10:3-7], $obj)));
                      rhs = ((A), [10:10-18], (New (((A), [10:14-15], (CI ([10:14-15], "\\A"))), [], [((int), [10:16-17], (Int "1"))], None, ((function(int $x = _): void))))) }))));
             ([11:3-16],
              (Expr
                 ((int), [11:3-15],
                  (Binop
                     { bop = (Eq None); lhs = ((int), [11:3-5], (Lvar ([11:3-5], $x)));
                       rhs = ((int), [11:8-15], (Obj_get (((A), [11:8-12], (Lvar ([11:8-12], $obj))), ((int), [11:14-15], (Id ([11:14-15], "x"))), OG_nullthrows, Is_prop))) }))));
             ([12:3-11], (Expr ((void), [12:3-10], (Call ((((function(int $_): void)), [12:3-6], (Id ([12:3-6], "\\foo"))), [], [(Pnormal, ((int), [12:7-9], (Lvar ([12:7-9], $x))))], None)))))]
           };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] })