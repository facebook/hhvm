
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT
 *  @generated
 *
 */

#include <folly/python/import.h>
#include <thrift/lib/python/capi/iobuf.h>
#include <thrift/lib/python/types.h>

#include <thrift/compiler/test/fixtures/inject_metadata_fields/gen-python-capi/module/thrift_types_api.h>
#include <thrift/compiler/test/fixtures/inject_metadata_fields/gen-python-capi/module/thrift_types_capi.h>

#include "thrift/compiler/test/fixtures/inject_metadata_fields/gen-python-capi/foo/thrift_types_capi.h"

namespace apache::thrift::python::capi {
namespace {
bool ensure_module_imported() {
  static ::folly::python::import_cache_nocapture import((
      ::import_module__thrift_types_capi));
  return import();
}
  static constexpr std::int16_t _fbthrift__Fields__tuple_pos[1] = {
    1
  };
  static constexpr std::int16_t _fbthrift__FieldsInjectedToEmptyStruct__tuple_pos[1] = {
    1
  };
  static constexpr std::int16_t _fbthrift__FieldsInjectedToStruct__tuple_pos[2] = {
    2, 1
  };
  static constexpr std::int16_t _fbthrift__FieldsInjectedWithIncludedStruct__tuple_pos[4] = {
    4, 3, 2, 1
  };
  static constexpr std::int16_t _fbthrift__FieldsInjectedWithFieldsWithIncludedStruct__tuple_pos[2] = {
    2, 1
  };
} // namespace

ExtractorResult<::cpp2::Fields>
Extractor<::apache::thrift::python::capi::PythonNamespaced<::cpp2::Fields, ::module::NamespaceTag>>::operator()(PyObject* obj) {
  int tCheckResult = typeCheck(obj);
  if (tCheckResult != 1) {
      if (tCheckResult == 0) {
        PyErr_SetString(PyExc_TypeError, "Not a Fields");
      }
      return extractorError<::cpp2::Fields>(
          "Marshal error: Fields");
  }
  StrongRef fbThriftData(getThriftData(obj));
  return Extractor<::apache::thrift::python::capi::ComposedStruct<
      ::cpp2::Fields, ::module::NamespaceTag>>{}(*fbThriftData);
}

ExtractorResult<::cpp2::Fields>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::Fields, ::module::NamespaceTag>>::operator()(PyObject* fbThriftData) {
  ::cpp2::Fields cpp;
  std::optional<std::string_view> error;
  Extractor<::apache::thrift::python::capi::FallibleString>{}.extractInto(
      cpp.injected_field_ref(),
      PyTuple_GET_ITEM(fbThriftData, _fbthrift__Fields__tuple_pos[0]),
      error);
  if (error) {
    return folly::makeUnexpected(*error);
  }
  return cpp;
}


int Extractor<::apache::thrift::python::capi::PythonNamespaced<::cpp2::Fields, ::module::NamespaceTag>>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__Fields(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: Fields");
  }
  return result;
}


PyObject* Constructor<::apache::thrift::python::capi::PythonNamespaced<::cpp2::Fields, ::module::NamespaceTag>>::operator()(
    const ::cpp2::Fields& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::Fields, ::module::NamespaceTag>> ctor;
  StrongRef fbthrift_data(ctor(val));
  if (!fbthrift_data) {
    return nullptr;
  }
  return init__module__Fields(*fbthrift_data);
}

PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::Fields, ::module::NamespaceTag>>::operator()(
    [[maybe_unused]] const ::cpp2::Fields& val) {
  StrongRef fbthrift_data(createStructTuple(1));
  StrongRef _fbthrift__injected_field(
    Constructor<::apache::thrift::python::capi::FallibleString>{}
    .constructFrom(val.injected_field_ref()));
  if (!_fbthrift__injected_field ||
      setStructField(
          *fbthrift_data,
          _fbthrift__Fields__tuple_pos[0],
          *_fbthrift__injected_field) == -1) {
    return nullptr;
  }
  return std::move(fbthrift_data).release();
}


ExtractorResult<::cpp2::FieldsInjectedToEmptyStruct>
Extractor<::apache::thrift::python::capi::PythonNamespaced<::cpp2::FieldsInjectedToEmptyStruct, ::module::NamespaceTag>>::operator()(PyObject* obj) {
  int tCheckResult = typeCheck(obj);
  if (tCheckResult != 1) {
      if (tCheckResult == 0) {
        PyErr_SetString(PyExc_TypeError, "Not a FieldsInjectedToEmptyStruct");
      }
      return extractorError<::cpp2::FieldsInjectedToEmptyStruct>(
          "Marshal error: FieldsInjectedToEmptyStruct");
  }
  StrongRef fbThriftData(getThriftData(obj));
  return Extractor<::apache::thrift::python::capi::ComposedStruct<
      ::cpp2::FieldsInjectedToEmptyStruct, ::module::NamespaceTag>>{}(*fbThriftData);
}

ExtractorResult<::cpp2::FieldsInjectedToEmptyStruct>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::FieldsInjectedToEmptyStruct, ::module::NamespaceTag>>::operator()(PyObject* fbThriftData) {
  ::cpp2::FieldsInjectedToEmptyStruct cpp;
  std::optional<std::string_view> error;
  Extractor<::apache::thrift::python::capi::FallibleString>{}.extractInto(
      cpp.injected_field_ref(),
      PyTuple_GET_ITEM(fbThriftData, _fbthrift__FieldsInjectedToEmptyStruct__tuple_pos[0]),
      error);
  if (error) {
    return folly::makeUnexpected(*error);
  }
  return cpp;
}


int Extractor<::apache::thrift::python::capi::PythonNamespaced<::cpp2::FieldsInjectedToEmptyStruct, ::module::NamespaceTag>>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__FieldsInjectedToEmptyStruct(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: FieldsInjectedToEmptyStruct");
  }
  return result;
}


PyObject* Constructor<::apache::thrift::python::capi::PythonNamespaced<::cpp2::FieldsInjectedToEmptyStruct, ::module::NamespaceTag>>::operator()(
    const ::cpp2::FieldsInjectedToEmptyStruct& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedToEmptyStruct, ::module::NamespaceTag>> ctor;
  StrongRef fbthrift_data(ctor(val));
  if (!fbthrift_data) {
    return nullptr;
  }
  return init__module__FieldsInjectedToEmptyStruct(*fbthrift_data);
}

PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedToEmptyStruct, ::module::NamespaceTag>>::operator()(
    [[maybe_unused]] const ::cpp2::FieldsInjectedToEmptyStruct& val) {
  StrongRef fbthrift_data(createStructTuple(1));
  StrongRef _fbthrift__injected_field(
    Constructor<::apache::thrift::python::capi::FallibleString>{}
    .constructFrom(val.injected_field_ref()));
  if (!_fbthrift__injected_field ||
      setStructField(
          *fbthrift_data,
          _fbthrift__FieldsInjectedToEmptyStruct__tuple_pos[0],
          *_fbthrift__injected_field) == -1) {
    return nullptr;
  }
  return std::move(fbthrift_data).release();
}


ExtractorResult<::cpp2::FieldsInjectedToStruct>
Extractor<::apache::thrift::python::capi::PythonNamespaced<::cpp2::FieldsInjectedToStruct, ::module::NamespaceTag>>::operator()(PyObject* obj) {
  int tCheckResult = typeCheck(obj);
  if (tCheckResult != 1) {
      if (tCheckResult == 0) {
        PyErr_SetString(PyExc_TypeError, "Not a FieldsInjectedToStruct");
      }
      return extractorError<::cpp2::FieldsInjectedToStruct>(
          "Marshal error: FieldsInjectedToStruct");
  }
  StrongRef fbThriftData(getThriftData(obj));
  return Extractor<::apache::thrift::python::capi::ComposedStruct<
      ::cpp2::FieldsInjectedToStruct, ::module::NamespaceTag>>{}(*fbThriftData);
}

ExtractorResult<::cpp2::FieldsInjectedToStruct>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::FieldsInjectedToStruct, ::module::NamespaceTag>>::operator()(PyObject* fbThriftData) {
  ::cpp2::FieldsInjectedToStruct cpp;
  std::optional<std::string_view> error;
  Extractor<::apache::thrift::python::capi::FallibleString>{}.extractInto(
      cpp.string_field_ref(),
      PyTuple_GET_ITEM(fbThriftData, _fbthrift__FieldsInjectedToStruct__tuple_pos[0]),
      error);
  Extractor<::apache::thrift::python::capi::FallibleString>{}.extractInto(
      cpp.injected_field_ref(),
      PyTuple_GET_ITEM(fbThriftData, _fbthrift__FieldsInjectedToStruct__tuple_pos[1]),
      error);
  if (error) {
    return folly::makeUnexpected(*error);
  }
  return cpp;
}


int Extractor<::apache::thrift::python::capi::PythonNamespaced<::cpp2::FieldsInjectedToStruct, ::module::NamespaceTag>>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__FieldsInjectedToStruct(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: FieldsInjectedToStruct");
  }
  return result;
}


PyObject* Constructor<::apache::thrift::python::capi::PythonNamespaced<::cpp2::FieldsInjectedToStruct, ::module::NamespaceTag>>::operator()(
    const ::cpp2::FieldsInjectedToStruct& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedToStruct, ::module::NamespaceTag>> ctor;
  StrongRef fbthrift_data(ctor(val));
  if (!fbthrift_data) {
    return nullptr;
  }
  return init__module__FieldsInjectedToStruct(*fbthrift_data);
}

PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedToStruct, ::module::NamespaceTag>>::operator()(
    [[maybe_unused]] const ::cpp2::FieldsInjectedToStruct& val) {
  StrongRef fbthrift_data(createStructTuple(2));
  StrongRef _fbthrift__string_field(
    Constructor<::apache::thrift::python::capi::FallibleString>{}
    .constructFrom(val.string_field_ref()));
  if (!_fbthrift__string_field ||
      setStructField(
          *fbthrift_data,
          _fbthrift__FieldsInjectedToStruct__tuple_pos[0],
          *_fbthrift__string_field) == -1) {
    return nullptr;
  }
  StrongRef _fbthrift__injected_field(
    Constructor<::apache::thrift::python::capi::FallibleString>{}
    .constructFrom(val.injected_field_ref()));
  if (!_fbthrift__injected_field ||
      setStructField(
          *fbthrift_data,
          _fbthrift__FieldsInjectedToStruct__tuple_pos[1],
          *_fbthrift__injected_field) == -1) {
    return nullptr;
  }
  return std::move(fbthrift_data).release();
}


ExtractorResult<::cpp2::FieldsInjectedWithIncludedStruct>
Extractor<::apache::thrift::python::capi::PythonNamespaced<::cpp2::FieldsInjectedWithIncludedStruct, ::module::NamespaceTag>>::operator()(PyObject* obj) {
  int tCheckResult = typeCheck(obj);
  if (tCheckResult != 1) {
      if (tCheckResult == 0) {
        PyErr_SetString(PyExc_TypeError, "Not a FieldsInjectedWithIncludedStruct");
      }
      return extractorError<::cpp2::FieldsInjectedWithIncludedStruct>(
          "Marshal error: FieldsInjectedWithIncludedStruct");
  }
  StrongRef fbThriftData(getThriftData(obj));
  return Extractor<::apache::thrift::python::capi::ComposedStruct<
      ::cpp2::FieldsInjectedWithIncludedStruct, ::module::NamespaceTag>>{}(*fbThriftData);
}

ExtractorResult<::cpp2::FieldsInjectedWithIncludedStruct>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::FieldsInjectedWithIncludedStruct, ::module::NamespaceTag>>::operator()(PyObject* fbThriftData) {
  ::cpp2::FieldsInjectedWithIncludedStruct cpp;
  std::optional<std::string_view> error;
  Extractor<::apache::thrift::python::capi::FallibleString>{}.extractInto(
      cpp.string_field_ref(),
      PyTuple_GET_ITEM(fbThriftData, _fbthrift__FieldsInjectedWithIncludedStruct__tuple_pos[0]),
      error);
  Extractor<::apache::thrift::python::capi::FallibleString>{}.extractInto(
      cpp.injected_field_ref(),
      PyTuple_GET_ITEM(fbThriftData, _fbthrift__FieldsInjectedWithIncludedStruct__tuple_pos[1]),
      error);
  Extractor<::apache::thrift::python::capi::FallibleString>{}.extractInto(
      cpp.injected_structured_annotation_field_ref(),
      PyTuple_GET_ITEM(fbThriftData, _fbthrift__FieldsInjectedWithIncludedStruct__tuple_pos[2]),
      error);
  Extractor<::apache::thrift::python::capi::FallibleString>{}.extractInto(
      cpp.injected_unstructured_annotation_field_ref(),
      PyTuple_GET_ITEM(fbThriftData, _fbthrift__FieldsInjectedWithIncludedStruct__tuple_pos[3]),
      error);
  if (error) {
    return folly::makeUnexpected(*error);
  }
  return cpp;
}


int Extractor<::apache::thrift::python::capi::PythonNamespaced<::cpp2::FieldsInjectedWithIncludedStruct, ::module::NamespaceTag>>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__FieldsInjectedWithIncludedStruct(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: FieldsInjectedWithIncludedStruct");
  }
  return result;
}


PyObject* Constructor<::apache::thrift::python::capi::PythonNamespaced<::cpp2::FieldsInjectedWithIncludedStruct, ::module::NamespaceTag>>::operator()(
    const ::cpp2::FieldsInjectedWithIncludedStruct& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedWithIncludedStruct, ::module::NamespaceTag>> ctor;
  StrongRef fbthrift_data(ctor(val));
  if (!fbthrift_data) {
    return nullptr;
  }
  return init__module__FieldsInjectedWithIncludedStruct(*fbthrift_data);
}

PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedWithIncludedStruct, ::module::NamespaceTag>>::operator()(
    [[maybe_unused]] const ::cpp2::FieldsInjectedWithIncludedStruct& val) {
  StrongRef fbthrift_data(createStructTuple(4));
  StrongRef _fbthrift__string_field(
    Constructor<::apache::thrift::python::capi::FallibleString>{}
    .constructFrom(val.string_field_ref()));
  if (!_fbthrift__string_field ||
      setStructField(
          *fbthrift_data,
          _fbthrift__FieldsInjectedWithIncludedStruct__tuple_pos[0],
          *_fbthrift__string_field) == -1) {
    return nullptr;
  }
  StrongRef _fbthrift__injected_field(
    Constructor<::apache::thrift::python::capi::FallibleString>{}
    .constructFrom(val.injected_field_ref()));
  if (!_fbthrift__injected_field ||
      setStructField(
          *fbthrift_data,
          _fbthrift__FieldsInjectedWithIncludedStruct__tuple_pos[1],
          *_fbthrift__injected_field) == -1) {
    return nullptr;
  }
  StrongRef _fbthrift__injected_structured_annotation_field(
    Constructor<::apache::thrift::python::capi::FallibleString>{}
    .constructFrom(val.injected_structured_annotation_field_ref()));
  if (_fbthrift__injected_structured_annotation_field.isNone()) {
    Py_INCREF(Py_None);
    PyTuple_SET_ITEM(
      *fbthrift_data,
      _fbthrift__FieldsInjectedWithIncludedStruct__tuple_pos[2],
      Py_None);
  } else
  if (!_fbthrift__injected_structured_annotation_field ||
      setStructField(
          *fbthrift_data,
          _fbthrift__FieldsInjectedWithIncludedStruct__tuple_pos[2],
          *_fbthrift__injected_structured_annotation_field) == -1) {
    return nullptr;
  }
  StrongRef _fbthrift__injected_unstructured_annotation_field(
    Constructor<::apache::thrift::python::capi::FallibleString>{}
    .constructFrom(val.injected_unstructured_annotation_field_ref()));
  if (_fbthrift__injected_unstructured_annotation_field.isNone()) {
    Py_INCREF(Py_None);
    PyTuple_SET_ITEM(
      *fbthrift_data,
      _fbthrift__FieldsInjectedWithIncludedStruct__tuple_pos[3],
      Py_None);
  } else
  if (!_fbthrift__injected_unstructured_annotation_field ||
      setStructField(
          *fbthrift_data,
          _fbthrift__FieldsInjectedWithIncludedStruct__tuple_pos[3],
          *_fbthrift__injected_unstructured_annotation_field) == -1) {
    return nullptr;
  }
  return std::move(fbthrift_data).release();
}


ExtractorResult<::cpp2::FieldsInjectedWithFieldsWithIncludedStruct>
Extractor<::apache::thrift::python::capi::PythonNamespaced<::cpp2::FieldsInjectedWithFieldsWithIncludedStruct, ::module::NamespaceTag>>::operator()(PyObject* obj) {
  int tCheckResult = typeCheck(obj);
  if (tCheckResult != 1) {
      if (tCheckResult == 0) {
        PyErr_SetString(PyExc_TypeError, "Not a FieldsInjectedWithFieldsWithIncludedStruct");
      }
      return extractorError<::cpp2::FieldsInjectedWithFieldsWithIncludedStruct>(
          "Marshal error: FieldsInjectedWithFieldsWithIncludedStruct");
  }
  StrongRef fbThriftData(getThriftData(obj));
  return Extractor<::apache::thrift::python::capi::ComposedStruct<
      ::cpp2::FieldsInjectedWithFieldsWithIncludedStruct, ::module::NamespaceTag>>{}(*fbThriftData);
}

ExtractorResult<::cpp2::FieldsInjectedWithFieldsWithIncludedStruct>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::FieldsInjectedWithFieldsWithIncludedStruct, ::module::NamespaceTag>>::operator()(PyObject* fbThriftData) {
  ::cpp2::FieldsInjectedWithFieldsWithIncludedStruct cpp;
  std::optional<std::string_view> error;
  Extractor<::apache::thrift::python::capi::FallibleString>{}.extractInto(
      cpp.string_field_ref(),
      PyTuple_GET_ITEM(fbThriftData, _fbthrift__FieldsInjectedWithFieldsWithIncludedStruct__tuple_pos[0]),
      error);
  Extractor<::apache::thrift::python::capi::ComposedStruct<::cpp2::InjectedField, ::injected_field::NamespaceTag>>{}.extractInto(
      cpp.injected_field_ref(),
      PyTuple_GET_ITEM(fbThriftData, _fbthrift__FieldsInjectedWithFieldsWithIncludedStruct__tuple_pos[1]),
      error);
  if (error) {
    return folly::makeUnexpected(*error);
  }
  return cpp;
}


int Extractor<::apache::thrift::python::capi::PythonNamespaced<::cpp2::FieldsInjectedWithFieldsWithIncludedStruct, ::module::NamespaceTag>>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__FieldsInjectedWithFieldsWithIncludedStruct(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: FieldsInjectedWithFieldsWithIncludedStruct");
  }
  return result;
}


PyObject* Constructor<::apache::thrift::python::capi::PythonNamespaced<::cpp2::FieldsInjectedWithFieldsWithIncludedStruct, ::module::NamespaceTag>>::operator()(
    const ::cpp2::FieldsInjectedWithFieldsWithIncludedStruct& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedWithFieldsWithIncludedStruct, ::module::NamespaceTag>> ctor;
  StrongRef fbthrift_data(ctor(val));
  if (!fbthrift_data) {
    return nullptr;
  }
  return init__module__FieldsInjectedWithFieldsWithIncludedStruct(*fbthrift_data);
}

PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedWithFieldsWithIncludedStruct, ::module::NamespaceTag>>::operator()(
    [[maybe_unused]] const ::cpp2::FieldsInjectedWithFieldsWithIncludedStruct& val) {
  StrongRef fbthrift_data(createStructTuple(2));
  StrongRef _fbthrift__string_field(
    Constructor<::apache::thrift::python::capi::FallibleString>{}
    .constructFrom(val.string_field_ref()));
  if (!_fbthrift__string_field ||
      setStructField(
          *fbthrift_data,
          _fbthrift__FieldsInjectedWithFieldsWithIncludedStruct__tuple_pos[0],
          *_fbthrift__string_field) == -1) {
    return nullptr;
  }
  StrongRef _fbthrift__injected_field(
    Constructor<::apache::thrift::python::capi::ComposedStruct<::cpp2::InjectedField, ::injected_field::NamespaceTag>>{}
    .constructFrom(val.injected_field_ref()));
  if (!_fbthrift__injected_field ||
      setStructField(
          *fbthrift_data,
          _fbthrift__FieldsInjectedWithFieldsWithIncludedStruct__tuple_pos[1],
          *_fbthrift__injected_field) == -1) {
    return nullptr;
  }
  return std::move(fbthrift_data).release();
}


} // namespace apache::thrift::python::capi
