{{!

  Copyright (c) Meta Platforms, Inc. and affiliates.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

}}{{#pragma ignore-newlines}}
_fbthrift_metadata.ThriftConstValue(
  {{#if value:bool?}}
cv_bool={{#if value:nonzero?}}True{{#else}}False{{/if}}
  {{#else if (or value:integer? value:enum?)}}
cv_integer={{value:integer_value}}
  {{#else if value:double?}}
cv_double={{value:double_value}}
  {{#else if value:string?}}
cv_string="{{value:string_value}}"
  {{#else if value:const_struct?}}
    {{! Const struct is a map const value in IDL (where the keys are field names), but
        with a const type that is a struct/union rather than map<k,v>. Therefore, we
        need to test it before `value:map?`, because it is also a map. }}
cv_struct={{> metadata/const_struct }}
  {{#else if value:map?}}
cv_map=[
    {{#each value:map_elements as |map_elem|}}
_fbthrift_metadata.ThriftConstValuePair(
key={{#map_elem.key}}{{> metadata/const_value }}{{/map_elem.key}}, {{!}}
value={{#map_elem.value}}{{> metadata/const_value }}{{/map_elem.value}}
), {{!}}
    {{/each}}
]
  {{#else if value:list?}}
cv_list=[{{#value:list_elements}}{{> metadata/const_value }}, {{/value:list_elements}}]
  {{/if value:bool?}}
)
