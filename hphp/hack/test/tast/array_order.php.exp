[(Fun
    { f_span = [12:1-15:2]; f_annotation = (); f_mode = Mpartial;
      f_ret = ((void), (Some ([12:18-22], (Hprim Tvoid))));
      f_name = ([12:10-14], "\\test"); f_tparams = [];
      f_where_constraints = []; f_variadic = FVnonVariadic; f_params = [];
      f_body =
      { fb_ast =
        [([13:3-51],
          (Expr
             (([13:3-50], darray<string, _>),
              (Binop ((Eq None),
                 (([13:3-5], darray<string, _>), (Lvar ([13:3-5], $x))),
                 (([13:8-50], darray<string, _>),
                  (Array
                     [(AFkvalue ((([13:14-17], string), (String "k")),
                         (([13:21-22], int), (Int "0"))));
                       (AFkvalue ((([13:24-28], string), (String "k2")),
                          (([13:32-49], _),
                           (Call (Cnormal,
                              (([13:32-47], (function(): _)),
                               (Id ([13:32-47], "\\my_php_function"))),
                              [], [], None)))
                          ))
                       ]))
                 )))));
          ([14:3-36],
           (Expr
              (([14:3-35], varray<_>),
               (Binop ((Eq None),
                  (([14:3-5], varray<_>), (Lvar ([14:3-5], $y))),
                  (([14:8-35], varray<_>),
                   (Array
                      [(AFvalue (([14:14-15], int), (Int "0")));
                        (AFvalue
                           (([14:17-34], _),
                            (Call (Cnormal,
                               (([14:17-32], (function(): _)),
                                (Id ([14:17-32], "\\my_php_function"))),
                               [], [], None))))
                        ]))
                  )))))
          ];
        fb_annotation = No unsafe blocks };
      f_fun_kind = FSync; f_user_attributes = []; f_file_attributes = [];
      f_external = false;
      f_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
        ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
        ns_const_uses = <opaque>; ns_name = None; ns_auto_ns_map = [];
        ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      f_doc_comment =
      (Some "/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the \"hack\" directory of this source tree.\n *\n *\n */");
      f_static = false });
  (Fun
     { f_span = [17:1-30]; f_annotation = (); f_mode = Mpartial;
       f_ret = ((_), None); f_name = ([17:10-25], "\\my_php_function");
       f_tparams = []; f_where_constraints = []; f_variadic = FVnonVariadic;
       f_params = [];
       f_body =
       { fb_ast = [([Pos.none], Noop)]; fb_annotation = No unsafe blocks };
       f_fun_kind = FSync; f_user_attributes = []; f_file_attributes = [];
       f_external = false;
       f_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
         ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
         ns_const_uses = <opaque>; ns_name = None; ns_auto_ns_map = [];
         ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       f_doc_comment = None; f_static = false })
  ]
