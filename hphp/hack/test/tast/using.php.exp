[(Fun
    { Aast.AnnotatedAST.f_annotation = (); f_mode = <opaque>;
      f_ret = (Some ([7:18-22], (Hprim Tvoid)));
      f_name = ([7:10-14], "\\test"); f_tparams = [];
      f_where_constraints = []; f_variadic = FVnonVariadic; f_params = [];
      f_body =
      (NamedBody
         { Aast.AnnotatedAST.fnb_nast =
           [(Using (false,
               (([8:10-46], (Handle, Handle)),
                (Expr_list
                   [(([8:10-27], Handle),
                     (Binop ((Eq None),
                        (([8:10-12], Handle), (Lvar ([8:10-12], $x))),
                        (([8:15-27], Handle),
                         (New (
                            (([8:19-25], Handle),
                             (CI (([8:19-25], "\\Handle"), []))),
                            [], [])))
                        )));
                     (([8:29-46], Handle),
                      (Binop ((Eq None),
                         (([8:29-31], Handle), (Lvar ([8:29-31], $y))),
                         (([8:34-46], Handle),
                          (New (
                             (([8:38-44], Handle),
                              (CI (([8:38-44], "\\Handle"), []))),
                             [], [])))
                         )))
                     ])),
               [(Using (false,
                   (([9:12-29], (Handle)),
                    (Expr_list
                       [(([9:12-29], Handle),
                         (Binop ((Eq None),
                            (([9:12-14], Handle), (Lvar ([9:12-14], $z))),
                            (([9:17-29], Handle),
                             (New (
                                (([9:21-27], Handle),
                                 (CI (([9:21-27], "\\Handle"), []))),
                                [], [])))
                            )))
                         ])),
                   [Noop]))
                 ]
               ))
             ];
           fnb_unsafe = false });
      f_fun_kind = FSync; f_user_attributes = []; f_ret_by_ref = false;
      f_external = false });
  (Class
     { Aast.AnnotatedAST.c_annotation = (); c_mode = <opaque>;
       c_final = false; c_is_xhp = false; c_kind = Cnormal;
       c_name = ([3:7-13], "\\Handle"); c_tparams = <opaque>; c_extends = [];
       c_uses = []; c_xhp_attr_uses = []; c_xhp_category = [];
       c_req_extends = []; c_req_implements = [];
       c_implements =
       [([3:25-36], (Happly (([3:25-36], "\\IDisposable"), [])))];
       c_consts = []; c_typeconsts = []; c_static_vars = []; c_vars = [];
       c_constructor = None; c_static_methods = [];
       c_methods =
       [{ Aast.AnnotatedAST.m_annotation = (); m_final = false;
          m_abstract = false; m_visibility = Public;
          m_name = ([4:19-28], "__dispose"); m_tparams = [];
          m_where_constraints = []; m_variadic = FVnonVariadic;
          m_params = [];
          m_body =
          (NamedBody
             { Aast.AnnotatedAST.fnb_nast = [Noop]; fnb_unsafe = false });
          m_fun_kind = FSync; m_user_attributes = [];
          m_ret = (Some ([4:32-36], (Hprim Tvoid))); m_ret_by_ref = false;
          m_external = false }
         ];
       c_user_attributes = []; c_enum = None })
  ]
