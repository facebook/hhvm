/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package test.fixtures.adapter;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.thrift.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ReorderedStruct", builder=ReorderedStruct.Builder.class)
public final class ReorderedStruct implements com.facebook.thrift.payload.ThriftSerializable {

    @ThriftConstructor
    public ReorderedStruct(
        @com.facebook.swift.codec.ThriftField(value=1, name="reordered_dependent_adapted", requiredness=Requiredness.NONE) final test.fixtures.adapter.DeclaredAfterStruct reorderedDependentAdapted
    ) {
        this.reorderedDependentAdapted = reorderedDependentAdapted;
    }
    
    @ThriftConstructor
    protected ReorderedStruct() {
      this.reorderedDependentAdapted = null;
    }
    
    public static class Builder {
    
        private test.fixtures.adapter.DeclaredAfterStruct reorderedDependentAdapted = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="reordered_dependent_adapted", requiredness=Requiredness.NONE)
        public Builder setReorderedDependentAdapted(test.fixtures.adapter.DeclaredAfterStruct reorderedDependentAdapted) {
            this.reorderedDependentAdapted = reorderedDependentAdapted;
            return this;
        }
    
        public test.fixtures.adapter.DeclaredAfterStruct getReorderedDependentAdapted() { return reorderedDependentAdapted; }
    
        public Builder() { }
        public Builder(ReorderedStruct other) {
            this.reorderedDependentAdapted = other.reorderedDependentAdapted;
        }
    
        @ThriftConstructor
        public ReorderedStruct build() {
            ReorderedStruct result = new ReorderedStruct (
                this.reorderedDependentAdapted
            );
            return result;
        }
    }
        
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ReorderedStruct");
    private final test.fixtures.adapter.DeclaredAfterStruct reorderedDependentAdapted;
    public static final int _REORDERED_DEPENDENT_ADAPTED = 1;
    private static final TField REORDERED_DEPENDENT_ADAPTED_FIELD_DESC = new TField("reordered_dependent_adapted", TType.STRUCT, (short)1);
    static {
      NAMES_TO_IDS.put("reorderedDependentAdapted", 1);
      THRIFT_NAMES_TO_IDS.put("reordered_dependent_adapted", 1);
      FIELD_METADATA.put(1, REORDERED_DEPENDENT_ADAPTED_FIELD_DESC);
      com.facebook.thrift.type.TypeRegistry.add(new com.facebook.thrift.type.Type(
        new com.facebook.thrift.type.UniversalName("facebook.com/thrift/test/ReorderedStruct"), 
        ReorderedStruct.class, ReorderedStruct::read0));
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="reordered_dependent_adapted", requiredness=Requiredness.NONE)
    public test.fixtures.adapter.DeclaredAfterStruct getReorderedDependentAdapted() { return reorderedDependentAdapted; }
    
    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("reorderedDependentAdapted", reorderedDependentAdapted);
        return helper.toString();
    }
    
    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ReorderedStruct other = (ReorderedStruct)o;
    
        return
            Objects.equals(reorderedDependentAdapted, other.reorderedDependentAdapted) &&
            true;
    }
    
    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            reorderedDependentAdapted
        });
    }
    
    
    public static com.facebook.thrift.payload.Reader<ReorderedStruct> asReader() {
      return ReorderedStruct::read0;
    }
    
    public static ReorderedStruct read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ReorderedStruct.NAMES_TO_IDS, ReorderedStruct.THRIFT_NAMES_TO_IDS, ReorderedStruct.FIELD_METADATA);
      ReorderedStruct.Builder builder = new ReorderedStruct.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _REORDERED_DEPENDENT_ADAPTED:
          if (__field.type == TType.STRUCT) {
            test.fixtures.adapter.DeclaredAfterStruct reorderedDependentAdapted = test.fixtures.adapter.DeclaredAfterStruct.read0(oprot);
            builder.setReorderedDependentAdapted(reorderedDependentAdapted);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }
    
    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (reorderedDependentAdapted != null) {
        oprot.writeFieldBegin(REORDERED_DEPENDENT_ADAPTED_FIELD_DESC);
        this.reorderedDependentAdapted.write0(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }
    
    private static class _ReorderedStructLazy {
        private static final ReorderedStruct _DEFAULT = new ReorderedStruct.Builder().build();
    }
    
    public static ReorderedStruct defaultInstance() {
        return  _ReorderedStructLazy._DEFAULT;
    }
}
