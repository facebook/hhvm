Parsed decls:

{ Direct_decl_parser.classes =
  { "\\A" ->
    { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
      sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
      sc_name = ([3:7-8], "\\A"); sc_tparams = []; sc_where_constraints = [];
      sc_extends = []; sc_uses = []; sc_xhp_attr_uses = [];
      sc_req_extends = []; sc_req_implements = [];
      sc_implements =
      [(Rhint (root|explicit_type_collection.php line 3, characters 20-36),
        (Tapply (([3:20-37], "\\HH\\ClassAttribute"), [])))];
      sc_consts = []; sc_typeconsts = []; sc_pu_enums = [];
      sc_props =
      [{ Shallow_decl_defs.sp_const = false; sp_xhp_attr = None;
         sp_lateinit = false; sp_lsb = false; sp_name = ([4:49-51], "i");
         sp_needs_init = true;
         sp_type =
         (Some (Rhint (root|explicit_type_collection.php line 4, characters 38-47),
                (Tapply (([4:38-41], "\\HH\\vec"),
                   [(Rhint (root|explicit_type_collection.php line 4, characters 42-46),
                     Tmixed)]
                   ))));
         sp_abstract = false; sp_visibility = Public }
        ];
      sc_sprops = [];
      sc_constructor =
      (Some { Shallow_decl_defs.sm_abstract = false; sm_final = false;
              sm_memoizelsb = false; sm_name = ([4:19-30], "__construct");
              sm_override = false; sm_dynamicallycallable = false;
              sm_reactivity = None;
              sm_type =
              (Rwitness (root|explicit_type_collection.php line 4, characters 19-29),
               (Tfun
                  { ft_arity = (Fstandard ()); ft_tparams = [];
                    ft_where_constraints = [];
                    ft_params =
                    [{ fp_pos = [4:49-51]; fp_name = (Some "$i");
                       fp_type =
                       { et_enforced = false;
                         et_type =
                         (Rhint (root|explicit_type_collection.php line 4, characters 38-47),
                          (Tapply (([4:38-41], "\\HH\\vec"),
                             [(Rhint (root|explicit_type_collection.php line 4, characters 42-46),
                               Tmixed)]
                             )))
                         };
                       fp_flags =
                       (make_fp_flags ~mutability:none
                         ~accept_disposable:false ~has_default:false
                         ~mode:FPnormal);
                        }
                      ];
                    ft_implicit_params =
                    { capability =
                      (Rhint (root|explicit_type_collection.php line 4, characters 19-29),
                       (Tunion []))
                      };
                    ft_ret =
                    { et_enforced = false;
                      et_type =
                      (Rwitness (root|explicit_type_collection.php line 4, characters 19-29),
                       (Tprim Tvoid))
                      };
                    ft_flags =
                    (make_ft_flags sync none ~return_disposable:false
                      ~returns_mutable:false ~returns_void_to_rx:false);
                    ft_reactive = Nonreactive }));
              sm_visibility = Public; sm_deprecated = None });
      sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
      sc_enum_type = None; sc_decl_errors = <opaque> };
    "\\Bar" ->
    { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
      sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
      sc_name = ([15:7-10], "\\Bar"); sc_tparams = [];
      sc_where_constraints = []; sc_extends = []; sc_uses = [];
      sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
      sc_implements = []; sc_consts = []; sc_typeconsts = [];
      sc_pu_enums = []; sc_props = []; sc_sprops = []; sc_constructor = None;
      sc_static_methods = []; sc_methods = [];
      sc_user_attributes =
      [{ Typing_defs_core.ua_name = ([12:3-4], "\\A");
         ua_classname_params = [] }
        ];
      sc_enum_type = None; sc_decl_errors = <opaque> };
    "\\Foo" ->
    { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
      sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
      sc_name = ([8:7-10], "\\Foo"); sc_tparams = [];
      sc_where_constraints = []; sc_extends = []; sc_uses = [];
      sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
      sc_implements = [];
      sc_consts =
      [{ Shallow_decl_defs.scc_abstract = false;
         scc_name = ([9:16-19], "KEY");
         scc_type =
         (Rhint (root|explicit_type_collection.php line 9, characters 9-14),
          (Tprim Tstring))
         }
        ];
      sc_typeconsts = []; sc_pu_enums = []; sc_props = []; sc_sprops = [];
      sc_constructor = None; sc_static_methods = []; sc_methods = [];
      sc_user_attributes =
      [{ Typing_defs_core.ua_name = ([7:3-4], "\\A");
         ua_classname_params = [] }
        ];
      sc_enum_type = None; sc_decl_errors = <opaque> } };
  funs = {}; typedefs = {}; consts = {} }

They matched!
