<?php
$arr = array(
0x2500 => array(0x80, "BOX DRAWINGS LIGHT HORIZONTAL"),
0x2502 => array(0x81, "BOX DRAWINGS LIGHT VERTICAL"),
0x250C => array(0x82, "BOX DRAWINGS LIGHT DOWN AND RIGHT"),
0x2510 => array(0x83, "BOX DRAWINGS LIGHT DOWN AND LEFT"),
0x2514 => array(0x84, "BOX DRAWINGS LIGHT UP AND RIGHT"),
0x2518 => array(0x85, "BOX DRAWINGS LIGHT UP AND LEFT"),
0x251C => array(0x86, "BOX DRAWINGS LIGHT VERTICAL AND RIGHT"),
0x2524 => array(0x87, "BOX DRAWINGS LIGHT VERTICAL AND LEFT"),
0x252C => array(0x88, "BOX DRAWINGS LIGHT DOWN AND HORIZONTAL"),
0x2534 => array(0x89, "BOX DRAWINGS LIGHT UP AND HORIZONTAL"),
0x253C => array(0x8A, "BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL"),
0x2580 => array(0x8B, "UPPER HALF BLOCK"),
0x2584 => array(0x8C, "LOWER HALF BLOCK"),
0x2588 => array(0x8D, "FULL BLOCK"),
0x258C => array(0x8E, "LEFT HALF BLOCK"),
0x2590 => array(0x8F, "RIGHT HALF BLOCK"),
0x2591 => array(0x90, "LIGHT SHADE"),
0x2592 => array(0x91, "MEDIUM SHADE"),
0x2593 => array(0x92, "DARK SHADE"),
0x2320 => array(0x93, "TOP HALF INTEGRAL"),
0x25A0 => array(0x94, "BLACK SQUARE"),
0x2219 => array(0x95, "BULLET OPERATOR"),
0x221A => array(0x96, "SQUARE ROOT"),
0x2248 => array(0x97, "ALMOST EQUAL TO"),
0x2264 => array(0x98, "LESS-THAN OR EQUAL TO"),
0x2265 => array(0x99, "GREATER-THAN OR EQUAL TO"),
0x00A0 => array(0x9A, "NO-BREAK SPACE"),
0x2321 => array(0x9B, "BOTTOM HALF INTEGRAL"),
0x00B0 => array(0x9C, "DEGREE SIGN"),
0x00B2 => array(0x9D, "SUPERSCRIPT TWO"),
0x00B7 => array(0x9E, "MIDDLE DOT"),
0x00F7 => array(0x9F, "DIVISION SIGN"),
0x2550 => array(0xA0, "BOX DRAWINGS DOUBLE HORIZONTAL"),
0x2551 => array(0xA1, "BOX DRAWINGS DOUBLE VERTICAL"),
0x2552 => array(0xA2, "BOX DRAWINGS DOWN SINGLE AND RIGHT DOUBLE"),
0x0451 => array(0xA3, "CYRILLIC SMALL LETTER IO"),
0x2553 => array(0xA4, "BOX DRAWINGS DOWN DOUBLE AND RIGHT SINGLE"),
0x2554 => array(0xA5, "BOX DRAWINGS DOUBLE DOWN AND RIGHT"),
0x2555 => array(0xA6, "BOX DRAWINGS DOWN SINGLE AND LEFT DOUBLE"),
0x2556 => array(0xA7, "BOX DRAWINGS DOWN DOUBLE AND LEFT SINGLE"),
0x2557 => array(0xA8, "BOX DRAWINGS DOUBLE DOWN AND LEFT"),
0x2558 => array(0xA9, "BOX DRAWINGS UP SINGLE AND RIGHT DOUBLE"),
0x2559 => array(0xAA, "BOX DRAWINGS UP DOUBLE AND RIGHT SINGLE"),
0x255A => array(0xAB, "BOX DRAWINGS DOUBLE UP AND RIGHT"),
0x255B => array(0xAC, "BOX DRAWINGS UP SINGLE AND LEFT DOUBLE"),
0x255C => array(0xAD, "BOX DRAWINGS UP DOUBLE AND LEFT SINGLE"),
0x255D => array(0xAE, "BOX DRAWINGS DOUBLE UP AND LEFT"),
0x255E => array(0xAF, "BOX DRAWINGS VERTICAL SINGLE AND RIGHT DOUBLE"),
0x255F => array(0xB0, "BOX DRAWINGS VERTICAL DOUBLE AND RIGHT SINGLE"),
0x2560 => array(0xB1, "BOX DRAWINGS DOUBLE VERTICAL AND RIGHT"),
0x2561 => array(0xB2, "BOX DRAWINGS VERTICAL SINGLE AND LEFT DOUBLE"),
0x0401 => array(0xB3, "CYRILLIC CAPITAL LETTER IO"),
0x2562 => array(0xB4, "BOX DRAWINGS VERTICAL DOUBLE AND LEFT SINGLE"),
0x2563 => array(0xB5, "BOX DRAWINGS DOUBLE VERTICAL AND LEFT"),
0x2564 => array(0xB6, "BOX DRAWINGS DOWN SINGLE AND HORIZONTAL DOUBLE"),
0x2565 => array(0xB7, "BOX DRAWINGS DOWN DOUBLE AND HORIZONTAL SINGLE"),
0x2566 => array(0xB8, "BOX DRAWINGS DOUBLE DOWN AND HORIZONTAL"),
0x2567 => array(0xB9, "BOX DRAWINGS UP SINGLE AND HORIZONTAL DOUBLE"),
0x2568 => array(0xBA, "BOX DRAWINGS UP DOUBLE AND HORIZONTAL SINGLE"),
0x2569 => array(0xBB, "BOX DRAWINGS DOUBLE UP AND HORIZONTAL"),
0x256A => array(0xBC, "BOX DRAWINGS VERTICAL SINGLE AND HORIZONTAL DOUBLE"),
0x256B => array(0xBD, "BOX DRAWINGS VERTICAL DOUBLE AND HORIZONTAL SINGLE"),
0x256C => array(0xBE, "BOX DRAWINGS DOUBLE VERTICAL AND HORIZONTAL"),
0x00A9 => array(0xBF, "COPYRIGHT SIGN"),
0x044E => array(0xC0, "CYRILLIC SMALL LETTER YU"),
0x0430 => array(0xC1, "CYRILLIC SMALL LETTER A"),
0x0431 => array(0xC2, "CYRILLIC SMALL LETTER BE"),
0x0446 => array(0xC3, "CYRILLIC SMALL LETTER TSE"),
0x0434 => array(0xC4, "CYRILLIC SMALL LETTER DE"),
0x0435 => array(0xC5, "CYRILLIC SMALL LETTER IE"),
0x0444 => array(0xC6, "CYRILLIC SMALL LETTER EF"),
0x0433 => array(0xC7, "CYRILLIC SMALL LETTER GHE"),
0x0445 => array(0xC8, "CYRILLIC SMALL LETTER HA"),
0x0438 => array(0xC9, "CYRILLIC SMALL LETTER I"),
0x0439 => array(0xCA, "CYRILLIC SMALL LETTER SHORT I"),
0x043A => array(0xCB, "CYRILLIC SMALL LETTER KA"),
0x043B => array(0xCC, "CYRILLIC SMALL LETTER EL"),
0x043C => array(0xCD, "CYRILLIC SMALL LETTER EM"),
0x043D => array(0xCE, "CYRILLIC SMALL LETTER EN"),
0x043E => array(0xCF, "CYRILLIC SMALL LETTER O"),
0x043F => array(0xD0, "CYRILLIC SMALL LETTER PE"),
0x044F => array(0xD1, "CYRILLIC SMALL LETTER YA"),
0x0440 => array(0xD2, "CYRILLIC SMALL LETTER ER"),
0x0441 => array(0xD3, "CYRILLIC SMALL LETTER ES"),
0x0442 => array(0xD4, "CYRILLIC SMALL LETTER TE"),
0x0443 => array(0xD5, "CYRILLIC SMALL LETTER U"),
0x0436 => array(0xD6, "CYRILLIC SMALL LETTER ZHE"),
0x0432 => array(0xD7, "CYRILLIC SMALL LETTER VE"),
0x044C => array(0xD8, "CYRILLIC SMALL LETTER SOFT SIGN"),
0x044B => array(0xD9, "CYRILLIC SMALL LETTER YERU"),
0x0437 => array(0xDA, "CYRILLIC SMALL LETTER ZE"),
0x0448 => array(0xDB, "CYRILLIC SMALL LETTER SHA"),
0x044D => array(0xDC, "CYRILLIC SMALL LETTER E"),
0x0449 => array(0xDD, "CYRILLIC SMALL LETTER SHCHA"),
0x0447 => array(0xDE, "CYRILLIC SMALL LETTER CHE"),
0x044A => array(0xDF, "CYRILLIC SMALL LETTER HARD SIGN"),
0x042E => array(0xE0, "CYRILLIC CAPITAL LETTER YU"),
0x0410 => array(0xE1, "CYRILLIC CAPITAL LETTER A"),
0x0411 => array(0xE2, "CYRILLIC CAPITAL LETTER BE"),
0x0426 => array(0xE3, "CYRILLIC CAPITAL LETTER TSE"),
0x0414 => array(0xE4, "CYRILLIC CAPITAL LETTER DE"),
0x0415 => array(0xE5, "CYRILLIC CAPITAL LETTER IE"),
0x0424 => array(0xE6, "CYRILLIC CAPITAL LETTER EF"),
0x0413 => array(0xE7, "CYRILLIC CAPITAL LETTER GHE"),
0x0425 => array(0xE8, "CYRILLIC CAPITAL LETTER HA"),
0x0418 => array(0xE9, "CYRILLIC CAPITAL LETTER I"),
0x0419 => array(0xEA, "CYRILLIC CAPITAL LETTER SHORT I"),
0x041A => array(0xEB, "CYRILLIC CAPITAL LETTER KA"),
0x041B => array(0xEC, "CYRILLIC CAPITAL LETTER EL"),
0x041C => array(0xED, "CYRILLIC CAPITAL LETTER EM"),
0x041D => array(0xEE, "CYRILLIC CAPITAL LETTER EN"),
0x041E => array(0xEF, "CYRILLIC CAPITAL LETTER O"),
0x041F => array(0xF0, "CYRILLIC CAPITAL LETTER PE"),
0x042F => array(0xF1, "CYRILLIC CAPITAL LETTER YA"),
0x0420 => array(0xF2, "CYRILLIC CAPITAL LETTER ER"),
0x0421 => array(0xF3, "CYRILLIC CAPITAL LETTER ES"),
0x0422 => array(0xF4, "CYRILLIC CAPITAL LETTER TE"),
0x0423 => array(0xF5, "CYRILLIC CAPITAL LETTER U"),
0x0416 => array(0xF6, "CYRILLIC CAPITAL LETTER ZHE"),
0x0412 => array(0xF7, "CYRILLIC CAPITAL LETTER VE"),
0x042C => array(0xF8, "CYRILLIC CAPITAL LETTER SOFT SIGN"),
0x042B => array(0xF9, "CYRILLIC CAPITAL LETTER YERU"),
0x0417 => array(0xFA, "CYRILLIC CAPITAL LETTER ZE"),
0x0428 => array(0xFB, "CYRILLIC CAPITAL LETTER SHA"),
0x042D => array(0xFC, "CYRILLIC CAPITAL LETTER E"),
0x0429 => array(0xFD, "CYRILLIC CAPITAL LETTER SHCHA"),
0x0427 => array(0xFE, "CYRILLIC CAPITAL LETTER CHE"),
0x042A => array(0xFF, "CYRILLIC CAPITAL LETTER HARD SIGN"),
);

foreach ($arr as $u => $v) {
    $ent = sprintf("&#x%X;", $u);
    $res = html_entity_decode($ent, ENT_QUOTES, 'KOI8-R');
    $d = unpack("H*", $res);
    echo sprintf("%s: %s => %s\n", $v[1], $ent, $d[1]);
    
    $ent = sprintf("&#x%X;", $v[0]);
    $res = html_entity_decode($ent, ENT_QUOTES, 'KOI8-R');
    if ($res[0] != "&" || $res[1] != "#")
        $res = unpack("H*", $res)[1];
    echo sprintf("%s => %s\n\n", $ent, $res);
}