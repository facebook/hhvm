{
  "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_00_01RTag_01_4",
  "kind": "struct",
  "language": "C++",
  "prot": "public",
  "compoundname_html": "apache::thrift::op::detail::LessThan&lt; type::void_t, RTag &gt;",
  "includes": {
    "refid": "detail_2Compare_8h",
    "local": "no",
    "text_html": "Compare.h"
  },
  "tparams": [
    {
      "type_html": "typename RTag"
    }
  ],
  "functions": [
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_00_01RTag_01_4_1a19dbbac69dbd6953ff4e23ed0a382531",
      "prot": "public",
      "static": "no",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename L"
        },
        {
          "type_html": "typename R"
        }
      ],
      "type_html": "constexpr bool",
      "definition_html": "constexpr bool apache::thrift::op::detail::LessThan&lt; type::void_t, RTag &gt;::operator()",
      "argsstring_html": "(const L &amp;lhs, const R &amp;rhs) const",
      "name_html": "operator()",
      "param": [
        {
          "type_html": "const L &amp;",
          "declname_html": "lhs"
        },
        {
          "type_html": "const R &amp;",
          "declname_html": "rhs"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
        "line": "137",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
        "bodystart": "137",
        "bodyend": "139"
      },
      "definition": {
        "simple_html": "template &lt;typename L, typename R&gt;\nconstexpr bool operator()(const L&amp; lhs, const R&amp; rhs) const",
        "simple_raw": "template <typename L, typename R>\nconstexpr bool operator()(const L& lhs, const R& rhs) const",
        "detailed_html": "template &lt;typename L, typename R&gt;\ninline constexpr bool operator()(const L&amp; lhs, const R&amp; rhs) const",
        "detailed_raw": "template <typename L, typename R>\ninline constexpr bool operator()(const L& lhs, const R& rhs) const",
        "original_definition_html": "constexpr bool apache::thrift::op::detail::LessThan&lt; type::void_t, RTag &gt;::operator()",
        "original_argsstring_html": "(const L &amp;lhs, const R &amp;rhs) const"
      },
      "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_00_01RTag_01_4/operator.call",
      "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_00_01RTag_01_4/operator.call"
    }
  ],
  "location": {
    "file": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
    "line": "135",
    "column": "1",
    "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
    "bodystart": "135",
    "bodyend": "140"
  },
  "namespacednames_html": [
    "apache",
    "thrift",
    "op",
    "detail",
    "LessThan&lt; type::void_t, RTag &gt;"
  ],
  "enums": [],
  "types": [],
  "members": [],
  "friends": [],
  "declaration_raw": "template < typename RTag >\nstruct LessThan< type::void_t, RTag >;",
  "declaration_html": "template &lt; typename RTag &gt;\nstruct LessThan&lt; type::void_t, RTag &gt;;",
  "filepath": "struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_00_01RTag_01_4",
  "href": "/ref/cpp/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_00_01RTag_01_4",
  "specializes": "structapache_1_1thrift_1_1op_1_1detail_1_1LessThan",
  "overloadgroups": [
    {
      "groupname_html": "",
      "overloadsets": [
        {
          "kind": "overloadset",
          "name_html": "operator()",
          "compoundname_html": "apache::thrift::op::detail::LessThan&lt; type::void_t, RTag &gt;::operator()",
          "functions": [
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_00_01RTag_01_4_1a19dbbac69dbd6953ff4e23ed0a382531",
              "prot": "public",
              "static": "no",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename L"
                },
                {
                  "type_html": "typename R"
                }
              ],
              "type_html": "constexpr bool",
              "definition_html": "constexpr bool apache::thrift::op::detail::LessThan&lt; type::void_t, RTag &gt;::operator()",
              "argsstring_html": "(const L &amp;lhs, const R &amp;rhs) const",
              "name_html": "operator()",
              "param": [
                {
                  "type_html": "const L &amp;",
                  "declname_html": "lhs"
                },
                {
                  "type_html": "const R &amp;",
                  "declname_html": "rhs"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
                "line": "137",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
                "bodystart": "137",
                "bodyend": "139"
              },
              "definition": {
                "simple_html": "template &lt;typename L, typename R&gt;\nconstexpr bool operator()(const L&amp; lhs, const R&amp; rhs) const",
                "simple_raw": "template <typename L, typename R>\nconstexpr bool operator()(const L& lhs, const R& rhs) const",
                "detailed_html": "template &lt;typename L, typename R&gt;\ninline constexpr bool operator()(const L&amp; lhs, const R&amp; rhs) const",
                "detailed_raw": "template <typename L, typename R>\ninline constexpr bool operator()(const L& lhs, const R& rhs) const",
                "original_definition_html": "constexpr bool apache::thrift::op::detail::LessThan&lt; type::void_t, RTag &gt;::operator()",
                "original_argsstring_html": "(const L &amp;lhs, const R &amp;rhs) const"
              },
              "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_00_01RTag_01_4/operator.call",
              "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_00_01RTag_01_4/operator.call",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_00_01RTag_01_4",
              "compoundname_html": "apache::thrift::op::detail::LessThan&lt; type::void_t, RTag &gt;::operator()"
            }
          ],
          "filepath": "f/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_00_01RTag_01_4/operator.call",
          "minprot": "public",
          "displayname_html": "operator()",
          "brief_html": "",
          "groupname_html": "",
          "href": "/ref/cpp/f/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_00_01RTag_01_4/operator.call",
          "refid": "/ref/cpp/f/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_00_01RTag_01_4/operator.call"
        }
      ]
    }
  ],
  "free_overloadgroups": []
}