[(Class
    { c_span = [3:1-7:2]; c_annotation = (); c_mode = Mpartial;
      c_final = false; c_is_xhp = false; c_has_xhp_keyword = false;
      c_kind = Cnormal; c_name = ([3:7-8], "\\A"); c_tparams = [];
      c_extends = []; c_uses = []; c_use_as_alias = [];
      c_insteadof_alias = []; c_xhp_attr_uses = []; c_xhp_category = None;
      c_reqs = []; c_implements = []; c_where_constraints = [];
      c_consts = []; c_typeconsts = []; c_vars = [];
      c_methods =
      [{ m_span = [4:3-6:4]; m_annotation = (); m_final = false;
         m_abstract = false; m_static = false; m_visibility = Public;
         m_name = ([4:19-30], "__construct"); m_tparams = [];
         m_where_constraints = []; m_variadic = FVnonVariadic;
         m_params =
         [{ param_annotation = ([4:31-33], int);
            param_type_hint = ((int), None); param_is_variadic = false;
            param_pos = [4:31-33]; param_name = "$x"; param_expr = None;
            param_callconv = None; param_user_attributes = [];
            param_visibility = None }
           ];
         m_cap = ((mixed), None); m_unsafe_cap = ((mixed), None);
         m_body =
         { fb_ast =
           [([5:5-13],
             (Expr
                (([5:5-12], void),
                 (Call (
                    (([5:5-8], (function(int $x): void)),
                     (Id ([5:5-8], "\\foo"))),
                    [], [(([5:9-11], int), (Lvar ([5:9-11], $x)))], None)))))
             ];
           fb_annotation = () };
         m_fun_kind = FSync; m_user_attributes = [];
         m_ret = ((void), (Some ([4:19-30], (Hprim Tvoid))));
         m_external = false; m_doc_comment = None }
        ];
      c_attributes = []; c_xhp_children = []; c_xhp_attrs = [];
      c_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
        ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
        ns_const_uses = <opaque>; ns_name = None; ns_auto_ns_map = [];
        ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      c_user_attributes = []; c_file_attributes = []; c_enum = None;
      c_pu_enums = []; c_doc_comment = None; c_emit_id = None });
  (Fun
     { f_span = [9:1-30]; f_annotation = (); f_mode = Mpartial;
       f_ret = ((void), (Some ([9:23-27], (Hprim Tvoid))));
       f_name = ([9:10-13], "\\foo"); f_tparams = [];
       f_where_constraints = []; f_variadic = FVnonVariadic;
       f_params =
       [{ param_annotation = ([9:18-20], int);
          param_type_hint = ((int), (Some ([9:14-17], (Hprim Tint))));
          param_is_variadic = false; param_pos = [9:18-20];
          param_name = "$x"; param_expr = None; param_callconv = None;
          param_user_attributes = []; param_visibility = None }
         ];
       f_cap = ((nothing), None); f_unsafe_cap = ((mixed), None);
       f_body = { fb_ast = [([Pos.none], Noop)]; fb_annotation = () };
       f_fun_kind = FSync; f_user_attributes = []; f_file_attributes = [];
       f_external = false;
       f_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
         ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
         ns_const_uses = <opaque>; ns_name = None; ns_auto_ns_map = [];
         ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       f_doc_comment = None; f_static = false })
  ]
