[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict;
      fd_fun =
      { f_span = [4:1-8:2]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_ret = ((void), (Some ([4:51-55], (Hprim Tvoid)))); 
        f_name = ([4:10-29], "\\array_append_object"); f_tparams = []; 
        f_where_constraints = [];
        f_params =
        [{ param_annotation = (classname<_>); param_type_hint = ((classname<_>), (Some ([4:30-42], (Happly (([4:30-39], "\\HH\\classname"), [([4:40-41], Herr)]))))); 
           param_is_variadic = false; param_pos = [4:43-48]; param_name = "$yolo"; 
           param_expr = None; param_readonly = None; param_callconv = Pnormal; 
           param_user_attributes = []; param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None;
        f_body =
        { fb_ast =
          [([5:3-22],
            (Expr
               ((_), [5:3-21],
                (Binop ((Eq None), ((_), [5:3-7], (Lvar ([5:3-7], $obj))),
                   ((_), [5:10-21], (New (((_), [5:14-19], (CIexpr ((classname<_>), [5:14-19], (Lvar ([5:14-19], $yolo))))), [], [], None, (_)))))))));
            ([7:3-17], (Expr ((bool), [7:3-16], (Binop ((Eq None), ((bool), [7:3-9], (Array_get (((_), [7:3-7], (Lvar ([7:3-7], $obj))), None))), ((bool), [7:12-16], True))))))]
          };
        f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
        f_doc_comment = None }
      })