/**
 * Autogenerated by Thrift for thrift/compiler/test/fixtures/use_op_encode/src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */

#include "thrift/compiler/test/fixtures/use_op_encode/gen-cpp2/module_data.h"
#include "thrift/compiler/test/fixtures/use_op_encode/gen-cpp2/module_constants.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

namespace apache::thrift {

THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::string_view TStructDataStorage<::facebook::thrift::compiler::test::MyStruct>::name = "MyStruct";
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<std::string_view, 4> TStructDataStorage<::facebook::thrift::compiler::test::MyStruct>::fields_names = { {
  "def_field"sv,
  "opt_field"sv,
  "req_field"sv,
  "terse_field"sv,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int16_t, 4> TStructDataStorage<::facebook::thrift::compiler::test::MyStruct>::fields_ids = { {
  1,
  2,
  3,
  4,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<protocol::TType, 4> TStructDataStorage<::facebook::thrift::compiler::test::MyStruct>::fields_types = { {
  TType::T_I32,
  TType::T_I32,
  TType::T_I32,
  TType::T_I32,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int, 4> TStructDataStorage<::facebook::thrift::compiler::test::MyStruct>::isset_indexes = { {
  0,
  1,
  -1,
  -1,
}};

namespace detail {


} // namespace detail
} // namespace apache::thrift
