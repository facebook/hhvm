[(Class
    { c_span = [3:1-5:2]; c_annotation = (); c_mode = Mstrict; c_final = false; 
      c_is_xhp = false; c_has_xhp_keyword = false; c_kind = (Cclass Concrete); 
      c_name = ([3:7-22], "\\TestTraversable"); c_tparams = []; c_extends = []; 
      c_uses = []; c_xhp_attr_uses = []; c_xhp_category = None; c_reqs = []; 
      c_implements = []; c_where_constraints = []; c_consts = []; c_typeconsts = []; 
      c_vars = [];
      c_methods =
      [{ m_span = [4:3-50]; m_annotation = (); m_final = false; m_abstract = false; 
         m_static = false; m_readonly_this = false; m_visibility = Public; 
         m_name = ([4:19-20], "i"); m_tparams = []; m_where_constraints = [];
         m_params =
         [{ param_annotation = (Traversable<int>); param_type_hint = ((Traversable<int>), (Some ([4:21-37], (Happly (([4:21-32], "\\HH\\Traversable"), [([4:33-36], (Hprim Tint))])))));
            param_is_variadic = false; param_pos = [4:38-40]; param_name = "$i"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         m_ctxs = None; m_unsafe_ctxs = None; m_body = { fb_ast = [([Pos.none], Noop)] }; 
         m_fun_kind = FSync; m_user_attributes = []; m_readonly_ret = None; 
         m_ret = ((void), (Some ([4:43-47], (Hprim Tvoid)))); m_external = false; 
         m_doc_comment = None }
        ];
      c_xhp_children = []; c_xhp_attrs = [];
      c_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      c_user_attributes = []; c_file_attributes = []; c_docs_url = None; 
      c_enum = None; c_doc_comment = None; c_emit_id = None; c_internal = false; 
      c_module = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([7:10-11], "\\i");
       fd_fun =
       { f_span = [7:1-41]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([7:34-38], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = (Traversable<int>); param_type_hint = ((Traversable<int>), (Some ([7:12-28], (Happly (([7:12-23], "\\HH\\Traversable"), [([7:24-27], (Hprim Tint))])))));
            param_is_variadic = false; param_pos = [7:29-31]; param_name = "$i"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([Pos.none], Noop)] }; 
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([9:10-26], "\\call_traversable");
       fd_fun =
       { f_span = [9:1-19:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([11:4-8], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = (Traversable<float>); param_type_hint = ((Traversable<float>), (Some ([10:3-21], (Happly (([10:3-14], "\\HH\\Traversable"), [([10:15-20], (Hprim Tfloat))])))));
            param_is_variadic = false; param_pos = [10:22-24]; param_name = "$i"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([13:3-9],
             (Expr
                ((void), [13:3-8],
                 (Call ((((function(Traversable<int> $i): void)), [13:3-4], (Id ([13:3-4], "\\i"))), 
                    [], [(Pnormal, ((Traversable<float>), [13:5-7], (Hole (((Traversable<float>), [13:5-7], (Lvar ([13:5-7], $i))), (Traversable<float>), (Traversable<int>), Typing))))], None)))));
             ([15:3-32],
              (Expr
                 ((TestTraversable), [15:3-31],
                  (Binop
                     { bop = (Eq None); lhs = ((TestTraversable), [15:3-7], (Lvar ([15:3-7], $foo)));
                       rhs = ((TestTraversable), [15:10-31], (New (((TestTraversable), [15:14-29], (CI ([15:14-29], "\\TestTraversable"))), [], [], None, ((function(): void))))) }))));
             ([18:3-15],
              (Expr
                 ((void), [18:3-14],
                  (Call (
                     (((function(Traversable<int> $i): void)), [18:3-10],
                      (Obj_get (((TestTraversable), [18:3-7], (Lvar ([18:3-7], $foo))), (((function(Traversable<int> $i): void)), [18:9-10], (Id ([18:9-10], "i"))), OG_nullthrows, Is_method))),
                     [], [(Pnormal, ((Traversable<float>), [18:11-13], (Hole (((Traversable<float>), [18:11-13], (Lvar ([18:11-13], $i))), (Traversable<float>), (Traversable<int>), Typing))))], None
                     )))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([21:10-31], "\\call_traversable_cast");
       fd_fun =
       { f_span = [21:1-31:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([23:4-8], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = (Traversable<float>); param_type_hint = ((Traversable<float>), (Some ([22:3-21], (Happly (([22:3-14], "\\HH\\Traversable"), [([22:15-20], (Hprim Tfloat))])))));
            param_is_variadic = false; param_pos = [22:22-24]; param_name = "$i"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([25:3-69],
             (Expr
                ((void), [25:3-68],
                 (Call ((((function(Traversable<int> $i): void)), [25:3-4], (Id ([25:3-4], "\\i"))), 
                    [],
                    [(Pnormal,
                      ((Traversable<int>), [25:5-67],
                       (Hole (((Traversable<float>), [25:64-66], (Lvar ([25:64-66], $i))), (Traversable<float>), (Traversable<int>),
                          (UnsafeCast
                             [([25:27-45], (Happly (([25:27-38], "\\HH\\Traversable"), [([25:39-44], (Hprim Tfloat))])));
                               ([25:46-62], (Happly (([25:46-57], "\\HH\\Traversable"), [([25:58-61], (Hprim Tint))])))])
                          ))))
                      ],
                    None)))));
             ([27:3-32],
              (Expr
                 ((TestTraversable), [27:3-31],
                  (Binop
                     { bop = (Eq None); lhs = ((TestTraversable), [27:3-7], (Lvar ([27:3-7], $foo)));
                       rhs = ((TestTraversable), [27:10-31], (New (((TestTraversable), [27:14-29], (CI ([27:14-29], "\\TestTraversable"))), [], [], None, ((function(): void))))) }))));
             ([30:3-75],
              (Expr
                 ((void), [30:3-74],
                  (Call (
                     (((function(Traversable<int> $i): void)), [30:3-10],
                      (Obj_get (((TestTraversable), [30:3-7], (Lvar ([30:3-7], $foo))), (((function(Traversable<int> $i): void)), [30:9-10], (Id ([30:9-10], "i"))), OG_nullthrows, Is_method))),
                     [],
                     [(Pnormal,
                       ((Traversable<int>), [30:11-73],
                        (Hole (((Traversable<float>), [30:70-72], (Lvar ([30:70-72], $i))), (Traversable<float>), (Traversable<int>),
                           (UnsafeCast
                              [([30:33-51], (Happly (([30:33-44], "\\HH\\Traversable"), [([30:45-50], (Hprim Tfloat))])));
                                ([30:52-68], (Happly (([30:52-63], "\\HH\\Traversable"), [([30:64-67], (Hprim Tint))])))])
                           ))))
                       ],
                     None)))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] })