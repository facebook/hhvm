{
  "kind": "overloadset",
  "name_html": "boxed_field_ref",
  "compoundname_html": "apache::thrift::boxed_field_ref::boxed_field_ref",
  "functions": [
    {
      "refid": "classapache_1_1thrift_1_1boxed__field__ref_1ad86d21d7f6088c99725992b8b91fae6b",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "yes",
      "inline": "yes",
      "virtual": "non-virtual",
      "type_html": "FOLLY_ERASE",
      "definition_html": "FOLLY_ERASE apache::thrift::boxed_field_ref&lt; T &gt;::boxed_field_ref",
      "argsstring_html": "(T value) noexcept",
      "name_html": "boxed_field_ref",
      "param": [
        {
          "type_html": "T",
          "declname_html": "value"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "1159",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "1159",
        "bodyend": "1159"
      },
      "definition": {
        "simple_html": "FOLLY_ERASE boxed_field_ref(T value)",
        "simple_raw": "FOLLY_ERASE boxed_field_ref(T value)",
        "detailed_html": "explicit inline FOLLY_ERASE boxed_field_ref(T value) noexcept",
        "detailed_raw": "explicit inline FOLLY_ERASE boxed_field_ref(T value) noexcept",
        "original_definition_html": "FOLLY_ERASE apache::thrift::boxed_field_ref&lt; T &gt;::boxed_field_ref",
        "original_argsstring_html": "(T value) noexcept"
      },
      "filepath": "fns/class/apache/thrift/boxed_field_ref/boxed_field_ref",
      "href": "/ref/cpp/fns/class/apache/thrift/boxed_field_ref/boxed_field_ref",
      "parentid": "classapache_1_1thrift_1_1boxed__field__ref",
      "constructor": true,
      "compoundname_html": "apache::thrift::boxed_field_ref::boxed_field_ref"
    },
    {
      "refid": "classapache_1_1thrift_1_1boxed__field__ref_1a583e8aa4293f9a7f925655878e076973",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename U"
        },
        {
          "type_html": "typename",
          "defval_html": "<code>detail::EnableIfImplicit</code>&lt;T, U&gt;"
        }
      ],
      "type_html": "FOLLY_ERASE",
      "definition_html": "FOLLY_ERASE apache::thrift::boxed_field_ref&lt; T &gt;::boxed_field_ref",
      "argsstring_html": "(const boxed_field_ref&lt; U &gt; &amp;other) noexcept",
      "name_html": "boxed_field_ref",
      "param": [
        {
          "type_html": "const <code>boxed_field_ref</code>&lt; U &gt; &amp;",
          "declname_html": "other"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "1162",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "1162",
        "bodyend": "1164"
      },
      "definition": {
        "simple_html": "template &lt;typename U, typename = detail::EnableIfImplicit&lt;T, U&gt;&gt;\nFOLLY_ERASE boxed_field_ref(const boxed_field_ref&lt;U&gt;&amp; other)",
        "simple_raw": "template <typename U, typename = detail::EnableIfImplicit<T, U>>\nFOLLY_ERASE boxed_field_ref(const boxed_field_ref<U>& other)",
        "detailed_html": "template &lt;typename U, typename = detail::EnableIfImplicit&lt;T, U&gt;&gt;\ninline FOLLY_ERASE boxed_field_ref(const boxed_field_ref&lt;U&gt;&amp; other) noexcept",
        "detailed_raw": "template <typename U, typename = detail::EnableIfImplicit<T, U>>\ninline FOLLY_ERASE boxed_field_ref(const boxed_field_ref<U>& other) noexcept",
        "original_definition_html": "FOLLY_ERASE apache::thrift::boxed_field_ref&lt; T &gt;::boxed_field_ref",
        "original_argsstring_html": "(const boxed_field_ref&lt; U &gt; &amp;other) noexcept"
      },
      "filepath": "fns/class/apache/thrift/boxed_field_ref/boxed_field_ref",
      "href": "/ref/cpp/fns/class/apache/thrift/boxed_field_ref/boxed_field_ref",
      "parentid": "classapache_1_1thrift_1_1boxed__field__ref",
      "constructor": true,
      "compoundname_html": "apache::thrift::boxed_field_ref::boxed_field_ref"
    },
    {
      "refid": "classapache_1_1thrift_1_1boxed__field__ref_1a98314954e75d76fc841db80f92c3b89b",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "yes",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename U"
        },
        {
          "type_html": "std::enable_if_t&lt; std::is_same&lt; T, U &amp;&amp;&gt;{}||std::is_same&lt; T, const U &amp;&amp;&gt;{}, int &gt;",
          "defval_html": "0"
        }
      ],
      "type_html": "FOLLY_ERASE",
      "definition_html": "FOLLY_ERASE apache::thrift::boxed_field_ref&lt; T &gt;::boxed_field_ref",
      "argsstring_html": "(const boxed_field_ref&lt; U &amp;&gt; &amp;other) noexcept",
      "name_html": "boxed_field_ref",
      "param": [
        {
          "type_html": "const <code>boxed_field_ref</code>&lt; U &amp;&gt; &amp;",
          "declname_html": "other"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "1171",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "1171",
        "bodyend": "1173"
      },
      "definition": {
        "simple_html": "template &lt;\n    typename U,\n    std::enable_if_t&lt;\n        std::is_same&lt;T, U&amp;&amp;&gt;{} || std::is_same&lt;T, const U&amp;&amp;&gt;{},\n        int&gt; = 0&gt;\nFOLLY_ERASE boxed_field_ref(const boxed_field_ref&lt;U&amp;&gt;&amp; other)",
        "simple_raw": "template <\n    typename U,\n    std::enable_if_t<\n        std::is_same<T, U&&>{} || std::is_same<T, const U&&>{},\n        int> = 0>\nFOLLY_ERASE boxed_field_ref(const boxed_field_ref<U&>& other)",
        "detailed_html": "template &lt;\n    typename U,\n    std::enable_if_t&lt;\n        std::is_same&lt;T, U&amp;&amp;&gt;{} || std::is_same&lt;T, const U&amp;&amp;&gt;{},\n        int&gt; = 0&gt;\nexplicit inline FOLLY_ERASE boxed_field_ref(\n    const boxed_field_ref&lt;U&amp;&gt;&amp; other) noexcept",
        "detailed_raw": "template <\n    typename U,\n    std::enable_if_t<\n        std::is_same<T, U&&>{} || std::is_same<T, const U&&>{},\n        int> = 0>\nexplicit inline FOLLY_ERASE boxed_field_ref(\n    const boxed_field_ref<U&>& other) noexcept",
        "original_definition_html": "FOLLY_ERASE apache::thrift::boxed_field_ref&lt; T &gt;::boxed_field_ref",
        "original_argsstring_html": "(const boxed_field_ref&lt; U &amp;&gt; &amp;other) noexcept"
      },
      "filepath": "fns/class/apache/thrift/boxed_field_ref/boxed_field_ref",
      "href": "/ref/cpp/fns/class/apache/thrift/boxed_field_ref/boxed_field_ref",
      "parentid": "classapache_1_1thrift_1_1boxed__field__ref",
      "constructor": true,
      "compoundname_html": "apache::thrift::boxed_field_ref::boxed_field_ref"
    }
  ],
  "filepath": "f/class/apache/thrift/boxed_field_ref/boxed_field_ref",
  "minprot": "public",
  "displayname_html": "(constructor)",
  "brief_html": "Constructs the boxed_field_ref.",
  "groupname_html": "",
  "href": "/ref/cpp/f/class/apache/thrift/boxed_field_ref/boxed_field_ref",
  "refid": "/ref/cpp/f/class/apache/thrift/boxed_field_ref/boxed_field_ref"
}