// @generated by hh_manual from manual/hack/15-asynchronous-operations/10-exceptions.md
// @codegen-command : buck run fbcode//hphp/hack/src/hh_manual:hh_manual extract fbcode/hphp/hack/manual/hack/
async function exception_thrower(): Awaitable<void> {
  throw new Exception();
}

async function non_exception_thrower(): Awaitable<int> {
  return 2;
}

async function wrapping_exceptions(): Awaitable<void> {
  $handles = vec[
    HH\Asio\wrap(exception_thrower()),
    HH\Asio\wrap(non_exception_thrower()),
  ];
  // Since we wrapped, the results will contain both the exception and the
  // integer result
  $results = await Vec\from_async($handles);
  var_dump($results);
}

<<__EntryPoint>>
function main(): void {
  HH\Asio\join(wrapping_exceptions());
}
