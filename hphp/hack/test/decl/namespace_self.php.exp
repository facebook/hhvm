[("\\NS1\\NS2\\C",
  (Shallow_decl_defs.Class
     { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
       sc_abstract = false; sc_is_xhp = false; sc_internal = false;
       sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
       sc_module = None; sc_name = ([5:7-8], "\\NS1\\NS2\\C");
       sc_tparams = []; sc_extends = []; sc_uses = []; sc_xhp_attr_uses = [];
       sc_xhp_enum_values = {}; sc_xhp_marked_empty = false;
       sc_req_extends = []; sc_req_implements = []; sc_req_constraints = [];
       sc_implements = []; sc_support_dynamic_type = false;
       sc_consts =
       [{ Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
          scc_name = ([6:16-19], "KEY");
          scc_type = (Rhint ([6:9-15]), (Tprim Tstring)); scc_refs = [];
          scc_value = None }
         ];
       sc_typeconsts =
       [{ Shallow_decl_defs.stc_name = ([8:14-18], "TInt");
          stc_kind =
          (Typing_defs.TCConcrete
             { Typing_defs.tc_type = (Rhint ([8:21-24]), (Tprim Tint)) });
          stc_enforceable = ([Pos.none], false); stc_reifiable = None;
          stc_is_ctx = false };
         { Shallow_decl_defs.stc_name = ([9:14-20], "TShape");
           stc_kind =
           (Typing_defs.TCConcrete
              { Typing_defs.tc_type =
                (Rhint ([9:23-11:4]),
                 (Tshape
                    { s_origin = Typing_defs_core.Missing_origin;
                      s_fields =
                      { (Typing_defs_core.TSFclass_const (
                           ([10:5-9], "\\NS1\\NS2\\C"), ([10:11-14], "KEY"))) ->
                        { sft_optional = false;
                          sft_ty =
                          (Rhint ([10:18-28]),
                           (Taccess
                              ((Rhint ([10:18-28]),
                                (Tapply (([5:7-8], "\\NS1\\NS2\\C"), []))),
                               [([10:24-28], "TInt")])))
                          } };
                      s_unknown_value = (Rhint ([Pos.none]), (Tunion [])) }))
                });
           stc_enforceable = ([Pos.none], false); stc_reifiable = None;
           stc_is_ctx = false }
         ];
       sc_props = []; sc_sprops = []; sc_constructor = None;
       sc_static_methods = [];
       sc_methods =
       [{ Shallow_decl_defs.sm_name = ([13:19-20], "f");
          sm_type =
          (Rwitness_from_decl ([13:19-20]),
           (Tfun
              { ft_tparams = []; ft_where_constraints = [];
                ft_params =
                [{ fp_pos = [13:32-34]; fp_name = (Some "$x");
                   fp_type =
                   (Rhint ([13:21-31]),
                    (Taccess
                       ((Rhint ([13:21-31]),
                         (Tapply (([5:7-8], "\\NS1\\NS2\\C"), []))),
                        [([13:27-31], "TInt")])));
                   fp_flags =
                   { Typing_defs_flags.FunParam.accept_disposable = false;
                     inout = false; is_optional = false; readonly = false;
                     ignore_readonly_error = false; splat = false;
                     named = false };
                   fp_def_value = None }
                  ];
                ft_implicit_params =
                { capability = (CapDefaults [13:19-20]) };
                ft_ret = (Rhint ([13:37-41]), (Tprim Tvoid));
                ft_flags =
                { Typing_defs_flags.Fun.return_disposable = false;
                  async = false; generator = false; fun_kind = FSync;
                  is_function_pointer = false; returns_readonly = false;
                  readonly_this = false; support_dynamic_type = false;
                  is_memoized = false; variadic = false };
                ft_require_package = None; ft_instantiated = true }));
          sm_visibility = Public; sm_deprecated = None;
          sm_flags =
          { Shallow_decl_defs.MethodFlags.abstract = false; final = false;
            override = false; dynamicallycallable = false;
            php_std_lib = false; support_dynamic_type = false;
            no_auto_likes = false; needs_concrete = false };
          sm_attributes = []; sm_sort_text = None }
         ];
       sc_user_attributes = []; sc_enum_type = None; sc_docs_url = None;
       sc_package = None }))
  ]
