#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from __future__ import annotations

from abc import ABCMeta
import typing as _typing

import folly.iobuf as _fbthrift_iobuf

import apache.thrift.metadata.thrift_types as _fbthrift_metadata
from thrift.python.serializer import serialize_iobuf, deserialize, Protocol
from thrift.python.server import ServiceInterface, oneway, PythonUserException

import test.fixtures.interactions.module.thrift_types
import test.fixtures.interactions.module.thrift_metadata

class MyServiceInterface(
    ServiceInterface,
    metaclass=ABCMeta
):

    @staticmethod
    def service_name() -> bytes:
        return b"MyService"

    # pyre-ignore[3]: it can return anything
    def getFunctionTable(self) -> _typing.Mapping[bytes, _typing.Callable[..., _typing.Any]]:
        functionTable = {
            b"foo": self._fbthrift__handler_foo,
            b"interact": self._fbthrift__handler_interact,
            b"interactFast": self._fbthrift__handler_interactFast,
        }
        return {**super().getFunctionTable(), **functionTable}

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyService"

    @staticmethod
    def __get_metadata__() -> _fbthrift_metadata.ThriftMetadata:
        return test.fixtures.interactions.module.thrift_metadata.gen_metadata_service_MyService()

    @staticmethod
    def __get_metadata_service_response__() -> _fbthrift_metadata.ThriftServiceMetadataResponse:
        return test.fixtures.interactions.module.thrift_metadata._fbthrift_metadata_service_response_MyService()



    async def foo(
            self
        ) -> None:
        raise NotImplementedError("async def foo is not implemented")

    async def _fbthrift__handler_foo(self, args: _fbthrift_iobuf.IOBuf, protocol: Protocol) -> _fbthrift_iobuf.IOBuf:
        args_struct = deserialize(test.fixtures.interactions.module.thrift_types._fbthrift_MyService_foo_args, args, protocol)
        value = await self.foo()
        return_struct = test.fixtures.interactions.module.thrift_types._fbthrift_MyService_foo_result()

        return serialize_iobuf(return_struct, protocol)


    async def interact(
            self,
            arg: int
        ) -> None:
        raise NotImplementedError("async def interact is not implemented")

    async def _fbthrift__handler_interact(self, args: _fbthrift_iobuf.IOBuf, protocol: Protocol) -> _fbthrift_iobuf.IOBuf:
        args_struct = deserialize(test.fixtures.interactions.module.thrift_types._fbthrift_MyService_interact_args, args, protocol)
        value = await self.interact(args_struct.arg,)
        return_struct = test.fixtures.interactions.module.thrift_types._fbthrift_MyService_interact_result()

        return serialize_iobuf(return_struct, protocol)


    async def interactFast(
            self
        ) -> int:
        raise NotImplementedError("async def interactFast is not implemented")

    async def _fbthrift__handler_interactFast(self, args: _fbthrift_iobuf.IOBuf, protocol: Protocol) -> _fbthrift_iobuf.IOBuf:
        args_struct = deserialize(test.fixtures.interactions.module.thrift_types._fbthrift_MyService_interactFast_args, args, protocol)
        value = await self.interactFast()
        return_struct = test.fixtures.interactions.module.thrift_types._fbthrift_MyService_interactFast_result(success=value)

        return serialize_iobuf(return_struct, protocol)

