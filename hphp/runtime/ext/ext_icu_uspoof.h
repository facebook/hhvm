/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010-2013 Facebook, Inc. (http://www.facebook.com)     |
   | Copyright (c) 1997-2010 The PHP Group                                |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/

#ifndef EXT_ICU_USPOOF_H
#define EXT_ICU_USPOOF_H

// >>>>>> Generated by idl.php. Do NOT modify. <<<<<<

#include "hphp/runtime/base/base-includes.h"

// Avoid dragging in the icu namespace.
#ifndef U_USING_ICU_NAMESPACE
#define U_USING_ICU_NAMESPACE 0
#endif

#include <unicode/uspoof.h>
#include <unicode/utypes.h>
namespace HPHP {
///////////////////////////////////////////////////////////////////////////////

extern const int64_t q_SpoofChecker$$SINGLE_SCRIPT_CONFUSABLE;
extern const int64_t q_SpoofChecker$$MIXED_SCRIPT_CONFUSABLE;
extern const int64_t q_SpoofChecker$$WHOLE_SCRIPT_CONFUSABLE;
extern const int64_t q_SpoofChecker$$ANY_CASE;
extern const int64_t q_SpoofChecker$$SINGLE_SCRIPT;
extern const int64_t q_SpoofChecker$$INVISIBLE;
extern const int64_t q_SpoofChecker$$CHAR_LIMIT;

///////////////////////////////////////////////////////////////////////////////
// class SpoofChecker

FORWARD_DECLARE_CLASS(SpoofChecker);
class c_SpoofChecker : public ExtObjectData {
 public:
  DECLARE_CLASS_NO_SWEEP(SpoofChecker)

  // need to implement
  public: c_SpoofChecker(Class* cls = c_SpoofChecker::classof());
  ~c_SpoofChecker() {
    uspoof_close(m_spoof_checker);
  }
  public: void t___construct();
  public: bool t_issuspicious(
    const String& text, VRefParam issuesFound = uninit_null());
  public: bool t_areconfusable(
    const String& s1, const String& s2, VRefParam issuesFound = uninit_null());
  public: void t_setallowedlocales(const String& localesList);
  public: void t_setchecks(int checks);

  private: USpoofChecker *m_spoof_checker;
};

///////////////////////////////////////////////////////////////////////////////
}

#endif // EXT_ICU_USPOOF_H
