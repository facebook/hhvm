[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
      fd_file_attributes =
      [{ fa_user_attributes = [{ ua_name = ([2:8-36], "__EnableExperimentalFeatures"); ua_params = [((), [2:37-73], (String "interpret_soft_types_as_like_types"))] }];
         fa_namespace =
         { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
           ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
           ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false }
         }
        ];
      fd_mode = Mstrict; fd_name = ([4:10-36], "\\tcopt_soft_as_like_enabled");
      fd_fun =
      { f_span = [4:1-6:2]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_tparams = []; f_ret = ((), (Some ([4:57-61], (Hlike ([4:58-61], (Hprim Tint))))));
        f_params =
        [{ param_annotation = (); param_type_hint = ((), (Some ([4:48-51], (Hlike ([4:48-51], (Hprim Tint)))))); 
           param_pos = [4:52-54]; param_name = "$x"; param_info = Param_required; 
           param_readonly = None; param_splat = None; param_callconv = Pnormal; 
           param_named = None; param_user_attributes = [{ ua_name = ([4:39-45], "__Soft"); ua_params = [] }]; 
           param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None;
        f_body = { fb_ast = [([5:3-17], (Return (Some ((), [5:10-16], (Binop { bop = Plus; lhs = ((), [5:10-12], (Lvar ([5:10-12], $x))); rhs = ((), [5:15-16], (Int "1")) })))))] };
        f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([4:10-36], "__SupportDynamicType"); ua_params = [] }]; 
        f_external = false; f_doc_comment = None };
      fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
      fd_package = None })
  ]
