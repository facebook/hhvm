==============================================
test_recursive_provenance:

Printing provenance for $x:
varray(3) {
  vec(1) {
    object(C) (0) {
    }
  }
  varray(1) {
    object(C) (0) {
    }
  }
  vec(3) {
    darray(2) {
      ["c"]=>
      object(C) (0) {
      }
      ["v"]=>
      varray(1) {
        object(C) (0) {
        }
      }
    }
    vec(1) {
      object(C) (0) {
      }
    }
    varray(1) {
      object(C) (0) {
      }
    }
  }
}
$x: %s/test/slow/array_provenance/recursive-provenance.php:34
$x[0]: <none>
$x[0][0]: <not an array>
$x[1]: %s/test/slow/array_provenance/recursive-provenance.php:28
$x[1][0]: <not an array>
$x[2]: <none>
$x[2][0]: %s/test/slow/array_provenance/recursive-provenance.php:30
$x[2][0][c]: <not an array>
$x[2][0][v]: %s/test/slow/array_provenance/recursive-provenance.php:30
$x[2][0][v][0]: <not an array>
$x[2][1]: <none>
$x[2][1][0]: <not an array>
$x[2][2]: %s/test/slow/array_provenance/recursive-provenance.php:32
$x[2][2][0]: <not an array>

Printing provenance for $y:
varray(3) {
  vec(1) {
    object(C) (0) {
    }
  }
  varray(1) {
    object(C) (0) {
    }
  }
  vec(3) {
    darray(2) {
      ["c"]=>
      object(C) (0) {
      }
      ["v"]=>
      varray(1) {
        object(C) (0) {
        }
      }
    }
    vec(1) {
      object(C) (0) {
      }
    }
    varray(1) {
      object(C) (0) {
      }
    }
  }
}
$y: %s/test/slow/array_provenance/recursive-provenance.php:37
$y[0]: <none>
$y[0][0]: <not an array>
$y[1]: %s/test/slow/array_provenance/recursive-provenance.php:37
$y[1][0]: <not an array>
$y[2]: <none>
$y[2][0]: %s/test/slow/array_provenance/recursive-provenance.php:37
$y[2][0][c]: <not an array>
$y[2][0][v]: %s/test/slow/array_provenance/recursive-provenance.php:37
$y[2][0][v][0]: <not an array>
$y[2][1]: <none>
$y[2][1][0]: <not an array>
$y[2][2]: %s/test/slow/array_provenance/recursive-provenance.php:37
$y[2][2][0]: <not an array>

Printing provenance for $x:
vec(1) {
  varray(3) {
    int(1)
    int(2)
    int(3)
  }
}
$x: <none>
$x[0]: %s
$x[0][0]: <not an array>
$x[0][1]: <not an array>
$x[0][2]: <not an array>

Printing provenance for $y:
vec(1) {
  varray(3) {
    int(1)
    int(2)
    int(3)
  }
}
$y: <none>
$y[0]: %s/test/slow/array_provenance/recursive-provenance.php:45
$y[0][0]: <not an array>
$y[0][1]: <not an array>
$y[0][2]: <not an array>

==============================================
test_cow_optimizations:

Printing provenance for $x:
varray(1) {
  varray(1) {
    object(C) (0) {
    }
  }
}
$x: %s/test/slow/array_provenance/recursive-provenance.php:55
$x[0]: %s/test/slow/array_provenance/recursive-provenance.php:55
$x[0][0]: <not an array>

==============================================
test_unable_to_cow:

Printing provenance for $x:
darray(1) {
  ["a"]=>
  darray(1) {
    ["b"]=>
    varray(1) {
      object(C) (0) {
      }
    }
  }
}
$x: %s/test/slow/array_provenance/recursive-provenance.php:63
$x[a]: %s/test/slow/array_provenance/recursive-provenance.php:63
$x[a][b]: %s/test/slow/array_provenance/recursive-provenance.php:63
$x[a][b][0]: <not an array>

Printing provenance for $y:
varray(1) {
  darray(1) {
    ["b"]=>
    varray(1) {
      object(C) (0) {
      }
    }
  }
}
$y: %s/test/slow/array_provenance/recursive-provenance.php:64
$y[0]: %s/test/slow/array_provenance/recursive-provenance.php:64
$y[0][b]: %s/test/slow/array_provenance/recursive-provenance.php:64
$y[0][b][0]: <not an array>
