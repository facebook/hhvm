#!/bin/bash

# Copyright (c) 2015, 2019, Oracle and/or its affiliates. All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2.0,
# as published by the Free Software Foundation.
#
# This program is also distributed with certain software (including
# but not limited to OpenSSL) that is licensed under separate terms,
# as designated in a particular file or component or in included license
# documentation.  The authors of MySQL hereby grant you an additional
# permission to link the program and your derivative works with the
# separately licensed software that they have included with MySQL.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License, version 2.0, for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA

. /usr/share/debconf/confmodule
. /usr/share/mysql-@MYSQL_BASE_VERSION@/mysql-helpers
take_upstart_job_backup () {
	if [ -e "/etc/init/mysql.conf" ] && [ -d "/var/lib/mysql" ];
	then
		mv /etc/init/mysql.conf /var/lib/mysql/.mysql.conf.backup
	fi
}

invoke() {
	if pathfind invoke-rc.d; then
		invoke-rc.d mysql
	else
		/etc/init.d/mysql $1
	fi
}

case "$1" in
	configure)

	if [ -z "$2" ];
	then

		set -e

		# Check if we should override new default auth plugin
		OVERRIDEFILE="/etc/mysql/mysql.conf.d/default-auth-override.cnf"
		if [ ! -e "$OVERRIDEFILE" ];
		then
			db_get mysql-server/default-auth-override && OVERRIDE=${RET}
			if [ "$OVERRIDE" = "Use Legacy Authentication Method (Retain MySQL 5.x Compatibility)" ]; then
				install -m0644 /dev/null "$OVERRIDEFILE"
				echo "# This file is automatically generated by MySQL Maintainer Scripts" >> "$OVERRIDEFILE"
				echo "[mysqld]" >> "$OVERRIDEFILE"
				echo "default-authentication-plugin = mysql_native_password" >> "$OVERRIDEFILE"
			fi
		fi

		# Check if we should enable lowercase table names
		OVERRIDEFILE="/etc/mysql/mysql.conf.d/lowercase-table-names.cnf"
		if [ ! -e "$OVERRIDEFILE" ];
		then
			db_get mysql-server/lowercase-table-names && OVERRIDE=${RET}
			if [ "$OVERRIDE" = "Enabled" ]; then
				install -m0644 /dev/null "$OVERRIDEFILE"
				echo "# This file is automatically generated by MySQL Maintainer Scripts" >> "$OVERRIDEFILE"
				echo "[mysqld]" >> "$OVERRIDEFILE"
				echo "lower-case-table-names = 1" >> "$OVERRIDEFILE"
			fi
		fi

		# If the existing config file is a proper file, we back it up
		if [ -f "/etc/mysql/my.cnf" ] && [ ! -L "/etc/mysql/my.cnf" ]; then
			cp /etc/mysql/my.cnf /etc/mysql/my.cnf.bak
		fi
		update-alternatives --force --install /etc/mysql/my.cnf my.cnf "/etc/mysql/mysql.cnf" 200

		verify_ready
		MYSQLDATA=/var/lib/mysql
		MYSQLFILES=/var/lib/mysql-files
		if aa-status --enabled 2>/dev/null; then
			apparmor_parser -r -T -W /etc/apparmor.d/usr.sbin.mysqld 2>/dev/null || true
		fi
		if [ ! "$(ls -A ${MYSQLDATA})" ] && [ -d ${MYSQLFILES} ];
		then
			db_get mysql-@DEB_PRODUCTNAME@-server/root-pass && PASSWD=${RET}
			db_set mysql-@DEB_PRODUCTNAME@-server/root-pass ""
			db_set mysql-@DEB_PRODUCTNAME@-server/re-root-pass ""
			SQL=$(mktemp -u ${MYSQLFILES}/XXXXXXXXXX)
			install /dev/null -m0600 -omysql -gmysql "${SQL}"
			if [ ! -z "${PASSWD}" ];
			then
				PASSWD=$(printf %q "${PASSWD}")
				cat << EOF > ${SQL}
USE mysql;
ALTER user 'root'@'localhost' IDENTIFIED BY '${PASSWD}';
SHUTDOWN;
EOF
				PASSWD=""
			else
				cat << EOF > ${SQL}
SET @@SESSION.SQL_LOG_BIN=0;
USE mysql;
INSTALL PLUGIN auth_socket SONAME 'auth_socket.so';
ALTER USER 'root'@'localhost' IDENTIFIED WITH 'auth_socket';
SHUTDOWN;
EOF
			fi
			mysqld --initialize-insecure --user=mysql > /dev/null
			run_init_sql "$SQL"
			rm -f "$SQL"
		fi
		set +e

	fi

	;;

	abort-upgrade|abort-remove|abort-configure)

	;;

	*)
	exit 1
	;;
esac

db_stop

take_upstart_job_backup

#DEBHELPER#

exit 0
