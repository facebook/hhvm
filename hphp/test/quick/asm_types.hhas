# Test type annotations for hhas

.adata A_0 = """Y:0:{}""";


.function use_class(<"@C" "C" extended_hint soft> $x) {
  VerifyParamType $x
  Null
  RetC
}

.function use_int_soft(<"@HH\\int" "HH\\int" extended_hint soft> $x) {
  VerifyParamType $x
  Null
  RetC
}

.function use_int_nullable(<"?HH\\int" "HH\\int" nullable extended_hint> $x) {
  VerifyParamType $x
  Null
  RetC
}

.function use_int(<"HH\\int" "HH\\int"> $x) {
  VerifyParamType $x
  Null
  RetC
}

.function use_mixed(<"HH\\mixed" N> $x) {
  Null
  RetC
}

.function ["__EntryPoint"("""y:0:{}""")] main() {
  NullUninit
  NullUninit
  NullUninit
  NewObjD "C"
  Dup
  NullUninit
  NullUninit
  FCallCtor <LockWhileUnwinding> 0 1 "" - "" ""
  PopC
  LockObj
  FCallFuncD <> 1 1 "" - "" "use_class"
  PopC

  NullUninit
  NullUninit
  NullUninit
  Null
  FCallFuncD <> 1 1 "" - "" "use_class"
  PopC

  NullUninit
  NullUninit
  NullUninit
  Int 5
  FCallFuncD <> 1 1 "" - "" "use_int_soft"
  PopC

  NullUninit
  NullUninit
  NullUninit
  Array @A_0
  FCallFuncD <> 1 1 "" - "" "use_int_soft"
  PopC

  NullUninit
  NullUninit
  NullUninit
  Null
  FCallFuncD <> 1 1 "" - "" "use_int_soft"
  PopC

  NullUninit
  NullUninit
  NullUninit
  Int 6
  FCallFuncD <> 1 1 "" - "" "use_int_nullable"
  PopC

  NullUninit
  NullUninit
  NullUninit
  Null
  FCallFuncD <> 1 1 "" - "" "use_int_nullable"
  PopC

  NullUninit
  NullUninit
  NullUninit
  Int 5
  FCallFuncD <> 1 1 "" - "" "use_int"
  PopC

  NullUninit
  NullUninit
  NullUninit
  Array @A_0
  FCallFuncD <> 1 1 "" - "" "use_mixed"
  PopC

  NullUninit
  NullUninit
  NullUninit
  Array @A_0
  FCallFuncD <> 1 1 "" - "" "use_int"
  PopC

  Null
  RetC
}

.class C {
  .method [public static] <"HH\\int" "HH\\int" extended_hint> test() {
    Int 42
    RetC
  }
}
