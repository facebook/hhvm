<?hh

/* HH_FIXME[4110] */
class    HasFixme          {
  public function why() {
    // Here is a motivating example for the fixmes-suppress-formatting feature.
    // We do not want to format this node because it would move the suppression
    // comment away from the error, causing it to fail to suppress the error:

    /* HH_FIXME[4110] */
    f($some_type_error_we_would_like_to_suppress, $xxxxxxxxxx, $yyyyyyyyyy, $zzzzzzzzzz);
  }

  public function cases() {
    // The FIXME on the class definition only suppresses formatting for the
    // first line (containing the tokens "class" "HasFixme" "{"). Statements
    // inside the class, like this one, are still formatted normally.
    $this_is + $formatted;

    /* HH_FIXME[1111] */
    func($not_formatted,
      $formatted,
      $formatted,
    );

    /* HH_FIXME[2222] */
    func($not_formatted,
      $formatted,
    );

    /* HH_FIXME[3333] */ func($not_formatted,
                              $not_formatted,
      $formatted,
      $formatted,
    );

        /* HH_FIXME[1000] */// not formatted
      /* HH_FIXME[2000] */  // not formatted
    /* HH_FIXME[3000] */ func($not_formatted,
                              $not_formatted,
      $formatted,
      $formatted,
    );

    /* HH_FIXME[4444] */
    f($some_type_error_we_would_like_to_suppress, $xxxxxxxxxx, $yyyyyyyyyy, $zzzzzzzzzz)
+
      $this_part_of_the_expression +
      $is_still_formatted;

    /* HH_FIXME[4297] */
    expect(PHPism_FIXME::varrayFuzzyEqualsDarray($config['foo'], varray[
      'apples',
      'oranges',
      'kiwis',
      'pears',
    ]))->toBeTrue();
  }
}
