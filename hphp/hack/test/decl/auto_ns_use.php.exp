[("\\HH\\Lib\\Dict\\MixedDict",
  (Shallow_decl_defs.Typedef
     { Typing_defs.td_module = None; td_pos = [5:10-19]; td_tparams = [];
       td_as_constraint = None; td_super_constraint = None;
       td_type_assignment =
       (Typing_defs.SimpleTypeDef (Transparent,
          (Rhint ([5:22-43]),
           (Tapply (([5:22-26], "\\HH\\dict"),
              [(Rhint ([5:27-35]), (Tprim Tarraykey));
                (Rhint ([5:37-42]), Tmixed)]
              )))
          ));
       td_is_ctx = false; td_attributes = []; td_internal = false;
       td_docs_url = None; td_package = None }));
  ("\\make_dict",
   (Shallow_decl_defs.Fun
      { Typing_defs.fe_deprecated = None; fe_module = None;
        fe_package = None; fe_internal = false;
        fe_type =
        (Rwitness_from_decl ([8:12-21]),
         (Tfun
            { ft_tparams = []; ft_where_constraints = []; ft_params = [];
              ft_implicit_params = { capability = (CapDefaults [8:12-21]) };
              ft_ret =
              (Rhint ([8:25-39]),
               (Tapply (([8:25-39], "\\HH\\Lib\\Dict\\MixedDict"), [])));
              ft_flags =
              { Typing_defs_flags.Fun.return_disposable = false;
                async = false; generator = false; fun_kind = FSync;
                is_function_pointer = false; returns_readonly = false;
                readonly_this = false; support_dynamic_type = false;
                is_memoized = false; variadic = false };
              ft_require_package = None; ft_instantiated = true }));
        fe_pos = [8:12-21]; fe_php_std_lib = false;
        fe_support_dynamic_type = false; fe_no_auto_dynamic = false;
        fe_no_auto_likes = false }));
  ("\\get_value",
   (Shallow_decl_defs.Fun
      { Typing_defs.fe_deprecated = None; fe_module = None;
        fe_package = None; fe_internal = false;
        fe_type =
        (Rwitness_from_decl ([12:12-21]),
         (Tfun
            { ft_tparams = []; ft_where_constraints = [];
              ft_params =
              [{ fp_pos = [12:37-39]; fp_name = (Some "$d");
                 fp_type =
                 (Rhint ([12:22-36]),
                  (Tapply (([12:22-36], "\\HH\\Lib\\Dict\\MixedDict"), [])));
                 fp_flags =
                 { Typing_defs_flags.FunParam.accept_disposable = false;
                   inout = false; is_optional = false; readonly = false;
                   ignore_readonly_error = false; splat = false;
                   named = false };
                 fp_def_value = None };
                { fp_pos = [12:50-52]; fp_name = (Some "$k");
                  fp_type = (Rhint ([12:41-49]), (Tprim Tarraykey));
                  fp_flags =
                  { Typing_defs_flags.FunParam.accept_disposable = false;
                    inout = false; is_optional = false; readonly = false;
                    ignore_readonly_error = false; splat = false;
                    named = false };
                  fp_def_value = None }
                ];
              ft_implicit_params = { capability = (CapDefaults [12:12-21]) };
              ft_ret = (Rhint ([12:55-60]), Tmixed);
              ft_flags =
              { Typing_defs_flags.Fun.return_disposable = false;
                async = false; generator = false; fun_kind = FSync;
                is_function_pointer = false; returns_readonly = false;
                readonly_this = false; support_dynamic_type = false;
                is_memoized = false; variadic = false };
              ft_require_package = None; ft_instantiated = true }));
        fe_pos = [12:12-21]; fe_php_std_lib = false;
        fe_support_dynamic_type = false; fe_no_auto_dynamic = false;
        fe_no_auto_likes = false }));
  ("\\MyDict",
   (Shallow_decl_defs.Typedef
      { Typing_defs.td_module = None; td_pos = [16:8-14]; td_tparams = [];
        td_as_constraint = None; td_super_constraint = None;
        td_type_assignment =
        (Typing_defs.SimpleTypeDef (Transparent,
           (Rhint ([16:17-31]),
            (Tapply (([16:17-31], "\\HH\\Lib\\Dict\\MixedDict"), [])))
           ));
        td_is_ctx = false; td_attributes = []; td_internal = false;
        td_docs_url = None; td_package = None }))
  ]
