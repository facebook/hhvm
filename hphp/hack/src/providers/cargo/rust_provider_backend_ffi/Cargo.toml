# @generated by autocargo

[package]
name = "rust_provider_backend_ffi"
version = "0.0.0"
edition = "2021"

[lib]
path = "../../rust_provider_backend_ffi.rs"
test = false
doctest = false
crate-type = ["lib", "staticlib"]

[dependencies]
bincode = "1.3.3"
bstr = { version = "1.0", features = ["serde", "std", "unicode"] }
deps_rust = { version = "0.0.0", path = "../../../deps/cargo/deps_rust" }
file_info = { version = "0.0.0", path = "../../../deps/rust/file_info" }
file_provider = { version = "0.0.0", path = "../../../hackrs/file_provider/cargo/file_provider" }
hackrs_provider_backend = { version = "0.0.0", path = "../../hackrs_provider_backend" }
naming_provider = { version = "0.0.0", path = "../../../hackrs/naming_provider/cargo/naming_provider" }
ocamlrep = { version = "0.0.0", path = "../../../ocamlrep" }
ocamlrep_custom = { version = "0.0.0", path = "../../../ocamlrep_custom" }
ocamlrep_ocamlpool = { version = "0.0.0", path = "../../../ocamlrep_ocamlpool" }
oxidized = { version = "0.0.0", path = "../../../oxidized" }
oxidized_by_ref = { version = "0.0.0", path = "../../../oxidized_by_ref" }
pos = { version = "0.0.0", path = "../../../hackrs/pos/cargo/pos" }
rust_decl_ffi = { version = "0.0.0", path = "../../../decl/cargo/rust_decl_ffi" }
rust_provider_backend_api = { version = "0.0.0", path = "../.." }
ty = { version = "0.0.0", path = "../../../hackrs/ty/cargo/ty" }
