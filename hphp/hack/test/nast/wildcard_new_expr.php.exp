[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([3:10-25], "\\wildcard_vector");
      fd_fun =
      { f_span = [3:1-5:2]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_tparams = []; f_ret = ((), (Some ([3:49-53], (Hprim Tvoid))));
        f_params =
        [{ param_annotation = (); param_type_hint = ((), (Some ([3:26-42], (Happly (([3:26-37], "\\HH\\Traversable"), [([3:38-41], (Hprim Tint))]))))); 
           param_pos = [3:43-46]; param_name = "$xs"; param_info = Param_required; 
           param_readonly = None; param_splat = None; param_callconv = Pnormal; 
           param_named = None; param_user_attributes = []; param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None;
        f_body =
        { fb_ast =
          [([4:3-27],
            (Expr
               ((), [4:3-26],
                (Assign (((), [4:3-5], (Lplaceholder [4:3-5])), None,
                   ((), [4:8-26], (New (((), [4:12-18], (CI ([4:12-18], "\\HH\\Vector"))), [((), ([4:19-20], Hwildcard))], [((), [4:22-25], (Lvar ([4:22-25], $xs)))], None, ()))))))))
            ]
          };
        f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([3:10-25], "__SupportDynamicType"); ua_params = [] }]; 
        f_external = false; f_doc_comment = None };
      fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
      fd_package = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([7:10-22], "\\wildcard_map");
       fd_fun =
       { f_span = [7:1-9:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_tparams = []; f_ret = ((), (Some ([7:57-61], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = (); param_type_hint = ((), (Some ([7:23-50], (Happly (([7:23-39], "\\HH\\KeyedTraversable"), [([7:40-43], (Hprim Tint)); ([7:45-49], (Hprim Tbool))])))));
            param_pos = [7:51-54]; param_name = "$xs"; param_info = Param_required; 
            param_readonly = None; param_splat = None; param_callconv = Pnormal; 
            param_named = None; param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([8:3-27],
             (Expr
                ((), [8:3-26],
                 (Assign (((), [8:3-5], (Lplaceholder [8:3-5])), None,
                    ((), [8:8-26],
                     (New (((), [8:12-15], (CI ([8:12-15], "\\HH\\Map"))), [((), ([8:16-17], Hwildcard)); ((), ([8:19-20], Hwildcard))], [((), [8:22-25], (Lvar ([8:22-25], $xs)))], None, ())))
                    )))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([7:10-22], "__SupportDynamicType"); ua_params = [] }]; 
         f_external = false; f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
       fd_package = None })
  ]
