/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package test.fixtures.patch;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.Collections;
import java.util.BitSet;
import java.util.Arrays;
import com.facebook.thrift.*;
import com.facebook.thrift.annotations.*;
import com.facebook.thrift.async.*;
import com.facebook.thrift.meta_data.*;
import com.facebook.thrift.server.*;
import com.facebook.thrift.transport.*;
import com.facebook.thrift.protocol.*;

@SuppressWarnings({ "unused", "serial" })
public class MyStructFieldPatch implements TBase, java.io.Serializable, Cloneable, Comparable<MyStructFieldPatch> {
  private static final TStruct STRUCT_DESC = new TStruct("MyStructFieldPatch");
  private static final TField STRUCT_WITH_CUSTOM_DEFAULT_FIELD_DESC = new TField("structWithCustomDefault", TType.STRUCT, (short)-32);
  private static final TField I32_WITH_CUSTOM_DEFAULT_FIELD_DESC = new TField("i32WithCustomDefault", TType.STRUCT, (short)-31);
  private static final TField MAP_MAP_FIELD_DESC = new TField("mapMap", TType.STRUCT, (short)-30);
  private static final TField LIST_MAP_FIELD_DESC = new TField("listMap", TType.STRUCT, (short)-29);
  private static final TField OPT_MAP_VAL_FIELD_DESC = new TField("optMapVal", TType.STRUCT, (short)-28);
  private static final TField OPT_SET_VAL_FIELD_DESC = new TField("optSetVal", TType.STRUCT, (short)-27);
  private static final TField OPT_LIST_VAL_FIELD_DESC = new TField("optListVal", TType.STRUCT, (short)-26);
  private static final TField OPT_LATE_STRUCT_VAL_FIELD_DESC = new TField("optLateStructVal", TType.STRUCT, (short)-25);
  private static final TField OPT_STRUCT_VAL_FIELD_DESC = new TField("optStructVal", TType.STRUCT, (short)-24);
  private static final TField OPT_ENUM_VAL_FIELD_DESC = new TField("optEnumVal", TType.STRUCT, (short)-23);
  private static final TField OPT_BINARY_VAL_FIELD_DESC = new TField("optBinaryVal", TType.STRUCT, (short)-22);
  private static final TField OPT_STRING_VAL_FIELD_DESC = new TField("optStringVal", TType.STRUCT, (short)-21);
  private static final TField OPT_DOUBLE_VAL_FIELD_DESC = new TField("optDoubleVal", TType.STRUCT, (short)-20);
  private static final TField OPT_FLOAT_VAL_FIELD_DESC = new TField("optFloatVal", TType.STRUCT, (short)-19);
  private static final TField OPT_I64_VAL_FIELD_DESC = new TField("optI64Val", TType.STRUCT, (short)-18);
  private static final TField OPT_I32_VAL_FIELD_DESC = new TField("optI32Val", TType.STRUCT, (short)-17);
  private static final TField OPT_I16_VAL_FIELD_DESC = new TField("optI16Val", TType.STRUCT, (short)-16);
  private static final TField OPT_BYTE_VAL_FIELD_DESC = new TField("optByteVal", TType.STRUCT, (short)-15);
  private static final TField OPT_BOOL_VAL_FIELD_DESC = new TField("optBoolVal", TType.STRUCT, (short)-14);
  private static final TField LATE_STRUCT_VAL_FIELD_DESC = new TField("lateStructVal", TType.STRUCT, (short)-13);
  private static final TField UNION_VAL_FIELD_DESC = new TField("unionVal", TType.STRUCT, (short)-12);
  private static final TField STRUCT_VAL_FIELD_DESC = new TField("structVal", TType.STRUCT, (short)-11);
  private static final TField ENUM_VAL_FIELD_DESC = new TField("enumVal", TType.STRUCT, (short)-10);
  private static final TField BINARY_VAL_FIELD_DESC = new TField("binaryVal", TType.STRUCT, (short)-9);
  private static final TField STRING_VAL_FIELD_DESC = new TField("stringVal", TType.STRUCT, (short)-8);
  private static final TField DOUBLE_VAL_FIELD_DESC = new TField("doubleVal", TType.STRUCT, (short)-7);
  private static final TField FLOAT_VAL_FIELD_DESC = new TField("floatVal", TType.STRUCT, (short)-6);
  private static final TField I64_VAL_FIELD_DESC = new TField("i64Val", TType.STRUCT, (short)-5);
  private static final TField I32_VAL_FIELD_DESC = new TField("i32Val", TType.STRUCT, (short)-4);
  private static final TField I16_VAL_FIELD_DESC = new TField("i16Val", TType.STRUCT, (short)-3);
  private static final TField BYTE_VAL_FIELD_DESC = new TField("byteVal", TType.STRUCT, (short)-2);
  private static final TField BOOL_VAL_FIELD_DESC = new TField("boolVal", TType.STRUCT, (short)-1);
  private static final TField STRUCT_WITH_FIELD_CUSTOM_DEFAULT_FIELD_DESC = new TField("structWithFieldCustomDefault", TType.STRUCT, (short)1);

  public MyDataWithCustomDefaultPatch structWithCustomDefault;
  public com.facebook.thrift.op.I32Patch i32WithCustomDefault;
  public MyStructField30Patch mapMap;
  public MyStructField29Patch listMap;
  public MyStructField28Patch optMapVal;
  public MyStructField27Patch optSetVal;
  public MyStructField26Patch optListVal;
  public LateDefStructPatch optLateStructVal;
  public MyDataPatch optStructVal;
  public MyStructField23Patch optEnumVal;
  public com.facebook.thrift.op.BinaryPatch optBinaryVal;
  public com.facebook.thrift.op.StringPatch optStringVal;
  public com.facebook.thrift.op.DoublePatch optDoubleVal;
  public com.facebook.thrift.op.FloatPatch optFloatVal;
  public com.facebook.thrift.op.I64Patch optI64Val;
  public com.facebook.thrift.op.I32Patch optI32Val;
  public com.facebook.thrift.op.I16Patch optI16Val;
  public com.facebook.thrift.op.BytePatch optByteVal;
  public com.facebook.thrift.op.BoolPatch optBoolVal;
  public LateDefStructPatch lateStructVal;
  public MyUnionPatch unionVal;
  public MyDataPatch structVal;
  public MyStructField10Patch enumVal;
  public com.facebook.thrift.op.BinaryPatch binaryVal;
  public com.facebook.thrift.op.StringPatch stringVal;
  public com.facebook.thrift.op.DoublePatch doubleVal;
  public com.facebook.thrift.op.FloatPatch floatVal;
  public com.facebook.thrift.op.I64Patch i64Val;
  public com.facebook.thrift.op.I32Patch i32Val;
  public com.facebook.thrift.op.I16Patch i16Val;
  public com.facebook.thrift.op.BytePatch byteVal;
  public com.facebook.thrift.op.BoolPatch boolVal;
  public MyDataPatch structWithFieldCustomDefault;
  public static final int STRUCTWITHCUSTOMDEFAULT = -32;
  public static final int I32WITHCUSTOMDEFAULT = -31;
  public static final int MAPMAP = -30;
  public static final int LISTMAP = -29;
  public static final int OPTMAPVAL = -28;
  public static final int OPTSETVAL = -27;
  public static final int OPTLISTVAL = -26;
  public static final int OPTLATESTRUCTVAL = -25;
  public static final int OPTSTRUCTVAL = -24;
  public static final int OPTENUMVAL = -23;
  public static final int OPTBINARYVAL = -22;
  public static final int OPTSTRINGVAL = -21;
  public static final int OPTDOUBLEVAL = -20;
  public static final int OPTFLOATVAL = -19;
  public static final int OPTI64VAL = -18;
  public static final int OPTI32VAL = -17;
  public static final int OPTI16VAL = -16;
  public static final int OPTBYTEVAL = -15;
  public static final int OPTBOOLVAL = -14;
  public static final int LATESTRUCTVAL = -13;
  public static final int UNIONVAL = -12;
  public static final int STRUCTVAL = -11;
  public static final int ENUMVAL = -10;
  public static final int BINARYVAL = -9;
  public static final int STRINGVAL = -8;
  public static final int DOUBLEVAL = -7;
  public static final int FLOATVAL = -6;
  public static final int I64VAL = -5;
  public static final int I32VAL = -4;
  public static final int I16VAL = -3;
  public static final int BYTEVAL = -2;
  public static final int BOOLVAL = -1;
  public static final int STRUCTWITHFIELDCUSTOMDEFAULT = 1;

  // isset id assignments

  public static final Map<Integer, FieldMetaData> metaDataMap;

  static {
    Map<Integer, FieldMetaData> tmpMetaDataMap = new HashMap<Integer, FieldMetaData>();
    tmpMetaDataMap.put(STRUCTWITHCUSTOMDEFAULT, new FieldMetaData("structWithCustomDefault", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, MyDataWithCustomDefaultPatch.class)));
    tmpMetaDataMap.put(I32WITHCUSTOMDEFAULT, new FieldMetaData("i32WithCustomDefault", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, com.facebook.thrift.op.I32Patch.class)));
    tmpMetaDataMap.put(MAPMAP, new FieldMetaData("mapMap", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, MyStructField30Patch.class)));
    tmpMetaDataMap.put(LISTMAP, new FieldMetaData("listMap", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, MyStructField29Patch.class)));
    tmpMetaDataMap.put(OPTMAPVAL, new FieldMetaData("optMapVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, MyStructField28Patch.class)));
    tmpMetaDataMap.put(OPTSETVAL, new FieldMetaData("optSetVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, MyStructField27Patch.class)));
    tmpMetaDataMap.put(OPTLISTVAL, new FieldMetaData("optListVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, MyStructField26Patch.class)));
    tmpMetaDataMap.put(OPTLATESTRUCTVAL, new FieldMetaData("optLateStructVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, LateDefStructPatch.class)));
    tmpMetaDataMap.put(OPTSTRUCTVAL, new FieldMetaData("optStructVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, MyDataPatch.class)));
    tmpMetaDataMap.put(OPTENUMVAL, new FieldMetaData("optEnumVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, MyStructField23Patch.class)));
    tmpMetaDataMap.put(OPTBINARYVAL, new FieldMetaData("optBinaryVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, com.facebook.thrift.op.BinaryPatch.class)));
    tmpMetaDataMap.put(OPTSTRINGVAL, new FieldMetaData("optStringVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, com.facebook.thrift.op.StringPatch.class)));
    tmpMetaDataMap.put(OPTDOUBLEVAL, new FieldMetaData("optDoubleVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, com.facebook.thrift.op.DoublePatch.class)));
    tmpMetaDataMap.put(OPTFLOATVAL, new FieldMetaData("optFloatVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, com.facebook.thrift.op.FloatPatch.class)));
    tmpMetaDataMap.put(OPTI64VAL, new FieldMetaData("optI64Val", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, com.facebook.thrift.op.I64Patch.class)));
    tmpMetaDataMap.put(OPTI32VAL, new FieldMetaData("optI32Val", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, com.facebook.thrift.op.I32Patch.class)));
    tmpMetaDataMap.put(OPTI16VAL, new FieldMetaData("optI16Val", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, com.facebook.thrift.op.I16Patch.class)));
    tmpMetaDataMap.put(OPTBYTEVAL, new FieldMetaData("optByteVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, com.facebook.thrift.op.BytePatch.class)));
    tmpMetaDataMap.put(OPTBOOLVAL, new FieldMetaData("optBoolVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, com.facebook.thrift.op.BoolPatch.class)));
    tmpMetaDataMap.put(LATESTRUCTVAL, new FieldMetaData("lateStructVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, LateDefStructPatch.class)));
    tmpMetaDataMap.put(UNIONVAL, new FieldMetaData("unionVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, MyUnionPatch.class)));
    tmpMetaDataMap.put(STRUCTVAL, new FieldMetaData("structVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, MyDataPatch.class)));
    tmpMetaDataMap.put(ENUMVAL, new FieldMetaData("enumVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, MyStructField10Patch.class)));
    tmpMetaDataMap.put(BINARYVAL, new FieldMetaData("binaryVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, com.facebook.thrift.op.BinaryPatch.class)));
    tmpMetaDataMap.put(STRINGVAL, new FieldMetaData("stringVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, com.facebook.thrift.op.StringPatch.class)));
    tmpMetaDataMap.put(DOUBLEVAL, new FieldMetaData("doubleVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, com.facebook.thrift.op.DoublePatch.class)));
    tmpMetaDataMap.put(FLOATVAL, new FieldMetaData("floatVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, com.facebook.thrift.op.FloatPatch.class)));
    tmpMetaDataMap.put(I64VAL, new FieldMetaData("i64Val", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, com.facebook.thrift.op.I64Patch.class)));
    tmpMetaDataMap.put(I32VAL, new FieldMetaData("i32Val", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, com.facebook.thrift.op.I32Patch.class)));
    tmpMetaDataMap.put(I16VAL, new FieldMetaData("i16Val", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, com.facebook.thrift.op.I16Patch.class)));
    tmpMetaDataMap.put(BYTEVAL, new FieldMetaData("byteVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, com.facebook.thrift.op.BytePatch.class)));
    tmpMetaDataMap.put(BOOLVAL, new FieldMetaData("boolVal", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, com.facebook.thrift.op.BoolPatch.class)));
    tmpMetaDataMap.put(STRUCTWITHFIELDCUSTOMDEFAULT, new FieldMetaData("structWithFieldCustomDefault", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, MyDataPatch.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMetaDataMap);
  }

  static {
    FieldMetaData.addStructMetaDataMap(MyStructFieldPatch.class, metaDataMap);
  }

  public MyStructFieldPatch() {
  }

  public MyStructFieldPatch(
      MyDataWithCustomDefaultPatch structWithCustomDefault,
      com.facebook.thrift.op.I32Patch i32WithCustomDefault,
      MyStructField30Patch mapMap,
      MyStructField29Patch listMap,
      MyStructField28Patch optMapVal,
      MyStructField27Patch optSetVal,
      MyStructField26Patch optListVal,
      LateDefStructPatch optLateStructVal,
      MyDataPatch optStructVal,
      MyStructField23Patch optEnumVal,
      com.facebook.thrift.op.BinaryPatch optBinaryVal,
      com.facebook.thrift.op.StringPatch optStringVal,
      com.facebook.thrift.op.DoublePatch optDoubleVal,
      com.facebook.thrift.op.FloatPatch optFloatVal,
      com.facebook.thrift.op.I64Patch optI64Val,
      com.facebook.thrift.op.I32Patch optI32Val,
      com.facebook.thrift.op.I16Patch optI16Val,
      com.facebook.thrift.op.BytePatch optByteVal,
      com.facebook.thrift.op.BoolPatch optBoolVal,
      LateDefStructPatch lateStructVal,
      MyUnionPatch unionVal,
      MyDataPatch structVal,
      MyStructField10Patch enumVal,
      com.facebook.thrift.op.BinaryPatch binaryVal,
      com.facebook.thrift.op.StringPatch stringVal,
      com.facebook.thrift.op.DoublePatch doubleVal,
      com.facebook.thrift.op.FloatPatch floatVal,
      com.facebook.thrift.op.I64Patch i64Val,
      com.facebook.thrift.op.I32Patch i32Val,
      com.facebook.thrift.op.I16Patch i16Val,
      com.facebook.thrift.op.BytePatch byteVal,
      com.facebook.thrift.op.BoolPatch boolVal,
      MyDataPatch structWithFieldCustomDefault) {
    this();
    this.structWithCustomDefault = structWithCustomDefault;
    this.i32WithCustomDefault = i32WithCustomDefault;
    this.mapMap = mapMap;
    this.listMap = listMap;
    this.optMapVal = optMapVal;
    this.optSetVal = optSetVal;
    this.optListVal = optListVal;
    this.optLateStructVal = optLateStructVal;
    this.optStructVal = optStructVal;
    this.optEnumVal = optEnumVal;
    this.optBinaryVal = optBinaryVal;
    this.optStringVal = optStringVal;
    this.optDoubleVal = optDoubleVal;
    this.optFloatVal = optFloatVal;
    this.optI64Val = optI64Val;
    this.optI32Val = optI32Val;
    this.optI16Val = optI16Val;
    this.optByteVal = optByteVal;
    this.optBoolVal = optBoolVal;
    this.lateStructVal = lateStructVal;
    this.unionVal = unionVal;
    this.structVal = structVal;
    this.enumVal = enumVal;
    this.binaryVal = binaryVal;
    this.stringVal = stringVal;
    this.doubleVal = doubleVal;
    this.floatVal = floatVal;
    this.i64Val = i64Val;
    this.i32Val = i32Val;
    this.i16Val = i16Val;
    this.byteVal = byteVal;
    this.boolVal = boolVal;
    this.structWithFieldCustomDefault = structWithFieldCustomDefault;
  }

  public static class Builder {
    private MyDataWithCustomDefaultPatch structWithCustomDefault;
    private com.facebook.thrift.op.I32Patch i32WithCustomDefault;
    private MyStructField30Patch mapMap;
    private MyStructField29Patch listMap;
    private MyStructField28Patch optMapVal;
    private MyStructField27Patch optSetVal;
    private MyStructField26Patch optListVal;
    private LateDefStructPatch optLateStructVal;
    private MyDataPatch optStructVal;
    private MyStructField23Patch optEnumVal;
    private com.facebook.thrift.op.BinaryPatch optBinaryVal;
    private com.facebook.thrift.op.StringPatch optStringVal;
    private com.facebook.thrift.op.DoublePatch optDoubleVal;
    private com.facebook.thrift.op.FloatPatch optFloatVal;
    private com.facebook.thrift.op.I64Patch optI64Val;
    private com.facebook.thrift.op.I32Patch optI32Val;
    private com.facebook.thrift.op.I16Patch optI16Val;
    private com.facebook.thrift.op.BytePatch optByteVal;
    private com.facebook.thrift.op.BoolPatch optBoolVal;
    private LateDefStructPatch lateStructVal;
    private MyUnionPatch unionVal;
    private MyDataPatch structVal;
    private MyStructField10Patch enumVal;
    private com.facebook.thrift.op.BinaryPatch binaryVal;
    private com.facebook.thrift.op.StringPatch stringVal;
    private com.facebook.thrift.op.DoublePatch doubleVal;
    private com.facebook.thrift.op.FloatPatch floatVal;
    private com.facebook.thrift.op.I64Patch i64Val;
    private com.facebook.thrift.op.I32Patch i32Val;
    private com.facebook.thrift.op.I16Patch i16Val;
    private com.facebook.thrift.op.BytePatch byteVal;
    private com.facebook.thrift.op.BoolPatch boolVal;
    private MyDataPatch structWithFieldCustomDefault;

    public Builder() {
    }

    public Builder setStructWithCustomDefault(final MyDataWithCustomDefaultPatch structWithCustomDefault) {
      this.structWithCustomDefault = structWithCustomDefault;
      return this;
    }

    public Builder setI32WithCustomDefault(final com.facebook.thrift.op.I32Patch i32WithCustomDefault) {
      this.i32WithCustomDefault = i32WithCustomDefault;
      return this;
    }

    public Builder setMapMap(final MyStructField30Patch mapMap) {
      this.mapMap = mapMap;
      return this;
    }

    public Builder setListMap(final MyStructField29Patch listMap) {
      this.listMap = listMap;
      return this;
    }

    public Builder setOptMapVal(final MyStructField28Patch optMapVal) {
      this.optMapVal = optMapVal;
      return this;
    }

    public Builder setOptSetVal(final MyStructField27Patch optSetVal) {
      this.optSetVal = optSetVal;
      return this;
    }

    public Builder setOptListVal(final MyStructField26Patch optListVal) {
      this.optListVal = optListVal;
      return this;
    }

    public Builder setOptLateStructVal(final LateDefStructPatch optLateStructVal) {
      this.optLateStructVal = optLateStructVal;
      return this;
    }

    public Builder setOptStructVal(final MyDataPatch optStructVal) {
      this.optStructVal = optStructVal;
      return this;
    }

    public Builder setOptEnumVal(final MyStructField23Patch optEnumVal) {
      this.optEnumVal = optEnumVal;
      return this;
    }

    public Builder setOptBinaryVal(final com.facebook.thrift.op.BinaryPatch optBinaryVal) {
      this.optBinaryVal = optBinaryVal;
      return this;
    }

    public Builder setOptStringVal(final com.facebook.thrift.op.StringPatch optStringVal) {
      this.optStringVal = optStringVal;
      return this;
    }

    public Builder setOptDoubleVal(final com.facebook.thrift.op.DoublePatch optDoubleVal) {
      this.optDoubleVal = optDoubleVal;
      return this;
    }

    public Builder setOptFloatVal(final com.facebook.thrift.op.FloatPatch optFloatVal) {
      this.optFloatVal = optFloatVal;
      return this;
    }

    public Builder setOptI64Val(final com.facebook.thrift.op.I64Patch optI64Val) {
      this.optI64Val = optI64Val;
      return this;
    }

    public Builder setOptI32Val(final com.facebook.thrift.op.I32Patch optI32Val) {
      this.optI32Val = optI32Val;
      return this;
    }

    public Builder setOptI16Val(final com.facebook.thrift.op.I16Patch optI16Val) {
      this.optI16Val = optI16Val;
      return this;
    }

    public Builder setOptByteVal(final com.facebook.thrift.op.BytePatch optByteVal) {
      this.optByteVal = optByteVal;
      return this;
    }

    public Builder setOptBoolVal(final com.facebook.thrift.op.BoolPatch optBoolVal) {
      this.optBoolVal = optBoolVal;
      return this;
    }

    public Builder setLateStructVal(final LateDefStructPatch lateStructVal) {
      this.lateStructVal = lateStructVal;
      return this;
    }

    public Builder setUnionVal(final MyUnionPatch unionVal) {
      this.unionVal = unionVal;
      return this;
    }

    public Builder setStructVal(final MyDataPatch structVal) {
      this.structVal = structVal;
      return this;
    }

    public Builder setEnumVal(final MyStructField10Patch enumVal) {
      this.enumVal = enumVal;
      return this;
    }

    public Builder setBinaryVal(final com.facebook.thrift.op.BinaryPatch binaryVal) {
      this.binaryVal = binaryVal;
      return this;
    }

    public Builder setStringVal(final com.facebook.thrift.op.StringPatch stringVal) {
      this.stringVal = stringVal;
      return this;
    }

    public Builder setDoubleVal(final com.facebook.thrift.op.DoublePatch doubleVal) {
      this.doubleVal = doubleVal;
      return this;
    }

    public Builder setFloatVal(final com.facebook.thrift.op.FloatPatch floatVal) {
      this.floatVal = floatVal;
      return this;
    }

    public Builder setI64Val(final com.facebook.thrift.op.I64Patch i64Val) {
      this.i64Val = i64Val;
      return this;
    }

    public Builder setI32Val(final com.facebook.thrift.op.I32Patch i32Val) {
      this.i32Val = i32Val;
      return this;
    }

    public Builder setI16Val(final com.facebook.thrift.op.I16Patch i16Val) {
      this.i16Val = i16Val;
      return this;
    }

    public Builder setByteVal(final com.facebook.thrift.op.BytePatch byteVal) {
      this.byteVal = byteVal;
      return this;
    }

    public Builder setBoolVal(final com.facebook.thrift.op.BoolPatch boolVal) {
      this.boolVal = boolVal;
      return this;
    }

    public Builder setStructWithFieldCustomDefault(final MyDataPatch structWithFieldCustomDefault) {
      this.structWithFieldCustomDefault = structWithFieldCustomDefault;
      return this;
    }

    public MyStructFieldPatch build() {
      MyStructFieldPatch result = new MyStructFieldPatch();
      result.setStructWithCustomDefault(this.structWithCustomDefault);
      result.setI32WithCustomDefault(this.i32WithCustomDefault);
      result.setMapMap(this.mapMap);
      result.setListMap(this.listMap);
      result.setOptMapVal(this.optMapVal);
      result.setOptSetVal(this.optSetVal);
      result.setOptListVal(this.optListVal);
      result.setOptLateStructVal(this.optLateStructVal);
      result.setOptStructVal(this.optStructVal);
      result.setOptEnumVal(this.optEnumVal);
      result.setOptBinaryVal(this.optBinaryVal);
      result.setOptStringVal(this.optStringVal);
      result.setOptDoubleVal(this.optDoubleVal);
      result.setOptFloatVal(this.optFloatVal);
      result.setOptI64Val(this.optI64Val);
      result.setOptI32Val(this.optI32Val);
      result.setOptI16Val(this.optI16Val);
      result.setOptByteVal(this.optByteVal);
      result.setOptBoolVal(this.optBoolVal);
      result.setLateStructVal(this.lateStructVal);
      result.setUnionVal(this.unionVal);
      result.setStructVal(this.structVal);
      result.setEnumVal(this.enumVal);
      result.setBinaryVal(this.binaryVal);
      result.setStringVal(this.stringVal);
      result.setDoubleVal(this.doubleVal);
      result.setFloatVal(this.floatVal);
      result.setI64Val(this.i64Val);
      result.setI32Val(this.i32Val);
      result.setI16Val(this.i16Val);
      result.setByteVal(this.byteVal);
      result.setBoolVal(this.boolVal);
      result.setStructWithFieldCustomDefault(this.structWithFieldCustomDefault);
      return result;
    }
  }

  public static Builder builder() {
    return new Builder();
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MyStructFieldPatch(MyStructFieldPatch other) {
    if (other.isSetStructWithCustomDefault()) {
      this.structWithCustomDefault = TBaseHelper.deepCopy(other.structWithCustomDefault);
    }
    if (other.isSetI32WithCustomDefault()) {
      this.i32WithCustomDefault = TBaseHelper.deepCopy(other.i32WithCustomDefault);
    }
    if (other.isSetMapMap()) {
      this.mapMap = TBaseHelper.deepCopy(other.mapMap);
    }
    if (other.isSetListMap()) {
      this.listMap = TBaseHelper.deepCopy(other.listMap);
    }
    if (other.isSetOptMapVal()) {
      this.optMapVal = TBaseHelper.deepCopy(other.optMapVal);
    }
    if (other.isSetOptSetVal()) {
      this.optSetVal = TBaseHelper.deepCopy(other.optSetVal);
    }
    if (other.isSetOptListVal()) {
      this.optListVal = TBaseHelper.deepCopy(other.optListVal);
    }
    if (other.isSetOptLateStructVal()) {
      this.optLateStructVal = TBaseHelper.deepCopy(other.optLateStructVal);
    }
    if (other.isSetOptStructVal()) {
      this.optStructVal = TBaseHelper.deepCopy(other.optStructVal);
    }
    if (other.isSetOptEnumVal()) {
      this.optEnumVal = TBaseHelper.deepCopy(other.optEnumVal);
    }
    if (other.isSetOptBinaryVal()) {
      this.optBinaryVal = TBaseHelper.deepCopy(other.optBinaryVal);
    }
    if (other.isSetOptStringVal()) {
      this.optStringVal = TBaseHelper.deepCopy(other.optStringVal);
    }
    if (other.isSetOptDoubleVal()) {
      this.optDoubleVal = TBaseHelper.deepCopy(other.optDoubleVal);
    }
    if (other.isSetOptFloatVal()) {
      this.optFloatVal = TBaseHelper.deepCopy(other.optFloatVal);
    }
    if (other.isSetOptI64Val()) {
      this.optI64Val = TBaseHelper.deepCopy(other.optI64Val);
    }
    if (other.isSetOptI32Val()) {
      this.optI32Val = TBaseHelper.deepCopy(other.optI32Val);
    }
    if (other.isSetOptI16Val()) {
      this.optI16Val = TBaseHelper.deepCopy(other.optI16Val);
    }
    if (other.isSetOptByteVal()) {
      this.optByteVal = TBaseHelper.deepCopy(other.optByteVal);
    }
    if (other.isSetOptBoolVal()) {
      this.optBoolVal = TBaseHelper.deepCopy(other.optBoolVal);
    }
    if (other.isSetLateStructVal()) {
      this.lateStructVal = TBaseHelper.deepCopy(other.lateStructVal);
    }
    if (other.isSetUnionVal()) {
      this.unionVal = TBaseHelper.deepCopy(other.unionVal);
    }
    if (other.isSetStructVal()) {
      this.structVal = TBaseHelper.deepCopy(other.structVal);
    }
    if (other.isSetEnumVal()) {
      this.enumVal = TBaseHelper.deepCopy(other.enumVal);
    }
    if (other.isSetBinaryVal()) {
      this.binaryVal = TBaseHelper.deepCopy(other.binaryVal);
    }
    if (other.isSetStringVal()) {
      this.stringVal = TBaseHelper.deepCopy(other.stringVal);
    }
    if (other.isSetDoubleVal()) {
      this.doubleVal = TBaseHelper.deepCopy(other.doubleVal);
    }
    if (other.isSetFloatVal()) {
      this.floatVal = TBaseHelper.deepCopy(other.floatVal);
    }
    if (other.isSetI64Val()) {
      this.i64Val = TBaseHelper.deepCopy(other.i64Val);
    }
    if (other.isSetI32Val()) {
      this.i32Val = TBaseHelper.deepCopy(other.i32Val);
    }
    if (other.isSetI16Val()) {
      this.i16Val = TBaseHelper.deepCopy(other.i16Val);
    }
    if (other.isSetByteVal()) {
      this.byteVal = TBaseHelper.deepCopy(other.byteVal);
    }
    if (other.isSetBoolVal()) {
      this.boolVal = TBaseHelper.deepCopy(other.boolVal);
    }
    if (other.isSetStructWithFieldCustomDefault()) {
      this.structWithFieldCustomDefault = TBaseHelper.deepCopy(other.structWithFieldCustomDefault);
    }
  }

  public MyStructFieldPatch deepCopy() {
    return new MyStructFieldPatch(this);
  }

  public MyDataWithCustomDefaultPatch getStructWithCustomDefault() {
    return this.structWithCustomDefault;
  }

  public MyStructFieldPatch setStructWithCustomDefault(MyDataWithCustomDefaultPatch structWithCustomDefault) {
    this.structWithCustomDefault = structWithCustomDefault;
    return this;
  }

  public void unsetStructWithCustomDefault() {
    this.structWithCustomDefault = null;
  }

  // Returns true if field structWithCustomDefault is set (has been assigned a value) and false otherwise
  public boolean isSetStructWithCustomDefault() {
    return this.structWithCustomDefault != null;
  }

  public void setStructWithCustomDefaultIsSet(boolean __value) {
    if (!__value) {
      this.structWithCustomDefault = null;
    }
  }

  public com.facebook.thrift.op.I32Patch getI32WithCustomDefault() {
    return this.i32WithCustomDefault;
  }

  public MyStructFieldPatch setI32WithCustomDefault(com.facebook.thrift.op.I32Patch i32WithCustomDefault) {
    this.i32WithCustomDefault = i32WithCustomDefault;
    return this;
  }

  public void unsetI32WithCustomDefault() {
    this.i32WithCustomDefault = null;
  }

  // Returns true if field i32WithCustomDefault is set (has been assigned a value) and false otherwise
  public boolean isSetI32WithCustomDefault() {
    return this.i32WithCustomDefault != null;
  }

  public void setI32WithCustomDefaultIsSet(boolean __value) {
    if (!__value) {
      this.i32WithCustomDefault = null;
    }
  }

  public MyStructField30Patch getMapMap() {
    return this.mapMap;
  }

  public MyStructFieldPatch setMapMap(MyStructField30Patch mapMap) {
    this.mapMap = mapMap;
    return this;
  }

  public void unsetMapMap() {
    this.mapMap = null;
  }

  // Returns true if field mapMap is set (has been assigned a value) and false otherwise
  public boolean isSetMapMap() {
    return this.mapMap != null;
  }

  public void setMapMapIsSet(boolean __value) {
    if (!__value) {
      this.mapMap = null;
    }
  }

  public MyStructField29Patch getListMap() {
    return this.listMap;
  }

  public MyStructFieldPatch setListMap(MyStructField29Patch listMap) {
    this.listMap = listMap;
    return this;
  }

  public void unsetListMap() {
    this.listMap = null;
  }

  // Returns true if field listMap is set (has been assigned a value) and false otherwise
  public boolean isSetListMap() {
    return this.listMap != null;
  }

  public void setListMapIsSet(boolean __value) {
    if (!__value) {
      this.listMap = null;
    }
  }

  public MyStructField28Patch getOptMapVal() {
    return this.optMapVal;
  }

  public MyStructFieldPatch setOptMapVal(MyStructField28Patch optMapVal) {
    this.optMapVal = optMapVal;
    return this;
  }

  public void unsetOptMapVal() {
    this.optMapVal = null;
  }

  // Returns true if field optMapVal is set (has been assigned a value) and false otherwise
  public boolean isSetOptMapVal() {
    return this.optMapVal != null;
  }

  public void setOptMapValIsSet(boolean __value) {
    if (!__value) {
      this.optMapVal = null;
    }
  }

  public MyStructField27Patch getOptSetVal() {
    return this.optSetVal;
  }

  public MyStructFieldPatch setOptSetVal(MyStructField27Patch optSetVal) {
    this.optSetVal = optSetVal;
    return this;
  }

  public void unsetOptSetVal() {
    this.optSetVal = null;
  }

  // Returns true if field optSetVal is set (has been assigned a value) and false otherwise
  public boolean isSetOptSetVal() {
    return this.optSetVal != null;
  }

  public void setOptSetValIsSet(boolean __value) {
    if (!__value) {
      this.optSetVal = null;
    }
  }

  public MyStructField26Patch getOptListVal() {
    return this.optListVal;
  }

  public MyStructFieldPatch setOptListVal(MyStructField26Patch optListVal) {
    this.optListVal = optListVal;
    return this;
  }

  public void unsetOptListVal() {
    this.optListVal = null;
  }

  // Returns true if field optListVal is set (has been assigned a value) and false otherwise
  public boolean isSetOptListVal() {
    return this.optListVal != null;
  }

  public void setOptListValIsSet(boolean __value) {
    if (!__value) {
      this.optListVal = null;
    }
  }

  public LateDefStructPatch getOptLateStructVal() {
    return this.optLateStructVal;
  }

  public MyStructFieldPatch setOptLateStructVal(LateDefStructPatch optLateStructVal) {
    this.optLateStructVal = optLateStructVal;
    return this;
  }

  public void unsetOptLateStructVal() {
    this.optLateStructVal = null;
  }

  // Returns true if field optLateStructVal is set (has been assigned a value) and false otherwise
  public boolean isSetOptLateStructVal() {
    return this.optLateStructVal != null;
  }

  public void setOptLateStructValIsSet(boolean __value) {
    if (!__value) {
      this.optLateStructVal = null;
    }
  }

  public MyDataPatch getOptStructVal() {
    return this.optStructVal;
  }

  public MyStructFieldPatch setOptStructVal(MyDataPatch optStructVal) {
    this.optStructVal = optStructVal;
    return this;
  }

  public void unsetOptStructVal() {
    this.optStructVal = null;
  }

  // Returns true if field optStructVal is set (has been assigned a value) and false otherwise
  public boolean isSetOptStructVal() {
    return this.optStructVal != null;
  }

  public void setOptStructValIsSet(boolean __value) {
    if (!__value) {
      this.optStructVal = null;
    }
  }

  public MyStructField23Patch getOptEnumVal() {
    return this.optEnumVal;
  }

  public MyStructFieldPatch setOptEnumVal(MyStructField23Patch optEnumVal) {
    this.optEnumVal = optEnumVal;
    return this;
  }

  public void unsetOptEnumVal() {
    this.optEnumVal = null;
  }

  // Returns true if field optEnumVal is set (has been assigned a value) and false otherwise
  public boolean isSetOptEnumVal() {
    return this.optEnumVal != null;
  }

  public void setOptEnumValIsSet(boolean __value) {
    if (!__value) {
      this.optEnumVal = null;
    }
  }

  public com.facebook.thrift.op.BinaryPatch getOptBinaryVal() {
    return this.optBinaryVal;
  }

  public MyStructFieldPatch setOptBinaryVal(com.facebook.thrift.op.BinaryPatch optBinaryVal) {
    this.optBinaryVal = optBinaryVal;
    return this;
  }

  public void unsetOptBinaryVal() {
    this.optBinaryVal = null;
  }

  // Returns true if field optBinaryVal is set (has been assigned a value) and false otherwise
  public boolean isSetOptBinaryVal() {
    return this.optBinaryVal != null;
  }

  public void setOptBinaryValIsSet(boolean __value) {
    if (!__value) {
      this.optBinaryVal = null;
    }
  }

  public com.facebook.thrift.op.StringPatch getOptStringVal() {
    return this.optStringVal;
  }

  public MyStructFieldPatch setOptStringVal(com.facebook.thrift.op.StringPatch optStringVal) {
    this.optStringVal = optStringVal;
    return this;
  }

  public void unsetOptStringVal() {
    this.optStringVal = null;
  }

  // Returns true if field optStringVal is set (has been assigned a value) and false otherwise
  public boolean isSetOptStringVal() {
    return this.optStringVal != null;
  }

  public void setOptStringValIsSet(boolean __value) {
    if (!__value) {
      this.optStringVal = null;
    }
  }

  public com.facebook.thrift.op.DoublePatch getOptDoubleVal() {
    return this.optDoubleVal;
  }

  public MyStructFieldPatch setOptDoubleVal(com.facebook.thrift.op.DoublePatch optDoubleVal) {
    this.optDoubleVal = optDoubleVal;
    return this;
  }

  public void unsetOptDoubleVal() {
    this.optDoubleVal = null;
  }

  // Returns true if field optDoubleVal is set (has been assigned a value) and false otherwise
  public boolean isSetOptDoubleVal() {
    return this.optDoubleVal != null;
  }

  public void setOptDoubleValIsSet(boolean __value) {
    if (!__value) {
      this.optDoubleVal = null;
    }
  }

  public com.facebook.thrift.op.FloatPatch getOptFloatVal() {
    return this.optFloatVal;
  }

  public MyStructFieldPatch setOptFloatVal(com.facebook.thrift.op.FloatPatch optFloatVal) {
    this.optFloatVal = optFloatVal;
    return this;
  }

  public void unsetOptFloatVal() {
    this.optFloatVal = null;
  }

  // Returns true if field optFloatVal is set (has been assigned a value) and false otherwise
  public boolean isSetOptFloatVal() {
    return this.optFloatVal != null;
  }

  public void setOptFloatValIsSet(boolean __value) {
    if (!__value) {
      this.optFloatVal = null;
    }
  }

  public com.facebook.thrift.op.I64Patch getOptI64Val() {
    return this.optI64Val;
  }

  public MyStructFieldPatch setOptI64Val(com.facebook.thrift.op.I64Patch optI64Val) {
    this.optI64Val = optI64Val;
    return this;
  }

  public void unsetOptI64Val() {
    this.optI64Val = null;
  }

  // Returns true if field optI64Val is set (has been assigned a value) and false otherwise
  public boolean isSetOptI64Val() {
    return this.optI64Val != null;
  }

  public void setOptI64ValIsSet(boolean __value) {
    if (!__value) {
      this.optI64Val = null;
    }
  }

  public com.facebook.thrift.op.I32Patch getOptI32Val() {
    return this.optI32Val;
  }

  public MyStructFieldPatch setOptI32Val(com.facebook.thrift.op.I32Patch optI32Val) {
    this.optI32Val = optI32Val;
    return this;
  }

  public void unsetOptI32Val() {
    this.optI32Val = null;
  }

  // Returns true if field optI32Val is set (has been assigned a value) and false otherwise
  public boolean isSetOptI32Val() {
    return this.optI32Val != null;
  }

  public void setOptI32ValIsSet(boolean __value) {
    if (!__value) {
      this.optI32Val = null;
    }
  }

  public com.facebook.thrift.op.I16Patch getOptI16Val() {
    return this.optI16Val;
  }

  public MyStructFieldPatch setOptI16Val(com.facebook.thrift.op.I16Patch optI16Val) {
    this.optI16Val = optI16Val;
    return this;
  }

  public void unsetOptI16Val() {
    this.optI16Val = null;
  }

  // Returns true if field optI16Val is set (has been assigned a value) and false otherwise
  public boolean isSetOptI16Val() {
    return this.optI16Val != null;
  }

  public void setOptI16ValIsSet(boolean __value) {
    if (!__value) {
      this.optI16Val = null;
    }
  }

  public com.facebook.thrift.op.BytePatch getOptByteVal() {
    return this.optByteVal;
  }

  public MyStructFieldPatch setOptByteVal(com.facebook.thrift.op.BytePatch optByteVal) {
    this.optByteVal = optByteVal;
    return this;
  }

  public void unsetOptByteVal() {
    this.optByteVal = null;
  }

  // Returns true if field optByteVal is set (has been assigned a value) and false otherwise
  public boolean isSetOptByteVal() {
    return this.optByteVal != null;
  }

  public void setOptByteValIsSet(boolean __value) {
    if (!__value) {
      this.optByteVal = null;
    }
  }

  public com.facebook.thrift.op.BoolPatch getOptBoolVal() {
    return this.optBoolVal;
  }

  public MyStructFieldPatch setOptBoolVal(com.facebook.thrift.op.BoolPatch optBoolVal) {
    this.optBoolVal = optBoolVal;
    return this;
  }

  public void unsetOptBoolVal() {
    this.optBoolVal = null;
  }

  // Returns true if field optBoolVal is set (has been assigned a value) and false otherwise
  public boolean isSetOptBoolVal() {
    return this.optBoolVal != null;
  }

  public void setOptBoolValIsSet(boolean __value) {
    if (!__value) {
      this.optBoolVal = null;
    }
  }

  public LateDefStructPatch getLateStructVal() {
    return this.lateStructVal;
  }

  public MyStructFieldPatch setLateStructVal(LateDefStructPatch lateStructVal) {
    this.lateStructVal = lateStructVal;
    return this;
  }

  public void unsetLateStructVal() {
    this.lateStructVal = null;
  }

  // Returns true if field lateStructVal is set (has been assigned a value) and false otherwise
  public boolean isSetLateStructVal() {
    return this.lateStructVal != null;
  }

  public void setLateStructValIsSet(boolean __value) {
    if (!__value) {
      this.lateStructVal = null;
    }
  }

  public MyUnionPatch getUnionVal() {
    return this.unionVal;
  }

  public MyStructFieldPatch setUnionVal(MyUnionPatch unionVal) {
    this.unionVal = unionVal;
    return this;
  }

  public void unsetUnionVal() {
    this.unionVal = null;
  }

  // Returns true if field unionVal is set (has been assigned a value) and false otherwise
  public boolean isSetUnionVal() {
    return this.unionVal != null;
  }

  public void setUnionValIsSet(boolean __value) {
    if (!__value) {
      this.unionVal = null;
    }
  }

  public MyDataPatch getStructVal() {
    return this.structVal;
  }

  public MyStructFieldPatch setStructVal(MyDataPatch structVal) {
    this.structVal = structVal;
    return this;
  }

  public void unsetStructVal() {
    this.structVal = null;
  }

  // Returns true if field structVal is set (has been assigned a value) and false otherwise
  public boolean isSetStructVal() {
    return this.structVal != null;
  }

  public void setStructValIsSet(boolean __value) {
    if (!__value) {
      this.structVal = null;
    }
  }

  public MyStructField10Patch getEnumVal() {
    return this.enumVal;
  }

  public MyStructFieldPatch setEnumVal(MyStructField10Patch enumVal) {
    this.enumVal = enumVal;
    return this;
  }

  public void unsetEnumVal() {
    this.enumVal = null;
  }

  // Returns true if field enumVal is set (has been assigned a value) and false otherwise
  public boolean isSetEnumVal() {
    return this.enumVal != null;
  }

  public void setEnumValIsSet(boolean __value) {
    if (!__value) {
      this.enumVal = null;
    }
  }

  public com.facebook.thrift.op.BinaryPatch getBinaryVal() {
    return this.binaryVal;
  }

  public MyStructFieldPatch setBinaryVal(com.facebook.thrift.op.BinaryPatch binaryVal) {
    this.binaryVal = binaryVal;
    return this;
  }

  public void unsetBinaryVal() {
    this.binaryVal = null;
  }

  // Returns true if field binaryVal is set (has been assigned a value) and false otherwise
  public boolean isSetBinaryVal() {
    return this.binaryVal != null;
  }

  public void setBinaryValIsSet(boolean __value) {
    if (!__value) {
      this.binaryVal = null;
    }
  }

  public com.facebook.thrift.op.StringPatch getStringVal() {
    return this.stringVal;
  }

  public MyStructFieldPatch setStringVal(com.facebook.thrift.op.StringPatch stringVal) {
    this.stringVal = stringVal;
    return this;
  }

  public void unsetStringVal() {
    this.stringVal = null;
  }

  // Returns true if field stringVal is set (has been assigned a value) and false otherwise
  public boolean isSetStringVal() {
    return this.stringVal != null;
  }

  public void setStringValIsSet(boolean __value) {
    if (!__value) {
      this.stringVal = null;
    }
  }

  public com.facebook.thrift.op.DoublePatch getDoubleVal() {
    return this.doubleVal;
  }

  public MyStructFieldPatch setDoubleVal(com.facebook.thrift.op.DoublePatch doubleVal) {
    this.doubleVal = doubleVal;
    return this;
  }

  public void unsetDoubleVal() {
    this.doubleVal = null;
  }

  // Returns true if field doubleVal is set (has been assigned a value) and false otherwise
  public boolean isSetDoubleVal() {
    return this.doubleVal != null;
  }

  public void setDoubleValIsSet(boolean __value) {
    if (!__value) {
      this.doubleVal = null;
    }
  }

  public com.facebook.thrift.op.FloatPatch getFloatVal() {
    return this.floatVal;
  }

  public MyStructFieldPatch setFloatVal(com.facebook.thrift.op.FloatPatch floatVal) {
    this.floatVal = floatVal;
    return this;
  }

  public void unsetFloatVal() {
    this.floatVal = null;
  }

  // Returns true if field floatVal is set (has been assigned a value) and false otherwise
  public boolean isSetFloatVal() {
    return this.floatVal != null;
  }

  public void setFloatValIsSet(boolean __value) {
    if (!__value) {
      this.floatVal = null;
    }
  }

  public com.facebook.thrift.op.I64Patch getI64Val() {
    return this.i64Val;
  }

  public MyStructFieldPatch setI64Val(com.facebook.thrift.op.I64Patch i64Val) {
    this.i64Val = i64Val;
    return this;
  }

  public void unsetI64Val() {
    this.i64Val = null;
  }

  // Returns true if field i64Val is set (has been assigned a value) and false otherwise
  public boolean isSetI64Val() {
    return this.i64Val != null;
  }

  public void setI64ValIsSet(boolean __value) {
    if (!__value) {
      this.i64Val = null;
    }
  }

  public com.facebook.thrift.op.I32Patch getI32Val() {
    return this.i32Val;
  }

  public MyStructFieldPatch setI32Val(com.facebook.thrift.op.I32Patch i32Val) {
    this.i32Val = i32Val;
    return this;
  }

  public void unsetI32Val() {
    this.i32Val = null;
  }

  // Returns true if field i32Val is set (has been assigned a value) and false otherwise
  public boolean isSetI32Val() {
    return this.i32Val != null;
  }

  public void setI32ValIsSet(boolean __value) {
    if (!__value) {
      this.i32Val = null;
    }
  }

  public com.facebook.thrift.op.I16Patch getI16Val() {
    return this.i16Val;
  }

  public MyStructFieldPatch setI16Val(com.facebook.thrift.op.I16Patch i16Val) {
    this.i16Val = i16Val;
    return this;
  }

  public void unsetI16Val() {
    this.i16Val = null;
  }

  // Returns true if field i16Val is set (has been assigned a value) and false otherwise
  public boolean isSetI16Val() {
    return this.i16Val != null;
  }

  public void setI16ValIsSet(boolean __value) {
    if (!__value) {
      this.i16Val = null;
    }
  }

  public com.facebook.thrift.op.BytePatch getByteVal() {
    return this.byteVal;
  }

  public MyStructFieldPatch setByteVal(com.facebook.thrift.op.BytePatch byteVal) {
    this.byteVal = byteVal;
    return this;
  }

  public void unsetByteVal() {
    this.byteVal = null;
  }

  // Returns true if field byteVal is set (has been assigned a value) and false otherwise
  public boolean isSetByteVal() {
    return this.byteVal != null;
  }

  public void setByteValIsSet(boolean __value) {
    if (!__value) {
      this.byteVal = null;
    }
  }

  public com.facebook.thrift.op.BoolPatch getBoolVal() {
    return this.boolVal;
  }

  public MyStructFieldPatch setBoolVal(com.facebook.thrift.op.BoolPatch boolVal) {
    this.boolVal = boolVal;
    return this;
  }

  public void unsetBoolVal() {
    this.boolVal = null;
  }

  // Returns true if field boolVal is set (has been assigned a value) and false otherwise
  public boolean isSetBoolVal() {
    return this.boolVal != null;
  }

  public void setBoolValIsSet(boolean __value) {
    if (!__value) {
      this.boolVal = null;
    }
  }

  public MyDataPatch getStructWithFieldCustomDefault() {
    return this.structWithFieldCustomDefault;
  }

  public MyStructFieldPatch setStructWithFieldCustomDefault(MyDataPatch structWithFieldCustomDefault) {
    this.structWithFieldCustomDefault = structWithFieldCustomDefault;
    return this;
  }

  public void unsetStructWithFieldCustomDefault() {
    this.structWithFieldCustomDefault = null;
  }

  // Returns true if field structWithFieldCustomDefault is set (has been assigned a value) and false otherwise
  public boolean isSetStructWithFieldCustomDefault() {
    return this.structWithFieldCustomDefault != null;
  }

  public void setStructWithFieldCustomDefaultIsSet(boolean __value) {
    if (!__value) {
      this.structWithFieldCustomDefault = null;
    }
  }

  public void setFieldValue(int fieldID, Object __value) {
    switch (fieldID) {
    case STRUCTWITHCUSTOMDEFAULT:
      if (__value == null) {
        unsetStructWithCustomDefault();
      } else {
        setStructWithCustomDefault((MyDataWithCustomDefaultPatch)__value);
      }
      break;

    case I32WITHCUSTOMDEFAULT:
      if (__value == null) {
        unsetI32WithCustomDefault();
      } else {
        setI32WithCustomDefault((com.facebook.thrift.op.I32Patch)__value);
      }
      break;

    case MAPMAP:
      if (__value == null) {
        unsetMapMap();
      } else {
        setMapMap((MyStructField30Patch)__value);
      }
      break;

    case LISTMAP:
      if (__value == null) {
        unsetListMap();
      } else {
        setListMap((MyStructField29Patch)__value);
      }
      break;

    case OPTMAPVAL:
      if (__value == null) {
        unsetOptMapVal();
      } else {
        setOptMapVal((MyStructField28Patch)__value);
      }
      break;

    case OPTSETVAL:
      if (__value == null) {
        unsetOptSetVal();
      } else {
        setOptSetVal((MyStructField27Patch)__value);
      }
      break;

    case OPTLISTVAL:
      if (__value == null) {
        unsetOptListVal();
      } else {
        setOptListVal((MyStructField26Patch)__value);
      }
      break;

    case OPTLATESTRUCTVAL:
      if (__value == null) {
        unsetOptLateStructVal();
      } else {
        setOptLateStructVal((LateDefStructPatch)__value);
      }
      break;

    case OPTSTRUCTVAL:
      if (__value == null) {
        unsetOptStructVal();
      } else {
        setOptStructVal((MyDataPatch)__value);
      }
      break;

    case OPTENUMVAL:
      if (__value == null) {
        unsetOptEnumVal();
      } else {
        setOptEnumVal((MyStructField23Patch)__value);
      }
      break;

    case OPTBINARYVAL:
      if (__value == null) {
        unsetOptBinaryVal();
      } else {
        setOptBinaryVal((com.facebook.thrift.op.BinaryPatch)__value);
      }
      break;

    case OPTSTRINGVAL:
      if (__value == null) {
        unsetOptStringVal();
      } else {
        setOptStringVal((com.facebook.thrift.op.StringPatch)__value);
      }
      break;

    case OPTDOUBLEVAL:
      if (__value == null) {
        unsetOptDoubleVal();
      } else {
        setOptDoubleVal((com.facebook.thrift.op.DoublePatch)__value);
      }
      break;

    case OPTFLOATVAL:
      if (__value == null) {
        unsetOptFloatVal();
      } else {
        setOptFloatVal((com.facebook.thrift.op.FloatPatch)__value);
      }
      break;

    case OPTI64VAL:
      if (__value == null) {
        unsetOptI64Val();
      } else {
        setOptI64Val((com.facebook.thrift.op.I64Patch)__value);
      }
      break;

    case OPTI32VAL:
      if (__value == null) {
        unsetOptI32Val();
      } else {
        setOptI32Val((com.facebook.thrift.op.I32Patch)__value);
      }
      break;

    case OPTI16VAL:
      if (__value == null) {
        unsetOptI16Val();
      } else {
        setOptI16Val((com.facebook.thrift.op.I16Patch)__value);
      }
      break;

    case OPTBYTEVAL:
      if (__value == null) {
        unsetOptByteVal();
      } else {
        setOptByteVal((com.facebook.thrift.op.BytePatch)__value);
      }
      break;

    case OPTBOOLVAL:
      if (__value == null) {
        unsetOptBoolVal();
      } else {
        setOptBoolVal((com.facebook.thrift.op.BoolPatch)__value);
      }
      break;

    case LATESTRUCTVAL:
      if (__value == null) {
        unsetLateStructVal();
      } else {
        setLateStructVal((LateDefStructPatch)__value);
      }
      break;

    case UNIONVAL:
      if (__value == null) {
        unsetUnionVal();
      } else {
        setUnionVal((MyUnionPatch)__value);
      }
      break;

    case STRUCTVAL:
      if (__value == null) {
        unsetStructVal();
      } else {
        setStructVal((MyDataPatch)__value);
      }
      break;

    case ENUMVAL:
      if (__value == null) {
        unsetEnumVal();
      } else {
        setEnumVal((MyStructField10Patch)__value);
      }
      break;

    case BINARYVAL:
      if (__value == null) {
        unsetBinaryVal();
      } else {
        setBinaryVal((com.facebook.thrift.op.BinaryPatch)__value);
      }
      break;

    case STRINGVAL:
      if (__value == null) {
        unsetStringVal();
      } else {
        setStringVal((com.facebook.thrift.op.StringPatch)__value);
      }
      break;

    case DOUBLEVAL:
      if (__value == null) {
        unsetDoubleVal();
      } else {
        setDoubleVal((com.facebook.thrift.op.DoublePatch)__value);
      }
      break;

    case FLOATVAL:
      if (__value == null) {
        unsetFloatVal();
      } else {
        setFloatVal((com.facebook.thrift.op.FloatPatch)__value);
      }
      break;

    case I64VAL:
      if (__value == null) {
        unsetI64Val();
      } else {
        setI64Val((com.facebook.thrift.op.I64Patch)__value);
      }
      break;

    case I32VAL:
      if (__value == null) {
        unsetI32Val();
      } else {
        setI32Val((com.facebook.thrift.op.I32Patch)__value);
      }
      break;

    case I16VAL:
      if (__value == null) {
        unsetI16Val();
      } else {
        setI16Val((com.facebook.thrift.op.I16Patch)__value);
      }
      break;

    case BYTEVAL:
      if (__value == null) {
        unsetByteVal();
      } else {
        setByteVal((com.facebook.thrift.op.BytePatch)__value);
      }
      break;

    case BOOLVAL:
      if (__value == null) {
        unsetBoolVal();
      } else {
        setBoolVal((com.facebook.thrift.op.BoolPatch)__value);
      }
      break;

    case STRUCTWITHFIELDCUSTOMDEFAULT:
      if (__value == null) {
        unsetStructWithFieldCustomDefault();
      } else {
        setStructWithFieldCustomDefault((MyDataPatch)__value);
      }
      break;

    default:
      throw new IllegalArgumentException("Field " + fieldID + " doesn't exist!");
    }
  }

  public Object getFieldValue(int fieldID) {
    switch (fieldID) {
    case STRUCTWITHCUSTOMDEFAULT:
      return getStructWithCustomDefault();

    case I32WITHCUSTOMDEFAULT:
      return getI32WithCustomDefault();

    case MAPMAP:
      return getMapMap();

    case LISTMAP:
      return getListMap();

    case OPTMAPVAL:
      return getOptMapVal();

    case OPTSETVAL:
      return getOptSetVal();

    case OPTLISTVAL:
      return getOptListVal();

    case OPTLATESTRUCTVAL:
      return getOptLateStructVal();

    case OPTSTRUCTVAL:
      return getOptStructVal();

    case OPTENUMVAL:
      return getOptEnumVal();

    case OPTBINARYVAL:
      return getOptBinaryVal();

    case OPTSTRINGVAL:
      return getOptStringVal();

    case OPTDOUBLEVAL:
      return getOptDoubleVal();

    case OPTFLOATVAL:
      return getOptFloatVal();

    case OPTI64VAL:
      return getOptI64Val();

    case OPTI32VAL:
      return getOptI32Val();

    case OPTI16VAL:
      return getOptI16Val();

    case OPTBYTEVAL:
      return getOptByteVal();

    case OPTBOOLVAL:
      return getOptBoolVal();

    case LATESTRUCTVAL:
      return getLateStructVal();

    case UNIONVAL:
      return getUnionVal();

    case STRUCTVAL:
      return getStructVal();

    case ENUMVAL:
      return getEnumVal();

    case BINARYVAL:
      return getBinaryVal();

    case STRINGVAL:
      return getStringVal();

    case DOUBLEVAL:
      return getDoubleVal();

    case FLOATVAL:
      return getFloatVal();

    case I64VAL:
      return getI64Val();

    case I32VAL:
      return getI32Val();

    case I16VAL:
      return getI16Val();

    case BYTEVAL:
      return getByteVal();

    case BOOLVAL:
      return getBoolVal();

    case STRUCTWITHFIELDCUSTOMDEFAULT:
      return getStructWithFieldCustomDefault();

    default:
      throw new IllegalArgumentException("Field " + fieldID + " doesn't exist!");
    }
  }

  @Override
  public boolean equals(Object _that) {
    if (_that == null)
      return false;
    if (this == _that)
      return true;
    if (!(_that instanceof MyStructFieldPatch))
      return false;
    MyStructFieldPatch that = (MyStructFieldPatch)_that;

    if (!TBaseHelper.equalsNobinary(this.isSetStructWithCustomDefault(), that.isSetStructWithCustomDefault(), this.structWithCustomDefault, that.structWithCustomDefault)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetI32WithCustomDefault(), that.isSetI32WithCustomDefault(), this.i32WithCustomDefault, that.i32WithCustomDefault)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetMapMap(), that.isSetMapMap(), this.mapMap, that.mapMap)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetListMap(), that.isSetListMap(), this.listMap, that.listMap)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetOptMapVal(), that.isSetOptMapVal(), this.optMapVal, that.optMapVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetOptSetVal(), that.isSetOptSetVal(), this.optSetVal, that.optSetVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetOptListVal(), that.isSetOptListVal(), this.optListVal, that.optListVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetOptLateStructVal(), that.isSetOptLateStructVal(), this.optLateStructVal, that.optLateStructVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetOptStructVal(), that.isSetOptStructVal(), this.optStructVal, that.optStructVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetOptEnumVal(), that.isSetOptEnumVal(), this.optEnumVal, that.optEnumVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetOptBinaryVal(), that.isSetOptBinaryVal(), this.optBinaryVal, that.optBinaryVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetOptStringVal(), that.isSetOptStringVal(), this.optStringVal, that.optStringVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetOptDoubleVal(), that.isSetOptDoubleVal(), this.optDoubleVal, that.optDoubleVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetOptFloatVal(), that.isSetOptFloatVal(), this.optFloatVal, that.optFloatVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetOptI64Val(), that.isSetOptI64Val(), this.optI64Val, that.optI64Val)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetOptI32Val(), that.isSetOptI32Val(), this.optI32Val, that.optI32Val)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetOptI16Val(), that.isSetOptI16Val(), this.optI16Val, that.optI16Val)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetOptByteVal(), that.isSetOptByteVal(), this.optByteVal, that.optByteVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetOptBoolVal(), that.isSetOptBoolVal(), this.optBoolVal, that.optBoolVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetLateStructVal(), that.isSetLateStructVal(), this.lateStructVal, that.lateStructVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetUnionVal(), that.isSetUnionVal(), this.unionVal, that.unionVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetStructVal(), that.isSetStructVal(), this.structVal, that.structVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetEnumVal(), that.isSetEnumVal(), this.enumVal, that.enumVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetBinaryVal(), that.isSetBinaryVal(), this.binaryVal, that.binaryVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetStringVal(), that.isSetStringVal(), this.stringVal, that.stringVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetDoubleVal(), that.isSetDoubleVal(), this.doubleVal, that.doubleVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetFloatVal(), that.isSetFloatVal(), this.floatVal, that.floatVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetI64Val(), that.isSetI64Val(), this.i64Val, that.i64Val)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetI32Val(), that.isSetI32Val(), this.i32Val, that.i32Val)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetI16Val(), that.isSetI16Val(), this.i16Val, that.i16Val)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetByteVal(), that.isSetByteVal(), this.byteVal, that.byteVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetBoolVal(), that.isSetBoolVal(), this.boolVal, that.boolVal)) { return false; }

    if (!TBaseHelper.equalsNobinary(this.isSetStructWithFieldCustomDefault(), that.isSetStructWithFieldCustomDefault(), this.structWithFieldCustomDefault, that.structWithFieldCustomDefault)) { return false; }

    return true;
  }

  @Override
  public int hashCode() {
    return Arrays.deepHashCode(new Object[] {structWithCustomDefault, i32WithCustomDefault, mapMap, listMap, optMapVal, optSetVal, optListVal, optLateStructVal, optStructVal, optEnumVal, optBinaryVal, optStringVal, optDoubleVal, optFloatVal, optI64Val, optI32Val, optI16Val, optByteVal, optBoolVal, lateStructVal, unionVal, structVal, enumVal, binaryVal, stringVal, doubleVal, floatVal, i64Val, i32Val, i16Val, byteVal, boolVal, structWithFieldCustomDefault});
  }

  @Override
  public int compareTo(MyStructFieldPatch other) {
    if (other == null) {
      // See java.lang.Comparable docs
      throw new NullPointerException();
    }

    if (other == this) {
      return 0;
    }
    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetStructWithCustomDefault()).compareTo(other.isSetStructWithCustomDefault());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(structWithCustomDefault, other.structWithCustomDefault);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetI32WithCustomDefault()).compareTo(other.isSetI32WithCustomDefault());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(i32WithCustomDefault, other.i32WithCustomDefault);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetMapMap()).compareTo(other.isSetMapMap());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(mapMap, other.mapMap);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetListMap()).compareTo(other.isSetListMap());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(listMap, other.listMap);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetOptMapVal()).compareTo(other.isSetOptMapVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(optMapVal, other.optMapVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetOptSetVal()).compareTo(other.isSetOptSetVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(optSetVal, other.optSetVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetOptListVal()).compareTo(other.isSetOptListVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(optListVal, other.optListVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetOptLateStructVal()).compareTo(other.isSetOptLateStructVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(optLateStructVal, other.optLateStructVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetOptStructVal()).compareTo(other.isSetOptStructVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(optStructVal, other.optStructVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetOptEnumVal()).compareTo(other.isSetOptEnumVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(optEnumVal, other.optEnumVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetOptBinaryVal()).compareTo(other.isSetOptBinaryVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(optBinaryVal, other.optBinaryVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetOptStringVal()).compareTo(other.isSetOptStringVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(optStringVal, other.optStringVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetOptDoubleVal()).compareTo(other.isSetOptDoubleVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(optDoubleVal, other.optDoubleVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetOptFloatVal()).compareTo(other.isSetOptFloatVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(optFloatVal, other.optFloatVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetOptI64Val()).compareTo(other.isSetOptI64Val());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(optI64Val, other.optI64Val);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetOptI32Val()).compareTo(other.isSetOptI32Val());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(optI32Val, other.optI32Val);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetOptI16Val()).compareTo(other.isSetOptI16Val());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(optI16Val, other.optI16Val);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetOptByteVal()).compareTo(other.isSetOptByteVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(optByteVal, other.optByteVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetOptBoolVal()).compareTo(other.isSetOptBoolVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(optBoolVal, other.optBoolVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetLateStructVal()).compareTo(other.isSetLateStructVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(lateStructVal, other.lateStructVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetUnionVal()).compareTo(other.isSetUnionVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(unionVal, other.unionVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetStructVal()).compareTo(other.isSetStructVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(structVal, other.structVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetEnumVal()).compareTo(other.isSetEnumVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(enumVal, other.enumVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetBinaryVal()).compareTo(other.isSetBinaryVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(binaryVal, other.binaryVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetStringVal()).compareTo(other.isSetStringVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(stringVal, other.stringVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetDoubleVal()).compareTo(other.isSetDoubleVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(doubleVal, other.doubleVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetFloatVal()).compareTo(other.isSetFloatVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(floatVal, other.floatVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetI64Val()).compareTo(other.isSetI64Val());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(i64Val, other.i64Val);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetI32Val()).compareTo(other.isSetI32Val());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(i32Val, other.i32Val);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetI16Val()).compareTo(other.isSetI16Val());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(i16Val, other.i16Val);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetByteVal()).compareTo(other.isSetByteVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(byteVal, other.byteVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetBoolVal()).compareTo(other.isSetBoolVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(boolVal, other.boolVal);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    lastComparison = Boolean.valueOf(isSetStructWithFieldCustomDefault()).compareTo(other.isSetStructWithFieldCustomDefault());
    if (lastComparison != 0) {
      return lastComparison;
    }
    lastComparison = TBaseHelper.compareTo(structWithFieldCustomDefault, other.structWithFieldCustomDefault);
    if (lastComparison != 0) { 
      return lastComparison;
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField __field;
    iprot.readStructBegin(metaDataMap);
    while (true)
    {
      __field = iprot.readFieldBegin();
      if (__field.type == TType.STOP) {
        break;
      }
      switch (__field.id)
      {
        case STRUCTWITHCUSTOMDEFAULT:
          if (__field.type == TType.STRUCT) {
            this.structWithCustomDefault = new MyDataWithCustomDefaultPatch();
            this.structWithCustomDefault.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case I32WITHCUSTOMDEFAULT:
          if (__field.type == TType.STRUCT) {
            this.i32WithCustomDefault = new com.facebook.thrift.op.I32Patch();
            this.i32WithCustomDefault.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case MAPMAP:
          if (__field.type == TType.STRUCT) {
            this.mapMap = new MyStructField30Patch();
            this.mapMap.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case LISTMAP:
          if (__field.type == TType.STRUCT) {
            this.listMap = new MyStructField29Patch();
            this.listMap.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case OPTMAPVAL:
          if (__field.type == TType.STRUCT) {
            this.optMapVal = new MyStructField28Patch();
            this.optMapVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case OPTSETVAL:
          if (__field.type == TType.STRUCT) {
            this.optSetVal = new MyStructField27Patch();
            this.optSetVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case OPTLISTVAL:
          if (__field.type == TType.STRUCT) {
            this.optListVal = new MyStructField26Patch();
            this.optListVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case OPTLATESTRUCTVAL:
          if (__field.type == TType.STRUCT) {
            this.optLateStructVal = new LateDefStructPatch();
            this.optLateStructVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case OPTSTRUCTVAL:
          if (__field.type == TType.STRUCT) {
            this.optStructVal = new MyDataPatch();
            this.optStructVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case OPTENUMVAL:
          if (__field.type == TType.STRUCT) {
            this.optEnumVal = new MyStructField23Patch();
            this.optEnumVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case OPTBINARYVAL:
          if (__field.type == TType.STRUCT) {
            this.optBinaryVal = new com.facebook.thrift.op.BinaryPatch();
            this.optBinaryVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case OPTSTRINGVAL:
          if (__field.type == TType.STRUCT) {
            this.optStringVal = new com.facebook.thrift.op.StringPatch();
            this.optStringVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case OPTDOUBLEVAL:
          if (__field.type == TType.STRUCT) {
            this.optDoubleVal = new com.facebook.thrift.op.DoublePatch();
            this.optDoubleVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case OPTFLOATVAL:
          if (__field.type == TType.STRUCT) {
            this.optFloatVal = new com.facebook.thrift.op.FloatPatch();
            this.optFloatVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case OPTI64VAL:
          if (__field.type == TType.STRUCT) {
            this.optI64Val = new com.facebook.thrift.op.I64Patch();
            this.optI64Val.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case OPTI32VAL:
          if (__field.type == TType.STRUCT) {
            this.optI32Val = new com.facebook.thrift.op.I32Patch();
            this.optI32Val.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case OPTI16VAL:
          if (__field.type == TType.STRUCT) {
            this.optI16Val = new com.facebook.thrift.op.I16Patch();
            this.optI16Val.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case OPTBYTEVAL:
          if (__field.type == TType.STRUCT) {
            this.optByteVal = new com.facebook.thrift.op.BytePatch();
            this.optByteVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case OPTBOOLVAL:
          if (__field.type == TType.STRUCT) {
            this.optBoolVal = new com.facebook.thrift.op.BoolPatch();
            this.optBoolVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case LATESTRUCTVAL:
          if (__field.type == TType.STRUCT) {
            this.lateStructVal = new LateDefStructPatch();
            this.lateStructVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case UNIONVAL:
          if (__field.type == TType.STRUCT) {
            this.unionVal = new MyUnionPatch();
            this.unionVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case STRUCTVAL:
          if (__field.type == TType.STRUCT) {
            this.structVal = new MyDataPatch();
            this.structVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case ENUMVAL:
          if (__field.type == TType.STRUCT) {
            this.enumVal = new MyStructField10Patch();
            this.enumVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case BINARYVAL:
          if (__field.type == TType.STRUCT) {
            this.binaryVal = new com.facebook.thrift.op.BinaryPatch();
            this.binaryVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case STRINGVAL:
          if (__field.type == TType.STRUCT) {
            this.stringVal = new com.facebook.thrift.op.StringPatch();
            this.stringVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case DOUBLEVAL:
          if (__field.type == TType.STRUCT) {
            this.doubleVal = new com.facebook.thrift.op.DoublePatch();
            this.doubleVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case FLOATVAL:
          if (__field.type == TType.STRUCT) {
            this.floatVal = new com.facebook.thrift.op.FloatPatch();
            this.floatVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case I64VAL:
          if (__field.type == TType.STRUCT) {
            this.i64Val = new com.facebook.thrift.op.I64Patch();
            this.i64Val.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case I32VAL:
          if (__field.type == TType.STRUCT) {
            this.i32Val = new com.facebook.thrift.op.I32Patch();
            this.i32Val.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case I16VAL:
          if (__field.type == TType.STRUCT) {
            this.i16Val = new com.facebook.thrift.op.I16Patch();
            this.i16Val.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case BYTEVAL:
          if (__field.type == TType.STRUCT) {
            this.byteVal = new com.facebook.thrift.op.BytePatch();
            this.byteVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case BOOLVAL:
          if (__field.type == TType.STRUCT) {
            this.boolVal = new com.facebook.thrift.op.BoolPatch();
            this.boolVal.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        case STRUCTWITHFIELDCUSTOMDEFAULT:
          if (__field.type == TType.STRUCT) {
            this.structWithFieldCustomDefault = new MyDataPatch();
            this.structWithFieldCustomDefault.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, __field.type);
          break;
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();


    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.structWithCustomDefault != null) {
      oprot.writeFieldBegin(STRUCT_WITH_CUSTOM_DEFAULT_FIELD_DESC);
      this.structWithCustomDefault.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.i32WithCustomDefault != null) {
      oprot.writeFieldBegin(I32_WITH_CUSTOM_DEFAULT_FIELD_DESC);
      this.i32WithCustomDefault.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.mapMap != null) {
      oprot.writeFieldBegin(MAP_MAP_FIELD_DESC);
      this.mapMap.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.listMap != null) {
      oprot.writeFieldBegin(LIST_MAP_FIELD_DESC);
      this.listMap.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.optMapVal != null) {
      oprot.writeFieldBegin(OPT_MAP_VAL_FIELD_DESC);
      this.optMapVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.optSetVal != null) {
      oprot.writeFieldBegin(OPT_SET_VAL_FIELD_DESC);
      this.optSetVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.optListVal != null) {
      oprot.writeFieldBegin(OPT_LIST_VAL_FIELD_DESC);
      this.optListVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.optLateStructVal != null) {
      oprot.writeFieldBegin(OPT_LATE_STRUCT_VAL_FIELD_DESC);
      this.optLateStructVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.optStructVal != null) {
      oprot.writeFieldBegin(OPT_STRUCT_VAL_FIELD_DESC);
      this.optStructVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.optEnumVal != null) {
      oprot.writeFieldBegin(OPT_ENUM_VAL_FIELD_DESC);
      this.optEnumVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.optBinaryVal != null) {
      oprot.writeFieldBegin(OPT_BINARY_VAL_FIELD_DESC);
      this.optBinaryVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.optStringVal != null) {
      oprot.writeFieldBegin(OPT_STRING_VAL_FIELD_DESC);
      this.optStringVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.optDoubleVal != null) {
      oprot.writeFieldBegin(OPT_DOUBLE_VAL_FIELD_DESC);
      this.optDoubleVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.optFloatVal != null) {
      oprot.writeFieldBegin(OPT_FLOAT_VAL_FIELD_DESC);
      this.optFloatVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.optI64Val != null) {
      oprot.writeFieldBegin(OPT_I64_VAL_FIELD_DESC);
      this.optI64Val.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.optI32Val != null) {
      oprot.writeFieldBegin(OPT_I32_VAL_FIELD_DESC);
      this.optI32Val.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.optI16Val != null) {
      oprot.writeFieldBegin(OPT_I16_VAL_FIELD_DESC);
      this.optI16Val.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.optByteVal != null) {
      oprot.writeFieldBegin(OPT_BYTE_VAL_FIELD_DESC);
      this.optByteVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.optBoolVal != null) {
      oprot.writeFieldBegin(OPT_BOOL_VAL_FIELD_DESC);
      this.optBoolVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.lateStructVal != null) {
      oprot.writeFieldBegin(LATE_STRUCT_VAL_FIELD_DESC);
      this.lateStructVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.unionVal != null) {
      oprot.writeFieldBegin(UNION_VAL_FIELD_DESC);
      this.unionVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.structVal != null) {
      oprot.writeFieldBegin(STRUCT_VAL_FIELD_DESC);
      this.structVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.enumVal != null) {
      oprot.writeFieldBegin(ENUM_VAL_FIELD_DESC);
      this.enumVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.binaryVal != null) {
      oprot.writeFieldBegin(BINARY_VAL_FIELD_DESC);
      this.binaryVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.stringVal != null) {
      oprot.writeFieldBegin(STRING_VAL_FIELD_DESC);
      this.stringVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.doubleVal != null) {
      oprot.writeFieldBegin(DOUBLE_VAL_FIELD_DESC);
      this.doubleVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.floatVal != null) {
      oprot.writeFieldBegin(FLOAT_VAL_FIELD_DESC);
      this.floatVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.i64Val != null) {
      oprot.writeFieldBegin(I64_VAL_FIELD_DESC);
      this.i64Val.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.i32Val != null) {
      oprot.writeFieldBegin(I32_VAL_FIELD_DESC);
      this.i32Val.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.i16Val != null) {
      oprot.writeFieldBegin(I16_VAL_FIELD_DESC);
      this.i16Val.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.byteVal != null) {
      oprot.writeFieldBegin(BYTE_VAL_FIELD_DESC);
      this.byteVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.boolVal != null) {
      oprot.writeFieldBegin(BOOL_VAL_FIELD_DESC);
      this.boolVal.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.structWithFieldCustomDefault != null) {
      oprot.writeFieldBegin(STRUCT_WITH_FIELD_CUSTOM_DEFAULT_FIELD_DESC);
      this.structWithFieldCustomDefault.write(oprot);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    return toString(1, true);
  }

  @Override
  public String toString(int indent, boolean prettyPrint) {
    String indentStr = prettyPrint ? TBaseHelper.getIndentedString(indent) : "";
    String newLine = prettyPrint ? "\n" : "";
    String space = prettyPrint ? " " : "";
    StringBuilder sb = new StringBuilder("MyStructFieldPatch");
    sb.append(space);
    sb.append("(");
    sb.append(newLine);
    boolean first = true;

    sb.append(indentStr);
    sb.append("structWithCustomDefault");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getStructWithCustomDefault() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getStructWithCustomDefault(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("i32WithCustomDefault");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getI32WithCustomDefault() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getI32WithCustomDefault(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("mapMap");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getMapMap() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getMapMap(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("listMap");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getListMap() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getListMap(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("optMapVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getOptMapVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getOptMapVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("optSetVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getOptSetVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getOptSetVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("optListVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getOptListVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getOptListVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("optLateStructVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getOptLateStructVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getOptLateStructVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("optStructVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getOptStructVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getOptStructVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("optEnumVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getOptEnumVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getOptEnumVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("optBinaryVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getOptBinaryVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getOptBinaryVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("optStringVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getOptStringVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getOptStringVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("optDoubleVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getOptDoubleVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getOptDoubleVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("optFloatVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getOptFloatVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getOptFloatVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("optI64Val");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getOptI64Val() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getOptI64Val(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("optI32Val");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getOptI32Val() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getOptI32Val(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("optI16Val");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getOptI16Val() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getOptI16Val(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("optByteVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getOptByteVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getOptByteVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("optBoolVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getOptBoolVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getOptBoolVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("lateStructVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getLateStructVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getLateStructVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("unionVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getUnionVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getUnionVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("structVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getStructVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getStructVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("enumVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getEnumVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getEnumVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("binaryVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getBinaryVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getBinaryVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("stringVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getStringVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getStringVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("doubleVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getDoubleVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getDoubleVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("floatVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getFloatVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getFloatVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("i64Val");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getI64Val() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getI64Val(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("i32Val");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getI32Val() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getI32Val(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("i16Val");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getI16Val() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getI16Val(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("byteVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getByteVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getByteVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("boolVal");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getBoolVal() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getBoolVal(), indent + 1, prettyPrint));
    }
    first = false;
    if (!first) sb.append("," + newLine);
    sb.append(indentStr);
    sb.append("structWithFieldCustomDefault");
    sb.append(space);
    sb.append(":").append(space);
    if (this.getStructWithFieldCustomDefault() == null) {
      sb.append("null");
    } else {
      sb.append(TBaseHelper.toString(this.getStructWithFieldCustomDefault(), indent + 1, prettyPrint));
    }
    first = false;
    sb.append(newLine + TBaseHelper.reduceIndent(indentStr));
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

