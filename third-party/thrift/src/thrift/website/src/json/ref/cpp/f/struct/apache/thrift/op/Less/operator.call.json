{
  "kind": "overloadset",
  "name_html": "operator()",
  "compoundname_html": "apache::thrift::op::Less::operator()",
  "functions": [
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01LTag_00_01type_1_1void__t_01_4_1ad0cbb3267015cd5d35150dcaa5f903cf",
      "prot": "public",
      "static": "no",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename L"
        },
        {
          "type_html": "typename R"
        }
      ],
      "type_html": "constexpr bool",
      "definition_html": "constexpr bool apache::thrift::op::detail::LessThan&lt; LTag, type::void_t &gt;::operator()",
      "argsstring_html": "(const L &amp;lhs, const R &amp;rhs) const",
      "name_html": "operator()",
      "param": [
        {
          "type_html": "const L &amp;",
          "declname_html": "lhs"
        },
        {
          "type_html": "const R &amp;",
          "declname_html": "rhs"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
        "line": "130",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
        "bodystart": "130",
        "bodyend": "132"
      },
      "definition": {
        "simple_html": "template &lt;typename L, typename R&gt;\nconstexpr bool operator()(const L&amp; lhs, const R&amp; rhs) const",
        "simple_raw": "template <typename L, typename R>\nconstexpr bool operator()(const L& lhs, const R& rhs) const",
        "detailed_html": "template &lt;typename L, typename R&gt;\ninline constexpr bool operator()(const L&amp; lhs, const R&amp; rhs) const",
        "detailed_raw": "template <typename L, typename R>\ninline constexpr bool operator()(const L& lhs, const R& rhs) const",
        "original_definition_html": "constexpr bool apache::thrift::op::detail::LessThan&lt; LTag, type::void_t &gt;::operator()",
        "original_argsstring_html": "(const L &amp;lhs, const R &amp;rhs) const"
      },
      "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01LTag_00_01type_1_1void__t_01_4/operator.call",
      "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01LTag_00_01type_1_1void__t_01_4/operator.call",
      "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01LTag_00_01type_1_1void__t_01_4",
      "compoundname_html": "apache::thrift::op::Less::operator()"
    },
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1adapted_3_01Adapter_00_01Tag_01_4_01_4_1ad9d8f8d19d831f0ebb72eacd008f5a6d",
      "prot": "public",
      "static": "no",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename T1"
        },
        {
          "type_html": "typename T2",
          "defval_html": "T1"
        }
      ],
      "type_html": "constexpr bool",
      "definition_html": "constexpr bool apache::thrift::op::detail::LessThan&lt; type::adapted&lt; Adapter, Tag &gt; &gt;::operator()",
      "argsstring_html": "(const T1 &amp;lhs, const T2 &amp;rhs) const",
      "name_html": "operator()",
      "param": [
        {
          "type_html": "const T1 &amp;",
          "declname_html": "lhs"
        },
        {
          "type_html": "const T2 &amp;",
          "declname_html": "rhs"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
        "line": "541",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
        "bodystart": "541",
        "bodyend": "543"
      },
      "definition": {
        "simple_html": "template &lt;typename T1, typename T2 = T1&gt;\nconstexpr bool operator()(const T1&amp; lhs, const T2&amp; rhs) const",
        "simple_raw": "template <typename T1, typename T2 = T1>\nconstexpr bool operator()(const T1& lhs, const T2& rhs) const",
        "detailed_html": "template &lt;typename T1, typename T2 = T1&gt;\ninline constexpr bool operator()(const T1&amp; lhs, const T2&amp; rhs) const",
        "detailed_raw": "template <typename T1, typename T2 = T1>\ninline constexpr bool operator()(const T1& lhs, const T2& rhs) const",
        "original_definition_html": "constexpr bool apache::thrift::op::detail::LessThan&lt; type::adapted&lt; Adapter, Tag &gt; &gt;::operator()",
        "original_argsstring_html": "(const T1 &amp;lhs, const T2 &amp;rhs) const"
      },
      "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1adapted_3_01Adapter_00_01Tag_01_4_01_4/operator.call",
      "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1adapted_3_01Adapter_00_01Tag_01_4_01_4/operator.call",
      "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1adapted_3_01Adapter_00_01Tag_01_4_01_4",
      "compoundname_html": "apache::thrift::op::Less::operator()"
    },
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_01_4_1a14a37e2f6ba00cafe1d9af237ab4d9a0",
      "prot": "public",
      "static": "no",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename L"
        },
        {
          "type_html": "typename R"
        }
      ],
      "type_html": "constexpr bool",
      "definition_html": "constexpr bool apache::thrift::op::detail::LessThan&lt; type::void_t &gt;::operator()",
      "argsstring_html": "(const L &amp;lhs, const R &amp;rhs) const",
      "name_html": "operator()",
      "param": [
        {
          "type_html": "const L &amp;",
          "declname_html": "lhs"
        },
        {
          "type_html": "const R &amp;",
          "declname_html": "rhs"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
        "line": "123",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
        "bodystart": "123",
        "bodyend": "125"
      },
      "definition": {
        "simple_html": "template &lt;typename L, typename R&gt;\nconstexpr bool operator()(const L&amp; lhs, const R&amp; rhs) const",
        "simple_raw": "template <typename L, typename R>\nconstexpr bool operator()(const L& lhs, const R& rhs) const",
        "detailed_html": "template &lt;typename L, typename R&gt;\ninline constexpr bool operator()(const L&amp; lhs, const R&amp; rhs) const",
        "detailed_raw": "template <typename L, typename R>\ninline constexpr bool operator()(const L& lhs, const R& rhs) const",
        "original_definition_html": "constexpr bool apache::thrift::op::detail::LessThan&lt; type::void_t &gt;::operator()",
        "original_argsstring_html": "(const L &amp;lhs, const R &amp;rhs) const"
      },
      "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_01_4/operator.call",
      "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_01_4/operator.call",
      "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_01_4",
      "compoundname_html": "apache::thrift::op::Less::operator()"
    },
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_00_01RTag_01_4_1a19dbbac69dbd6953ff4e23ed0a382531",
      "prot": "public",
      "static": "no",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename L"
        },
        {
          "type_html": "typename R"
        }
      ],
      "type_html": "constexpr bool",
      "definition_html": "constexpr bool apache::thrift::op::detail::LessThan&lt; type::void_t, RTag &gt;::operator()",
      "argsstring_html": "(const L &amp;lhs, const R &amp;rhs) const",
      "name_html": "operator()",
      "param": [
        {
          "type_html": "const L &amp;",
          "declname_html": "lhs"
        },
        {
          "type_html": "const R &amp;",
          "declname_html": "rhs"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
        "line": "137",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
        "bodystart": "137",
        "bodyend": "139"
      },
      "definition": {
        "simple_html": "template &lt;typename L, typename R&gt;\nconstexpr bool operator()(const L&amp; lhs, const R&amp; rhs) const",
        "simple_raw": "template <typename L, typename R>\nconstexpr bool operator()(const L& lhs, const R& rhs) const",
        "detailed_html": "template &lt;typename L, typename R&gt;\ninline constexpr bool operator()(const L&amp; lhs, const R&amp; rhs) const",
        "detailed_raw": "template <typename L, typename R>\ninline constexpr bool operator()(const L& lhs, const R& rhs) const",
        "original_definition_html": "constexpr bool apache::thrift::op::detail::LessThan&lt; type::void_t, RTag &gt;::operator()",
        "original_argsstring_html": "(const L &amp;lhs, const R &amp;rhs) const"
      },
      "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_00_01RTag_01_4/operator.call",
      "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_00_01RTag_01_4/operator.call",
      "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1LessThan_3_01type_1_1void__t_00_01RTag_01_4",
      "compoundname_html": "apache::thrift::op::Less::operator()"
    }
  ],
  "filepath": "f/struct/apache/thrift/op/Less/operator.call",
  "minprot": "public",
  "displayname_html": "operator()",
  "brief_html": "",
  "groupname_html": "",
  "href": "/ref/cpp/f/struct/apache/thrift/op/Less/operator.call",
  "refid": "/ref/cpp/f/struct/apache/thrift/op/Less/operator.call"
}