[("\\test",
  (Shallow_decl_defs.Fun
     { Typing_defs.fe_deprecated = None; fe_module = None; fe_package = None;
       fe_internal = false;
       fe_type =
       (Rwitness_from_decl ([3:10-14]),
        (Tfun
           { ft_tparams = []; ft_where_constraints = [];
             ft_params =
             [{ fp_pos = [3:42-44]; fp_name = (Some "$f");
                fp_type =
                (Rhint ([3:15-41]),
                 (Tfun
                    { ft_tparams = []; ft_where_constraints = [];
                      ft_params =
                      [{ fp_pos = [3:25-30]; fp_name = None;
                         fp_type = (Rhint ([3:25-30]), Tmixed);
                         fp_flags =
                         { Typing_defs_flags.FunParam.accept_disposable =
                           false; inout = false; is_optional = false;
                           readonly = false; ignore_readonly_error = false;
                           splat = false; named = false };
                         fp_def_value = None }
                        ];
                      ft_implicit_params =
                      { capability = (CapDefaults [3:15-41]) };
                      ft_ret = (Rhint ([3:36-40]), (Tprim Tvoid));
                      ft_flags =
                      { Typing_defs_flags.Fun.return_disposable = false;
                        async = false; generator = false; fun_kind = FSync;
                        is_function_pointer = false;
                        returns_readonly = false; readonly_this = false;
                        support_dynamic_type = false; is_memoized = false;
                        variadic = true };
                      ft_require_package = None; ft_instantiated = true }));
                fp_flags =
                { Typing_defs_flags.FunParam.accept_disposable = false;
                  inout = false; is_optional = false; readonly = false;
                  ignore_readonly_error = false; splat = false; named = false
                  };
                fp_def_value = None }
               ];
             ft_implicit_params = { capability = (CapDefaults [3:10-14]) };
             ft_ret = (Rhint ([3:47-51]), (Tprim Tvoid));
             ft_flags =
             { Typing_defs_flags.Fun.return_disposable = false;
               async = false; generator = false; fun_kind = FSync;
               is_function_pointer = false; returns_readonly = false;
               readonly_this = false; support_dynamic_type = false;
               is_memoized = false; variadic = false };
             ft_require_package = None; ft_instantiated = true }));
       fe_pos = [3:10-14]; fe_php_std_lib = false;
       fe_support_dynamic_type = false; fe_no_auto_dynamic = false;
       fe_no_auto_likes = false }))
  ]
