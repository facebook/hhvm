# @generated by autocargo

[package]
name = "emit_unit"
version = "0.0.0"
edition = "2021"

[lib]
path = "../../emit_unit.rs"

[dependencies]
ast_scope = { version = "0.0.0", path = "../ast_scope" }
bitflags = "1.3"
bstr = { version = "1.4.0", features = ["serde", "std", "unicode"] }
bumpalo = { version = "3.11.1", features = ["collections"] }
constant_folder = { version = "0.0.0", path = "../constant_folder" }
core_utils_rust = { version = "0.0.0", path = "../../../../utils/core" }
decl_provider = { version = "0.0.0", path = "../../../decl_provider" }
emit_pos = { version = "0.0.0", path = "../emit_pos" }
emit_type_hint = { version = "0.0.0", path = "../emit_type_hint" }
env = { version = "0.0.0", path = "../env" }
error = { version = "0.0.0", path = "../../../error/cargo/error" }
ffi = { version = "0.0.0", path = "../../../../utils/ffi" }
hack_macros = { version = "0.0.0", path = "../../../../utils/hack_macros/cargo/hack_macros" }
hash = { version = "0.0.0", path = "../../../../utils/hash" }
hhbc = { version = "0.0.0", path = "../../../hhbc/cargo/hhbc" }
hhbc_string_utils = { version = "0.0.0", path = "../../../utils/cargo/hhbc_string_utils" }
hhvm_types_ffi = { version = "0.0.0", path = "../../../hhvm_cxx/hhvm_types" }
indexmap = { version = "1.9.2", features = ["arbitrary", "rayon", "serde-1"] }
instruction_sequence = { version = "0.0.0", path = "../instruction_sequence" }
itertools = "0.10.3"
label_rewriter = { version = "0.0.0", path = "../label_rewriter" }
lazy_static = "1.4"
naming_special_names_rust = { version = "0.0.0", path = "../../../../naming" }
ocamlrep = { version = "0.1.0", git = "https://github.com/facebook/ocamlrep/", branch = "main" }
options = { version = "0.0.0", path = "../../../compile/cargo/options" }
oxidized = { version = "0.0.0", path = "../../../../oxidized" }
oxidized_by_ref = { version = "0.0.0", path = "../../../../oxidized_by_ref" }
print_expr = { version = "0.0.0", path = "../../../print_expr" }
regex = "1.6.0"
scope = { version = "0.0.0", path = "../scope" }
serde_json = { version = "1.0.79", features = ["float_roundtrip", "unbounded_depth"] }
stack_depth = { version = "0.0.0", path = "../../../utils/cargo/stack_depth" }
stack_limit = { version = "0.0.0", path = "../../../../utils/stack_limit" }
statement_state = { version = "0.0.0", path = "../statement_state" }
