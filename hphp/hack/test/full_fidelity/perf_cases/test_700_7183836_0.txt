<?hh
namespace oKCieb { require_once ( "heredoc" ) ; use fBr ; enum rK : int { uWPiUFo = 12 ; vSM = shape ( 'single string' => ! ( int ) $iH , 'single string' => ( ( "nowdoc" ) ) >= ( ( $oSElZ ) ) ) ; jFAzLRbKj = 0x16 ; } function kWs < - bKlSFV as shape ( ) , + jT as ( array < array < string , int > , float > , arraykey ) > ( ) : array < int , ( shape ( 'single string' => bKlvuAW , 'single string' => mixed , 'single string' => num ) , bool ) > { throw ( ( ( string ) $aNuQ = ( $aOpIqT = ( shape ( 'single string' => $jAdYR = ( string ) $oEtoe = ( float ) $mCW %= $kJykilS ) ) ) ) ? ( ( ( $jBIZmSiY ) ) <= ( ( 0x16 ) ) ) : ( ( 12 ) ) ^ ( ( $qSeHGvn ) ) ) ; if ( $aA |= 0x16 ) while ( $vKU ) ; elseif ( $aOLtxqtn ) ; elseif ( 42.42 ) ; else break ; { } } use uTyR as nCz ; interface hNsApR { } namespace uJDnEO { require "double string" ; use vIzHGlfe ; newtype kZmBLCzUA = nI ; << aOzqNI , eALrLILUI ( $dZtNxKNCT [ $oZqqWPVp ] -> kCQ -> uROMxrJ ) >> trait yT { } use sCh as hRmbqHxcM ; enum pMRCe : int { eViNQcE = array ( ) ; yHPU = shape ( 'single string' => 0123 , 'single string' => $nB , 'single string' => ( string ) function ( ) : bool use ( $lAM ) { } ) ; gGmsdheYw = shape ( ) ; } namespace { interface hRzsFb { const type cVWuQDKb = array < classname < yNBYJ > > ; } function qEfgmnrjD < kHXaYl > ( ) : string { while ( $iSISNWB ) ; } require 'single string' ; << fOYBdPZe ( @ ( string ) $xCVgjWS -= shape ( ) , $oYsLL += 0b101010 ) >> interface hTprmOxdt < - mIOSK > { } } << cCT ( ) >> trait vWV < iFxKScULz , tGVTQrC , + tAEEDgO as string , bMMA as string , - nPlArto as shape ( ) > implements sWBDj < ? ? ( function ( this ) : this :: fD ) > , nDAKq { use uHFNqNmp < arraykey , mixed , yMtZ > , aFEm , mIx < lXBWio , string > ; use qFrQxIE , nNkV < pVTh , gPMt > ; use xTvJmBy , tEOkKIbh , jA < dUN > ; } trait vNndjjW < - aCt , + hEBwWRe as arraykey > { use iGHCzXcnt < mixed , tPNauL , shape ( 'single string' => bool , 'single string' => bool , 'single string' => this :: tQMElmp :: qSRmzNK , 'single string' => bool , 'single string' => ? classname < tRFwwiUW > ) > ; use oA ; } require ( "nowdoc" ) ; } namespace rPefVZFe { use nGXyodiDm ; use hFEumak ; << gYfO >> function pFmjAdUP ( ) : float { } trait nMsmk < dKXvH > implements sLeIk { use oIpH ; public int $gGTPFTV ; } enum sVWbCtNo : string { } require ( "heredoc" ) ; << tMqW , vSpvBNf , rK , gCoVTYJmn ( shape ( 'single string' => $vEHoW -= 12 , 'single string' => new $rAJCD ( 12 ) ) ) >> async function bUEZ < + yUL as kTzCe , aY > ( ) : xIIChcb < rGIentu , ( function ( ) : int ) > { } use fVl , aLgJWN as rUdxdJH ; require_once "double string" ; enum vWQJcE : string { } << pGuk ( ) , cHHr ( ( new static ( ( clone ( int ) $bKoRK = $zCP ) ) [ ] ) , $fFXBL %= await $cNzmJuvA , array ( ) , $fN ^= ( $hCbCjX = 0123 ) ) >> class hUZcOVLQ < - fBtEpGE as aL , + tHFyGZBa > { use kHZsgPu ; use mHNTvr , tJn , sJtITvqpe , mCkCtVYo < xGl , vHHzSVWLc , wZBi > ; use kBnFg , qQ < num > ; } } require_once ( "heredoc" ) ; }
