[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([3:10-11], "\\f");
      fd_fun =
      { f_span = [3:1-6:11]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_ret = ((void), (Some ([6:4-8], (Hprim Tvoid))));
        f_params =
        [{ param_annotation = (nonnull); param_type_hint = ((nonnull), (Some ([4:3-10], (Happly (([4:3-10], "\\HH\\supportdyn"), [([4:3-10], Hnonnull)]))))); 
           param_is_variadic = false; param_pos = [4:11-13]; param_name = "$n"; 
           param_expr = None; param_readonly = None; param_callconv = Pnormal; 
           param_user_attributes = []; param_visibility = None };
          { param_annotation = (mixed); param_type_hint = ((mixed), (Some ([5:3-8], (Happly (([5:3-8], "\\HH\\supportdyn"), [([5:3-8], Hmixed)]))))); 
            param_is_variadic = false; param_pos = [5:9-11]; param_name = "$m"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([Pos.none], Noop)] }; 
        f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([3:10-11], "__SupportDynamicType"); ua_params = [] }]; 
        f_external = false; f_doc_comment = None };
      fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] })