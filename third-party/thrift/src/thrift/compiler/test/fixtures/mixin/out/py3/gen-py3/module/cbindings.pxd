#
# Autogenerated by Thrift for thrift/compiler/test/fixtures/mixin/src/module.thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#
from libc.stdint cimport (
    int8_t as cint8_t,
    int16_t as cint16_t,
    int32_t as cint32_t,
    int64_t as cint64_t,
    uint16_t as cuint16_t,
    uint32_t as cuint32_t,
)
from libcpp.string cimport string
from libcpp cimport bool as cbool, nullptr, nullptr_t
from cpython cimport bool as pbool
from libcpp.memory cimport shared_ptr, unique_ptr
from libcpp.vector cimport vector
from libcpp.set cimport set as cset
from libcpp.map cimport map as cmap, pair as cpair
from libcpp.unordered_map cimport unordered_map as cumap
cimport folly.iobuf as _fbthrift_iobuf
from thrift.python.exceptions cimport cTException
from thrift.py3.types cimport (
    bstring,
    field_ref as __field_ref,
    optional_field_ref as __optional_field_ref,
    required_field_ref as __required_field_ref,
    terse_field_ref as __terse_field_ref,
    union_field_ref as __union_field_ref,
    get_union_field_value as __get_union_field_value,
)
from thrift.python.common cimport cThriftMetadata as __fbthrift_cThriftMetadata



cdef extern from "thrift/compiler/test/fixtures/mixin/gen-cpp2/module_metadata.h" namespace "apache::thrift::detail::md":
    cdef cppclass ExceptionMetadata[T]:
        @staticmethod
        void gen(__fbthrift_cThriftMetadata &metadata)
cdef extern from "thrift/compiler/test/fixtures/mixin/gen-cpp2/module_metadata.h" namespace "apache::thrift::detail::md":
    cdef cppclass StructMetadata[T]:
        @staticmethod
        void gen(__fbthrift_cThriftMetadata &metadata)
cdef extern from "thrift/compiler/test/fixtures/mixin/gen-cpp2/module_types_custom_protocol.h" namespace "::cpp2":

    cdef cppclass cMixin1 "::cpp2::Mixin1":
        cMixin1() except +
        cMixin1(const cMixin1&) except +
        bint operator==(cMixin1&)
        bint operator!=(cMixin1&)
        bint operator<(cMixin1&)
        bint operator>(cMixin1&)
        bint operator<=(cMixin1&)
        bint operator>=(cMixin1&)
        __field_ref[string] field1_ref "field1_ref" ()


    cdef cppclass cMixin2 "::cpp2::Mixin2":
        cMixin2() except +
        cMixin2(const cMixin2&) except +
        bint operator==(cMixin2&)
        bint operator!=(cMixin2&)
        bint operator<(cMixin2&)
        bint operator>(cMixin2&)
        bint operator<=(cMixin2&)
        bint operator>=(cMixin2&)
        __field_ref[cMixin1] m1_ref "m1_ref" ()
        __optional_field_ref[string] field2_ref "field2_ref" ()


    cdef cppclass cMixin3Base "::cpp2::Mixin3Base":
        cMixin3Base() except +
        cMixin3Base(const cMixin3Base&) except +
        bint operator==(cMixin3Base&)
        bint operator!=(cMixin3Base&)
        bint operator<(cMixin3Base&)
        bint operator>(cMixin3Base&)
        bint operator<=(cMixin3Base&)
        bint operator>=(cMixin3Base&)
        __field_ref[string] field3_ref "field3_ref" ()


    cdef cppclass cFoo "::cpp2::Foo":
        cFoo() except +
        cFoo(const cFoo&) except +
        bint operator==(cFoo&)
        bint operator!=(cFoo&)
        bint operator<(cFoo&)
        bint operator>(cFoo&)
        bint operator<=(cFoo&)
        bint operator>=(cFoo&)
        __field_ref[string] field4_ref "field4_ref" ()
        __field_ref[cMixin2] m2_ref "m2_ref" ()
        __field_ref[cMixin3Base] m3_ref "m3_ref" ()

