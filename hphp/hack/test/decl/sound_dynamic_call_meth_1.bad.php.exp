[("\\A",
  (Shallow_decl_defs.Class
     { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
       sc_abstract = false; sc_is_xhp = false; sc_internal = false;
       sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
       sc_module = None; sc_name = ([5:7-8], "\\A");
       sc_tparams =
       [{ Typing_defs_core.tp_variance = Invariant;
          tp_name = ([5:9-10], "T"); tp_constraints = [];
          tp_reified = Erased; tp_user_attributes = [] }
         ];
       sc_extends = []; sc_uses = []; sc_xhp_attr_uses = [];
       sc_xhp_enum_values = {}; sc_xhp_marked_empty = false;
       sc_req_extends = []; sc_req_implements = []; sc_req_constraints = [];
       sc_implements = []; sc_support_dynamic_type = true; sc_consts = [];
       sc_typeconsts = []; sc_props = []; sc_sprops = [];
       sc_constructor = None; sc_static_methods = []; sc_methods = [];
       sc_user_attributes =
       [{ Typing_defs_core.ua_name = ([4:3-23], "__SupportDynamicType");
          ua_params = []; ua_raw_val = None }
         ];
       sc_enum_type = None; sc_docs_url = None; sc_package = None }));
  ("\\C",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = false; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
        sc_module = None; sc_name = ([7:7-8], "\\C"); sc_tparams = [];
        sc_extends = []; sc_uses = []; sc_xhp_attr_uses = [];
        sc_xhp_enum_values = {}; sc_xhp_marked_empty = false;
        sc_req_extends = []; sc_req_implements = []; sc_req_constraints = [];
        sc_implements = []; sc_support_dynamic_type = false; sc_consts = [];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = [];
        sc_methods =
        [{ Shallow_decl_defs.sm_name = ([9:19-31], "expect_A_int");
           sm_type =
           (Rwitness_from_decl ([9:19-31]),
            (Tfun
               { ft_tparams = []; ft_where_constraints = [];
                 ft_params =
                 [{ fp_pos = [9:39-42]; fp_name = (Some "$a1");
                    fp_type =
                    (Rhint ([9:32-38]),
                     (Tapply (([9:32-33], "\\A"),
                        [(Rhint ([9:34-37]), (Tprim Tint))])));
                    fp_flags =
                    { Typing_defs_flags.FunParam.accept_disposable = false;
                      inout = false; is_optional = false; readonly = false;
                      ignore_readonly_error = false; splat = false;
                      named = false };
                    fp_def_value = None };
                   { fp_pos = [9:51-54]; fp_name = (Some "$a2");
                     fp_type =
                     (Rhint ([9:44-50]),
                      (Tapply (([9:44-45], "\\A"),
                         [(Rhint ([9:46-49]), (Tprim Tint))])));
                     fp_flags =
                     { Typing_defs_flags.FunParam.accept_disposable = false;
                       inout = false; is_optional = false; readonly = false;
                       ignore_readonly_error = false; splat = false;
                       named = false };
                     fp_def_value = None }
                   ];
                 ft_implicit_params =
                 { capability = (CapDefaults [9:19-31]) };
                 ft_ret = (Rhint ([9:58-62]), (Tprim Tvoid));
                 ft_flags =
                 { Typing_defs_flags.Fun.return_disposable = false;
                   async = false; generator = false; fun_kind = FSync;
                   is_function_pointer = false; returns_readonly = false;
                   readonly_this = false; support_dynamic_type = true;
                   is_memoized = false; variadic = false };
                 ft_require_package = None; ft_instantiated = true }));
           sm_visibility = Public; sm_deprecated = None;
           sm_flags =
           { Shallow_decl_defs.MethodFlags.abstract = false; final = false;
             override = false; dynamicallycallable = false;
             php_std_lib = false; support_dynamic_type = true;
             no_auto_likes = false; needs_concrete = false };
           sm_attributes = []; sm_sort_text = None }
          ];
        sc_user_attributes = []; sc_enum_type = None; sc_docs_url = None;
        sc_package = None }));
  ("\\Foo",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = false; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
        sc_module = None; sc_name = ([16:7-10], "\\Foo"); sc_tparams = [];
        sc_extends = []; sc_uses = []; sc_xhp_attr_uses = [];
        sc_xhp_enum_values = {}; sc_xhp_marked_empty = false;
        sc_req_extends = []; sc_req_implements = []; sc_req_constraints = [];
        sc_implements = []; sc_support_dynamic_type = true; sc_consts = [];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = [];
        sc_methods =
        [{ Shallow_decl_defs.sm_name = ([17:19-22], "foo");
           sm_type =
           (Rwitness_from_decl ([17:19-22]),
            (Tfun
               { ft_tparams = []; ft_where_constraints = [];
                 ft_params =
                 [{ fp_pos = [17:30-32]; fp_name = (Some "$a");
                    fp_type =
                    (Rhint ([17:23-29]),
                     (Tapply (([17:23-24], "\\A"),
                        [(Rhint ([17:25-28]), (Tprim Tint))])));
                    fp_flags =
                    { Typing_defs_flags.FunParam.accept_disposable = false;
                      inout = false; is_optional = false; readonly = false;
                      ignore_readonly_error = false; splat = false;
                      named = false };
                    fp_def_value = None }
                   ];
                 ft_implicit_params =
                 { capability = (CapDefaults [17:19-22]) };
                 ft_ret = (Rhint ([17:36-40]), (Tprim Tvoid));
                 ft_flags =
                 { Typing_defs_flags.Fun.return_disposable = false;
                   async = false; generator = false; fun_kind = FSync;
                   is_function_pointer = false; returns_readonly = false;
                   readonly_this = false; support_dynamic_type = true;
                   is_memoized = false; variadic = false };
                 ft_require_package = None; ft_instantiated = true }));
           sm_visibility = Public; sm_deprecated = None;
           sm_flags =
           { Shallow_decl_defs.MethodFlags.abstract = false; final = false;
             override = false; dynamicallycallable = false;
             php_std_lib = false; support_dynamic_type = true;
             no_auto_likes = false; needs_concrete = false };
           sm_attributes = []; sm_sort_text = None };
          { Shallow_decl_defs.sm_name = ([20:19-22], "bar");
            sm_type =
            (Rwitness_from_decl ([20:19-22]),
             (Tfun
                { ft_tparams = []; ft_where_constraints = [];
                  ft_params =
                  [{ fp_pos = [20:30-32]; fp_name = (Some "$a");
                     fp_type =
                     (Rhint ([20:23-29]),
                      (Tapply (([20:23-24], "\\A"),
                         [(Rhint ([20:25-28]), (Tprim Tint))])));
                     fp_flags =
                     { Typing_defs_flags.FunParam.accept_disposable = false;
                       inout = false; is_optional = false; readonly = false;
                       ignore_readonly_error = false; splat = false;
                       named = false };
                     fp_def_value = None }
                    ];
                  ft_implicit_params =
                  { capability = (CapDefaults [20:19-22]) };
                  ft_ret = (Rhint ([20:36-40]), (Tprim Tvoid));
                  ft_flags =
                  { Typing_defs_flags.Fun.return_disposable = false;
                    async = false; generator = false; fun_kind = FSync;
                    is_function_pointer = false; returns_readonly = false;
                    readonly_this = false; support_dynamic_type = true;
                    is_memoized = false; variadic = false };
                  ft_require_package = None; ft_instantiated = true }));
            sm_visibility = Public; sm_deprecated = None;
            sm_flags =
            { Shallow_decl_defs.MethodFlags.abstract = false; final = false;
              override = false; dynamicallycallable = false;
              php_std_lib = false; support_dynamic_type = true;
              no_auto_likes = false; needs_concrete = false };
            sm_attributes = []; sm_sort_text = None }
          ];
        sc_user_attributes =
        [{ Typing_defs_core.ua_name = ([15:3-23], "__SupportDynamicType");
           ua_params = []; ua_raw_val = None }
          ];
        sc_enum_type = None; sc_docs_url = None; sc_package = None }))
  ]
