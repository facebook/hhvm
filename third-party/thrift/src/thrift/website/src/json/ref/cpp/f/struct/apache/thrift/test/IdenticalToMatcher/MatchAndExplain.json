{
  "kind": "overloadset",
  "name_html": "MatchAndExplain",
  "compoundname_html": "apache::thrift::test::IdenticalToMatcher::MatchAndExplain",
  "functions": [
    {
      "refid": "structapache_1_1thrift_1_1test_1_1IdenticalToMatcher_1ac0dfb00abf61c3c575036dcfb63ba357",
      "prot": "public",
      "static": "no",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename U"
        }
      ],
      "type_html": "bool",
      "definition_html": "bool apache::thrift::test::IdenticalToMatcher&lt; Tag, T &gt;::MatchAndExplain",
      "argsstring_html": "(const U &amp;actual, ::testing::MatchResultListener *) const",
      "name_html": "MatchAndExplain",
      "param": [
        {
          "type_html": "const U &amp;",
          "declname_html": "actual"
        },
        {
          "type_html": "::testing::MatchResultListener *"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Testing.h",
        "line": "40",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Testing.h",
        "bodystart": "40",
        "bodyend": "42"
      },
      "definition": {
        "simple_html": "template &lt;typename U&gt;\nbool MatchAndExplain(const U&amp; actual, ::testing::MatchResultListener*) const",
        "simple_raw": "template <typename U>\nbool MatchAndExplain(const U& actual, ::testing::MatchResultListener*) const",
        "detailed_html": "template &lt;typename U&gt;\ninline bool MatchAndExplain(\n    const U&amp; actual, ::testing::MatchResultListener*) const",
        "detailed_raw": "template <typename U>\ninline bool MatchAndExplain(\n    const U& actual, ::testing::MatchResultListener*) const",
        "original_definition_html": "bool apache::thrift::test::IdenticalToMatcher&lt; Tag, T &gt;::MatchAndExplain",
        "original_argsstring_html": "(const U &amp;actual, ::testing::MatchResultListener *) const"
      },
      "filepath": "fns/struct/apache/thrift/test/IdenticalToMatcher/MatchAndExplain",
      "href": "/ref/cpp/fns/struct/apache/thrift/test/IdenticalToMatcher/MatchAndExplain",
      "parentid": "structapache_1_1thrift_1_1test_1_1IdenticalToMatcher",
      "compoundname_html": "apache::thrift::test::IdenticalToMatcher::MatchAndExplain"
    }
  ],
  "filepath": "f/struct/apache/thrift/test/IdenticalToMatcher/MatchAndExplain",
  "minprot": "public",
  "displayname_html": "MatchAndExplain",
  "brief_html": "",
  "groupname_html": "",
  "href": "/ref/cpp/f/struct/apache/thrift/test/IdenticalToMatcher/MatchAndExplain",
  "refid": "/ref/cpp/f/struct/apache/thrift/test/IdenticalToMatcher/MatchAndExplain"
}