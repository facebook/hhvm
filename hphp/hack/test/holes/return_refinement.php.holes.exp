[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([3:10-27], "\\return_refinement");
      fd_fun =
      { f_span = [3:1-11:2]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_ret = ((bool), (Some ([3:30-34], (Hprim Tbool)))); 
        f_params = []; f_ctxs = None; f_unsafe_ctxs = None;
        f_body =
        { fb_ast =
          [([4:3-10], (Expr ((int), [4:3-9], (Binop { bop = (Eq None); lhs = ((int), [4:3-5], (Lvar ([4:3-5], $x))); rhs = ((int), [4:8-9], (Int "3")) }))));
            ([5:3-10:4],
             (If (((bool), [5:6-10], True), [([7:5-15], (Return (Some ((int), [7:12-14], (Hole (((int), [7:12-14], (Lvar ([7:12-14], $x))), (int), (bool), Typing))))))],
                [([9:5-15], (Return (Some ((nothing), [9:12-14], (Lvar ([9:12-14], $x))))))])))
            ]
          };
        f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
        f_doc_comment = None };
      fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] })