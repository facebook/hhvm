/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#pragma once

#include <thrift/lib/cpp2/gen/module_metadata_h.h>
#include "mcrouter/lib/network/gen/gen-cpp2/Memcache_types.h"
#include "mcrouter/lib/carbon/gen-cpp2/carbon_metadata.h"
#include "mcrouter/lib/carbon/gen-cpp2/carbon_result_metadata.h"
#include "mcrouter/lib/network/gen/gen-cpp2/Common_metadata.h"


namespace apache {
namespace thrift {
namespace detail {
namespace md {
using ThriftMetadata = ::apache::thrift::metadata::ThriftMetadata;
using ThriftServiceContext = ::apache::thrift::metadata::ThriftServiceContext;
using ThriftService = ::apache::thrift::metadata::ThriftService;

template <>
class StructMetadata<::facebook::memcache::thrift::McGetRequest> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McGetReply> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McSetRequest> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McSetReply> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McDeleteRequest> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McDeleteReply> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McLeaseGetRequest> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McLeaseGetReply> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McLeaseSetRequest> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McLeaseSetReply> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McAddRequest> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McAddReply> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McReplaceRequest> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McReplaceReply> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McGetsRequest> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McGetsReply> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McCasRequest> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McCasReply> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McIncrRequest> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McIncrReply> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McDecrRequest> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McDecrReply> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McMetagetRequest> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McMetagetReply> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McAppendRequest> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McAppendReply> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McPrependRequest> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McPrependReply> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McTouchRequest> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McTouchReply> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McFlushReRequest> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McFlushReReply> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McFlushAllRequest> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McFlushAllReply> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McGatRequest> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McGatReply> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McGatsRequest> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::facebook::memcache::thrift::McGatsReply> {
 public:
  static void gen(ThriftMetadata& metadata);
};
} // namespace md
} // namespace detail
} // namespace thrift
} // namespace apache
