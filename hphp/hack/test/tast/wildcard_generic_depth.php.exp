Errors:
  [7:3-21] This `as` assertion will always fail and lead to an exception at runtime. The expression on the left has type `int` which shares no values with `A<Ta#1, A<Ta#2, Tb#1>>`.
  [7:8-21] Invalid `as` expression hint
  [7:13-20] The `as` operator cannot be used with a reified type containing a wildcard (`_`)
[(Class
    { c_span = [4:1-25]; c_annotation = (); c_mode = Mstrict; c_final = false; 
      c_is_xhp = false; c_has_xhp_keyword = false; c_kind = (Cclass Concrete); 
      c_name = ([4:7-8], "\\A");
      c_tparams =
      [{ tp_variance = Invariant; tp_name = ([4:9-11], "Ta"); tp_constraints = [(Constraint_as, ([4:9-11], (Happly (([4:9-11], "\\HH\\supportdyn"), [([4:9-11], Hmixed)]))))]; 
         tp_reified = Erased; tp_user_attributes = [] };
        { tp_variance = Invariant; tp_name = ([4:19-21], "Tb"); tp_constraints = [(Constraint_as, ([4:19-21], (Happly (([4:19-21], "\\HH\\supportdyn"), [([4:19-21], Hmixed)]))))];
          tp_reified = Reified; tp_user_attributes = [] }
        ];
      c_extends = []; c_uses = []; c_xhp_attr_uses = []; c_xhp_category = None; 
      c_reqs = []; c_implements = []; c_consts = []; c_typeconsts = []; 
      c_vars = []; c_methods = []; c_xhp_children = []; c_xhp_attrs = [];
      c_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
      c_user_attributes = [{ ua_name = ([4:7-8], "__SupportDynamicType"); ua_params = [] }]; 
      c_file_attributes = []; c_docs_url = None; c_enum = None; c_doc_comment = None; 
      c_emit_id = None; c_internal = false; c_module = None; c_package = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([6:10-11], "\\f");
       fd_fun =
       { f_span = [6:1-8:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_tparams = []; f_ret = ((void), (Some ([6:15-19], (Hprim Tvoid)))); 
         f_params = []; f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([7:3-22],
             (Expr
                ((nothing), [7:3-21],
                 (As
                    { expr = ((int), [7:3-4], (Int "3"));
                      hint = ([7:8-21], (Happly (([7:8-9], "\\A"), [([7:10-11], Hwildcard); ([7:13-20], (Happly (([7:13-14], "\\A"), [([7:15-16], Hwildcard); ([7:18-19], Hwildcard)])))])));
                      is_nullable = false; enforce_deep = true }))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([6:10-11], "__SupportDynamicType"); ua_params = [] }]; 
         f_external = false; f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
       fd_package = None })