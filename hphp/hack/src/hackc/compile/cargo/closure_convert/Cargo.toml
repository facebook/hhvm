# @generated by autocargo from //hphp/hack/src/hackc/compile:closure_convert
[package]
name = "closure_convert"
version = "0.0.0"
edition = "2021"

[lib]
path = "../../closure_convert.rs"

[dependencies]
ast_body = { path = "../../../hhbc/cargo/ast_body" }
ast_constant_folder = { path = "../../../hhbc/cargo/ast_constant_folder" }
ast_scope = { path = "../../../hhbc/cargo/ast_scope" }
bumpalo = { version = "3.8", features = ["collections"] }
decl_vars = { path = "../../../hhbc/cargo/decl_vars" }
emit_fatal = { path = "../../../emitter/cargo/emit_fatal" }
env = { path = "../../../emitter/cargo/env" }
global_state = { path = "../../../emitter/cargo/global_state" }
hash = { path = "../../../../utils/hash" }
hhas_coeffects = { path = "../../../hhbc/cargo/hhas_coeffects" }
hhbc_assertion_utils = { path = "../../../utils/cargo/hhbc_assertion_utils" }
hhbc_id = { path = "../../../hhbc/cargo/hhbc_id" }
hhbc_string_utils = { path = "../../../utils/cargo/hhbc_string_utils" }
instruction_sequence = { path = "../../../emitter/cargo/instruction_sequence" }
itertools = "0.10.3"
naming_special_names_rust = { path = "../../../../naming" }
ocamlrep = { path = "../../../../ocamlrep" }
options = { path = "../options" }
oxidized = { path = "../../../../oxidized" }
stack_limit = { path = "../../../../utils/stack_limit" }
unique_id_builder = { path = "../../../utils/cargo/unique_id_builder" }
