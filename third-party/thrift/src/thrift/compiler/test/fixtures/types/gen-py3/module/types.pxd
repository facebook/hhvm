#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

from libc.stdint cimport (
    int8_t as cint8_t,
    int16_t as cint16_t,
    int32_t as cint32_t,
    int64_t as cint64_t,
    uint32_t as cuint32_t,
)
from libcpp.string cimport string
from libcpp cimport bool as cbool, nullptr, nullptr_t
from cpython cimport bool as pbool
from libcpp.memory cimport shared_ptr, unique_ptr
from libcpp.utility cimport move as cmove
from libcpp.vector cimport vector
from libcpp.set cimport set as cset
from libcpp.map cimport map as cmap, pair as cpair
from thrift.py3.exceptions cimport cTException
cimport folly.iobuf as _fbthrift_iobuf
cimport thrift.py3.exceptions
cimport thrift.py3.types
from thrift.py3.types cimport (
    bstring,
    bytes_to_string,
    field_ref as __field_ref,
    optional_field_ref as __optional_field_ref,
    required_field_ref as __required_field_ref,
    terse_field_ref as __terse_field_ref,
    union_field_ref as __union_field_ref,
    get_union_field_value as __get_union_field_value,
)
from thrift.py3.common cimport (
    RpcOptions as __RpcOptions,
    Protocol as __Protocol,
    cThriftMetadata as __fbthrift_cThriftMetadata,
    MetadataBox as __MetadataBox,
)
from folly.optional cimport cOptional as __cOptional
cimport include.types as _include_types

cimport module.types_fields as _fbthrift_types_fields

cdef extern from "src/gen-py3/module/types.h":
  pass

cdef extern from * nogil:
    cdef cppclass std_unordered_map "std::unordered_map"[T, U]:
        ctypedef T key_type
        ctypedef U mapped_type
        ctypedef size_t size_type

        cppclass iterator:
            cpair[T, U]& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            cpair[T, U]& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)
        cppclass const_iterator(iterator):
            pass
        cppclass const_reverse_iterator(reverse_iterator):
            pass

        std_unordered_map() except +
        std_unordered_map(std_unordered_map&) except +

        U& operator[](T&)
        iterator find(const T&)
        const_iterator const_find "find"(const T&)
        size_type count(const T&)
        size_type size()
        iterator begin()
        const_iterator const_begin "begin"()
        iterator end()
        const_iterator const_end "end"()
        reverse_iterator rbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        reverse_iterator rend()
        const_reverse_iterator const_rend "rend"()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass std_list "std::list"[T]:
        ctypedef T value_type
        ctypedef size_t size_type

        cppclass iterator:
            T& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            T& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)
        cppclass const_iterator(iterator):
            pass
        cppclass const_reverse_iterator(reverse_iterator):
            pass

        std_list() except +
        std_list(std_list&) except +

        T& operator[](size_type)
        void push_back(T&) except +
        size_type size()
        iterator begin()
        const_iterator const_begin "begin"()
        iterator end()
        const_iterator const_end "end"()
        reverse_iterator rbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        reverse_iterator rend()
        const_reverse_iterator const_rend "rend"()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass std_deque "std::deque"[T]:
        ctypedef T value_type
        ctypedef size_t size_type

        cppclass iterator:
            T& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            T& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)
        cppclass const_iterator(iterator):
            pass
        cppclass const_reverse_iterator(reverse_iterator):
            pass

        std_deque() except +
        std_deque(std_deque&) except +

        T& operator[](size_type)
        void push_back(T&) except +
        size_type size()
        iterator begin()
        const_iterator const_begin "begin"()
        iterator end()
        const_iterator const_end "end"()
        reverse_iterator rbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        reverse_iterator rend()
        const_reverse_iterator const_rend "rend"()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass folly_fbvector "folly::fbvector"[T]:
        ctypedef T value_type
        ctypedef size_t size_type

        cppclass iterator:
            T& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            T& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)
        cppclass const_iterator(iterator):
            pass
        cppclass const_reverse_iterator(reverse_iterator):
            pass

        folly_fbvector() except +
        folly_fbvector(folly_fbvector&) except +

        T& operator[](size_type)
        void push_back(T&) except +
        size_type size()
        iterator begin()
        const_iterator const_begin "begin"()
        iterator end()
        const_iterator const_end "end"()
        reverse_iterator rbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        reverse_iterator rend()
        const_reverse_iterator const_rend "rend"()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass folly_small_vector "folly::small_vector"[T]:
        ctypedef T value_type
        ctypedef size_t size_type

        cppclass iterator:
            T& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            T& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)
        cppclass const_iterator(iterator):
            pass
        cppclass const_reverse_iterator(reverse_iterator):
            pass

        folly_small_vector() except +
        folly_small_vector(folly_small_vector&) except +

        T& operator[](size_type)
        void push_back(T&) except +
        size_type size()
        iterator begin()
        const_iterator const_begin "begin"()
        iterator end()
        const_iterator const_end "end"()
        reverse_iterator rbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        reverse_iterator rend()
        const_reverse_iterator const_rend "rend"()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass folly_sorted_vector_set "folly::sorted_vector_set"[T]:
        ctypedef T value_type
        ctypedef size_t size_type

        cppclass iterator:
            T& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            T& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)
        cppclass const_iterator(iterator):
            pass
        cppclass const_reverse_iterator(reverse_iterator):
            pass

        folly_sorted_vector_set() except +
        folly_sorted_vector_set(folly_sorted_vector_set&) except +

        cpair[iterator, bint] insert(const T&) except +
        size_type size()
        size_type count(const T&)
        iterator begin()
        const_iterator const_begin "begin"()
        iterator end()
        const_iterator const_end "end"()
        reverse_iterator rbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        reverse_iterator rend()
        const_reverse_iterator const_rend "rend"()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass folly_sorted_vector_map "folly::sorted_vector_map"[T, U]:
        ctypedef T key_type
        ctypedef U mapped_type
        ctypedef size_t size_type

        cppclass iterator:
            cpair[T, U]& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            cpair[T, U]& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)
        cppclass const_iterator(iterator):
            pass
        cppclass const_reverse_iterator(reverse_iterator):
            pass

        folly_sorted_vector_map() except +
        folly_sorted_vector_map(folly_sorted_vector_map&) except +

        U& operator[](T&)
        iterator find(const T&)
        const_iterator const_find "find"(const T&)
        size_type count(const T&)
        size_type size()
        iterator begin()
        const_iterator const_begin "begin"()
        iterator end()
        const_iterator const_end "end"()
        reverse_iterator rbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        reverse_iterator rend()
        const_reverse_iterator const_rend "rend"()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass std_list_int32_t "std::list<int32_t>":
        ctypedef cint32_t value_type
        ctypedef size_t size_type

        cppclass iterator:
            cint32_t& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            cint32_t& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)
        cppclass const_iterator(iterator):
            pass
        cppclass const_reverse_iterator(reverse_iterator):
            pass

        std_list_int32_t() except +
        std_list_int32_t(std_list_int32_t&) except +

        cint32_t& operator[](size_type)
        void push_back(cint32_t&) except +
        size_type size()
        iterator begin()
        const_iterator const_begin "begin"()
        iterator end()
        const_iterator const_end "end"()
        reverse_iterator rbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        reverse_iterator rend()
        const_reverse_iterator const_rend "rend"()
        void clear()
        bint empty()


cdef extern from "src/gen-cpp2/module_metadata.h" namespace "apache::thrift::detail::md":
    cdef cppclass EnumMetadata[T]:
        @staticmethod
        void gen(__fbthrift_cThriftMetadata &metadata)
cdef extern from "src/gen-cpp2/module_types.h" namespace "::apache::thrift::fixtures::types":
    cdef cppclass chas_bitwise_ops "::apache::thrift::fixtures::types::has_bitwise_ops":
        pass

    cdef cppclass cis_unscoped "::apache::thrift::fixtures::types::is_unscoped":
        pass

    cdef cppclass cMyForwardRefEnum "::apache::thrift::fixtures::types::MyForwardRefEnum":
        pass

    cdef cppclass cMyEnumA "::apache::thrift::fixtures::types::MyEnumA":
        pass





cdef class has_bitwise_ops(thrift.py3.types.CompiledEnum):
    pass


cdef class is_unscoped(thrift.py3.types.CompiledEnum):
    pass


cdef class MyForwardRefEnum(thrift.py3.types.CompiledEnum):
    pass


cdef class MyEnumA(thrift.py3.types.CompiledEnum):
    pass

cdef extern from "src/gen-cpp2/module_metadata.h" namespace "apache::thrift::detail::md":
    cdef cppclass ExceptionMetadata[T]:
        @staticmethod
        void gen(__fbthrift_cThriftMetadata &metadata)
cdef extern from "src/gen-cpp2/module_metadata.h" namespace "apache::thrift::detail::md":
    cdef cppclass StructMetadata[T]:
        @staticmethod
        void gen(__fbthrift_cThriftMetadata &metadata)
cdef extern from "src/gen-cpp2/module_types_custom_protocol.h" namespace "::apache::thrift::fixtures::types":

    cdef cppclass cdecorated_struct "::apache::thrift::fixtures::types::decorated_struct":
        cdecorated_struct() except +
        cdecorated_struct(const cdecorated_struct&) except +
        bint operator==(cdecorated_struct&)
        bint operator!=(cdecorated_struct&)
        bint operator<(cdecorated_struct&)
        bint operator>(cdecorated_struct&)
        bint operator<=(cdecorated_struct&)
        bint operator>=(cdecorated_struct&)
        __field_ref[string] field_ref "field_ref" ()


    cdef cppclass cContainerStruct "::apache::thrift::fixtures::types::ContainerStruct":
        cContainerStruct() except +
        cContainerStruct(const cContainerStruct&) except +
        bint operator==(cContainerStruct&)
        bint operator!=(cContainerStruct&)
        __field_ref[vector[cint32_t]] fieldA_ref "fieldA_ref" ()
        __field_ref[std_list[cint32_t]] fieldB_ref "fieldB_ref" ()
        __field_ref[std_deque[cint32_t]] fieldC_ref "fieldC_ref" ()
        __field_ref[folly_fbvector[cint32_t]] fieldD_ref "fieldD_ref" ()
        __field_ref[folly_small_vector[cint32_t]] fieldE_ref "fieldE_ref" ()
        __field_ref[folly_sorted_vector_set[cint32_t]] fieldF_ref "fieldF_ref" ()
        __field_ref[folly_sorted_vector_map[cint32_t,string]] fieldG_ref "fieldG_ref" ()
        __field_ref[std_unordered_map[cint32_t,string]] fieldH_ref "fieldH_ref" ()


    cdef cppclass cCppTypeStruct "::apache::thrift::fixtures::types::CppTypeStruct":
        cCppTypeStruct() except +
        cCppTypeStruct(const cCppTypeStruct&) except +
        bint operator==(cCppTypeStruct&)
        bint operator!=(cCppTypeStruct&)
        bint operator<(cCppTypeStruct&)
        bint operator>(cCppTypeStruct&)
        bint operator<=(cCppTypeStruct&)
        bint operator>=(cCppTypeStruct&)
        __field_ref[std_list_int32_t] fieldA_ref "fieldA_ref" ()


    cdef cppclass cVirtualStruct "::apache::thrift::fixtures::types::VirtualStruct":
        cVirtualStruct() except +
        cVirtualStruct(const cVirtualStruct&) except +
        bint operator==(cVirtualStruct&)
        bint operator!=(cVirtualStruct&)
        bint operator<(cVirtualStruct&)
        bint operator>(cVirtualStruct&)
        bint operator<=(cVirtualStruct&)
        bint operator>=(cVirtualStruct&)
        __field_ref[cint64_t] MyIntField_ref "MyIntField_ref" ()


    cdef cppclass cMyStructWithForwardRefEnum "::apache::thrift::fixtures::types::MyStructWithForwardRefEnum":
        cMyStructWithForwardRefEnum() except +
        cMyStructWithForwardRefEnum(const cMyStructWithForwardRefEnum&) except +
        bint operator==(cMyStructWithForwardRefEnum&)
        bint operator!=(cMyStructWithForwardRefEnum&)
        bint operator<(cMyStructWithForwardRefEnum&)
        bint operator>(cMyStructWithForwardRefEnum&)
        bint operator<=(cMyStructWithForwardRefEnum&)
        bint operator>=(cMyStructWithForwardRefEnum&)
        __field_ref[cMyForwardRefEnum] a_ref "a_ref" ()
        __field_ref[cMyForwardRefEnum] b_ref "b_ref" ()


    cdef cppclass cTrivialNumeric "::apache::thrift::fixtures::types::TrivialNumeric":
        cTrivialNumeric() except +
        cTrivialNumeric(const cTrivialNumeric&) except +
        bint operator==(cTrivialNumeric&)
        bint operator!=(cTrivialNumeric&)
        bint operator<(cTrivialNumeric&)
        bint operator>(cTrivialNumeric&)
        bint operator<=(cTrivialNumeric&)
        bint operator>=(cTrivialNumeric&)
        __field_ref[cint32_t] a_ref "a_ref" ()
        __field_ref[cbool] b_ref "b_ref" ()


    cdef cppclass cTrivialNestedWithDefault "::apache::thrift::fixtures::types::TrivialNestedWithDefault":
        cTrivialNestedWithDefault() except +
        cTrivialNestedWithDefault(const cTrivialNestedWithDefault&) except +
        bint operator==(cTrivialNestedWithDefault&)
        bint operator!=(cTrivialNestedWithDefault&)
        bint operator<(cTrivialNestedWithDefault&)
        bint operator>(cTrivialNestedWithDefault&)
        bint operator<=(cTrivialNestedWithDefault&)
        bint operator>=(cTrivialNestedWithDefault&)
        __field_ref[cint32_t] z_ref "z_ref" ()
        __field_ref[cTrivialNumeric] n_ref "n_ref" ()


    cdef cppclass cComplexString "::apache::thrift::fixtures::types::ComplexString":
        cComplexString() except +
        cComplexString(const cComplexString&) except +
        bint operator==(cComplexString&)
        bint operator!=(cComplexString&)
        bint operator<(cComplexString&)
        bint operator>(cComplexString&)
        bint operator<=(cComplexString&)
        bint operator>=(cComplexString&)
        __field_ref[string] a_ref "a_ref" ()
        __field_ref[cmap[string,cint32_t]] b_ref "b_ref" ()


    cdef cppclass cComplexNestedWithDefault "::apache::thrift::fixtures::types::ComplexNestedWithDefault":
        cComplexNestedWithDefault() except +
        cComplexNestedWithDefault(const cComplexNestedWithDefault&) except +
        bint operator==(cComplexNestedWithDefault&)
        bint operator!=(cComplexNestedWithDefault&)
        bint operator<(cComplexNestedWithDefault&)
        bint operator>(cComplexNestedWithDefault&)
        bint operator<=(cComplexNestedWithDefault&)
        bint operator>=(cComplexNestedWithDefault&)
        __field_ref[string] z_ref "z_ref" ()
        __field_ref[cComplexString] n_ref "n_ref" ()


    cdef cppclass cMinPadding "::apache::thrift::fixtures::types::MinPadding":
        cMinPadding() except +
        cMinPadding(const cMinPadding&) except +
        bint operator==(cMinPadding&)
        bint operator!=(cMinPadding&)
        bint operator<(cMinPadding&)
        bint operator>(cMinPadding&)
        bint operator<=(cMinPadding&)
        bint operator>=(cMinPadding&)
        __required_field_ref[cint8_t] small_ref "small_ref" ()
        __required_field_ref[cint64_t] big_ref "big_ref" ()
        __required_field_ref[cint16_t] medium_ref "medium_ref" ()
        __required_field_ref[cint32_t] biggish_ref "biggish_ref" ()
        __required_field_ref[cint8_t] tiny_ref "tiny_ref" ()


    cdef cppclass cMyStruct "::apache::thrift::fixtures::types::MyStruct":
        cMyStruct() except +
        cMyStruct(const cMyStruct&) except +
        __field_ref[cint64_t] MyIntField_ref "MyIntField_ref" ()
        __field_ref[string] MyStringField_ref "MyStringField_ref" ()
        __field_ref[cint64_t] majorVer_ref "majorVer_ref" ()
        __field_ref[cMyDataItem] data_ref "data_ref" ()


    cdef cppclass cMyDataItem "::apache::thrift::fixtures::types::MyDataItem":
        cMyDataItem() except +
        cMyDataItem(const cMyDataItem&) except +


    cdef cppclass cRenaming "::apache::thrift::fixtures::types::Renaming":
        cRenaming() except +
        cRenaming(const cRenaming&) except +
        bint operator==(cRenaming&)
        bint operator!=(cRenaming&)
        bint operator<(cRenaming&)
        bint operator>(cRenaming&)
        bint operator<=(cRenaming&)
        bint operator>=(cRenaming&)
        __field_ref[cint64_t] foo_ref "bar_ref" ()


    cdef cppclass cAnnotatedTypes "::apache::thrift::fixtures::types::AnnotatedTypes":
        cAnnotatedTypes() except +
        cAnnotatedTypes(const cAnnotatedTypes&) except +
        bint operator==(cAnnotatedTypes&)
        bint operator!=(cAnnotatedTypes&)
        __field_ref[string] binary_field_ref "binary_field_ref" ()
        __field_ref[vector[std_unordered_map[cint32_t,string]]] list_field_ref "list_field_ref" ()


    cdef cppclass cForwardUsageRoot "::apache::thrift::fixtures::types::ForwardUsageRoot":
        cForwardUsageRoot() except +
        cForwardUsageRoot(const cForwardUsageRoot&) except +
        bint operator==(cForwardUsageRoot&)
        bint operator!=(cForwardUsageRoot&)
        bint operator<(cForwardUsageRoot&)
        bint operator>(cForwardUsageRoot&)
        bint operator<=(cForwardUsageRoot&)
        bint operator>=(cForwardUsageRoot&)
        __optional_field_ref[cForwardUsageStruct] ForwardUsageStruct_ref "ForwardUsageStruct_ref" ()
        unique_ptr[cForwardUsageByRef] ForwardUsageByRef_ref "ForwardUsageByRef_ref" ()


    cdef cppclass cForwardUsageStruct "::apache::thrift::fixtures::types::ForwardUsageStruct":
        cForwardUsageStruct() except +
        cForwardUsageStruct(const cForwardUsageStruct&) except +
        bint operator==(cForwardUsageStruct&)
        bint operator!=(cForwardUsageStruct&)
        bint operator<(cForwardUsageStruct&)
        bint operator>(cForwardUsageStruct&)
        bint operator<=(cForwardUsageStruct&)
        bint operator>=(cForwardUsageStruct&)
        __optional_field_ref[cForwardUsageRoot] foo_ref "foo_ref" ()


    cdef cppclass cForwardUsageByRef "::apache::thrift::fixtures::types::ForwardUsageByRef":
        cForwardUsageByRef() except +
        cForwardUsageByRef(const cForwardUsageByRef&) except +
        bint operator==(cForwardUsageByRef&)
        bint operator!=(cForwardUsageByRef&)
        bint operator<(cForwardUsageByRef&)
        bint operator>(cForwardUsageByRef&)
        bint operator<=(cForwardUsageByRef&)
        bint operator>=(cForwardUsageByRef&)
        __optional_field_ref[cForwardUsageRoot] foo_ref "foo_ref" ()


    cdef cppclass cNoexceptMoveEmpty "::apache::thrift::fixtures::types::NoexceptMoveEmpty":
        cNoexceptMoveEmpty() except +
        cNoexceptMoveEmpty(const cNoexceptMoveEmpty&) except +
        bint operator==(cNoexceptMoveEmpty&)
        bint operator!=(cNoexceptMoveEmpty&)
        bint operator<(cNoexceptMoveEmpty&)
        bint operator>(cNoexceptMoveEmpty&)
        bint operator<=(cNoexceptMoveEmpty&)
        bint operator>=(cNoexceptMoveEmpty&)


    cdef cppclass cNoexceptMoveSimpleStruct "::apache::thrift::fixtures::types::NoexceptMoveSimpleStruct":
        cNoexceptMoveSimpleStruct() except +
        cNoexceptMoveSimpleStruct(const cNoexceptMoveSimpleStruct&) except +
        bint operator==(cNoexceptMoveSimpleStruct&)
        bint operator!=(cNoexceptMoveSimpleStruct&)
        bint operator<(cNoexceptMoveSimpleStruct&)
        bint operator>(cNoexceptMoveSimpleStruct&)
        bint operator<=(cNoexceptMoveSimpleStruct&)
        bint operator>=(cNoexceptMoveSimpleStruct&)
        __field_ref[cint64_t] boolField_ref "boolField_ref" ()


    cdef cppclass cNoexceptMoveComplexStruct "::apache::thrift::fixtures::types::NoexceptMoveComplexStruct":
        cNoexceptMoveComplexStruct() except +
        cNoexceptMoveComplexStruct(const cNoexceptMoveComplexStruct&) except +
        bint operator==(cNoexceptMoveComplexStruct&)
        bint operator!=(cNoexceptMoveComplexStruct&)
        bint operator<(cNoexceptMoveComplexStruct&)
        bint operator>(cNoexceptMoveComplexStruct&)
        bint operator<=(cNoexceptMoveComplexStruct&)
        bint operator>=(cNoexceptMoveComplexStruct&)
        __field_ref[cbool] MyBoolField_ref "MyBoolField_ref" ()
        __field_ref[cint64_t] MyIntField_ref "MyIntField_ref" ()
        __field_ref[string] MyStringField_ref "MyStringField_ref" ()
        __field_ref[string] MyStringField2_ref "MyStringField2_ref" ()
        __field_ref[string] MyBinaryField_ref "MyBinaryField_ref" ()
        __optional_field_ref[string] MyBinaryField2_ref "MyBinaryField2_ref" ()
        __required_field_ref[string] MyBinaryField3_ref "MyBinaryField3_ref" ()
        __field_ref[vector[string]] MyBinaryListField4_ref "MyBinaryListField4_ref" ()
        __field_ref[cmap[cMyEnumA,string]] MyMapEnumAndInt_ref "MyMapEnumAndInt_ref" ()

    cdef enum cNoExceptMoveUnion__type "::apache::thrift::fixtures::types::NoExceptMoveUnion::Type":
        cNoExceptMoveUnion__type___EMPTY__ "::apache::thrift::fixtures::types::NoExceptMoveUnion::Type::__EMPTY__",
        cNoExceptMoveUnion__type_string_field "::apache::thrift::fixtures::types::NoExceptMoveUnion::Type::string_field",
        cNoExceptMoveUnion__type_i32_field "::apache::thrift::fixtures::types::NoExceptMoveUnion::Type::i32_field",

    cdef cppclass cNoExceptMoveUnion "::apache::thrift::fixtures::types::NoExceptMoveUnion":
        cNoExceptMoveUnion() except +
        cNoExceptMoveUnion(const cNoExceptMoveUnion&) except +
        bint operator==(cNoExceptMoveUnion&)
        bint operator!=(cNoExceptMoveUnion&)
        bint operator<(cNoExceptMoveUnion&)
        bint operator>(cNoExceptMoveUnion&)
        bint operator<=(cNoExceptMoveUnion&)
        bint operator>=(cNoExceptMoveUnion&)
        cNoExceptMoveUnion__type getType() const
        const string& get_string_field "get_string_field" () const
        string& set_string_field "set_string_field" (const string&)
        const cint32_t& get_i32_field "get_i32_field" () const
        cint32_t& set_i32_field "set_i32_field" (const cint32_t&)


    cdef cppclass cAllocatorAware "::apache::thrift::fixtures::types::AllocatorAware":
        cAllocatorAware() except +
        cAllocatorAware(const cAllocatorAware&) except +
        bint operator==(cAllocatorAware&)
        bint operator!=(cAllocatorAware&)
        bint operator<(cAllocatorAware&)
        bint operator>(cAllocatorAware&)
        bint operator<=(cAllocatorAware&)
        bint operator>=(cAllocatorAware&)
        __field_ref[vector[cint32_t]] aa_list_ref "aa_list_ref" ()
        __field_ref[cset[cint32_t]] aa_set_ref "aa_set_ref" ()
        __field_ref[cmap[cint32_t,cint32_t]] aa_map_ref "aa_map_ref" ()
        __field_ref[string] aa_string_ref "aa_string_ref" ()
        __field_ref[cint32_t] not_a_container_ref "not_a_container_ref" ()
        unique_ptr[cint32_t] aa_unique_ref "aa_unique_ref" ()
        shared_ptr[cint32_t] aa_shared_ref "aa_shared_ref" ()


    cdef cppclass cAllocatorAware2 "::apache::thrift::fixtures::types::AllocatorAware2":
        cAllocatorAware2() except +
        cAllocatorAware2(const cAllocatorAware2&) except +
        bint operator==(cAllocatorAware2&)
        bint operator!=(cAllocatorAware2&)
        bint operator<(cAllocatorAware2&)
        bint operator>(cAllocatorAware2&)
        bint operator<=(cAllocatorAware2&)
        bint operator>=(cAllocatorAware2&)
        __field_ref[cint32_t] not_a_container_ref "not_a_container_ref" ()


    cdef cppclass cTypedefStruct "::apache::thrift::fixtures::types::TypedefStruct":
        cTypedefStruct() except +
        cTypedefStruct(const cTypedefStruct&) except +
        bint operator==(cTypedefStruct&)
        bint operator!=(cTypedefStruct&)
        bint operator<(cTypedefStruct&)
        bint operator>(cTypedefStruct&)
        bint operator<=(cTypedefStruct&)
        bint operator>=(cTypedefStruct&)
        __field_ref[cint32_t] i32_field_ref "i32_field_ref" ()
        __field_ref[cint32_t] IntTypedef_field_ref "IntTypedef_field_ref" ()
        __field_ref[cint32_t] UintTypedef_field_ref "UintTypedef_field_ref" ()


    cdef cppclass cStructWithDoubleUnderscores "::apache::thrift::fixtures::types::StructWithDoubleUnderscores":
        cStructWithDoubleUnderscores() except +
        cStructWithDoubleUnderscores(const cStructWithDoubleUnderscores&) except +
        bint operator==(cStructWithDoubleUnderscores&)
        bint operator!=(cStructWithDoubleUnderscores&)
        bint operator<(cStructWithDoubleUnderscores&)
        bint operator>(cStructWithDoubleUnderscores&)
        bint operator<=(cStructWithDoubleUnderscores&)
        bint operator>=(cStructWithDoubleUnderscores&)
        __field_ref[cint32_t] __field_ref "__field_ref" ()




cdef class decorated_struct(thrift.py3.types.Struct):
    cdef shared_ptr[cdecorated_struct] _cpp_obj
    cdef _fbthrift_types_fields.__decorated_struct_FieldsSetter _fields_setter
    cdef inline object field_impl(self)

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cdecorated_struct])



cdef class ContainerStruct(thrift.py3.types.Struct):
    cdef shared_ptr[cContainerStruct] _cpp_obj
    cdef _fbthrift_types_fields.__ContainerStruct_FieldsSetter _fields_setter
    cdef inline object fieldA_impl(self)
    cdef inline object fieldB_impl(self)
    cdef inline object fieldC_impl(self)
    cdef inline object fieldD_impl(self)
    cdef inline object fieldE_impl(self)
    cdef inline object fieldF_impl(self)
    cdef inline object fieldG_impl(self)
    cdef inline object fieldH_impl(self)
    cdef List__i32 __fbthrift_cached_fieldA
    cdef std_list__List__i32 __fbthrift_cached_fieldB
    cdef std_deque__List__i32 __fbthrift_cached_fieldC
    cdef folly_fbvector__List__i32 __fbthrift_cached_fieldD
    cdef folly_small_vector__List__i32 __fbthrift_cached_fieldE
    cdef folly_sorted_vector_set__Set__i32 __fbthrift_cached_fieldF
    cdef folly_sorted_vector_map__Map__i32_string __fbthrift_cached_fieldG
    cdef std_unordered_map__Map__i32_string __fbthrift_cached_fieldH

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cContainerStruct])



cdef class CppTypeStruct(thrift.py3.types.Struct):
    cdef shared_ptr[cCppTypeStruct] _cpp_obj
    cdef _fbthrift_types_fields.__CppTypeStruct_FieldsSetter _fields_setter
    cdef inline object fieldA_impl(self)
    cdef std_list_int32_t__List__i32 __fbthrift_cached_fieldA

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cCppTypeStruct])



cdef class VirtualStruct(thrift.py3.types.Struct):
    cdef shared_ptr[cVirtualStruct] _cpp_obj
    cdef _fbthrift_types_fields.__VirtualStruct_FieldsSetter _fields_setter
    cdef inline object MyIntField_impl(self)

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cVirtualStruct])



cdef class MyStructWithForwardRefEnum(thrift.py3.types.Struct):
    cdef shared_ptr[cMyStructWithForwardRefEnum] _cpp_obj
    cdef _fbthrift_types_fields.__MyStructWithForwardRefEnum_FieldsSetter _fields_setter
    cdef inline object a_impl(self)
    cdef inline object b_impl(self)
    cdef object __fbthrift_cached_a
    cdef object __fbthrift_cached_b

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cMyStructWithForwardRefEnum])



cdef class TrivialNumeric(thrift.py3.types.Struct):
    cdef shared_ptr[cTrivialNumeric] _cpp_obj
    cdef _fbthrift_types_fields.__TrivialNumeric_FieldsSetter _fields_setter
    cdef inline object a_impl(self)
    cdef inline object b_impl(self)

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cTrivialNumeric])



cdef class TrivialNestedWithDefault(thrift.py3.types.Struct):
    cdef shared_ptr[cTrivialNestedWithDefault] _cpp_obj
    cdef _fbthrift_types_fields.__TrivialNestedWithDefault_FieldsSetter _fields_setter
    cdef inline object z_impl(self)
    cdef inline object n_impl(self)
    cdef TrivialNumeric __fbthrift_cached_n

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cTrivialNestedWithDefault])



cdef class ComplexString(thrift.py3.types.Struct):
    cdef shared_ptr[cComplexString] _cpp_obj
    cdef _fbthrift_types_fields.__ComplexString_FieldsSetter _fields_setter
    cdef inline object a_impl(self)
    cdef inline object b_impl(self)
    cdef Map__string_i32 __fbthrift_cached_b

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cComplexString])



cdef class ComplexNestedWithDefault(thrift.py3.types.Struct):
    cdef shared_ptr[cComplexNestedWithDefault] _cpp_obj
    cdef _fbthrift_types_fields.__ComplexNestedWithDefault_FieldsSetter _fields_setter
    cdef inline object z_impl(self)
    cdef inline object n_impl(self)
    cdef ComplexString __fbthrift_cached_n

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cComplexNestedWithDefault])



cdef class MinPadding(thrift.py3.types.Struct):
    cdef shared_ptr[cMinPadding] _cpp_obj
    cdef _fbthrift_types_fields.__MinPadding_FieldsSetter _fields_setter
    cdef inline object small_impl(self)
    cdef inline object big_impl(self)
    cdef inline object medium_impl(self)
    cdef inline object biggish_impl(self)
    cdef inline object tiny_impl(self)

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cMinPadding])



cdef class MyStruct(thrift.py3.types.Struct):
    cdef shared_ptr[cMyStruct] _cpp_obj
    cdef _fbthrift_types_fields.__MyStruct_FieldsSetter _fields_setter
    cdef inline object MyIntField_impl(self)
    cdef inline object MyStringField_impl(self)
    cdef inline object majorVer_impl(self)
    cdef inline object data_impl(self)
    cdef MyDataItem __fbthrift_cached_data

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cMyStruct])



cdef class MyDataItem(thrift.py3.types.Struct):
    cdef shared_ptr[cMyDataItem] _cpp_obj
    cdef _fbthrift_types_fields.__MyDataItem_FieldsSetter _fields_setter

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cMyDataItem])



cdef class Renaming(thrift.py3.types.Struct):
    cdef shared_ptr[cRenaming] _cpp_obj
    cdef _fbthrift_types_fields.__Renaming_FieldsSetter _fields_setter
    cdef inline object foo_impl(self)

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cRenaming])



cdef class AnnotatedTypes(thrift.py3.types.Struct):
    cdef shared_ptr[cAnnotatedTypes] _cpp_obj
    cdef _fbthrift_types_fields.__AnnotatedTypes_FieldsSetter _fields_setter
    cdef inline object binary_field_impl(self)
    cdef inline object list_field_impl(self)
    cdef List__std_unordered_map__Map__i32_string __fbthrift_cached_list_field

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cAnnotatedTypes])



cdef class ForwardUsageRoot(thrift.py3.types.Struct):
    cdef shared_ptr[cForwardUsageRoot] _cpp_obj
    cdef _fbthrift_types_fields.__ForwardUsageRoot_FieldsSetter _fields_setter
    cdef inline object ForwardUsageStruct_impl(self)
    cdef inline object ForwardUsageByRef_impl(self)
    cdef ForwardUsageStruct __fbthrift_cached_ForwardUsageStruct
    cdef ForwardUsageByRef __fbthrift_cached_ForwardUsageByRef

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cForwardUsageRoot])



cdef class ForwardUsageStruct(thrift.py3.types.Struct):
    cdef shared_ptr[cForwardUsageStruct] _cpp_obj
    cdef _fbthrift_types_fields.__ForwardUsageStruct_FieldsSetter _fields_setter
    cdef inline object foo_impl(self)
    cdef ForwardUsageRoot __fbthrift_cached_foo

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cForwardUsageStruct])



cdef class ForwardUsageByRef(thrift.py3.types.Struct):
    cdef shared_ptr[cForwardUsageByRef] _cpp_obj
    cdef _fbthrift_types_fields.__ForwardUsageByRef_FieldsSetter _fields_setter
    cdef inline object foo_impl(self)
    cdef ForwardUsageRoot __fbthrift_cached_foo

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cForwardUsageByRef])



cdef class NoexceptMoveEmpty(thrift.py3.types.Struct):
    cdef shared_ptr[cNoexceptMoveEmpty] _cpp_obj
    cdef _fbthrift_types_fields.__NoexceptMoveEmpty_FieldsSetter _fields_setter

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cNoexceptMoveEmpty])



cdef class NoexceptMoveSimpleStruct(thrift.py3.types.Struct):
    cdef shared_ptr[cNoexceptMoveSimpleStruct] _cpp_obj
    cdef _fbthrift_types_fields.__NoexceptMoveSimpleStruct_FieldsSetter _fields_setter
    cdef inline object boolField_impl(self)

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cNoexceptMoveSimpleStruct])



cdef class NoexceptMoveComplexStruct(thrift.py3.types.Struct):
    cdef shared_ptr[cNoexceptMoveComplexStruct] _cpp_obj
    cdef _fbthrift_types_fields.__NoexceptMoveComplexStruct_FieldsSetter _fields_setter
    cdef inline object MyBoolField_impl(self)
    cdef inline object MyIntField_impl(self)
    cdef inline object MyStringField_impl(self)
    cdef inline object MyStringField2_impl(self)
    cdef inline object MyBinaryField_impl(self)
    cdef inline object MyBinaryField2_impl(self)
    cdef inline object MyBinaryField3_impl(self)
    cdef inline object MyBinaryListField4_impl(self)
    cdef inline object MyMapEnumAndInt_impl(self)
    cdef List__binary __fbthrift_cached_MyBinaryListField4
    cdef Map__MyEnumA_string __fbthrift_cached_MyMapEnumAndInt

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cNoexceptMoveComplexStruct])

cdef class __NoExceptMoveUnionType(thrift.py3.types.CompiledEnum):
    pass




cdef class NoExceptMoveUnion(thrift.py3.types.Union):
    cdef shared_ptr[cNoExceptMoveUnion] _cpp_obj
    cdef readonly __NoExceptMoveUnionType type
    cdef readonly object value
    cdef _load_cache(NoExceptMoveUnion self)

    @staticmethod
    cdef unique_ptr[cNoExceptMoveUnion] _make_instance(
        cNoExceptMoveUnion* base_instance,
        str string_field,
        object i32_field
    ) except *

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cNoExceptMoveUnion])



cdef class AllocatorAware(thrift.py3.types.Struct):
    cdef shared_ptr[cAllocatorAware] _cpp_obj
    cdef _fbthrift_types_fields.__AllocatorAware_FieldsSetter _fields_setter
    cdef inline object aa_list_impl(self)
    cdef inline object aa_set_impl(self)
    cdef inline object aa_map_impl(self)
    cdef inline object aa_string_impl(self)
    cdef inline object not_a_container_impl(self)
    cdef inline object aa_unique_impl(self)
    cdef inline object aa_shared_impl(self)
    cdef List__i32 __fbthrift_cached_aa_list
    cdef Set__i32 __fbthrift_cached_aa_set
    cdef Map__i32_i32 __fbthrift_cached_aa_map

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cAllocatorAware])



cdef class AllocatorAware2(thrift.py3.types.Struct):
    cdef shared_ptr[cAllocatorAware2] _cpp_obj
    cdef _fbthrift_types_fields.__AllocatorAware2_FieldsSetter _fields_setter
    cdef inline object not_a_container_impl(self)

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cAllocatorAware2])



cdef class TypedefStruct(thrift.py3.types.Struct):
    cdef shared_ptr[cTypedefStruct] _cpp_obj
    cdef _fbthrift_types_fields.__TypedefStruct_FieldsSetter _fields_setter
    cdef inline object i32_field_impl(self)
    cdef inline object IntTypedef_field_impl(self)
    cdef inline object UintTypedef_field_impl(self)

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cTypedefStruct])



cdef class StructWithDoubleUnderscores(thrift.py3.types.Struct):
    cdef shared_ptr[cStructWithDoubleUnderscores] _cpp_obj
    cdef _fbthrift_types_fields.__StructWithDoubleUnderscores_FieldsSetter _fields_setter
    cdef inline object __field_impl(self)

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cStructWithDoubleUnderscores])


cdef class std_unordered_map__Map__i32_string(thrift.py3.types.Map):
    cdef shared_ptr[std_unordered_map[cint32_t,string]] _cpp_obj
    @staticmethod
    cdef _fbthrift_create(shared_ptr[std_unordered_map[cint32_t,string]])
    @staticmethod
    cdef shared_ptr[std_unordered_map[cint32_t,string]] _make_instance(object items) except *

cdef class List__i64(thrift.py3.types.List):
    cdef shared_ptr[vector[cint64_t]] _cpp_obj
    @staticmethod
    cdef _fbthrift_create(shared_ptr[vector[cint64_t]])
    @staticmethod
    cdef shared_ptr[vector[cint64_t]] _make_instance(object items) except *

cdef class Map__binary_i64(thrift.py3.types.Map):
    cdef shared_ptr[cmap[string,cint64_t]] _cpp_obj
    @staticmethod
    cdef _fbthrift_create(shared_ptr[cmap[string,cint64_t]])
    @staticmethod
    cdef shared_ptr[cmap[string,cint64_t]] _make_instance(object items) except *

cdef class List__i32(thrift.py3.types.List):
    cdef shared_ptr[vector[cint32_t]] _cpp_obj
    @staticmethod
    cdef _fbthrift_create(shared_ptr[vector[cint32_t]])
    @staticmethod
    cdef shared_ptr[vector[cint32_t]] _make_instance(object items) except *

cdef class std_list__List__i32(thrift.py3.types.List):
    cdef shared_ptr[std_list[cint32_t]] _cpp_obj
    @staticmethod
    cdef _fbthrift_create(shared_ptr[std_list[cint32_t]])
    @staticmethod
    cdef shared_ptr[std_list[cint32_t]] _make_instance(object items) except *

cdef class std_deque__List__i32(thrift.py3.types.List):
    cdef shared_ptr[std_deque[cint32_t]] _cpp_obj
    @staticmethod
    cdef _fbthrift_create(shared_ptr[std_deque[cint32_t]])
    @staticmethod
    cdef shared_ptr[std_deque[cint32_t]] _make_instance(object items) except *

cdef class folly_fbvector__List__i32(thrift.py3.types.List):
    cdef shared_ptr[folly_fbvector[cint32_t]] _cpp_obj
    @staticmethod
    cdef _fbthrift_create(shared_ptr[folly_fbvector[cint32_t]])
    @staticmethod
    cdef shared_ptr[folly_fbvector[cint32_t]] _make_instance(object items) except *

cdef class folly_small_vector__List__i32(thrift.py3.types.List):
    cdef shared_ptr[folly_small_vector[cint32_t]] _cpp_obj
    @staticmethod
    cdef _fbthrift_create(shared_ptr[folly_small_vector[cint32_t]])
    @staticmethod
    cdef shared_ptr[folly_small_vector[cint32_t]] _make_instance(object items) except *

cdef class folly_sorted_vector_set__Set__i32(thrift.py3.types.Set):
    cdef shared_ptr[folly_sorted_vector_set[cint32_t]] _cpp_obj
    @staticmethod
    cdef _fbthrift_create(shared_ptr[folly_sorted_vector_set[cint32_t]])
    @staticmethod
    cdef shared_ptr[folly_sorted_vector_set[cint32_t]] _make_instance(object items) except *

cdef class folly_sorted_vector_map__Map__i32_string(thrift.py3.types.Map):
    cdef shared_ptr[folly_sorted_vector_map[cint32_t,string]] _cpp_obj
    @staticmethod
    cdef _fbthrift_create(shared_ptr[folly_sorted_vector_map[cint32_t,string]])
    @staticmethod
    cdef shared_ptr[folly_sorted_vector_map[cint32_t,string]] _make_instance(object items) except *

cdef class std_list_int32_t__List__i32(thrift.py3.types.List):
    cdef shared_ptr[std_list_int32_t] _cpp_obj
    @staticmethod
    cdef _fbthrift_create(shared_ptr[std_list_int32_t])
    @staticmethod
    cdef shared_ptr[std_list_int32_t] _make_instance(object items) except *

cdef class Map__string_i32(thrift.py3.types.Map):
    cdef shared_ptr[cmap[string,cint32_t]] _cpp_obj
    @staticmethod
    cdef _fbthrift_create(shared_ptr[cmap[string,cint32_t]])
    @staticmethod
    cdef shared_ptr[cmap[string,cint32_t]] _make_instance(object items) except *

cdef class List__std_unordered_map__Map__i32_string(thrift.py3.types.List):
    cdef shared_ptr[vector[std_unordered_map[cint32_t,string]]] _cpp_obj
    @staticmethod
    cdef _fbthrift_create(shared_ptr[vector[std_unordered_map[cint32_t,string]]])
    @staticmethod
    cdef shared_ptr[vector[std_unordered_map[cint32_t,string]]] _make_instance(object items) except *

cdef class List__binary(thrift.py3.types.List):
    cdef shared_ptr[vector[string]] _cpp_obj
    @staticmethod
    cdef _fbthrift_create(shared_ptr[vector[string]])
    @staticmethod
    cdef shared_ptr[vector[string]] _make_instance(object items) except *

cdef class Map__MyEnumA_string(thrift.py3.types.Map):
    cdef shared_ptr[cmap[cMyEnumA,string]] _cpp_obj
    @staticmethod
    cdef _fbthrift_create(shared_ptr[cmap[cMyEnumA,string]])
    @staticmethod
    cdef shared_ptr[cmap[cMyEnumA,string]] _make_instance(object items) except *

cdef class Set__i32(thrift.py3.types.Set):
    cdef shared_ptr[cset[cint32_t]] _cpp_obj
    @staticmethod
    cdef _fbthrift_create(shared_ptr[cset[cint32_t]])
    @staticmethod
    cdef shared_ptr[cset[cint32_t]] _make_instance(object items) except *

cdef class Map__i32_i32(thrift.py3.types.Map):
    cdef shared_ptr[cmap[cint32_t,cint32_t]] _cpp_obj
    @staticmethod
    cdef _fbthrift_create(shared_ptr[cmap[cint32_t,cint32_t]])
    @staticmethod
    cdef shared_ptr[cmap[cint32_t,cint32_t]] _make_instance(object items) except *


