#
# Autogenerated by Thrift for thrift/compiler/test/fixtures/py3/src/module.thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#


import folly.iobuf as _fbthrift_iobuf

from thrift.py3.reflection import (
    NumberType as __NumberType,
    StructType as __StructType,
    Qualifier as __Qualifier,
    StructSpec as __StructSpec,
    ListSpec as __ListSpec,
    SetSpec as __SetSpec,
    MapSpec as __MapSpec,
    FieldSpec as __FieldSpec,
)


import module.types as _module_types



def get_reflection__SimpleException() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="SimpleException",
        kind=__StructType.EXCEPTION,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=1,
            name="err_code",
            py_name="err_code",
            type=int,
            kind=__NumberType.I16,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__OptionalRefStruct() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="OptionalRefStruct",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=1,
            name="optional_blob",
            py_name="optional_blob",
            type=_fbthrift_iobuf.IOBuf,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__SimpleStruct() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="SimpleStruct",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    defaults = _module_types.SimpleStruct()
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=1,
            name="is_on",
            py_name="is_on",
            type=bool,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=2,
            name="tiny_int",
            py_name="tiny_int",
            type=int,
            kind=__NumberType.BYTE,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=3,
            name="small_int",
            py_name="small_int",
            type=int,
            kind=__NumberType.I16,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=4,
            name="nice_sized_int",
            py_name="nice_sized_int",
            type=int,
            kind=__NumberType.I32,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=5,
            name="big_int",
            py_name="big_int",
            type=int,
            kind=__NumberType.I64,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=6,
            name="real",
            py_name="real",
            type=float,
            kind=__NumberType.DOUBLE,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=7,
            name="smaller_real",
            py_name="smaller_real",
            type=float,
            kind=__NumberType.FLOAT,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=9,
            name="something",
            py_name="something",
            type=_module_types._std_unordered_map__Map__i32_i32,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=10,
            name="opt_default_int",
            py_name="opt_default_int",
            type=int,
            kind=__NumberType.I32,
            qualifier=__Qualifier.OPTIONAL,
            default=defaults.opt_default_int,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=11,
            name="opt_default_str",
            py_name="opt_default_str",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.OPTIONAL,
            default=defaults.opt_default_str,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=12,
            name="opt_default_enum",
            py_name="opt_default_enum",
            type=_module_types.AnEnum,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.OPTIONAL,
            default=defaults.opt_default_enum,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__HiddenTypeFieldsStruct() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="HiddenTypeFieldsStruct",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    return spec
def get_reflection__ComplexStruct() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="ComplexStruct",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=1,
            name="structOne",
            py_name="structOne",
            type=_module_types.SimpleStruct,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=2,
            name="structTwo",
            py_name="structTwo",
            type=_module_types.SimpleStruct,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=3,
            name="an_integer",
            py_name="an_integer",
            type=int,
            kind=__NumberType.I32,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=4,
            name="name",
            py_name="name",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=5,
            name="an_enum",
            py_name="an_enum",
            type=_module_types.AnEnum,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=6,
            name="some_bytes",
            py_name="some_bytes",
            type=bytes,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=7,
            name="from",
            py_name="sender",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=8,
            name="cdef",
            py_name="cdef_",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=9,
            name="bytes_with_cpp_type",
            py_name="bytes_with_cpp_type",
            type=bytes,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__BinaryUnion() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="BinaryUnion",
        kind=__StructType.UNION,
        annotations={
            """cpp.noncomparable""": """1""",
        },
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=1,
            name="iobuf_val",
            py_name="iobuf_val",
            type=_fbthrift_iobuf.IOBuf,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__BinaryUnionStruct() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="BinaryUnionStruct",
        kind=__StructType.STRUCT,
        annotations={
            """cpp.noncomparable""": """1""",
        },
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=1,
            name="u",
            py_name="u",
            type=_module_types.BinaryUnion,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__CustomFields() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="CustomFields",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=1,
            name="bool_field",
            py_name="bool_field",
            type=bool,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=2,
            name="integer_field",
            py_name="integer_field",
            type=int,
            kind=__NumberType.I64,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=3,
            name="double_field",
            py_name="double_field",
            type=float,
            kind=__NumberType.DOUBLE,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=4,
            name="string_field",
            py_name="string_field",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=5,
            name="binary_field",
            py_name="binary_field",
            type=bytes,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=6,
            name="list_field",
            py_name="list_field",
            type=_module_types._MyType__List__i32,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=7,
            name="set_field",
            py_name="set_field",
            type=_module_types._MyType__Set__i32,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=8,
            name="map_field",
            py_name="map_field",
            type=_module_types._MyType__Map__i32_i32,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=9,
            name="struct_field",
            py_name="struct_field",
            type=_module_types.SimpleStruct,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__CustomTypedefFields() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="CustomTypedefFields",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=1,
            name="bool_field",
            py_name="bool_field",
            type=bool,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=2,
            name="integer_field",
            py_name="integer_field",
            type=int,
            kind=__NumberType.I64,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=3,
            name="double_field",
            py_name="double_field",
            type=float,
            kind=__NumberType.DOUBLE,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=4,
            name="string_field",
            py_name="string_field",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=5,
            name="binary_field",
            py_name="binary_field",
            type=bytes,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=6,
            name="list_field",
            py_name="list_field",
            type=_module_types._MyType__List__i32,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=7,
            name="set_field",
            py_name="set_field",
            type=_module_types._MyType__Set__i32,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=8,
            name="map_field",
            py_name="map_field",
            type=_module_types._MyType__Map__i32_i32,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=9,
            name="struct_field",
            py_name="struct_field",
            type=_module_types.SimpleStruct,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__AdaptedTypedefFields() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="AdaptedTypedefFields",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=1,
            name="bool_field",
            py_name="bool_field",
            type=bool,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=2,
            name="integer_field",
            py_name="integer_field",
            type=int,
            kind=__NumberType.I64,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=3,
            name="double_field",
            py_name="double_field",
            type=float,
            kind=__NumberType.DOUBLE,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=4,
            name="string_field",
            py_name="string_field",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=5,
            name="binary_field",
            py_name="binary_field",
            type=bytes,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=6,
            name="list_field",
            py_name="list_field",
            type=_module_types._py3_simple_AdaptedList__List__i32,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=7,
            name="set_field",
            py_name="set_field",
            type=_module_types._py3_simple_AdaptedSet__Set__i32,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=8,
            name="map_field",
            py_name="map_field",
            type=_module_types._py3_simple_AdaptedMap__Map__i32_i32,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=9,
            name="struct_field",
            py_name="struct_field",
            type=_module_types.SimpleStruct,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__List__i16() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=int,
        kind=__NumberType.I16,
    )

def get_reflection__List__i32() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=int,
        kind=__NumberType.I32,
    )

def get_reflection__List__i64() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=int,
        kind=__NumberType.I64,
    )

def get_reflection__List__string() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=str,
        kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__List__SimpleStruct() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=_module_types.SimpleStruct,
        kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__Set__i32() -> __SetSpec:
    return __SetSpec._fbthrift_create(
        value=int,
        kind=__NumberType.I32,
     )

def get_reflection__Set__string() -> __SetSpec:
    return __SetSpec._fbthrift_create(
        value=str,
        kind=__NumberType.NOT_A_NUMBER,
     )

def get_reflection__Map__string_string() -> __MapSpec:
    return __MapSpec._fbthrift_create(
        key=str,
        key_kind=__NumberType.NOT_A_NUMBER,
        value=str,
        value_kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__Map__string_SimpleStruct() -> __MapSpec:
    return __MapSpec._fbthrift_create(
        key=str,
        key_kind=__NumberType.NOT_A_NUMBER,
        value=_module_types.SimpleStruct,
        value_kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__Map__string_i16() -> __MapSpec:
    return __MapSpec._fbthrift_create(
        key=str,
        key_kind=__NumberType.NOT_A_NUMBER,
        value=int,
        value_kind=__NumberType.I16,
    )

def get_reflection__List__List__i32() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=_module_types.List__i32,
        kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__Map__string_i32() -> __MapSpec:
    return __MapSpec._fbthrift_create(
        key=str,
        key_kind=__NumberType.NOT_A_NUMBER,
        value=int,
        value_kind=__NumberType.I32,
    )

def get_reflection__Map__string_Map__string_i32() -> __MapSpec:
    return __MapSpec._fbthrift_create(
        key=str,
        key_kind=__NumberType.NOT_A_NUMBER,
        value=_module_types.Map__string_i32,
        value_kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__List__Set__string() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=_module_types.Set__string,
        kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__Map__string_List__SimpleStruct() -> __MapSpec:
    return __MapSpec._fbthrift_create(
        key=str,
        key_kind=__NumberType.NOT_A_NUMBER,
        value=_module_types.List__SimpleStruct,
        value_kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__List__List__string() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=_module_types.List__string,
        kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__List__Set__i32() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=_module_types.Set__i32,
        kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__List__Map__string_string() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=_module_types.Map__string_string,
        kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__List__binary() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=bytes,
        kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__Set__binary() -> __SetSpec:
    return __SetSpec._fbthrift_create(
        value=bytes,
        kind=__NumberType.NOT_A_NUMBER,
     )

def get_reflection__List__AnEnum() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=_module_types.AnEnum,
        kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection___std_unordered_map__Map__i32_i32() -> __MapSpec:
    return __MapSpec._fbthrift_create(
        key=int,
        key_kind=__NumberType.I32,
        value=int,
        value_kind=__NumberType.I32,
    )

def get_reflection___MyType__List__i32() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=int,
        kind=__NumberType.I32,
    )

def get_reflection___MyType__Set__i32() -> __SetSpec:
    return __SetSpec._fbthrift_create(
        value=int,
        kind=__NumberType.I32,
     )

def get_reflection___MyType__Map__i32_i32() -> __MapSpec:
    return __MapSpec._fbthrift_create(
        key=int,
        key_kind=__NumberType.I32,
        value=int,
        value_kind=__NumberType.I32,
    )

def get_reflection___py3_simple_AdaptedList__List__i32() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=int,
        kind=__NumberType.I32,
    )

def get_reflection___py3_simple_AdaptedSet__Set__i32() -> __SetSpec:
    return __SetSpec._fbthrift_create(
        value=int,
        kind=__NumberType.I32,
     )

def get_reflection___py3_simple_AdaptedMap__Map__i32_i32() -> __MapSpec:
    return __MapSpec._fbthrift_create(
        key=int,
        key_kind=__NumberType.I32,
        value=int,
        value_kind=__NumberType.I32,
    )

def get_reflection__Map__i32_double() -> __MapSpec:
    return __MapSpec._fbthrift_create(
        key=int,
        key_kind=__NumberType.I32,
        value=float,
        value_kind=__NumberType.DOUBLE,
    )

def get_reflection__List__Map__i32_double() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=_module_types.Map__i32_double,
        kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__Map__AnEnumRenamed_i32() -> __MapSpec:
    return __MapSpec._fbthrift_create(
        key=_module_types.AnEnumRenamed,
        key_kind=__NumberType.NOT_A_NUMBER,
        value=int,
        value_kind=__NumberType.I32,
    )

