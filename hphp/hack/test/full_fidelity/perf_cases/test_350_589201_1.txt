<?hh
namespace { enum jQu : string { } << dKMQBcWtf ( ( ( @ $rZuWKfWq = ( $vNP = ( $dZMapfzHL = ( string ) ( ( 42.42 ) ) / ( ( $eDNsthb ) ) ) ) ) ) , $iMWubawm ) , dLBdlwpsj ( shape ( 'single string' => ( ( 42.42 ) ? : ( $cZzDsLUNz ) ) , 'single string' => $mIzXSFvy *= 'single string' ) ) >> async function wWJMfua ( ) : resource { while ( @ $dDincfbph /= ( $hLcIsaW = await function ( ) : resource { } ) ) try { } catch ( int $nNYjgSNXn ) { } } << zEHpoW ( ) , mGA , bOwXQMlLv ( "double string" , "nowdoc" , function ( ) : int { } ) , rO ( ( ( ( $tCIh ++ ) -> mLDudRL -> ( list ( ) ) instanceof gV ) ) ) >> class rLYiHsYtN < - mTZwTFvo > implements yAPdo , zKpjSz , uPbJ , vDImZx < int , ( function ( num ) : string ) , this > { use hFhtDIcus < ? resource > ; << vF , rLPSzZ , uLjNDlb >> protected function __destruct ( ) { } } class cDt < + gYtsFJZfl as float , - dRnVf as bool , + yCa as array < mixed > , + lOBymQ > extends tSktKVcYo implements eMIyfNHq { use sHfbHkCRE < zVahJkk > , wHp , iJBKfioX < arraykey > ; use vB < resource > ; } use zAdlg , zWUnxBhoa as yBUvDjGS ; trait zRN < - iJka as shape ( ) > { } namespace yXiTTQFi { require ( 'single string' ) ; class lS < + fAOU , gTzLtv > { } type tWA = qILttH ; class cCs < aH , + pELxi as void , + mPQ as ( function ( int , yGK , array < fMpPBi , sFj < array < array < arraykey > , classname < gQp > > > > , bZMv , shape ( 'single string' => resource ) ) : int ) > extends oUyAzGTq < void , this > { } } async function wULq ( << zEmUHX >> float $lRAfhNspW = $oZQiDfigZ |= shape ( ) , ... ) : int { } }
