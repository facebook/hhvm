// Copyright (c) Facebook, Inc. and its affiliates.
//
// This source code is licensed under the MIT license found in the
// LICENSE file in the "hack" directory of this source tree.
//
// @generated <<SignedSource::*O*zOeWoEQle#+L!plEphiEmie@IsG>>
use arena_trait::TrivialDrop;
use ocamlrep_derive::FromOcamlRep;
use ocamlrep_derive::FromOcamlRepIn;
use ocamlrep_derive::ToOcamlRep;
use serde::Deserialize;
use serde::Serialize;

#[allow(unused_imports)]
use crate::*;

/// Type A
pub type A = isize;

/// Type B
/// is int
pub type B = isize;

/// Type C has a fenced code block:
///
/// ```
/// function f(): int {
///   return 0;
/// }
/// ```
///
/// And an unfenced code block:
///
///     function g(): int {
///       return 0;
///     }
///
/// They should stay indented.
pub type C = isize;

/// Type D has no leading asterisks and a code block:
///
/// ```
///function f(): int {
///  return 0;
///}
/// ```
///
/// And an indented code block:
///
/// ```
///    function g(): int {
///      return 0;
///    }
/// ```
pub type D = isize;

/// Records can have comments on the fields.
#[derive(
    Clone,
    Debug,
    Deserialize,
    Eq,
    FromOcamlRep,
    Hash,
    Ord,
    PartialEq,
    PartialOrd,
    Serialize,
    ToOcamlRep,
)]
pub struct Record {
    /// The comments need to trail the field declaration in OCaml (unfortunately).
    pub foo: isize,
    /// bar comment
    pub bar: isize,
}

/// Variant types can have comments on each variant.
#[derive(
    Clone,
    Copy,
    Debug,
    Deserialize,
    Eq,
    FromOcamlRep,
    FromOcamlRepIn,
    Hash,
    Ord,
    PartialEq,
    PartialOrd,
    Serialize,
    ToOcamlRep,
)]
pub enum Variant {
    /// Again, the comments need to trail the variant declaration.
    /// Multiline comments are understood.
    Foo,
    /// Multiline comments do not need the leading asterisk on subsequent lines,
    /// but it is removed when it is present.
    Bar,
}
impl TrivialDrop for Variant {}
