#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

from libc.stdint cimport (
    int8_t as cint8_t,
    int16_t as cint16_t,
    int32_t as cint32_t,
    int64_t as cint64_t,
    uint32_t as cuint32_t,
)
from libcpp.string cimport string
from libcpp cimport bool as cbool, nullptr, nullptr_t
from cpython cimport bool as pbool
from libcpp.memory cimport shared_ptr, unique_ptr
from libcpp.utility cimport move as cmove
from libcpp.vector cimport vector
from libcpp.set cimport set as cset
from libcpp.map cimport map as cmap, pair as cpair
from thrift.py3.exceptions cimport cTException
cimport folly.iobuf as _fbthrift_iobuf
cimport thrift.py3.exceptions
cimport thrift.py3.types
from thrift.py3.types cimport (
    bstring,
    bytes_to_string,
    field_ref as __field_ref,
    optional_field_ref as __optional_field_ref,
    required_field_ref as __required_field_ref,
    terse_field_ref as __terse_field_ref,
    union_field_ref as __union_field_ref,
    get_union_field_value as __get_union_field_value,
)
from thrift.py3.common cimport (
    RpcOptions as __RpcOptions,
    Protocol as __Protocol,
    cThriftMetadata as __fbthrift_cThriftMetadata,
    MetadataBox as __MetadataBox,
)
from folly.optional cimport cOptional as __cOptional
cimport facebook.thrift.annotation.thrift.types as _facebook_thrift_annotation_thrift_types

cimport test.fixtures.nolegacy.module.types_fields as _fbthrift_types_fields

cdef extern from "thrift/compiler/test/fixtures/nolegacy/src/gen-py3/module/types.h":
  pass


cdef extern from "thrift/compiler/test/fixtures/nolegacy/src/gen-cpp2/module_metadata.h" namespace "apache::thrift::detail::md":
    cdef cppclass EnumMetadata[T]:
        @staticmethod
        void gen(__fbthrift_cThriftMetadata &metadata)
cdef extern from "thrift/compiler/test/fixtures/nolegacy/src/gen-cpp2/module_types.h" namespace "::test::fixtures::nolegacy":
    cdef cppclass cTestEnum "::test::fixtures::nolegacy::TestEnum":
        pass





cdef class TestEnum(thrift.py3.types.CompiledEnum):
    pass

cdef extern from "thrift/compiler/test/fixtures/nolegacy/src/gen-cpp2/module_metadata.h" namespace "apache::thrift::detail::md":
    cdef cppclass ExceptionMetadata[T]:
        @staticmethod
        void gen(__fbthrift_cThriftMetadata &metadata)
cdef extern from "thrift/compiler/test/fixtures/nolegacy/src/gen-cpp2/module_metadata.h" namespace "apache::thrift::detail::md":
    cdef cppclass StructMetadata[T]:
        @staticmethod
        void gen(__fbthrift_cThriftMetadata &metadata)
cdef extern from "thrift/compiler/test/fixtures/nolegacy/src/gen-cpp2/module_types_custom_protocol.h" namespace "::test::fixtures::nolegacy":

    cdef cppclass cTestError "::test::fixtures::nolegacy::TestError"(cTException):
        cTestError() except +
        cTestError(const cTestError&) except +
        bint operator==(cTestError&)
        bint operator!=(cTestError&)
        bint operator<(cTestError&)
        bint operator>(cTestError&)
        bint operator<=(cTestError&)
        bint operator>=(cTestError&)
        __field_ref[cTestEnum] test_enum_ref "test_enum" ()
        __field_ref[cint32_t] code_ref "code" ()


    cdef cppclass cTestMixin "::test::fixtures::nolegacy::TestMixin":
        cTestMixin() except +
        cTestMixin(const cTestMixin&) except +
        bint operator==(cTestMixin&)
        bint operator!=(cTestMixin&)
        bint operator<(cTestMixin&)
        bint operator>(cTestMixin&)
        bint operator<=(cTestMixin&)
        bint operator>=(cTestMixin&)
        __field_ref[string] field1_ref "field1" ()


    cdef cppclass cTestStruct "::test::fixtures::nolegacy::TestStruct":
        cTestStruct() except +
        cTestStruct(const cTestStruct&) except +
        bint operator==(cTestStruct&)
        bint operator!=(cTestStruct&)
        bint operator<(cTestStruct&)
        bint operator>(cTestStruct&)
        bint operator<=(cTestStruct&)
        bint operator>=(cTestStruct&)
        __field_ref[string] bar_ref "bar" ()
        __optional_field_ref[string] baropt_ref "baropt" ()
        __field_ref[cTestError] test_error_ref "test_error" ()
        __field_ref[cTestMixin] test_mixin_ref "test_mixin" ()
        __field_ref[string] field1_ref "field1" ()

    cdef enum cTestUnion__type "::test::fixtures::nolegacy::TestUnion::Type":
        cTestUnion__type___EMPTY__ "::test::fixtures::nolegacy::TestUnion::Type::__EMPTY__",
        cTestUnion__type_enumVal "::test::fixtures::nolegacy::TestUnion::Type::enumVal",
        cTestUnion__type_structVal "::test::fixtures::nolegacy::TestUnion::Type::structVal",

    cdef cppclass cTestUnion "::test::fixtures::nolegacy::TestUnion":
        cTestUnion() except +
        cTestUnion(const cTestUnion&) except +
        bint operator==(cTestUnion&)
        bint operator!=(cTestUnion&)
        bint operator<(cTestUnion&)
        bint operator>(cTestUnion&)
        bint operator<=(cTestUnion&)
        bint operator>=(cTestUnion&)
        cTestUnion__type getType() const
        __union_field_ref[cTestEnum] enumVal_ref"enumVal_ref" ()
        __union_field_ref[cTestStruct] structVal_ref"structVal_ref" ()




cdef class TestError(thrift.py3.exceptions.GeneratedError):
    cdef shared_ptr[cTestError] _cpp_obj
    cdef _fbthrift_types_fields.__TestError_FieldsSetter _fields_setter
    cdef inline object test_enum_impl(self)
    cdef inline object code_impl(self)
    cdef object __fbthrift_cached_test_enum

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cTestError])



cdef class TestMixin(thrift.py3.types.Struct):
    cdef shared_ptr[cTestMixin] _cpp_obj
    cdef _fbthrift_types_fields.__TestMixin_FieldsSetter _fields_setter
    cdef inline object field1_impl(self)

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cTestMixin])



cdef class TestStruct(thrift.py3.types.Struct):
    cdef shared_ptr[cTestStruct] _cpp_obj
    cdef _fbthrift_types_fields.__TestStruct_FieldsSetter _fields_setter
    cdef inline object bar_impl(self)
    cdef inline object baropt_impl(self)
    cdef inline object test_error_impl(self)
    cdef inline object test_mixin_impl(self)
    cdef inline object field1_impl(self)
    cdef TestError __fbthrift_cached_test_error
    cdef TestMixin __fbthrift_cached_test_mixin

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cTestStruct])

cdef class __TestUnionType(thrift.py3.types.CompiledEnum):
    pass




cdef class TestUnion(thrift.py3.types.Union):
    cdef shared_ptr[cTestUnion] _cpp_obj
    cdef readonly __TestUnionType type
    cdef readonly object value
    cdef _load_cache(TestUnion self)

    @staticmethod
    cdef unique_ptr[cTestUnion] _make_instance(
        cTestUnion* base_instance,
        TestEnum enumVal,
        TestStruct structVal
    ) except *

    @staticmethod
    cdef _fbthrift_create(shared_ptr[cTestUnion])



