/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010-2013 Facebook, Inc. (http://www.facebook.com)     |
   | Copyright (c) 1997-2010 The PHP Group                                |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/

#ifndef incl_HPHP_EXT_ICU_UCSDET_H_
#define incl_HPHP_EXT_ICU_UCSDET_H_

// >>>>>> Generated by idl.php. Do NOT modify. <<<<<<

#include "hphp/runtime/base/base-includes.h"

// Avoid dragging in the icu namespace.
#ifndef U_USING_ICU_NAMESPACE
#define U_USING_ICU_NAMESPACE 0
#endif

#include <unicode/ucsdet.h>
#include <unicode/utypes.h>
namespace HPHP {
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// class EncodingDetector

FORWARD_DECLARE_CLASS(EncodingDetector);
class c_EncodingDetector : public ExtObjectData {
 public:
  DECLARE_CLASS_NO_SWEEP(EncodingDetector)

  // need to implement
  public: c_EncodingDetector(Class* cls = c_EncodingDetector::classof());
  ~c_EncodingDetector() {
    ucsdet_close(m_encoding_detector);
  }
  public: void t___construct();
  public: void t_settext(const String& text);
  public: void t_setdeclaredencoding(const String& text);
  public: Object t_detect();
  public: Array t_detectall();



 private:
  UCharsetDetector *m_encoding_detector;
  String m_text;
  String m_declaredencoding;
};

///////////////////////////////////////////////////////////////////////////////
// class EncodingMatch

FORWARD_DECLARE_CLASS(EncodingMatch);
class c_EncodingMatch : public ExtObjectData {
 public:
  DECLARE_CLASS_NO_SWEEP(EncodingMatch)

  // need to implement
  c_EncodingMatch(Class* cls = c_EncodingMatch::classof())
    : ExtObjectData(cls)
    , m_encoding_match(0)
  {}
  ~c_EncodingMatch() {}

  public: void t___construct();
  public: bool t_isvalid();
  public: String t_getencoding();
  public: int64_t t_getconfidence();
  public: String t_getlanguage();
  public: String t_getutf8();



  public: const UCharsetMatch *m_encoding_match;
  private: void validate();
};

///////////////////////////////////////////////////////////////////////////////
}

#endif // incl_HPHP_EXT_ICU_UCSDET_H_
