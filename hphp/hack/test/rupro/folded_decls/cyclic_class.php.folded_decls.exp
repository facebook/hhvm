FoldedClass {
    name: "\\A",
    kind: Cclass(
        Concrete,
    ),
    substs: {
        "\\C": SubstContext {
            subst: Subst(
                {},
            ),
            class_context: "\\A",
            from_req_extends: false,
        },
    },
    ancestors: {
        "\\A": A,
        "\\C": C,
    },
    consts: {
        "class": ClassConst {
            is_synthesized: true,
            kind: CCConcrete,
            pos: NPos,
            ty: HH\classname<this>,
            origin: "\\A",
            refs: [],
        },
    },
    extends: {
        "\\C",
        "\\A",
    },
}
FoldedClass {
    name: "\\C",
    kind: Cclass(
        Concrete,
    ),
    ancestors: {
        "\\A": A,
    },
    consts: {
        "class": ClassConst {
            is_synthesized: true,
            kind: CCConcrete,
            pos: NPos,
            ty: HH\classname<this>,
            origin: "\\C",
            refs: [],
        },
    },
    extends: {
        "\\A",
    },
    decl_errors: [
        CyclicClassDef(
            NPos,
            [
                "\\A",
                "\\C",
            ],
        ),
    ],
}
