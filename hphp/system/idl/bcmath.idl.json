{
    "preamble": "",
    "consts": [
    ],
    "funcs": [
        {
            "name": "bcscale",
            "desc": "Sets the default scale parameter for all subsequent bc math functions that do not explicitly specify a scale parameter.",
            "flags": [
            ],
            "return": {
                "type": "Boolean",
                "desc": "Returns TRUE on success or FALSE on failure."
            },
            "args": [
                {
                    "name": "scale",
                    "type": "Int64",
                    "desc": "The scale factor."
                }
            ]
        },
        {
            "name": "bcadd",
            "desc": "Sums left_operand and right_operand.",
            "flags": [
            ],
            "return": {
                "type": "String",
                "desc": "The sum of the two operands, as a string."
            },
            "args": [
                {
                    "name": "left",
                    "type": "String",
                    "desc": "The left operand, as a string."
                },
                {
                    "name": "right",
                    "type": "String",
                    "desc": "The right operand, as a string."
                },
                {
                    "name": "scale",
                    "type": "Int64",
                    "value": "-1",
                    "desc": "This optional parameter is used to set the number of digits after the decimal place in the result. You can also set the global default scale for all functions by using bcscale()."
                }
            ]
        },
        {
            "name": "bcsub",
            "desc": "Subtracts the right_operand from the left_operand.",
            "flags": [
            ],
            "return": {
                "type": "String",
                "desc": "The result of the subtraction, as a string."
            },
            "args": [
                {
                    "name": "left",
                    "type": "String",
                    "desc": "The left operand, as a string."
                },
                {
                    "name": "right",
                    "type": "String",
                    "desc": "The right operand, as a string."
                },
                {
                    "name": "scale",
                    "type": "Int64",
                    "value": "-1",
                    "desc": "This optional parameter is used to set the number of digits after the decimal place in the result. You can also set the global default scale for all functions by using bcscale()."
                }
            ]
        },
        {
            "name": "bccomp",
            "desc": "Compares the left_operand to the right_operand and returns the result as an integer.",
            "flags": [
            ],
            "return": {
                "type": "Int64",
                "desc": "Returns 0 if the two operands are equal, 1 if the left_operand is larger than the right_operand, -1 otherwise."
            },
            "args": [
                {
                    "name": "left",
                    "type": "String",
                    "desc": "The left operand, as a string."
                },
                {
                    "name": "right",
                    "type": "String",
                    "desc": "The right operand, as a string."
                },
                {
                    "name": "scale",
                    "type": "Int64",
                    "value": "-1",
                    "desc": "The optional scale parameter is used to set the number of digits after the decimal place which will be used in the comparison."
                }
            ]
        },
        {
            "name": "bcmul",
            "desc": "Multiply the left_operand by the right_operand.",
            "flags": [
            ],
            "return": {
                "type": "String",
                "desc": "Returns the result as a string."
            },
            "args": [
                {
                    "name": "left",
                    "type": "String",
                    "desc": "The left operand, as a string."
                },
                {
                    "name": "right",
                    "type": "String",
                    "desc": "The right operand, as a string."
                },
                {
                    "name": "scale",
                    "type": "Int64",
                    "value": "-1",
                    "desc": "This optional parameter is used to set the number of digits after the decimal place in the result. You can also set the global default scale for all functions by using bcscale()."
                }
            ]
        },
        {
            "name": "bcdiv",
            "desc": "Divides the left_operand by the right_operand.",
            "flags": [
            ],
            "return": {
                "type": "String",
                "desc": "Returns the result of the division as a string, or NULL if right_operand is 0."
            },
            "args": [
                {
                    "name": "left",
                    "type": "String",
                    "desc": "The left operand, as a string."
                },
                {
                    "name": "right",
                    "type": "String",
                    "desc": "The right operand, as a string."
                },
                {
                    "name": "scale",
                    "type": "Int64",
                    "value": "-1",
                    "desc": "This optional parameter is used to set the number of digits after the decimal place in the result. You can also set the global default scale for all functions by using bcscale()."
                }
            ]
        },
        {
            "name": "bcmod",
            "desc": "Get the modulus of the left_operand using modulus.",
            "flags": [
            ],
            "return": {
                "type": "String",
                "desc": "Returns the modulus as a string, or NULL if modulus is 0."
            },
            "args": [
                {
                    "name": "left",
                    "type": "String",
                    "desc": "The left operand, as a string."
                },
                {
                    "name": "right",
                    "type": "String",
                    "desc": "The modulus, as a string."
                }
            ]
        },
        {
            "name": "bcpow",
            "desc": "Raise left_operand to the power right_operand.",
            "flags": [
            ],
            "return": {
                "type": "String",
                "desc": "Returns the result as a string."
            },
            "args": [
                {
                    "name": "left",
                    "type": "String",
                    "desc": "The left operand, as a string."
                },
                {
                    "name": "right",
                    "type": "String",
                    "desc": "The right operand, as a string."
                },
                {
                    "name": "scale",
                    "type": "Int64",
                    "value": "-1",
                    "desc": "This optional parameter is used to set the number of digits after the decimal place in the result. You can also set the global default scale for all functions by using bcscale()."
                }
            ]
        },
        {
            "name": "bcpowmod",
            "desc": "Use the fast-exponentiation method to raise left_operand to the power right_operand with respect to the modulus modulus.",
            "flags": [
            ],
            "return": {
                "type": "Variant",
                "desc": "Returns the result as a string, or NULL if modulus is 0."
            },
            "args": [
                {
                    "name": "left",
                    "type": "String",
                    "desc": "The left operand, as a string."
                },
                {
                    "name": "right",
                    "type": "String",
                    "desc": "The right operand, as a string."
                },
                {
                    "name": "modulus",
                    "type": "String",
                    "desc": "The modulus, as a string."
                },
                {
                    "name": "scale",
                    "type": "Int64",
                    "value": "-1",
                    "desc": "This optional parameter is used to set the number of digits after the decimal place in the result. You can also set the global default scale for all functions by using bcscale()."
                }
            ]
        },
        {
            "name": "bcsqrt",
            "desc": "Return the square root of the operand.",
            "flags": [
            ],
            "return": {
                "type": "Variant",
                "desc": "Returns the square root as a string, or NULL if operand is negative."
            },
            "args": [
                {
                    "name": "operand",
                    "type": "String",
                    "desc": "The operand, as a string."
                },
                {
                    "name": "scale",
                    "type": "Int64",
                    "value": "-1",
                    "desc": "This optional parameter is used to set the number of digits after the decimal place in the result. You can also set the global default scale for all functions by using bcscale()."
                }
            ]
        }
    ],
    "classes": [
    ]
}