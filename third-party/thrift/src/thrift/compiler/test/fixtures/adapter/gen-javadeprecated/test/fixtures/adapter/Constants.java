/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package test.fixtures.adapter;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.Collections;
import java.util.BitSet;
import java.util.Arrays;
@SuppressWarnings({ "unused" })
public class Constants {

  public static final int var1 = 10;

  public static final String var2 = "20";

  public static final MyStruct var3 = new MyStruct();
  static {
    var3.setField(30);
    Set<String> tmp0 = new HashSet<String>();
    tmp0.add("10");
    tmp0.add("20");

    var3.setSet_string(tmp0);
  }

  public static final int var4 = 40;

  public static final String var5 = "50";

  public static final MyStruct var6 = new MyStruct();
  static {
    var6.setField(60);
    Set<String> tmp1 = new HashSet<String>();
    tmp1.add("30");
    tmp1.add("40");

    var6.setSet_string(tmp1);
  }

  public static final int timeout = 42;

  public static final String msg = "hello, world";

  public static final Person2 person = new Person2();
  static {
    person.setName("DefaultName");
  }

  public static final int timeout_no_transitive = 420;

  public static final String msg_no_transitive = "hello, world 2";

  public static final Person2 person_no_transitive = new Person2();
  static {
    person_no_transitive.setName("DefaultName 2");
  }

  public static final boolean type_adapted = true;

  public static final MoveOnly nested_adapted = new MoveOnly();
  static {
    HeapAllocated tmp2 = new HeapAllocated();

    nested_adapted.setPtr(tmp2);
  }

  public static final List<Byte> container_of_adapted = new ArrayList<Byte>();
  static {
    container_of_adapted.add((byte)1);
    container_of_adapted.add((byte)2);
    container_of_adapted.add((byte)3);
  }

}
