comparing .main
Semdiff succeeded
comparing key lop
Semdiff failed
pc=31;24, pc'=;8, i=FPushCtorD 1 "Exception" i'=} .catch { asn={}{}

comparing key goo
Semdiff failed
pc=14;37, pc'=;7, i=String "fh1\n" i'=} .catch { asn={}{}

comparing key blah
Semdiff failed
pc=;48, pc'=;10, i=String "end outer loop\n" i'=} .catch { asn={}{}

comparing key baz
Semdiff failed
pc=31;24, pc'=;7, i=FPushCtorD 1 "Exception" i'=} .catch { asn={}{}

comparing key bar
Semdiff failed
pc=13;32, pc'=;7, i=String "in finally\n" i'=} .catch { asn={}{}

comparing key foo
Semdiff succeeded
Edits = 

for lop:
- .try_fault F1 {
+ .try {
- }
+ } .catch {
- FPushCtorD 1 "Exception"
- String "two"
- FCall 1
- PopR
- Throw
- }
- String "outer finally\n"
- Print
- PopC
- Null
- RetC
- F1:
- Unwind
+ }
+ }
- UnsetL _0
- UnsetL _1
for goo:
- .try_fault F2 {
- .try_fault F3 {
- }
+ } .catch {
+ .try_fault F2 {
+ .try {
- Jmp L0
+ Jmp L3
- }
+ L3:
- L0:
+ Dup
- String "fh2\n"
+ InstanceOfD "Exception"
+ JmpZ L2
+ SetL $e
+ PopC
+ String "ch\n"
- Null
+ Jmp L0
- RetC
+ L2:
- F3:
+ Throw
- UnsetL _1
+ }
- UnsetL _2
+ }
- String "fh1\n"
+ L0:
+ String "fh2\n"
- Unwind
+ Null
+ RetC
- UnsetL _1
- UnsetL _2
for blah:
- .try_fault F4 {
+ .try {
- }
- .try {
- String "end outer loop\n"
- Print
- PopC
- FPushCtorD 1 "Exception"
- String "two"
- FCall 1
- PopR
- Throw
- Jmp L0
- Dup
- InstanceOfD "Exception"
- JmpZ L1
- SetL $e
- PopC
- String "catch\n"
- Print
- PopC
- CGetL $e
- FPushObjMethodD 0 "getMessage" NullThrows
- FCall 0
- UnboxR
- Print
- PopC
- Jmp L0
- L1:
- Throw
- }
- L0:
- Null
- RetC
- F4:
- UnsetL _1
- UnsetL _2
- Jmp L2
- Jmp L2
+ Throw
- L2:
+ }
- Unwind
for baz:
- .try_fault F0 {
+ .try {
- .try_fault F1 {
- }
+ } .catch {
+ .try_fault F1 {
+ UnsetL _1
- String "end"
+ }
- Print
- PopC
- Null
- RetC
- FPushCtorD 1 "Exception"
- String "two"
- FCall 1
- PopR
- Throw
- Unwind
- F0:
- UnsetL _0
- UnsetL _1
for bar:
- .try_fault F2 {
- }
+ } .catch {
+ .try_fault F1 {
+ UnsetL _1
+ UnsetL _2
- Jmp L0
+ }
- } .catch {
- F2:
+ F1:
- UnsetL _1
+ Dup
- UnsetL _2
+ InstanceOfD "Exception"
- String "in finally\n"
+ JmpZ L2
+ SetL $e
+ PopC
+ String "in catch\n"
+ L2:
+ Throw
