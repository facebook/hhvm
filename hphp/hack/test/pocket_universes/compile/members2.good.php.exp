# members2.good.php starts here

.filepath "members2.good.php";

.adata A_0 = """Y:2:{s:4:\"kind\";i:21;s:13:\"generic_types\";y:1:{Y:1:{s:4:\"kind\";i:4;}}}""";
.adata A_1 = """k:1:{s:1:\"S\";}""";
.adata A_2 = """k:1:{s:2:\"S2\";}""";
.adata A_3 = """k:2:{s:1:\"S\";s:2:\"S2\";}""";
.adata A_4 = """k:1:{s:1:\"X\";}""";

.function {} ["__EntryPoint"("""y:0:{}""")] (55,87) <"HH\\void" N > main() {
  .numiters 1;
  .declvars $k;
  .srcloc 56:8,56:25;
  String "Members in Foo\n"
  .srcloc 56:3,56:26;
  Print
  .srcloc 56:3,56:26;
  PopC
  .srcloc 57:12,57:28;
  NullUninit
  NullUninit
  NullUninit
  .srcloc 57:12,57:28;
  FCallClsMethodD <> 0 1 "" - "" "" "Foo" "pu$E$Members"
  .srcloc 57:12,57:28;
  IterInit 0 NK V:$k L0
  .try {
  L1:
    .srcloc 58:10,58:11;
    CGetL $k
    .srcloc 58:5,58:12;
    Print
    .srcloc 58:5,58:12;
    PopC
    .srcloc 59:10,59:13;
    String "\n"
    .srcloc 59:5,59:14;
    Print
    .srcloc 59:5,59:14;
    PopC
    .srcloc 57:3,60:69;
    IterNext 0 NK V:$k L1
    Jmp L0
  } .catch {
    IterFree 0
    Throw
  }
L0:
  .srcloc 62:8,62:23;
  String "Members in C\n"
  .srcloc 62:3,62:24;
  Print
  .srcloc 62:3,62:24;
  PopC
  .srcloc 63:12,63:26;
  NullUninit
  NullUninit
  NullUninit
  .srcloc 63:12,63:26;
  FCallClsMethodD <> 0 1 "" - "" "" "C" "pu$E$Members"
  .srcloc 63:12,63:26;
  IterInit 0 NK V:$k L2
  .try {
  L3:
    .srcloc 64:10,64:11;
    CGetL $k
    .srcloc 64:5,64:12;
    Print
    .srcloc 64:5,64:12;
    PopC
    .srcloc 65:10,65:13;
    String "\n"
    .srcloc 65:5,65:14;
    Print
    .srcloc 65:5,65:14;
    PopC
    .srcloc 63:3,66:67;
    IterNext 0 NK V:$k L3
    Jmp L2
  } .catch {
    IterFree 0
    Throw
  }
L2:
  .srcloc 68:8,68:23;
  String "Members in D\n"
  .srcloc 68:3,68:24;
  Print
  .srcloc 68:3,68:24;
  PopC
  .srcloc 69:8,69:17;
  String "From E\n"
  .srcloc 69:3,69:18;
  Print
  .srcloc 69:3,69:18;
  PopC
  .srcloc 70:12,70:26;
  NullUninit
  NullUninit
  NullUninit
  .srcloc 70:12,70:26;
  FCallClsMethodD <> 0 1 "" - "" "" "D" "pu$E$Members"
  .srcloc 70:12,70:26;
  IterInit 0 NK V:$k L4
  .try {
  L5:
    .srcloc 71:10,71:11;
    CGetL $k
    .srcloc 71:5,71:12;
    Print
    .srcloc 71:5,71:12;
    PopC
    .srcloc 72:10,72:13;
    String "\n"
    .srcloc 72:5,72:14;
    Print
    .srcloc 72:5,72:14;
    PopC
    .srcloc 70:3,73:67;
    IterNext 0 NK V:$k L5
    Jmp L4
  } .catch {
    IterFree 0
    Throw
  }
L4:
  .srcloc 74:8,74:17;
  String "From F\n"
  .srcloc 74:3,74:18;
  Print
  .srcloc 74:3,74:18;
  PopC
  .srcloc 75:12,75:26;
  NullUninit
  NullUninit
  NullUninit
  .srcloc 75:12,75:26;
  FCallClsMethodD <> 0 1 "" - "" "" "D" "pu$F$Members"
  .srcloc 75:12,75:26;
  IterInit 0 NK V:$k L6
  .try {
  L7:
    .srcloc 76:10,76:11;
    CGetL $k
    .srcloc 76:5,76:12;
    Print
    .srcloc 76:5,76:12;
    PopC
    .srcloc 77:10,77:13;
    String "\n"
    .srcloc 77:5,77:14;
    Print
    .srcloc 77:5,77:14;
    PopC
    .srcloc 75:3,78:67;
    IterNext 0 NK V:$k L7
    Jmp L6
  } .catch {
    IterFree 0
    Throw
  }
L6:
  .srcloc 80:8,80:23;
  String "Members in E\n"
  .srcloc 80:3,80:24;
  Print
  .srcloc 80:3,80:24;
  PopC
  .srcloc 81:12,81:26;
  NullUninit
  NullUninit
  NullUninit
  .srcloc 81:12,81:26;
  FCallClsMethodD <> 0 1 "" - "" "" "E" "pu$E$Members"
  .srcloc 81:12,81:26;
  IterInit 0 NK V:$k L8
  .try {
  L9:
    .srcloc 82:10,82:11;
    CGetL $k
    .srcloc 82:5,82:12;
    Print
    .srcloc 82:5,82:12;
    PopC
    .srcloc 83:10,83:12;
    String " "
    .srcloc 83:5,83:13;
    Print
    .srcloc 83:5,83:13;
    PopC
    .srcloc 84:10,84:20;
    NullUninit
    NullUninit
    NullUninit
    .srcloc 84:18,84:19;
    CGetL $k
    .srcloc 84:10,84:20;
    FCallClsMethodD <> 1 1 "0" - "" "" "E" "pu$E$x"
    .srcloc 84:5,84:21;
    Print
    .srcloc 84:5,84:21;
    PopC
    .srcloc 85:10,85:13;
    String "\n"
    .srcloc 85:5,85:14;
    Print
    .srcloc 85:5,85:14;
    PopC
    .srcloc 81:3,86:103;
    IterNext 0 NK V:$k L9
    Jmp L8
  } .catch {
    IterFree 0
    Throw
  }
L8:
  .srcloc 87:2,87:2;
  Null
  RetC
}

.class {} C (7,14) {
  .method {}{} [private static "__Memoize"("""y:0:{}""")] (8,8) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members$memoize_impl() {
    .srcloc 8:8,8:8;
    Keyset @A_1
    .srcloc 8:8,8:8;
    Array @A_0
    VerifyRetTypeTS
    RetC
  }
  .method {}{} [private static "__Memoize"("""y:0:{}""")] (8,8) <"HH\\mixed" N > pu$E$val$memoize_impl(<"HH\\string" "HH\\string" > $atom) {
    .srcloc 8:8,8:8;
    VerifyParamType $atom
    .srcloc 8:8,8:8;
    String "S"
    .srcloc 8:8,8:8;
    CGetL2 $atom
    Eq
    JmpNZ L0
    Jmp L1
  L0:
    .srcloc 11:13,11:19;
    String "Hello"
    .srcloc 8:8,8:8;
    RetC
  L1:
    .srcloc 8:8,8:8;
    NewObjD "Exception"
    Dup
    NullUninit
    NullUninit
    .srcloc 8:8,8:8;
    String "\\C:@E::val unknown atom access: "
    .srcloc 8:8,8:8;
    CGetL $atom
    Concat
    .srcloc 8:8,8:8;
    FCallCtor <LockWhileUnwinding> 1 1 "0" - "" ""
    PopC
    LockObj
    .srcloc 8:8,8:8;
    Throw
    .srcloc 8:9,8:9;
    Null
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""")] (8,8) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members() {
    .ismemoizewrapper;
    .srcloc 8:8,8:8;
    MemoGet L0 L:0+0
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    FCallClsMethodD <> 0 1 "" - "" "" "C" "pu$E$Members$memoize_impl"
    MemoSet L:0+0
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""")] (8,8) <"HH\\mixed" N > pu$E$val(<"HH\\string" "HH\\string" > $atom) {
    .ismemoizewrapper;
    .srcloc 8:8,8:8;
    VerifyParamType $atom
    GetMemoKeyL $atom
    SetL _1
    PopC
    MemoGet L0 L:1+1
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    CGetL $atom
    FCallClsMethodD <> 1 1 "" - "" "" "C" "pu$E$val$memoize_impl"
    MemoSet L:1+1
    RetC
  }
}

.class {} D (16,28) extends C {
  .method {}{} [private static "__Memoize"("""y:0:{}""") "__Override"("""y:0:{}""")] (17,17) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members$memoize_impl() {
    .numiters 1;
    .declvars $result $class $method $parent_members $p $_;
    .srcloc 17:8,17:8;
    Keyset @A_2
    .srcloc 17:8,17:8;
    SetL $result
    .srcloc 17:8,17:8;
    PopC
    .try {
      .srcloc 17:8,17:8;
      NewObjD "ReflectionClass"
      Dup
      NullUninit
      NullUninit
      .srcloc 17:8,17:8;
      String "C"
      .srcloc 17:8,17:8;
      FCallCtor <LockWhileUnwinding> 1 1 "0" - "" ""
      PopC
      LockObj
      .srcloc 17:8,17:8;
      SetL $class
      .srcloc 17:8,17:8;
      PopC
      .srcloc 17:8,17:8;
      CGetL $class
      NullUninit
      NullUninit
      .srcloc 17:8,17:8;
      String "pu$E$Members"
      .srcloc 17:8,17:8;
      FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "getMethod"
      .srcloc 17:8,17:8;
      SetL $method
      .srcloc 17:8,17:8;
      PopC
      .srcloc 17:8,17:8;
      CGetL $method
      NullUninit
      NullUninit
      .srcloc 17:8,17:8;
      Null
      .srcloc 17:8,17:8;
      FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "invoke"
      .srcloc 17:8,17:8;
      SetL $parent_members
      .srcloc 17:8,17:8;
      PopC
      .srcloc 17:8,17:8;
      CGetL $parent_members
      .srcloc 17:8,17:8;
      IterInit 0 NK V:$p L0
      .try {
      L1:
        .srcloc 17:8,17:8;
        CGetL $p
        .srcloc 17:8,17:8;
        BaseL $result Define
        .srcloc 17:8,17:8;
        SetM 0 W
        .srcloc 17:8,17:8;
        PopC
        .srcloc 17:8,17:8;
        IterNext 0 NK V:$p L1
        Jmp L0
      } .catch {
        IterFree 0
        Throw
      }
    L0:
      .srcloc 17:8,17:8;
      Jmp L2
    } .catch {
      Dup
      InstanceOfD "ReflectionException"
      JmpZ L3
      SetL $_
      PopC
      .srcloc 17:8,17:8;
      Jmp L2
    L3:
      Throw
    }
  L2:
    .srcloc 17:8,17:8;
    CGetL $result
    .srcloc 17:8,17:8;
    Array @A_0
    VerifyRetTypeTS
    RetC
  }
  .method {}{} [private static "__Memoize"("""y:0:{}""")] (17,17) <"HH\\mixed" N > pu$E$val$memoize_impl(<"HH\\string" "HH\\string" > $atom) {
    .srcloc 17:8,17:8;
    VerifyParamType $atom
    .srcloc 17:8,17:8;
    String "S2"
    .srcloc 17:8,17:8;
    CGetL2 $atom
    Eq
    JmpNZ L0
    Jmp L1
  L0:
    .srcloc 19:13,19:19;
    String "youpi"
    .srcloc 17:8,17:8;
    RetC
  L1:
    .srcloc 17:8,17:8;
    NullUninit
    NullUninit
    NullUninit
    .srcloc 17:8,17:8;
    CGetL $atom
    .srcloc 17:8,17:8;
    FCallClsMethodSD <> 1 1 "0" - "" "" Parent "pu$E$val"
    .srcloc 17:8,17:8;
    RetC
    .srcloc 17:9,17:9;
    Null
    RetC
  }
  .method {}{} [private static "__Memoize"("""y:0:{}""") "__Override"("""y:0:{}""")] (22,22) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$F$Members$memoize_impl() {
    .numiters 1;
    .declvars $result $class $method $parent_members $p $_;
    .srcloc 22:8,22:8;
    Keyset @A_1
    .srcloc 22:8,22:8;
    SetL $result
    .srcloc 22:8,22:8;
    PopC
    .try {
      .srcloc 22:8,22:8;
      NewObjD "ReflectionClass"
      Dup
      NullUninit
      NullUninit
      .srcloc 22:8,22:8;
      String "C"
      .srcloc 22:8,22:8;
      FCallCtor <LockWhileUnwinding> 1 1 "0" - "" ""
      PopC
      LockObj
      .srcloc 22:8,22:8;
      SetL $class
      .srcloc 22:8,22:8;
      PopC
      .srcloc 22:8,22:8;
      CGetL $class
      NullUninit
      NullUninit
      .srcloc 22:8,22:8;
      String "pu$F$Members"
      .srcloc 22:8,22:8;
      FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "getMethod"
      .srcloc 22:8,22:8;
      SetL $method
      .srcloc 22:8,22:8;
      PopC
      .srcloc 22:8,22:8;
      CGetL $method
      NullUninit
      NullUninit
      .srcloc 22:8,22:8;
      Null
      .srcloc 22:8,22:8;
      FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "invoke"
      .srcloc 22:8,22:8;
      SetL $parent_members
      .srcloc 22:8,22:8;
      PopC
      .srcloc 22:8,22:8;
      CGetL $parent_members
      .srcloc 22:8,22:8;
      IterInit 0 NK V:$p L0
      .try {
      L1:
        .srcloc 22:8,22:8;
        CGetL $p
        .srcloc 22:8,22:8;
        BaseL $result Define
        .srcloc 22:8,22:8;
        SetM 0 W
        .srcloc 22:8,22:8;
        PopC
        .srcloc 22:8,22:8;
        IterNext 0 NK V:$p L1
        Jmp L0
      } .catch {
        IterFree 0
        Throw
      }
    L0:
      .srcloc 22:8,22:8;
      Jmp L2
    } .catch {
      Dup
      InstanceOfD "ReflectionException"
      JmpZ L3
      SetL $_
      PopC
      .srcloc 22:8,22:8;
      Jmp L2
    L3:
      Throw
    }
  L2:
    .srcloc 22:8,22:8;
    CGetL $result
    .srcloc 22:8,22:8;
    Array @A_0
    VerifyRetTypeTS
    RetC
  }
  .method {}{} [private static "__Memoize"("""y:0:{}""")] (22,22) <"HH\\mixed" N > pu$F$fal$memoize_impl(<"HH\\string" "HH\\string" > $atom) {
    .srcloc 22:8,22:8;
    VerifyParamType $atom
    .srcloc 22:8,22:8;
    String "S"
    .srcloc 22:8,22:8;
    CGetL2 $atom
    Eq
    JmpNZ L0
    Jmp L1
  L0:
    .srcloc 25:13,25:17;
    String "blu"
    .srcloc 22:8,22:8;
    RetC
  L1:
    .srcloc 22:8,22:8;
    NullUninit
    NullUninit
    NullUninit
    .srcloc 22:8,22:8;
    CGetL $atom
    .srcloc 22:8,22:8;
    FCallClsMethodSD <> 1 1 "0" - "" "" Parent "pu$F$fal"
    .srcloc 22:8,22:8;
    RetC
    .srcloc 22:9,22:9;
    Null
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""") "__Override"("""y:0:{}""")] (17,17) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members() {
    .ismemoizewrapper;
    .srcloc 17:8,17:8;
    MemoGet L0 L:0+0
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    FCallClsMethodD <> 0 1 "" - "" "" "D" "pu$E$Members$memoize_impl"
    MemoSet L:0+0
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""")] (17,17) <"HH\\mixed" N > pu$E$val(<"HH\\string" "HH\\string" > $atom) {
    .ismemoizewrapper;
    .srcloc 17:8,17:8;
    VerifyParamType $atom
    GetMemoKeyL $atom
    SetL _1
    PopC
    MemoGet L0 L:1+1
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    CGetL $atom
    FCallClsMethodD <> 1 1 "" - "" "" "D" "pu$E$val$memoize_impl"
    MemoSet L:1+1
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""") "__Override"("""y:0:{}""")] (22,22) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$F$Members() {
    .ismemoizewrapper;
    .srcloc 22:8,22:8;
    MemoGet L0 L:0+0
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    FCallClsMethodD <> 0 1 "" - "" "" "D" "pu$F$Members$memoize_impl"
    MemoSet L:0+0
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""")] (22,22) <"HH\\mixed" N > pu$F$fal(<"HH\\string" "HH\\string" > $atom) {
    .ismemoizewrapper;
    .srcloc 22:8,22:8;
    VerifyParamType $atom
    GetMemoKeyL $atom
    SetL _1
    PopC
    MemoGet L0 L:1+1
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    CGetL $atom
    FCallClsMethodD <> 1 1 "" - "" "" "D" "pu$F$fal$memoize_impl"
    MemoSet L:1+1
    RetC
  }
}

.class {} E (30,41) extends C {
  .method {}{} [private static "__Memoize"("""y:0:{}""") "__Override"("""y:0:{}""")] (31,31) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members$memoize_impl() {
    .numiters 1;
    .declvars $result $class $method $parent_members $p $_;
    .srcloc 31:8,31:8;
    Keyset @A_3
    .srcloc 31:8,31:8;
    SetL $result
    .srcloc 31:8,31:8;
    PopC
    .try {
      .srcloc 31:8,31:8;
      NewObjD "ReflectionClass"
      Dup
      NullUninit
      NullUninit
      .srcloc 31:8,31:8;
      String "C"
      .srcloc 31:8,31:8;
      FCallCtor <LockWhileUnwinding> 1 1 "0" - "" ""
      PopC
      LockObj
      .srcloc 31:8,31:8;
      SetL $class
      .srcloc 31:8,31:8;
      PopC
      .srcloc 31:8,31:8;
      CGetL $class
      NullUninit
      NullUninit
      .srcloc 31:8,31:8;
      String "pu$E$Members"
      .srcloc 31:8,31:8;
      FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "getMethod"
      .srcloc 31:8,31:8;
      SetL $method
      .srcloc 31:8,31:8;
      PopC
      .srcloc 31:8,31:8;
      CGetL $method
      NullUninit
      NullUninit
      .srcloc 31:8,31:8;
      Null
      .srcloc 31:8,31:8;
      FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "invoke"
      .srcloc 31:8,31:8;
      SetL $parent_members
      .srcloc 31:8,31:8;
      PopC
      .srcloc 31:8,31:8;
      CGetL $parent_members
      .srcloc 31:8,31:8;
      IterInit 0 NK V:$p L0
      .try {
      L1:
        .srcloc 31:8,31:8;
        CGetL $p
        .srcloc 31:8,31:8;
        BaseL $result Define
        .srcloc 31:8,31:8;
        SetM 0 W
        .srcloc 31:8,31:8;
        PopC
        .srcloc 31:8,31:8;
        IterNext 0 NK V:$p L1
        Jmp L0
      } .catch {
        IterFree 0
        Throw
      }
    L0:
      .srcloc 31:8,31:8;
      Jmp L2
    } .catch {
      Dup
      InstanceOfD "ReflectionException"
      JmpZ L3
      SetL $_
      PopC
      .srcloc 31:8,31:8;
      Jmp L2
    L3:
      Throw
    }
  L2:
    .srcloc 31:8,31:8;
    CGetL $result
    .srcloc 31:8,31:8;
    Array @A_0
    VerifyRetTypeTS
    RetC
  }
  .method {}{} [private static "__Memoize"("""y:0:{}""")] (31,31) <"HH\\mixed" N > pu$E$val$memoize_impl(<"HH\\string" "HH\\string" > $atom) {
    .srcloc 31:8,31:8;
    VerifyParamType $atom
    .srcloc 31:8,31:8;
    String "S2"
    .srcloc 31:8,31:8;
    CGetL2 $atom
    Eq
    JmpNZ L0
    Jmp L1
  L0:
    .srcloc 37:13,37:17;
    String "bli"
    .srcloc 31:8,31:8;
    RetC
  L1:
    .srcloc 31:8,31:8;
    NullUninit
    NullUninit
    NullUninit
    .srcloc 31:8,31:8;
    CGetL $atom
    .srcloc 31:8,31:8;
    FCallClsMethodSD <> 1 1 "0" - "" "" Parent "pu$E$val"
    .srcloc 31:8,31:8;
    RetC
    .srcloc 31:9,31:9;
    Null
    RetC
  }
  .method {}{} [private static "__Memoize"("""y:0:{}""")] (31,31) <"HH\\mixed" N > pu$E$x$memoize_impl(<"HH\\string" "HH\\string" > $atom) {
    .srcloc 31:8,31:8;
    VerifyParamType $atom
    .srcloc 31:8,31:8;
    String "S"
    .srcloc 31:8,31:8;
    CGetL2 $atom
    Eq
    JmpNZ L0
    .srcloc 31:8,31:8;
    String "S2"
    .srcloc 31:8,31:8;
    CGetL2 $atom
    Eq
    JmpNZ L1
    Jmp L2
  L0:
    .srcloc 34:11,34:12;
    Int 42
    .srcloc 31:8,31:8;
    RetC
  L1:
    .srcloc 38:11,38:14;
    Int 1664
    .srcloc 31:8,31:8;
    RetC
  L2:
    .srcloc 31:8,31:8;
    NullUninit
    NullUninit
    NullUninit
    .srcloc 31:8,31:8;
    CGetL $atom
    .srcloc 31:8,31:8;
    FCallClsMethodSD <> 1 1 "0" - "" "" Parent "pu$E$x"
    .srcloc 31:8,31:8;
    RetC
    .srcloc 31:9,31:9;
    Null
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""") "__Override"("""y:0:{}""")] (31,31) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members() {
    .ismemoizewrapper;
    .srcloc 31:8,31:8;
    MemoGet L0 L:0+0
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    FCallClsMethodD <> 0 1 "" - "" "" "E" "pu$E$Members$memoize_impl"
    MemoSet L:0+0
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""")] (31,31) <"HH\\mixed" N > pu$E$val(<"HH\\string" "HH\\string" > $atom) {
    .ismemoizewrapper;
    .srcloc 31:8,31:8;
    VerifyParamType $atom
    GetMemoKeyL $atom
    SetL _1
    PopC
    MemoGet L0 L:1+1
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    CGetL $atom
    FCallClsMethodD <> 1 1 "" - "" "" "E" "pu$E$val$memoize_impl"
    MemoSet L:1+1
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""")] (31,31) <"HH\\mixed" N > pu$E$x(<"HH\\string" "HH\\string" > $atom) {
    .ismemoizewrapper;
    .srcloc 31:8,31:8;
    VerifyParamType $atom
    GetMemoKeyL $atom
    SetL _1
    PopC
    MemoGet L0 L:1+1
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    CGetL $atom
    FCallClsMethodD <> 1 1 "" - "" "" "E" "pu$E$x$memoize_impl"
    MemoSet L:1+1
    RetC
  }
}

.class {} Base (44,44) {
}

.class {} Foo (45,52) extends Base {
  .method {}{} [private static "__Memoize"("""y:0:{}""") "__Override"("""y:0:{}""")] (46,46) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members$memoize_impl() {
    .numiters 1;
    .declvars $result $class $method $parent_members $p $_;
    .srcloc 46:8,46:8;
    Keyset @A_4
    .srcloc 46:8,46:8;
    SetL $result
    .srcloc 46:8,46:8;
    PopC
    .try {
      .srcloc 46:8,46:8;
      NewObjD "ReflectionClass"
      Dup
      NullUninit
      NullUninit
      .srcloc 46:8,46:8;
      String "Base"
      .srcloc 46:8,46:8;
      FCallCtor <LockWhileUnwinding> 1 1 "0" - "" ""
      PopC
      LockObj
      .srcloc 46:8,46:8;
      SetL $class
      .srcloc 46:8,46:8;
      PopC
      .srcloc 46:8,46:8;
      CGetL $class
      NullUninit
      NullUninit
      .srcloc 46:8,46:8;
      String "pu$E$Members"
      .srcloc 46:8,46:8;
      FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "getMethod"
      .srcloc 46:8,46:8;
      SetL $method
      .srcloc 46:8,46:8;
      PopC
      .srcloc 46:8,46:8;
      CGetL $method
      NullUninit
      NullUninit
      .srcloc 46:8,46:8;
      Null
      .srcloc 46:8,46:8;
      FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "invoke"
      .srcloc 46:8,46:8;
      SetL $parent_members
      .srcloc 46:8,46:8;
      PopC
      .srcloc 46:8,46:8;
      CGetL $parent_members
      .srcloc 46:8,46:8;
      IterInit 0 NK V:$p L0
      .try {
      L1:
        .srcloc 46:8,46:8;
        CGetL $p
        .srcloc 46:8,46:8;
        BaseL $result Define
        .srcloc 46:8,46:8;
        SetM 0 W
        .srcloc 46:8,46:8;
        PopC
        .srcloc 46:8,46:8;
        IterNext 0 NK V:$p L1
        Jmp L0
      } .catch {
        IterFree 0
        Throw
      }
    L0:
      .srcloc 46:8,46:8;
      Jmp L2
    } .catch {
      Dup
      InstanceOfD "ReflectionException"
      JmpZ L3
      SetL $_
      PopC
      .srcloc 46:8,46:8;
      Jmp L2
    L3:
      Throw
    }
  L2:
    .srcloc 46:8,46:8;
    CGetL $result
    .srcloc 46:8,46:8;
    Array @A_0
    VerifyRetTypeTS
    RetC
  }
  .method {}{} [private static "__Memoize"("""y:0:{}""")] (46,46) <"HH\\mixed" N > pu$E$foo$memoize_impl(<"HH\\string" "HH\\string" > $atom) {
    .srcloc 46:8,46:8;
    VerifyParamType $atom
    .srcloc 46:8,46:8;
    String "X"
    .srcloc 46:8,46:8;
    CGetL2 $atom
    Eq
    JmpNZ L0
    Jmp L1
  L0:
    .srcloc 49:13,49:15;
    String "X"
    .srcloc 46:8,46:8;
    RetC
  L1:
    .srcloc 46:8,46:8;
    NullUninit
    NullUninit
    NullUninit
    .srcloc 46:8,46:8;
    CGetL $atom
    .srcloc 46:8,46:8;
    FCallClsMethodSD <> 1 1 "0" - "" "" Parent "pu$E$foo"
    .srcloc 46:8,46:8;
    RetC
    .srcloc 46:9,46:9;
    Null
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""") "__Override"("""y:0:{}""")] (46,46) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members() {
    .ismemoizewrapper;
    .srcloc 46:8,46:8;
    MemoGet L0 L:0+0
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    FCallClsMethodD <> 0 1 "" - "" "" "Foo" "pu$E$Members$memoize_impl"
    MemoSet L:0+0
    RetC
  }
  .method {}{} [public static "__Memoize"("""y:0:{}""")] (46,46) <"HH\\mixed" N > pu$E$foo(<"HH\\string" "HH\\string" > $atom) {
    .ismemoizewrapper;
    .srcloc 46:8,46:8;
    VerifyParamType $atom
    GetMemoKeyL $atom
    SetL _1
    PopC
    MemoGet L0 L:1+1
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    CGetL $atom
    FCallClsMethodD <> 1 1 "" - "" "" "Foo" "pu$E$foo$memoize_impl"
    MemoSet L:1+1
    RetC
  }
}

.file_attributes ["__EnableUnstableFeatures"("""y:1:{s:16:\"pocket_universes\";}""")] ;

# members2.good.php ends here
