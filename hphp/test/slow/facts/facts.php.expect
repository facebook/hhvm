bool(true)
string(5) "class"
string(4) "enum"
string(9) "interface"
string(5) "trait"
BaseClass is class
DerivedClass is class
C1 is class
E1 is enum
I1 is interface
T1 is trait
Nonexistent has no kind
Subtypes of BaseClass: ["DerivedClass","IRequireExtendsBaseClass","TRequireExtendsBaseClass","TRequireExtendsBaseClassAndRequireImplementsIBase"]
Supertypes of BaseClass: []
Subtypes of IBase with filters {"kind":["class"]}: ["DerivedClass","UsesTRequireImplementsIBase"]
Transitive subtypes of IBase with filters {"kind":["class"]}: [["DerivedClass","derived-class.inc","class",false],["UsesTRequireImplementsIBase","derived-class.inc","class",false]]
Subtypes of IBase with filters {"kind":["trait"]}: ["TImplementsIBase","TRequireExtendsBaseClassAndRequireImplementsIBase","TRequireImplementsAndImplementsIBase","TRequireImplementsAndImplementsIBase","TRequireImplementsIBase"]
Transitive subtypes of IBase with filters {"kind":["trait"]}: [["TImplementsIBase","derived-class.inc","trait",true],["TRequireExtendsBaseClassAndRequireImplementsIBase","derived-class.inc","trait",true],["TRequireImplementsAndImplementsIBase","derived-class.inc","trait",true],["TRequireImplementsIBase","derived-class.inc","trait",true]]
Subtypes of IBase with filters {"kind":["class","trait"]}: ["DerivedClass","TImplementsIBase","TRequireExtendsBaseClassAndRequireImplementsIBase","TRequireImplementsAndImplementsIBase","TRequireImplementsAndImplementsIBase","TRequireImplementsIBase","UsesTRequireImplementsIBase"]
Transitive subtypes of IBase with filters {"kind":["class","trait"]}: [["DerivedClass","derived-class.inc","class",false],["TImplementsIBase","derived-class.inc","trait",true],["TRequireExtendsBaseClassAndRequireImplementsIBase","derived-class.inc","trait",true],["TRequireImplementsAndImplementsIBase","derived-class.inc","trait",true],["TRequireImplementsIBase","derived-class.inc","trait",true],["UsesTRequireImplementsIBase","derived-class.inc","class",false]]
Supertypes of DerivedClass: ["BaseClass","IBase","TImplementsIBase"]
Supertypes of DerivedClass with filters {"kind":["class"]}: ["BaseClass"]
Supertypes of DerivedClass with filters {"kind":["trait"]}: ["TImplementsIBase"]
Supertypes of DerivedClass with filters {"kind":["interface"]}: ["IBase"]
Supertypes of DerivedClass with filters {"kind":["class","trait"]}: ["BaseClass","TImplementsIBase"]
Supertypes of DerivedClass with filters {"kind":["interface","trait"]}: ["IBase","TImplementsIBase"]

Excluding `require extends` relations
Subtypes of IBase with filters {"derive_kind":["extends"]}: ["DerivedClass","TImplementsIBase","TRequireImplementsAndImplementsIBase","UsesTRequireImplementsIBase"]
Transitive subtypes of IBase with filters {"derive_kind":["extends"]}: [["DerivedClass","derived-class.inc","class",false],["TImplementsIBase","derived-class.inc","trait",true],["TRequireImplementsAndImplementsIBase","derived-class.inc","trait",true],["UsesTRequireImplementsIBase","derived-class.inc","class",false]]
Subtypes of BaseClass with filters {"derive_kind":["extends"]}: ["DerivedClass"]
Transitive subtypes of BaseClass with filters {"derive_kind":["extends"]}: [["DerivedClass","derived-class.inc","class",false]]
Supertypes of TRequireExtendsBaseClassAndRequireImplementsIBase with filters {"derive_kind":["extends"]}: []
Supertypes of TRequireImplementsAndImplementsIBase with filters {"derive_kind":["extends"]}: ["IBase"]
Subtypes of IBase with filters {"kind":["interface"],"derive_kind":["extends"]}: []
Transitive subtypes of IBase with filters {"kind":["interface"],"derive_kind":["extends"]}: []
Supertypes of TRequireClassFinalClass with filters {"derive_kind":["extends"]}: []
Subtypes of TRequireClassFinalClass with filters {"derive_kind":["extends"]}: ["FinalClassUsesTRequireClass","FinalClassUsesTRequireClassB"]
Transitive subtypes of TRequireClassFinalClass with filters {"derive_kind":["extends"]}: [["FinalClassUsesTRequireClass","derived-class.inc","class",false],["FinalClassUsesTRequireClassB","derived-class.inc","class",false]]
Supertypes of FinalClassUsesTRequireClass with filters {"derive_kind":["extends"]}: ["TRequireClassFinalCLass"]
Subtypes of FinalClassUsesTRequireClass with filters {"derive_kind":["extends"]}: []
Transitive subtypes of FinalClassUsesTRequireClass with filters {"derive_kind":["extends"]}: []
Supertypes of TRequireClassFinalClassB with filters {"derive_kind":["extends"]}: []
Subtypes of FinalClassUsesTRequireClassB with filters {"derive_kind":["extends"]}: []

Excluding `extends` relations
Subtypes of IBase with filters {"derive_kind":["require extends"]}: ["TRequireExtendsBaseClassAndRequireImplementsIBase","TRequireImplementsAndImplementsIBase","TRequireImplementsIBase"]
Subtypes of BaseClass with filters {"derive_kind":["require extends"]}: ["IRequireExtendsBaseClass","TRequireExtendsBaseClass","TRequireExtendsBaseClassAndRequireImplementsIBase"]
Transitive subtypes of IBase with filters {"derive_kind":["require extends"]}: [["TRequireExtendsBaseClassAndRequireImplementsIBase","derived-class.inc","trait",true],["TRequireImplementsAndImplementsIBase","derived-class.inc","trait",true],["TRequireImplementsIBase","derived-class.inc","trait",true]]
Supertypes of TRequireExtendsBaseClassAndRequireImplementsIBase with filters {"derive_kind":["require extends"]}: ["BaseClass","IBase"]
Transitive subtypes of BaseClass with filters {"derive_kind":["require extends"]}: [["IRequireExtendsBaseClass","derived-class.inc","interface",true],["TRequireExtendsBaseClass","derived-class.inc","trait",true],["TRequireExtendsBaseClassAndRequireImplementsIBase","derived-class.inc","trait",true]]
Supertypes of TRequireImplementsAndImplementsIBase with filters {"derive_kind":["require extends"]}: ["IBase"]
Supertypes of SomeEnum with filters {"kind":["class"]}: ["HH\\BuiltinEnum"]
Subtypes of IBase with filters {"kind":["interface"],"derive_kind":["require extends"]}: []
Transitive subtypes of IBase with filters {"kind":["interface"],"derive_kind":["require extends"]}: []
Subtypes of IBase with filters {"kind":["trait"],"derive_kind":["require extends"]}: ["TRequireExtendsBaseClassAndRequireImplementsIBase","TRequireImplementsAndImplementsIBase","TRequireImplementsIBase"]
Transitive subtypes of IBase with filters {"kind":["trait"],"derive_kind":["require extends"]}: [["TRequireExtendsBaseClassAndRequireImplementsIBase","derived-class.inc","trait",true],["TRequireImplementsAndImplementsIBase","derived-class.inc","trait",true],["TRequireImplementsIBase","derived-class.inc","trait",true]]
Supertypes of TRequireClassFinalClass with filters {"derive_kind":["require extends"]}: ["FinalClassUsesTRequireClass"]
Subtypes of TRequireClassFinalClass with filters {"derive_kind":["require extends"]}: []
Transitive subtypes of TRequireClassFinalClass with filters {"derive_kind":["require extends"]}: []
Supertypes of FinalClassUsesTRequireClass with filters {"derive_kind":["require extends"]}: []
Subtypes of FinalClassUsesTRequireClass with filters {"derive_kind":["require extends"]}: ["TRequireClassFinalClass"]
Transitive subtypes of FinalClassUsesTRequireClass with filters {"derive_kind":["require extends"]}: [["TRequireClassFinalClass","derived-class.inc","trait",true]]
Supertypes of TRequireClassFinalClassB with filters {"derive_kind":["require extends"]}: ["FinalClassUsesTRequireClassB","SuperClassOfFinalClassB"]
Subtypes of FinalClassUsesTRequireClassB with filters {"derive_kind":["require extends"]}: ["TRequireClassFinalClassB"]

Filtering by attribute
Subtypes of BaseClassForAttributeFiltering with filters {"attributes":[{"name":"TwoArgAttr","parameters":{"0":"banana"}}]}: ["BananaThenApple"]
Transitive subtypes of IBaseForAttributeFiltering with filters {"attributes":[{"name":"TwoArgAttr","parameters":{"0":"banana"}}]}: [["BananaThenApple","attribute-classes.inc","class",false]]
Subtypes of BaseClassForAttributeFiltering with filters {"attributes":[{"name":"TwoArgAttr","parameters":{"0":"apple"}}]}: ["AppleThenBanana","AppleThenCarrot"]
Transitive subtypes of IBaseForAttributeFiltering with filters {"attributes":[{"name":"TwoArgAttr","parameters":{"0":"apple"}}]}: [["AppleThenBanana","attribute-classes.inc","class",false],["AppleThenCarrot","attribute-classes.inc","class",false]]
Subtypes of BaseClassForAttributeFiltering with filters {"attributes":[{"name":"TwoArgAttr","parameters":{"1":"carrot"}}]}: ["AppleThenCarrot"]
Transitive subtypes of IBaseForAttributeFiltering with filters {"attributes":[{"name":"TwoArgAttr","parameters":{"1":"carrot"}}]}: [["AppleThenCarrot","attribute-classes.inc","class",false]]

Getting attributes
Attributes of AppleThenBanana: {"TwoArgAttr":["apple","banana"]}
Attributes of BananaThenApple: {"TwoArgAttr":["banana","apple"]}
Attributes of AppleThenCarrot: {"TwoArgAttr":["apple","carrot"]}
Attributes of ClassWithTwoAttrs: {"NoArgAttr":[],"TwoArgAttr":["abc","def"]}
Attributes of TypeAliasWithAttr: {"TypeAliasAttr":["42","a"]}
Attributes of ClassWithMethodAttrs::methodWithNoArgAttr: {"NoArgMethodAttr":[]}
Attributes of ClassWithMethodAttrs::methodWithTwoArgAttr: {"TwoArgMethodAttr":["42","banana"]}

These should be empty, otherwise we're mixing types and type aliases up again
Attributes of ClassWithTwoAttrs: {}
Attributes of TypeAliasWithAttr: {}

Getting types with attribute
Types decorated with NoArgAttr: ["AnnoyingNS\\TerribleClass","ClassWithTwoAttrs"]
Types decorated with TwoArgAttr: ["AppleThenBanana","AppleThenCarrot","BananaThenApple","ClassWithTwoAttrs"]
Methods decorated with NoArgMethodAttr: ["ClassWithMethodAttrs::methodWithNoArgAttr"]
Methods decorated with TwoArgMethodAttr: ["AnnoyingNS\\TerribleClass::terribleMethod","ClassWithMethodAttrs::methodWithTwoArgAttr"]
Threw RuntimeException:"Queried attribute DontIndexThisMethodAttr not found in IndexedMethodAttributes" trying to get methods with DontIndexThisMethodAttr

Getting type aliases with attribute
Type aliases decorated with TypeAliasAttr: ["TypeAliasWithAttr"]

Getting file attributes
Files decorated with NoArgFileAttr: ["attribute-classes.inc"]
Files decorated with TwoArgFileAttr: ["attribute-classes.inc"]
Attributes of attribute-classes.inc: {"NoArgFileAttr":[],"TwoArgFileAttr":["Hello","There"]}

Checking nonexistent paths
this/path/does/not/exist.php has 0 modules
this/path/does/not/exist.php has 0 types
this/path/does/not/exist.php has 0 functions
this/path/does/not/exist.php has 0 constants
this/path/does/not/exist.php has 0 type aliases
/this/path/does/not/exist.php has 0 modules
/this/path/does/not/exist.php has 0 types
/this/path/does/not/exist.php has 0 functions
/this/path/does/not/exist.php has 0 constants
/this/path/does/not/exist.php has 0 type aliases

Getting all modules
a => types-with-kinds.inc
b => types-with-kinds.inc

Getting all types
AbstractFinalClass => derived-class.inc
  Abstract? true
  Final? true
AnnoyingNS\TerribleClass => attribute-namespace.inc
  Abstract? false
  Final? true
AppleThenBanana => attribute-classes.inc
  Abstract? false
  Final? false
AppleThenCarrot => attribute-classes.inc
  Abstract? false
  Final? false
BananaThenApple => attribute-classes.inc
  Abstract? false
  Final? false
BaseClass => base-class.inc
  Abstract? true
  Final? false
BaseClassForAttributeFiltering => attribute-classes.inc
  Abstract? false
  Final? false
C1 => types-with-kinds.inc
  Abstract? false
  Final? false
ClassWithMethodAttrs => attribute-classes.inc
  Abstract? false
  Final? false
ClassWithTwoAttrs => attribute-classes.inc
  Abstract? false
  Final? false
DerivedClass => derived-class.inc
  Abstract? false
  Final? true
DontIndexThisMethodAttr => attribute-classes.inc
  Abstract? false
  Final? false
E1 => types-with-kinds.inc
  Abstract? false
  Final? false
FinalClassUsesTRequireClass => derived-class.inc
  Abstract? false
  Final? true
FinalClassUsesTRequireClassB => derived-class.inc
  Abstract? false
  Final? true
I1 => types-with-kinds.inc
  Abstract? true
  Final? false
IBase => base-class.inc
  Abstract? true
  Final? false
IBaseForAttributeFiltering => attribute-classes.inc
  Abstract? true
  Final? false
IRequireExtendsBaseClass => derived-class.inc
  Abstract? true
  Final? false
IimplementsIRequireExtendsBaseClass => derived-class.inc
  Abstract? true
  Final? false
NoArgAttr => attribute-classes.inc
  Abstract? false
  Final? false
NoArgFileAttr => attribute-classes.inc
  Abstract? false
  Final? false
NoArgMethodAttr => attribute-classes.inc
  Abstract? false
  Final? false
SomeEnum => base-class.inc
  Abstract? false
  Final? false
T1 => types-with-kinds.inc
  Abstract? true
  Final? false
TImplementsIBase => derived-class.inc
  Abstract? true
  Final? false
TRequireClassFinalClass => derived-class.inc
  Abstract? true
  Final? false
TRequireClassFinalClassB => derived-class.inc
  Abstract? true
  Final? false
TRequireExtendsBaseClass => derived-class.inc
  Abstract? true
  Final? false
TRequireExtendsBaseClassAndRequireImplementsIBase => derived-class.inc
  Abstract? true
  Final? false
TRequireImplementsAndImplementsIBase => derived-class.inc
  Abstract? true
  Final? false
TRequireImplementsIBase => derived-class.inc
  Abstract? true
  Final? false
TwoArgAttr => attribute-classes.inc
  Abstract? false
  Final? false
TwoArgFileAttr => attribute-classes.inc
  Abstract? false
  Final? false
TwoArgMethodAttr => attribute-classes.inc
  Abstract? false
  Final? false
TypeAliasAttr => type_aliases.inc
  Abstract? false
  Final? false
UsesTRequireImplementsIBase => derived-class.inc
  Abstract? false
  Final? false

Getting all functions
facts => facts.php
jsonify_arr => facts.php
jsonify_filters => facts.php
print_attr_files => facts.php
print_attr_methods => facts.php
print_attr_type_aliases => facts.php
print_attr_types => facts.php
print_extracted_facts => facts.php
print_file_attrs => facts.php
print_kind => facts.php
print_method_attrs => facts.php
print_num_symbols => facts.php
print_subtypes => facts.php
print_supertypes => facts.php
print_transitive_subtypes => facts.php
print_type_alias_attrs => facts.php
print_type_attrs => facts.php
relative_path => facts.php

Getting all constants
SOME_CONSTANT => constants.inc

Getting all type aliases
SomeTypeAlias => type_aliases.inc
TypeAliasWithAttr => type_aliases.inc

Getting all types or type aliases
AbstractFinalClass => derived-class.inc
AnnoyingNS\TerribleClass => attribute-namespace.inc
AppleThenBanana => attribute-classes.inc
AppleThenCarrot => attribute-classes.inc
BananaThenApple => attribute-classes.inc
BaseClass => base-class.inc
BaseClassForAttributeFiltering => attribute-classes.inc
C1 => types-with-kinds.inc
ClassWithMethodAttrs => attribute-classes.inc
ClassWithTwoAttrs => attribute-classes.inc
DerivedClass => derived-class.inc
DontIndexThisMethodAttr => attribute-classes.inc
E1 => types-with-kinds.inc
FinalClassUsesTRequireClass => derived-class.inc
FinalClassUsesTRequireClassB => derived-class.inc
I1 => types-with-kinds.inc
IBase => base-class.inc
IBaseForAttributeFiltering => attribute-classes.inc
IRequireExtendsBaseClass => derived-class.inc
IimplementsIRequireExtendsBaseClass => derived-class.inc
NoArgAttr => attribute-classes.inc
NoArgFileAttr => attribute-classes.inc
NoArgMethodAttr => attribute-classes.inc
SomeEnum => base-class.inc
SomeTypeAlias => type_aliases.inc
T1 => types-with-kinds.inc
TImplementsIBase => derived-class.inc
TRequireClassFinalClass => derived-class.inc
TRequireClassFinalClassB => derived-class.inc
TRequireExtendsBaseClass => derived-class.inc
TRequireExtendsBaseClassAndRequireImplementsIBase => derived-class.inc
TRequireImplementsAndImplementsIBase => derived-class.inc
TRequireImplementsIBase => derived-class.inc
TwoArgAttr => attribute-classes.inc
TwoArgFileAttr => attribute-classes.inc
TwoArgMethodAttr => attribute-classes.inc
TypeAliasAttr => type_aliases.inc
TypeAliasWithAttr => type_aliases.inc
UsesTRequireImplementsIBase => derived-class.inc
Facts in attribute-classes.inc:
  modules:
  types:
    name: AppleThenBanana
      kind: class
      flags: 0
      baseTypes: ["BaseClassForAttributeFiltering"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: [{"name":"TwoArgAttr","args":["apple","banana"]}]
      methods: []
    name: AppleThenCarrot
      kind: class
      flags: 0
      baseTypes: ["BaseClassForAttributeFiltering"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: [{"name":"TwoArgAttr","args":["apple","carrot"]}]
      methods: []
    name: BananaThenApple
      kind: class
      flags: 0
      baseTypes: ["BaseClassForAttributeFiltering"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: [{"name":"TwoArgAttr","args":["banana","apple"]}]
      methods: []
    name: BaseClassForAttributeFiltering
      kind: class
      flags: 0
      baseTypes: ["IBaseForAttributeFiltering"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: ClassWithMethodAttrs
      kind: class
      flags: 0
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: [{"name":"dontIndexThisFunction","attributes":[{"name":"DontIndexThisMethodAttr","args":[]}]},{"name":"methodWithNoArgAttr","attributes":[{"name":"NoArgMethodAttr","args":[]}]},{"name":"methodWithTwoArgAttr","attributes":[{"name":"TwoArgMethodAttr","args":["42","banana"]}]}]
    name: ClassWithTwoAttrs
      kind: class
      flags: 0
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: [{"name":"NoArgAttr","args":[]},{"name":"TwoArgAttr","args":["abc","def"]}]
      methods: []
    name: DontIndexThisMethodAttr
      kind: class
      flags: 0
      baseTypes: ["HH\\MethodAttribute"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: IBaseForAttributeFiltering
      kind: interface
      flags: 1
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: NoArgAttr
      kind: class
      flags: 0
      baseTypes: ["HH\\ClassAttribute"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: NoArgFileAttr
      kind: class
      flags: 0
      baseTypes: ["HH\\FileAttribute"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: NoArgMethodAttr
      kind: class
      flags: 0
      baseTypes: ["HH\\MethodAttribute"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: TwoArgAttr
      kind: class
      flags: 0
      baseTypes: ["HH\\ClassAttribute"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: TwoArgFileAttr
      kind: class
      flags: 0
      baseTypes: ["HH\\FileAttribute"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: TwoArgMethodAttr
      kind: class
      flags: 0
      baseTypes: ["HH\\MethodAttribute"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
  functions: []
  constants: []
  attributes: [{"name":"NoArgFileAttr","args":[]},{"name":"TwoArgFileAttr","args":["Hello","There"]}]
  sha1sum: fe4faa5bf21efb6db5dc8931206d2d1c9a31f1be
Facts in attribute-namespace.inc:
  modules:
  types:
    name: AnnoyingNS\TerribleClass
      kind: class
      flags: 2
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: [{"name":"NoArgAttr","args":[]}]
      methods: [{"name":"terribleMethod","attributes":[{"name":"TwoArgMethodAttr","args":["AppleThenBanana","42"]}]}]
  functions: []
  constants: []
  attributes: []
  sha1sum: ce28eb765a28e396aea841e63dfe1029c5754526
Facts in base-class.inc:
  modules:
  types:
    name: BaseClass
      kind: class
      flags: 1
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: IBase
      kind: interface
      flags: 1
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: SomeEnum
      kind: enum
      flags: 0
      baseTypes: ["HH\\BuiltinEnum"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
  functions: []
  constants: []
  attributes: []
  sha1sum: 2f253deefa52e71a8a5cae3e954ba26d10172999
Facts in constants.inc:
  modules:
  types:
  functions: []
  constants: ["SOME_CONSTANT"]
  attributes: []
  sha1sum: 25b6ab5854b0b0fc25b639ffb08bdd82323a4779
Facts in derived-class.inc:
  modules:
  types:
    name: AbstractFinalClass
      kind: class
      flags: 3
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: DerivedClass
      kind: class
      flags: 2
      baseTypes: ["BaseClass","IBase","TImplementsIBase"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: FinalClassUsesTRequireClass
      kind: class
      flags: 6
      baseTypes: ["TRequireClassFinalCLass"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: FinalClassUsesTRequireClassB
      kind: class
      flags: 2
      baseTypes: ["SuperClassOfFinalClassB","TRequireClassFinalCLass"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: IRequireExtendsBaseClass
      kind: interface
      flags: 1
      baseTypes: []
      requireClass: []
      requireExtends: ["BaseClass"]
      requireImplements: []
      attributes: []
      methods: []
    name: IimplementsIRequireExtendsBaseClass
      kind: interface
      flags: 1
      baseTypes: ["IRequireExtendsBaseClass"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: TImplementsIBase
      kind: trait
      flags: 1
      baseTypes: ["IBase"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: TRequireClassFinalClass
      kind: trait
      flags: 5
      baseTypes: []
      requireClass: ["FinalClassUsesTRequireClass"]
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: TRequireClassFinalClassB
      kind: trait
      flags: 1
      baseTypes: []
      requireClass: ["FinalClassUsesTRequireClassB"]
      requireExtends: ["SuperClassOfFinalClassB"]
      requireImplements: []
      attributes: []
      methods: []
    name: TRequireExtendsBaseClass
      kind: trait
      flags: 1
      baseTypes: []
      requireClass: []
      requireExtends: ["BaseClass"]
      requireImplements: []
      attributes: []
      methods: []
    name: TRequireExtendsBaseClassAndRequireImplementsIBase
      kind: trait
      flags: 1
      baseTypes: []
      requireClass: []
      requireExtends: ["BaseClass"]
      requireImplements: ["IBase"]
      attributes: []
      methods: []
    name: TRequireImplementsAndImplementsIBase
      kind: trait
      flags: 1
      baseTypes: ["IBase"]
      requireClass: []
      requireExtends: []
      requireImplements: ["IBase"]
      attributes: []
      methods: []
    name: TRequireImplementsIBase
      kind: trait
      flags: 1
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: ["IBase"]
      attributes: []
      methods: []
    name: UsesTRequireImplementsIBase
      kind: class
      flags: 0
      baseTypes: ["IBase","TRequireImplementsIBase"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
  functions: []
  constants: []
  attributes: []
  sha1sum: f3b87ec31e3c7ecaea8cf9fb1dea900cc75a8560
Facts in type_aliases.inc:
  modules:
  types:
    name: SomeTypeAlias
      kind: typeAlias
      flags: 0
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: TypeAliasAttr
      kind: class
      flags: 0
      baseTypes: ["HH\\TypeAliasAttribute"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: TypeAliasWithAttr
      kind: typeAlias
      flags: 0
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: [{"name":"TypeAliasAttr","args":["42","a"]}]
      methods: []
  functions: []
  constants: []
  attributes: []
  sha1sum: 55b4f0b2eb4cd492a0a4292f047ca9d497754451
Facts in types-with-kinds.inc:
  modules:
    name: a
    name: b
  types:
    name: C1
      kind: class
      flags: 0
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: E1
      kind: enum
      flags: 0
      baseTypes: ["HH\\BuiltinEnum"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: I1
      kind: interface
      flags: 1
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: T1
      kind: trait
      flags: 1
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
  functions: []
  constants: []
  attributes: []
  sha1sum: e44a009b2636c3f82c752f578bce58ec3cd9397b
Finished.
bool(true)
string(5) "class"
string(4) "enum"
string(9) "interface"
string(5) "trait"
BaseClass is class
DerivedClass is class
C1 is class
E1 is enum
I1 is interface
T1 is trait
Nonexistent has no kind
Subtypes of BaseClass: ["DerivedClass","IRequireExtendsBaseClass","TRequireExtendsBaseClass","TRequireExtendsBaseClassAndRequireImplementsIBase"]
Supertypes of BaseClass: []
Subtypes of IBase with filters {"kind":["class"]}: ["DerivedClass","UsesTRequireImplementsIBase"]
Transitive subtypes of IBase with filters {"kind":["class"]}: [["DerivedClass","derived-class.inc","class",false],["UsesTRequireImplementsIBase","derived-class.inc","class",false]]
Subtypes of IBase with filters {"kind":["trait"]}: ["TImplementsIBase","TRequireExtendsBaseClassAndRequireImplementsIBase","TRequireImplementsAndImplementsIBase","TRequireImplementsAndImplementsIBase","TRequireImplementsIBase"]
Transitive subtypes of IBase with filters {"kind":["trait"]}: [["TImplementsIBase","derived-class.inc","trait",true],["TRequireExtendsBaseClassAndRequireImplementsIBase","derived-class.inc","trait",true],["TRequireImplementsAndImplementsIBase","derived-class.inc","trait",true],["TRequireImplementsIBase","derived-class.inc","trait",true]]
Subtypes of IBase with filters {"kind":["class","trait"]}: ["DerivedClass","TImplementsIBase","TRequireExtendsBaseClassAndRequireImplementsIBase","TRequireImplementsAndImplementsIBase","TRequireImplementsAndImplementsIBase","TRequireImplementsIBase","UsesTRequireImplementsIBase"]
Transitive subtypes of IBase with filters {"kind":["class","trait"]}: [["DerivedClass","derived-class.inc","class",false],["TImplementsIBase","derived-class.inc","trait",true],["TRequireExtendsBaseClassAndRequireImplementsIBase","derived-class.inc","trait",true],["TRequireImplementsAndImplementsIBase","derived-class.inc","trait",true],["TRequireImplementsIBase","derived-class.inc","trait",true],["UsesTRequireImplementsIBase","derived-class.inc","class",false]]
Supertypes of DerivedClass: ["BaseClass","IBase","TImplementsIBase"]
Supertypes of DerivedClass with filters {"kind":["class"]}: ["BaseClass"]
Supertypes of DerivedClass with filters {"kind":["trait"]}: ["TImplementsIBase"]
Supertypes of DerivedClass with filters {"kind":["interface"]}: ["IBase"]
Supertypes of DerivedClass with filters {"kind":["class","trait"]}: ["BaseClass","TImplementsIBase"]
Supertypes of DerivedClass with filters {"kind":["interface","trait"]}: ["IBase","TImplementsIBase"]

Excluding `require extends` relations
Subtypes of IBase with filters {"derive_kind":["extends"]}: ["DerivedClass","TImplementsIBase","TRequireImplementsAndImplementsIBase","UsesTRequireImplementsIBase"]
Transitive subtypes of IBase with filters {"derive_kind":["extends"]}: [["DerivedClass","derived-class.inc","class",false],["TImplementsIBase","derived-class.inc","trait",true],["TRequireImplementsAndImplementsIBase","derived-class.inc","trait",true],["UsesTRequireImplementsIBase","derived-class.inc","class",false]]
Subtypes of BaseClass with filters {"derive_kind":["extends"]}: ["DerivedClass"]
Transitive subtypes of BaseClass with filters {"derive_kind":["extends"]}: [["DerivedClass","derived-class.inc","class",false]]
Supertypes of TRequireExtendsBaseClassAndRequireImplementsIBase with filters {"derive_kind":["extends"]}: []
Supertypes of TRequireImplementsAndImplementsIBase with filters {"derive_kind":["extends"]}: ["IBase"]
Subtypes of IBase with filters {"kind":["interface"],"derive_kind":["extends"]}: []
Transitive subtypes of IBase with filters {"kind":["interface"],"derive_kind":["extends"]}: []
Supertypes of TRequireClassFinalClass with filters {"derive_kind":["extends"]}: []
Subtypes of TRequireClassFinalClass with filters {"derive_kind":["extends"]}: ["FinalClassUsesTRequireClass","FinalClassUsesTRequireClassB"]
Transitive subtypes of TRequireClassFinalClass with filters {"derive_kind":["extends"]}: [["FinalClassUsesTRequireClass","derived-class.inc","class",false],["FinalClassUsesTRequireClassB","derived-class.inc","class",false]]
Supertypes of FinalClassUsesTRequireClass with filters {"derive_kind":["extends"]}: ["TRequireClassFinalCLass"]
Subtypes of FinalClassUsesTRequireClass with filters {"derive_kind":["extends"]}: []
Transitive subtypes of FinalClassUsesTRequireClass with filters {"derive_kind":["extends"]}: []
Supertypes of TRequireClassFinalClassB with filters {"derive_kind":["extends"]}: []
Subtypes of FinalClassUsesTRequireClassB with filters {"derive_kind":["extends"]}: []

Excluding `extends` relations
Subtypes of IBase with filters {"derive_kind":["require extends"]}: ["TRequireExtendsBaseClassAndRequireImplementsIBase","TRequireImplementsAndImplementsIBase","TRequireImplementsIBase"]
Subtypes of BaseClass with filters {"derive_kind":["require extends"]}: ["IRequireExtendsBaseClass","TRequireExtendsBaseClass","TRequireExtendsBaseClassAndRequireImplementsIBase"]
Transitive subtypes of IBase with filters {"derive_kind":["require extends"]}: [["TRequireExtendsBaseClassAndRequireImplementsIBase","derived-class.inc","trait",true],["TRequireImplementsAndImplementsIBase","derived-class.inc","trait",true],["TRequireImplementsIBase","derived-class.inc","trait",true]]
Supertypes of TRequireExtendsBaseClassAndRequireImplementsIBase with filters {"derive_kind":["require extends"]}: ["BaseClass","IBase"]
Transitive subtypes of BaseClass with filters {"derive_kind":["require extends"]}: [["IRequireExtendsBaseClass","derived-class.inc","interface",true],["TRequireExtendsBaseClass","derived-class.inc","trait",true],["TRequireExtendsBaseClassAndRequireImplementsIBase","derived-class.inc","trait",true]]
Supertypes of TRequireImplementsAndImplementsIBase with filters {"derive_kind":["require extends"]}: ["IBase"]
Supertypes of SomeEnum with filters {"kind":["class"]}: ["HH\\BuiltinEnum"]
Subtypes of IBase with filters {"kind":["interface"],"derive_kind":["require extends"]}: []
Transitive subtypes of IBase with filters {"kind":["interface"],"derive_kind":["require extends"]}: []
Subtypes of IBase with filters {"kind":["trait"],"derive_kind":["require extends"]}: ["TRequireExtendsBaseClassAndRequireImplementsIBase","TRequireImplementsAndImplementsIBase","TRequireImplementsIBase"]
Transitive subtypes of IBase with filters {"kind":["trait"],"derive_kind":["require extends"]}: [["TRequireExtendsBaseClassAndRequireImplementsIBase","derived-class.inc","trait",true],["TRequireImplementsAndImplementsIBase","derived-class.inc","trait",true],["TRequireImplementsIBase","derived-class.inc","trait",true]]
Supertypes of TRequireClassFinalClass with filters {"derive_kind":["require extends"]}: ["FinalClassUsesTRequireClass"]
Subtypes of TRequireClassFinalClass with filters {"derive_kind":["require extends"]}: []
Transitive subtypes of TRequireClassFinalClass with filters {"derive_kind":["require extends"]}: []
Supertypes of FinalClassUsesTRequireClass with filters {"derive_kind":["require extends"]}: []
Subtypes of FinalClassUsesTRequireClass with filters {"derive_kind":["require extends"]}: ["TRequireClassFinalClass"]
Transitive subtypes of FinalClassUsesTRequireClass with filters {"derive_kind":["require extends"]}: [["TRequireClassFinalClass","derived-class.inc","trait",true]]
Supertypes of TRequireClassFinalClassB with filters {"derive_kind":["require extends"]}: ["FinalClassUsesTRequireClassB","SuperClassOfFinalClassB"]
Subtypes of FinalClassUsesTRequireClassB with filters {"derive_kind":["require extends"]}: ["TRequireClassFinalClassB"]

Filtering by attribute
Subtypes of BaseClassForAttributeFiltering with filters {"attributes":[{"name":"TwoArgAttr","parameters":{"0":"banana"}}]}: ["BananaThenApple"]
Transitive subtypes of IBaseForAttributeFiltering with filters {"attributes":[{"name":"TwoArgAttr","parameters":{"0":"banana"}}]}: [["BananaThenApple","attribute-classes.inc","class",false]]
Subtypes of BaseClassForAttributeFiltering with filters {"attributes":[{"name":"TwoArgAttr","parameters":{"0":"apple"}}]}: ["AppleThenBanana","AppleThenCarrot"]
Transitive subtypes of IBaseForAttributeFiltering with filters {"attributes":[{"name":"TwoArgAttr","parameters":{"0":"apple"}}]}: [["AppleThenBanana","attribute-classes.inc","class",false],["AppleThenCarrot","attribute-classes.inc","class",false]]
Subtypes of BaseClassForAttributeFiltering with filters {"attributes":[{"name":"TwoArgAttr","parameters":{"1":"carrot"}}]}: ["AppleThenCarrot"]
Transitive subtypes of IBaseForAttributeFiltering with filters {"attributes":[{"name":"TwoArgAttr","parameters":{"1":"carrot"}}]}: [["AppleThenCarrot","attribute-classes.inc","class",false]]

Getting attributes
Attributes of AppleThenBanana: {"TwoArgAttr":["apple","banana"]}
Attributes of BananaThenApple: {"TwoArgAttr":["banana","apple"]}
Attributes of AppleThenCarrot: {"TwoArgAttr":["apple","carrot"]}
Attributes of ClassWithTwoAttrs: {"NoArgAttr":[],"TwoArgAttr":["abc","def"]}
Attributes of TypeAliasWithAttr: {"TypeAliasAttr":["42","a"]}
Attributes of ClassWithMethodAttrs::methodWithNoArgAttr: {"NoArgMethodAttr":[]}
Attributes of ClassWithMethodAttrs::methodWithTwoArgAttr: {"TwoArgMethodAttr":["42","banana"]}

These should be empty, otherwise we're mixing types and type aliases up again
Attributes of ClassWithTwoAttrs: {}
Attributes of TypeAliasWithAttr: {}

Getting types with attribute
Types decorated with NoArgAttr: ["AnnoyingNS\\TerribleClass","ClassWithTwoAttrs"]
Types decorated with TwoArgAttr: ["AppleThenBanana","AppleThenCarrot","BananaThenApple","ClassWithTwoAttrs"]
Methods decorated with NoArgMethodAttr: ["ClassWithMethodAttrs::methodWithNoArgAttr"]
Methods decorated with TwoArgMethodAttr: ["AnnoyingNS\\TerribleClass::terribleMethod","ClassWithMethodAttrs::methodWithTwoArgAttr"]
Threw RuntimeException:"Queried attribute DontIndexThisMethodAttr not found in IndexedMethodAttributes" trying to get methods with DontIndexThisMethodAttr

Getting type aliases with attribute
Type aliases decorated with TypeAliasAttr: ["TypeAliasWithAttr"]

Getting file attributes
Files decorated with NoArgFileAttr: ["attribute-classes.inc"]
Files decorated with TwoArgFileAttr: ["attribute-classes.inc"]
Attributes of attribute-classes.inc: {"NoArgFileAttr":[],"TwoArgFileAttr":["Hello","There"]}

Checking nonexistent paths
this/path/does/not/exist.php has 0 modules
this/path/does/not/exist.php has 0 types
this/path/does/not/exist.php has 0 functions
this/path/does/not/exist.php has 0 constants
this/path/does/not/exist.php has 0 type aliases
/this/path/does/not/exist.php has 0 modules
/this/path/does/not/exist.php has 0 types
/this/path/does/not/exist.php has 0 functions
/this/path/does/not/exist.php has 0 constants
/this/path/does/not/exist.php has 0 type aliases

Getting all modules
a => types-with-kinds.inc
b => types-with-kinds.inc

Getting all types
AbstractFinalClass => derived-class.inc
  Abstract? true
  Final? true
AnnoyingNS\TerribleClass => attribute-namespace.inc
  Abstract? false
  Final? true
AppleThenBanana => attribute-classes.inc
  Abstract? false
  Final? false
AppleThenCarrot => attribute-classes.inc
  Abstract? false
  Final? false
BananaThenApple => attribute-classes.inc
  Abstract? false
  Final? false
BaseClass => base-class.inc
  Abstract? true
  Final? false
BaseClassForAttributeFiltering => attribute-classes.inc
  Abstract? false
  Final? false
C1 => types-with-kinds.inc
  Abstract? false
  Final? false
ClassWithMethodAttrs => attribute-classes.inc
  Abstract? false
  Final? false
ClassWithTwoAttrs => attribute-classes.inc
  Abstract? false
  Final? false
DerivedClass => derived-class.inc
  Abstract? false
  Final? true
DontIndexThisMethodAttr => attribute-classes.inc
  Abstract? false
  Final? false
E1 => types-with-kinds.inc
  Abstract? false
  Final? false
FinalClassUsesTRequireClass => derived-class.inc
  Abstract? false
  Final? true
FinalClassUsesTRequireClassB => derived-class.inc
  Abstract? false
  Final? true
I1 => types-with-kinds.inc
  Abstract? true
  Final? false
IBase => base-class.inc
  Abstract? true
  Final? false
IBaseForAttributeFiltering => attribute-classes.inc
  Abstract? true
  Final? false
IRequireExtendsBaseClass => derived-class.inc
  Abstract? true
  Final? false
IimplementsIRequireExtendsBaseClass => derived-class.inc
  Abstract? true
  Final? false
NoArgAttr => attribute-classes.inc
  Abstract? false
  Final? false
NoArgFileAttr => attribute-classes.inc
  Abstract? false
  Final? false
NoArgMethodAttr => attribute-classes.inc
  Abstract? false
  Final? false
SomeEnum => base-class.inc
  Abstract? false
  Final? false
T1 => types-with-kinds.inc
  Abstract? true
  Final? false
TImplementsIBase => derived-class.inc
  Abstract? true
  Final? false
TRequireClassFinalClass => derived-class.inc
  Abstract? true
  Final? false
TRequireClassFinalClassB => derived-class.inc
  Abstract? true
  Final? false
TRequireExtendsBaseClass => derived-class.inc
  Abstract? true
  Final? false
TRequireExtendsBaseClassAndRequireImplementsIBase => derived-class.inc
  Abstract? true
  Final? false
TRequireImplementsAndImplementsIBase => derived-class.inc
  Abstract? true
  Final? false
TRequireImplementsIBase => derived-class.inc
  Abstract? true
  Final? false
TwoArgAttr => attribute-classes.inc
  Abstract? false
  Final? false
TwoArgFileAttr => attribute-classes.inc
  Abstract? false
  Final? false
TwoArgMethodAttr => attribute-classes.inc
  Abstract? false
  Final? false
TypeAliasAttr => type_aliases.inc
  Abstract? false
  Final? false
UsesTRequireImplementsIBase => derived-class.inc
  Abstract? false
  Final? false

Getting all functions
facts => facts.php
jsonify_arr => facts.php
jsonify_filters => facts.php
print_attr_files => facts.php
print_attr_methods => facts.php
print_attr_type_aliases => facts.php
print_attr_types => facts.php
print_extracted_facts => facts.php
print_file_attrs => facts.php
print_kind => facts.php
print_method_attrs => facts.php
print_num_symbols => facts.php
print_subtypes => facts.php
print_supertypes => facts.php
print_transitive_subtypes => facts.php
print_type_alias_attrs => facts.php
print_type_attrs => facts.php
relative_path => facts.php

Getting all constants
SOME_CONSTANT => constants.inc

Getting all type aliases
SomeTypeAlias => type_aliases.inc
TypeAliasWithAttr => type_aliases.inc

Getting all types or type aliases
AbstractFinalClass => derived-class.inc
AnnoyingNS\TerribleClass => attribute-namespace.inc
AppleThenBanana => attribute-classes.inc
AppleThenCarrot => attribute-classes.inc
BananaThenApple => attribute-classes.inc
BaseClass => base-class.inc
BaseClassForAttributeFiltering => attribute-classes.inc
C1 => types-with-kinds.inc
ClassWithMethodAttrs => attribute-classes.inc
ClassWithTwoAttrs => attribute-classes.inc
DerivedClass => derived-class.inc
DontIndexThisMethodAttr => attribute-classes.inc
E1 => types-with-kinds.inc
FinalClassUsesTRequireClass => derived-class.inc
FinalClassUsesTRequireClassB => derived-class.inc
I1 => types-with-kinds.inc
IBase => base-class.inc
IBaseForAttributeFiltering => attribute-classes.inc
IRequireExtendsBaseClass => derived-class.inc
IimplementsIRequireExtendsBaseClass => derived-class.inc
NoArgAttr => attribute-classes.inc
NoArgFileAttr => attribute-classes.inc
NoArgMethodAttr => attribute-classes.inc
SomeEnum => base-class.inc
SomeTypeAlias => type_aliases.inc
T1 => types-with-kinds.inc
TImplementsIBase => derived-class.inc
TRequireClassFinalClass => derived-class.inc
TRequireClassFinalClassB => derived-class.inc
TRequireExtendsBaseClass => derived-class.inc
TRequireExtendsBaseClassAndRequireImplementsIBase => derived-class.inc
TRequireImplementsAndImplementsIBase => derived-class.inc
TRequireImplementsIBase => derived-class.inc
TwoArgAttr => attribute-classes.inc
TwoArgFileAttr => attribute-classes.inc
TwoArgMethodAttr => attribute-classes.inc
TypeAliasAttr => type_aliases.inc
TypeAliasWithAttr => type_aliases.inc
UsesTRequireImplementsIBase => derived-class.inc
Facts in attribute-classes.inc:
  modules:
  types:
    name: AppleThenBanana
      kind: class
      flags: 0
      baseTypes: ["BaseClassForAttributeFiltering"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: [{"name":"TwoArgAttr","args":["apple","banana"]}]
      methods: []
    name: AppleThenCarrot
      kind: class
      flags: 0
      baseTypes: ["BaseClassForAttributeFiltering"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: [{"name":"TwoArgAttr","args":["apple","carrot"]}]
      methods: []
    name: BananaThenApple
      kind: class
      flags: 0
      baseTypes: ["BaseClassForAttributeFiltering"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: [{"name":"TwoArgAttr","args":["banana","apple"]}]
      methods: []
    name: BaseClassForAttributeFiltering
      kind: class
      flags: 0
      baseTypes: ["IBaseForAttributeFiltering"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: ClassWithMethodAttrs
      kind: class
      flags: 0
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: [{"name":"dontIndexThisFunction","attributes":[{"name":"DontIndexThisMethodAttr","args":[]}]},{"name":"methodWithNoArgAttr","attributes":[{"name":"NoArgMethodAttr","args":[]}]},{"name":"methodWithTwoArgAttr","attributes":[{"name":"TwoArgMethodAttr","args":["42","banana"]}]}]
    name: ClassWithTwoAttrs
      kind: class
      flags: 0
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: [{"name":"NoArgAttr","args":[]},{"name":"TwoArgAttr","args":["abc","def"]}]
      methods: []
    name: DontIndexThisMethodAttr
      kind: class
      flags: 0
      baseTypes: ["HH\\MethodAttribute"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: IBaseForAttributeFiltering
      kind: interface
      flags: 1
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: NoArgAttr
      kind: class
      flags: 0
      baseTypes: ["HH\\ClassAttribute"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: NoArgFileAttr
      kind: class
      flags: 0
      baseTypes: ["HH\\FileAttribute"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: NoArgMethodAttr
      kind: class
      flags: 0
      baseTypes: ["HH\\MethodAttribute"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: TwoArgAttr
      kind: class
      flags: 0
      baseTypes: ["HH\\ClassAttribute"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: TwoArgFileAttr
      kind: class
      flags: 0
      baseTypes: ["HH\\FileAttribute"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: TwoArgMethodAttr
      kind: class
      flags: 0
      baseTypes: ["HH\\MethodAttribute"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
  functions: []
  constants: []
  attributes: [{"name":"NoArgFileAttr","args":[]},{"name":"TwoArgFileAttr","args":["Hello","There"]}]
  sha1sum: fe4faa5bf21efb6db5dc8931206d2d1c9a31f1be
Facts in attribute-namespace.inc:
  modules:
  types:
    name: AnnoyingNS\TerribleClass
      kind: class
      flags: 2
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: [{"name":"NoArgAttr","args":[]}]
      methods: [{"name":"terribleMethod","attributes":[{"name":"TwoArgMethodAttr","args":["AppleThenBanana","42"]}]}]
  functions: []
  constants: []
  attributes: []
  sha1sum: ce28eb765a28e396aea841e63dfe1029c5754526
Facts in base-class.inc:
  modules:
  types:
    name: BaseClass
      kind: class
      flags: 1
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: IBase
      kind: interface
      flags: 1
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: SomeEnum
      kind: enum
      flags: 0
      baseTypes: ["HH\\BuiltinEnum"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
  functions: []
  constants: []
  attributes: []
  sha1sum: 2f253deefa52e71a8a5cae3e954ba26d10172999
Facts in constants.inc:
  modules:
  types:
  functions: []
  constants: ["SOME_CONSTANT"]
  attributes: []
  sha1sum: 25b6ab5854b0b0fc25b639ffb08bdd82323a4779
Facts in derived-class.inc:
  modules:
  types:
    name: AbstractFinalClass
      kind: class
      flags: 3
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: DerivedClass
      kind: class
      flags: 2
      baseTypes: ["BaseClass","IBase","TImplementsIBase"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: FinalClassUsesTRequireClass
      kind: class
      flags: 6
      baseTypes: ["TRequireClassFinalCLass"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: FinalClassUsesTRequireClassB
      kind: class
      flags: 2
      baseTypes: ["SuperClassOfFinalClassB","TRequireClassFinalCLass"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: IRequireExtendsBaseClass
      kind: interface
      flags: 1
      baseTypes: []
      requireClass: []
      requireExtends: ["BaseClass"]
      requireImplements: []
      attributes: []
      methods: []
    name: IimplementsIRequireExtendsBaseClass
      kind: interface
      flags: 1
      baseTypes: ["IRequireExtendsBaseClass"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: TImplementsIBase
      kind: trait
      flags: 1
      baseTypes: ["IBase"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: TRequireClassFinalClass
      kind: trait
      flags: 5
      baseTypes: []
      requireClass: ["FinalClassUsesTRequireClass"]
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: TRequireClassFinalClassB
      kind: trait
      flags: 1
      baseTypes: []
      requireClass: ["FinalClassUsesTRequireClassB"]
      requireExtends: ["SuperClassOfFinalClassB"]
      requireImplements: []
      attributes: []
      methods: []
    name: TRequireExtendsBaseClass
      kind: trait
      flags: 1
      baseTypes: []
      requireClass: []
      requireExtends: ["BaseClass"]
      requireImplements: []
      attributes: []
      methods: []
    name: TRequireExtendsBaseClassAndRequireImplementsIBase
      kind: trait
      flags: 1
      baseTypes: []
      requireClass: []
      requireExtends: ["BaseClass"]
      requireImplements: ["IBase"]
      attributes: []
      methods: []
    name: TRequireImplementsAndImplementsIBase
      kind: trait
      flags: 1
      baseTypes: ["IBase"]
      requireClass: []
      requireExtends: []
      requireImplements: ["IBase"]
      attributes: []
      methods: []
    name: TRequireImplementsIBase
      kind: trait
      flags: 1
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: ["IBase"]
      attributes: []
      methods: []
    name: UsesTRequireImplementsIBase
      kind: class
      flags: 0
      baseTypes: ["IBase","TRequireImplementsIBase"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
  functions: []
  constants: []
  attributes: []
  sha1sum: f3b87ec31e3c7ecaea8cf9fb1dea900cc75a8560
Facts in type_aliases.inc:
  modules:
  types:
    name: SomeTypeAlias
      kind: typeAlias
      flags: 0
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: TypeAliasAttr
      kind: class
      flags: 0
      baseTypes: ["HH\\TypeAliasAttribute"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: TypeAliasWithAttr
      kind: typeAlias
      flags: 0
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: [{"name":"TypeAliasAttr","args":["42","a"]}]
      methods: []
  functions: []
  constants: []
  attributes: []
  sha1sum: 55b4f0b2eb4cd492a0a4292f047ca9d497754451
Facts in types-with-kinds.inc:
  modules:
    name: a
    name: b
  types:
    name: C1
      kind: class
      flags: 0
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: E1
      kind: enum
      flags: 0
      baseTypes: ["HH\\BuiltinEnum"]
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: I1
      kind: interface
      flags: 1
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
    name: T1
      kind: trait
      flags: 1
      baseTypes: []
      requireClass: []
      requireExtends: []
      requireImplements: []
      attributes: []
      methods: []
  functions: []
  constants: []
  attributes: []
  sha1sum: e44a009b2636c3f82c752f578bce58ec3cd9397b
Finished.
