/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package test.fixtures.adapter;

import com.facebook.thrift.type.TypeList;
import java.util.ArrayList;
import java.util.List;

public class __fbthrift_TypeList_39b37d0c implements TypeList {

  private static List<TypeMapping> list = new ArrayList<>();

  static {
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/MyAnnotation", "test.fixtures.adapter.MyAnnotation"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/compiler/test/fixtures/adapter/src/module/Foo", "test.fixtures.adapter.Foo"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/Baz", "test.fixtures.adapter.Baz"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/Bar", "test.fixtures.adapter.Bar"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/DirectlyAdapted", "test.fixtures.adapter.DirectlyAdapted"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/IndependentDirectlyAdapted", "test.fixtures.adapter.IndependentDirectlyAdapted"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/StructWithFieldAdapter", "test.fixtures.adapter.StructWithFieldAdapter"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/TerseAdaptedFields", "test.fixtures.adapter.TerseAdaptedFields"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/B", "test.fixtures.adapter.B"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/A", "test.fixtures.adapter.A"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/Config", "test.fixtures.adapter.Config"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/MyStruct", "test.fixtures.adapter.MyStruct"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/AdaptTestStruct", "test.fixtures.adapter.AdaptTestStruct"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/AdaptTemplatedTestStruct", "test.fixtures.adapter.AdaptTemplatedTestStruct"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/AdaptTemplatedNestedTestStruct", "test.fixtures.adapter.AdaptTemplatedNestedTestStruct"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/AdaptTestUnion", "test.fixtures.adapter.AdaptTestUnion"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/AdaptedStruct", "test.fixtures.adapter.AdaptedStruct"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/DirectlyAdaptedStruct", "test.fixtures.adapter.DirectlyAdaptedStruct"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/StructFieldAdaptedStruct", "test.fixtures.adapter.StructFieldAdaptedStruct"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/CircularAdaptee", "test.fixtures.adapter.CircularAdaptee"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/CircularStruct", "test.fixtures.adapter.CircularStruct"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/RenamedStruct", "test.fixtures.adapter.RenamedStruct"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/SameNamespaceStruct", "test.fixtures.adapter.SameNamespaceStruct"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/HeapAllocated", "test.fixtures.adapter.HeapAllocated"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/MoveOnly", "test.fixtures.adapter.MoveOnly"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/AlsoMoveOnly", "test.fixtures.adapter.AlsoMoveOnly"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/ApplyAdapter", "test.fixtures.adapter.ApplyAdapter"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/TransitiveAdapted", "test.fixtures.adapter.TransitiveAdapted"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/CountingStruct", "test.fixtures.adapter.CountingStruct"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/Person", "test.fixtures.adapter.Person"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/Person2", "test.fixtures.adapter.Person2"));
    list.add(new TypeList.TypeMapping("facebook.com/thrift/test/ThriftAdaptedEnum", "test.fixtures.adapter.ThriftAdaptedEnum"));
  }

  @java.lang.Override
  public List<TypeList.TypeMapping> getTypes() {
    return list;
  }
}
