/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#pragma once

#include <thrift/lib/cpp2/gen/module_types_h.h>


#include <mcrouter/lib/carbon/Keys.h>

// BEGIN declare_enums

// END declare_enums
// BEGIN struct_indirection
namespace carbon { namespace thrift {
struct apache_thrift_indirection_module_IOBufKey {
  template <typename T> static auto&& get(T&& x) {
    return std::forward<T>(x).rawUnsafe();
  }

  template <typename T> static auto&& get(T const&& x) {
    return std::forward<T>(x).rawUnsafe();
  }
};

struct apache_thrift_indirection_module_StringKey {
  template <typename T> static auto&& get(T&& x) {
    return std::forward<T>(x).rawUnsafe();
  }

  template <typename T> static auto&& get(T const&& x) {
    return std::forward<T>(x).rawUnsafe();
  }
};


}} // carbon::thrift
// END struct_indirection
// BEGIN forward_declare

// END forward_declare
// BEGIN typedefs
namespace carbon { namespace thrift {
typedef carbon::Keys<folly::IOBuf> IOBufKey;
typedef carbon::Keys<std::string> StringKey;

}} // carbon::thrift
// END typedefs
// BEGIN hash_and_equal_to
// END hash_and_equal_to
