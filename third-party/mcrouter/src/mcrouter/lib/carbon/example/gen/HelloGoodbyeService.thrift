/*
 *  Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 *  This source code is licensed under the MIT license found in the LICENSE
 *  file in the root directory of this source tree.
 *
 */

/*
 *  THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT; ALL CHANGES WILL BE LOST IN
 *  VAIN.
 *
 *  @generated
 */
include "mcrouter/lib/network/gen/Common.thrift"
include "mcrouter/lib/carbon/example/gen/HelloGoodbye.thrift"

include "common/fb303/if/fb303.thrift"

cpp_include "mcrouter/lib/carbon/example/gen/HelloGoodbyeMessages.h"

namespace cpp2 hellogoodbye.thrift
namespace py3 hellogoodbye.thrift

service HelloGoodbye extends fb303.FacebookService {
  HelloGoodbye.GoodbyeReply (cpp.type = "hellogoodbye::GoodbyeReply") goodbye(1: HelloGoodbye.GoodbyeRequest (cpp.type = "hellogoodbye::GoodbyeRequest") request) (thread = "eb")
  HelloGoodbye.HelloReply (cpp.type = "hellogoodbye::HelloReply") hello(1: HelloGoodbye.HelloRequest (cpp.type = "hellogoodbye::HelloRequest") request) throws (1: Common.CarbonResultBusy carbonResultBusy, 2: Common.CarbonResultRemoteError carbonResultRemoteError) (thread = "eb")
  Common.McVersionReply (cpp.type = "facebook::memcache::McVersionReply") mcVersion(1: Common.McVersionRequest (cpp.type = "facebook::memcache::McVersionRequest") request) (thread = "eb")
}
