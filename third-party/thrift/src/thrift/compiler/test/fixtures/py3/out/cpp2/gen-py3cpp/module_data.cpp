/**
 * Autogenerated by Thrift for thrift/compiler/test/fixtures/py3/src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */

#include "thrift/compiler/test/fixtures/py3/gen-py3cpp/module_data.h"
#include "thrift/compiler/test/fixtures/py3/gen-py3cpp/module_constants.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

namespace apache::thrift {

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::py3::simple::SimpleException>::name = "SimpleException";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::py3::simple::SimpleException>::fields_names = { {
  "err_code"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::py3::simple::SimpleException>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::py3::simple::SimpleException>::fields_types = { {
  TType::T_I16,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::py3::simple::SimpleException>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::py3::simple::OptionalRefStruct>::name = "OptionalRefStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::py3::simple::OptionalRefStruct>::fields_names = { {
  "optional_blob"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::py3::simple::OptionalRefStruct>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::py3::simple::OptionalRefStruct>::fields_types = { {
  TType::T_STRING,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::py3::simple::OptionalRefStruct>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::py3::simple::SimpleStruct>::name = "SimpleStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 12> TStructDataStorage<::py3::simple::SimpleStruct>::fields_names = { {
  "is_on"sv,
  "tiny_int"sv,
  "small_int"sv,
  "nice_sized_int"sv,
  "big_int"sv,
  "real"sv,
  "smaller_real"sv,
  "something"sv,
  "hidden_field"sv,
  "opt_default_int"sv,
  "opt_default_str"sv,
  "opt_default_enum"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 12> TStructDataStorage<::py3::simple::SimpleStruct>::fields_ids = { {
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  9,
  8,
  10,
  11,
  12,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 12> TStructDataStorage<::py3::simple::SimpleStruct>::fields_types = { {
  TType::T_BOOL,
  TType::T_BYTE,
  TType::T_I16,
  TType::T_I32,
  TType::T_I64,
  TType::T_DOUBLE,
  TType::T_FLOAT,
  TType::T_MAP,
  TType::T_I16,
  TType::T_I32,
  TType::T_STRING,
  TType::T_I32,
}};
THRIFT_DATA_MEMBER const std::array<int, 12> TStructDataStorage<::py3::simple::SimpleStruct>::isset_indexes = { {
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::py3::simple::HiddenTypeFieldsStruct>::name = "HiddenTypeFieldsStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 3> TStructDataStorage<::py3::simple::HiddenTypeFieldsStruct>::fields_names = { {
  "field1"sv,
  "field2"sv,
  "field3"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 3> TStructDataStorage<::py3::simple::HiddenTypeFieldsStruct>::fields_ids = { {
  1,
  2,
  3,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 3> TStructDataStorage<::py3::simple::HiddenTypeFieldsStruct>::fields_types = { {
  TType::T_STRUCT,
  TType::T_LIST,
  TType::T_MAP,
}};
THRIFT_DATA_MEMBER const std::array<int, 3> TStructDataStorage<::py3::simple::HiddenTypeFieldsStruct>::isset_indexes = { {
  0,
  1,
  2,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::py3::simple::detail::AdaptedUnion>::name = "AdaptedUnion";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::py3::simple::detail::AdaptedUnion>::fields_names = { {
  "best"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::py3::simple::detail::AdaptedUnion>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::py3::simple::detail::AdaptedUnion>::fields_types = { {
  TType::T_I16,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::py3::simple::detail::AdaptedUnion>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::py3::simple::HiddenException>::name = "HiddenException";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::py3::simple::HiddenException>::fields_names = { {
  "test"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::py3::simple::HiddenException>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::py3::simple::HiddenException>::fields_types = { {
  TType::T_I16,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::py3::simple::HiddenException>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::py3::simple::ComplexStruct>::name = "ComplexStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 9> TStructDataStorage<::py3::simple::ComplexStruct>::fields_names = { {
  "structOne"sv,
  "structTwo"sv,
  "an_integer"sv,
  "name"sv,
  "an_enum"sv,
  "some_bytes"sv,
  "from"sv,
  "cdef"sv,
  "bytes_with_cpp_type"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 9> TStructDataStorage<::py3::simple::ComplexStruct>::fields_ids = { {
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 9> TStructDataStorage<::py3::simple::ComplexStruct>::fields_types = { {
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_I32,
  TType::T_STRING,
  TType::T_I32,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_STRING,
}};
THRIFT_DATA_MEMBER const std::array<int, 9> TStructDataStorage<::py3::simple::ComplexStruct>::isset_indexes = { {
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::py3::simple::BinaryUnion>::name = "BinaryUnion";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::py3::simple::BinaryUnion>::fields_names = { {
  "iobuf_val"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::py3::simple::BinaryUnion>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::py3::simple::BinaryUnion>::fields_types = { {
  TType::T_STRING,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::py3::simple::BinaryUnion>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::py3::simple::BinaryUnionStruct>::name = "BinaryUnionStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::py3::simple::BinaryUnionStruct>::fields_names = { {
  "u"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::py3::simple::BinaryUnionStruct>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::py3::simple::BinaryUnionStruct>::fields_types = { {
  TType::T_STRUCT,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::py3::simple::BinaryUnionStruct>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::py3::simple::CustomFields>::name = "CustomFields";
THRIFT_DATA_MEMBER const std::array<std::string_view, 9> TStructDataStorage<::py3::simple::CustomFields>::fields_names = { {
  "bool_field"sv,
  "integer_field"sv,
  "double_field"sv,
  "string_field"sv,
  "binary_field"sv,
  "list_field"sv,
  "set_field"sv,
  "map_field"sv,
  "struct_field"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 9> TStructDataStorage<::py3::simple::CustomFields>::fields_ids = { {
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 9> TStructDataStorage<::py3::simple::CustomFields>::fields_types = { {
  TType::T_BOOL,
  TType::T_I64,
  TType::T_DOUBLE,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_LIST,
  TType::T_SET,
  TType::T_MAP,
  TType::T_STRUCT,
}};
THRIFT_DATA_MEMBER const std::array<int, 9> TStructDataStorage<::py3::simple::CustomFields>::isset_indexes = { {
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::py3::simple::CustomTypedefFields>::name = "CustomTypedefFields";
THRIFT_DATA_MEMBER const std::array<std::string_view, 9> TStructDataStorage<::py3::simple::CustomTypedefFields>::fields_names = { {
  "bool_field"sv,
  "integer_field"sv,
  "double_field"sv,
  "string_field"sv,
  "binary_field"sv,
  "list_field"sv,
  "set_field"sv,
  "map_field"sv,
  "struct_field"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 9> TStructDataStorage<::py3::simple::CustomTypedefFields>::fields_ids = { {
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 9> TStructDataStorage<::py3::simple::CustomTypedefFields>::fields_types = { {
  TType::T_BOOL,
  TType::T_I64,
  TType::T_DOUBLE,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_LIST,
  TType::T_SET,
  TType::T_MAP,
  TType::T_STRUCT,
}};
THRIFT_DATA_MEMBER const std::array<int, 9> TStructDataStorage<::py3::simple::CustomTypedefFields>::isset_indexes = { {
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::py3::simple::AdaptedTypedefFields>::name = "AdaptedTypedefFields";
THRIFT_DATA_MEMBER const std::array<std::string_view, 9> TStructDataStorage<::py3::simple::AdaptedTypedefFields>::fields_names = { {
  "bool_field"sv,
  "integer_field"sv,
  "double_field"sv,
  "string_field"sv,
  "binary_field"sv,
  "list_field"sv,
  "set_field"sv,
  "map_field"sv,
  "struct_field"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 9> TStructDataStorage<::py3::simple::AdaptedTypedefFields>::fields_ids = { {
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 9> TStructDataStorage<::py3::simple::AdaptedTypedefFields>::fields_types = { {
  TType::T_BOOL,
  TType::T_I64,
  TType::T_DOUBLE,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_LIST,
  TType::T_SET,
  TType::T_MAP,
  TType::T_STRUCT,
}};
THRIFT_DATA_MEMBER const std::array<int, 9> TStructDataStorage<::py3::simple::AdaptedTypedefFields>::isset_indexes = { {
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
}};

namespace detail {
















} // namespace detail
} // namespace apache::thrift
