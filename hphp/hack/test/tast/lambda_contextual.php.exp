[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([3:10-19], "\\takes_fun");
      fd_fun =
      { f_span = [3:1-54]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_tparams = []; f_ret = ((void), (Some ([3:47-51], (Hprim Tvoid))));
        f_params =
        [{ param_annotation = ((function(int): ~num));
           param_type_hint =
           (((function(int): ~num)),
            (Some ([3:20-41],
                   (Happly (([3:20-41], "\\HH\\supportdyn"),
                      [([3:20-41],
                        (Hfun
                           { hf_is_readonly = None; hf_tparams = []; 
                             hf_param_tys = [([3:31-34], (Hprim Tint))];
                             hf_param_info = [(Some { hfparam_kind = Pnormal; hfparam_readonlyness = None; hfparam_optional = None; hfparam_splat = None; hfparam_named = None })];
                             hf_variadic_ty = None; hf_ctxs = None; hf_return_ty = ([3:37-40], (Hlike ([3:37-40], (Hprim Tnum)))); 
                             hf_is_readonly_return = None }))
                        ]
                      )))));
           param_pos = [3:42-44]; param_name = "$f"; param_info = Param_required; 
           param_readonly = None; param_splat = None; param_callconv = Pnormal; 
           param_named = None; param_user_attributes = []; param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([Pos.none], Noop)] }; 
        f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([3:10-19], "__SupportDynamicType"); ua_params = [] }]; 
        f_external = false; f_doc_comment = None };
      fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
      fd_package = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([5:10-14], "\\test");
       fd_fun =
       { f_span = [5:1-7:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_tparams = []; f_ret = ((void), (Some ([5:18-22], (Hprim Tvoid)))); 
         f_params = []; f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([6:3-24],
             (Expr
                ((void), [6:3-23],
                 (Call
                    { func = (((function((function(int): ~num) $f): void)), [6:3-12], (Id ([6:3-12], "\\takes_fun"))); 
                      targs = [];
                      args =
                      [(Anormal
                          (((function(int $x): ~num)), [6:13-22],
                           (Lfun (
                              { f_span = [6:13-22]; f_readonly_this = None; 
                                f_annotation = (); f_readonly_ret = None; 
                                f_tparams = []; f_ret = ((~num), None);
                                f_params =
                                [{ param_annotation = (int); param_type_hint = ((int), None); 
                                   param_pos = [6:13-15]; param_name = "$x"; 
                                   param_info = Param_required; param_readonly = None; 
                                   param_splat = None; param_callconv = Pnormal; 
                                   param_named = None; param_user_attributes = []; 
                                   param_visibility = None }
                                  ];
                                f_ctxs = None; f_unsafe_ctxs = None; 
                                f_body = { fb_ast = [([6:20-22], (Return (Some ((int), [6:20-22], (Lvar ([6:20-22], $x))))))] }; 
                                f_fun_kind = FSync; f_user_attributes = []; 
                                f_external = false; f_doc_comment = None },
                              []))))
                        ];
                      unpacked_arg = None }))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([5:10-14], "__SupportDynamicType"); ua_params = [] }]; 
         f_external = false; f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
       fd_package = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([3:10-19], "\\takes_fun");
       fd_fun =
       { f_span = [3:1-54]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_tparams = []; f_ret = ((dynamic), (Some ([3:47-51], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = (dynamic);
            param_type_hint =
            ((dynamic),
             (Some ([3:20-41],
                    (Happly (([3:20-41], "\\HH\\supportdyn"),
                       [([3:20-41],
                         (Hfun
                            { hf_is_readonly = None; hf_tparams = []; 
                              hf_param_tys = [([3:31-34], (Hprim Tint))];
                              hf_param_info = [(Some { hfparam_kind = Pnormal; hfparam_readonlyness = None; hfparam_optional = None; hfparam_splat = None; hfparam_named = None })];
                              hf_variadic_ty = None; hf_ctxs = None; 
                              hf_return_ty = ([3:37-40], (Hlike ([3:37-40], (Hprim Tnum)))); 
                              hf_is_readonly_return = None }))
                         ]
                       )))));
            param_pos = [3:42-44]; param_name = "$f"; param_info = Param_required; 
            param_readonly = None; param_splat = None; param_callconv = Pnormal; 
            param_named = None; param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([Pos.none], Noop)] }; 
         f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([3:10-19], "__SupportDynamicType"); ua_params = [] }]; 
         f_external = false; f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
       fd_package = None })