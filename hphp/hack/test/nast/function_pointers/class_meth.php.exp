[(Class
    { c_span = [5:1-7:2]; c_annotation = (); c_mode = Mstrict;
      c_final = true; c_is_xhp = false; c_has_xhp_keyword = false;
      c_kind = Cnormal; c_name = ([5:13-17], "\\Foo\\Bar\\Fizz");
      c_tparams = []; c_extends = []; c_uses = []; c_use_as_alias = [];
      c_insteadof_alias = []; c_xhp_attr_uses = []; c_xhp_category = None;
      c_reqs = []; c_implements = []; c_where_constraints = [];
      c_consts = []; c_typeconsts = []; c_vars = [];
      c_methods =
      [{ m_span = [6:3-41]; m_annotation = (); m_final = false;
         m_abstract = false; m_static = true; m_visibility = Public;
         m_name = ([6:26-30], "buzz"); m_tparams = [];
         m_where_constraints = []; m_variadic = FVnonVariadic; m_params = [];
         m_cap = ((), None); m_unsafe_cap = ((), None);
         m_body = { fb_ast = [([Pos.none], Noop)]; fb_annotation = Named };
         m_fun_kind = FSync; m_user_attributes = [];
         m_ret = ((), (Some ([6:34-38], (Hprim Tvoid)))); m_external = false;
         m_doc_comment = None }
        ];
      c_attributes = []; c_xhp_children = []; c_xhp_attrs = [];
      c_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
        ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
        ns_const_uses = <opaque>; ns_name = (Some "Foo\\Bar");
        ns_auto_ns_map = []; ns_is_codegen = false;
        ns_disable_xhp_element_mangling = false };
      c_user_attributes = []; c_file_attributes = []; c_enum = None;
      c_pu_enums = []; c_doc_comment = None; c_emit_id = None });
  (Fun
     { f_span = [9:1-15:2]; f_annotation = (); f_mode = Mstrict;
       f_ret = ((), (Some ([9:17-21], (Hprim Tvoid))));
       f_name = ([9:10-13], "\\Foo\\Bar\\baz"); f_tparams = [];
       f_where_constraints = []; f_variadic = FVnonVariadic; f_params = [];
       f_cap = ((), None); f_unsafe_cap = ((), None);
       f_body =
       { fb_ast =
         [([11:3-21],
           (Expr
              ([11:3-20],
               (Binop ((Eq None), ([11:3-5], (Lvar ([11:3-5], $x))),
                  ([11:8-20],
                   (FunctionPointer (
                      (FP_class_const (
                         ([11:8-12], (CI ([11:8-12], "\\Foo\\Bar\\Fizz"))),
                         ([11:14-18], "buzz"))),
                      [])))
                  )))));
           ([14:3-28],
            (Expr
               ([14:3-27],
                (Binop ((Eq None), ([14:3-5], (Lvar ([14:3-5], $x))),
                   ([14:8-27],
                    (FunctionPointer (
                       (FP_class_const (
                          ([14:8-14], (CI ([14:8-14], "\\HH\\Vector"))),
                          ([14:16-25], "fromItems"))),
                       [])))
                   )))))
           ];
         fb_annotation = Named };
       f_fun_kind = FSync; f_user_attributes = []; f_file_attributes = [];
       f_external = false;
       f_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
         ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
         ns_const_uses = <opaque>; ns_name = (Some "Foo\\Bar");
         ns_auto_ns_map = []; ns_is_codegen = false;
         ns_disable_xhp_element_mangling = false };
       f_doc_comment = None; f_static = false })
  ]
