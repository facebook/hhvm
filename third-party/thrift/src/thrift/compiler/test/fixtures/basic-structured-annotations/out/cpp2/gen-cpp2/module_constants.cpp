/**
 * Autogenerated by Thrift for thrift/compiler/test/fixtures/basic-structured-annotations/src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */

#include "thrift/compiler/test/fixtures/basic-structured-annotations/gen-cpp2/module_constants.h"

#include <thrift/lib/cpp2/gen/module_constants_cpp.h>

#include "thrift/compiler/test/fixtures/basic-structured-annotations/gen-cpp2/included_constants.h"
#include "thrift/compiler/test/fixtures/basic-structured-annotations/gen-cpp2/namespaced_constants.h"

namespace test::fixtures::basic-structured-annotations {
namespace module_constants {

::std::map<::std::string, ::std::string> const& MyConst() {
  static folly::Indestructible<::std::map<::std::string, ::std::string>> const instance{ std::initializer_list<::std::map<::std::string, ::std::string>::value_type>{ { apache::thrift::StringTraits<::std::string>::fromStringLiteral("ENUMERATOR"), apache::thrift::StringTraits<::std::string>::fromStringLiteral("enum") },
  { apache::thrift::StringTraits<::std::string>::fromStringLiteral("CONST"), apache::thrift::StringTraits<::std::string>::fromStringLiteral("const") } } };
  return *instance;
}


::std::string_view _fbthrift_schema_243c2ae30ab47c20() {
  return "";
}
::folly::Range<const ::std::string_view*> _fbthrift_schema_243c2ae30ab47c20_includes() {
  return {};
}
::folly::Range<const ::std::string_view*> _fbthrift_schema_243c2ae30ab47c20_uris() {
  return {};
}

} // namespace module_constants
} // namespace test::fixtures::basic-structured-annotations
