#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

import folly.iobuf as _fbthrift_iobuf
import typing as _typing
from thrift.py3.server import RequestContext, ServiceInterface
from abc import abstractmethod, ABCMeta

import module.types as _module_types
import include.types as _include_types

_SomeServiceInterfaceT = _typing.TypeVar('_SomeServiceInterfaceT', bound='SomeServiceInterface')


class SomeServiceInterface(
    ServiceInterface,
    metaclass=ABCMeta,
):


    @abstractmethod
    async def bounce_map(
        self,
        m: _typing.Mapping[int, str]
    ) -> _typing.Mapping[int, str]: ...


    @abstractmethod
    async def binary_keyed_map(
        self,
        r: _typing.Sequence[int]
    ) -> _typing.Mapping[bytes, int]: ...
    pass


