Errors:
  [17:3-42] Invalid assignment
  [17:3-19] Too few arguments (required 3 but got 2)
  [7:37-47] Definition is here
[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([3:10-26], "\\__return_3_tuple");
      fd_fun =
      { f_span = [3:1-5:2]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_ret = (((int, int, int)), (Some ([3:37-52], (Htuple [([3:38-41], (Hprim Tint)); ([3:43-46], (Hprim Tint)); ([3:48-51], (Hprim Tint))]))));
        f_params =
        [{ param_annotation = (bool); param_type_hint = ((bool), (Some ([3:27-31], (Hprim Tbool)))); 
           param_is_variadic = false; param_pos = [3:32-34]; param_name = "$x"; 
           param_expr = None; param_readonly = None; param_callconv = Pnormal; 
           param_user_attributes = []; param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None;
        f_body = { fb_ast = [([4:3-25], (Return (Some (((int, int, int)), [4:10-24], (Tuple [((int), [4:16-17], (Int "1")); ((int), [4:19-20], (Int "1")); ((int), [4:22-23], (Int "1"))])))))] };
        f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
        f_doc_comment = None };
      fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([7:10-26], "\\__return_2_tuple");
       fd_fun =
       { f_span = [7:1-9:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = (((int, int)), (Some ([7:37-47], (Htuple [([7:38-41], (Hprim Tint)); ([7:43-46], (Hprim Tint))]))));
         f_params =
         [{ param_annotation = (bool); param_type_hint = ((bool), (Some ([7:27-31], (Hprim Tbool)))); 
            param_is_variadic = false; param_pos = [7:32-34]; param_name = "$x"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([8:3-22], (Return (Some (((int, int)), [8:10-21], (Tuple [((int), [8:16-17], (Int "1")); ((int), [8:19-20], (Int "1"))])))))] };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([11:10-24], "\\assign_list_ok");
       fd_fun =
       { f_span = [11:1-13:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([11:35-39], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = (bool); param_type_hint = ((bool), (Some ([11:25-29], (Hprim Tbool)))); 
            param_is_variadic = false; param_pos = [11:30-32]; param_name = "$x"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([12:3-43],
             (Expr
                (((int, int, int)), [12:3-42],
                 (Binop
                    { bop = (Eq None);
                      lhs =
                      (((int, int, int)), [12:3-19], (List [((int), [12:8-10], (Lvar ([12:8-10], $u))); ((int), [12:12-14], (Lvar ([12:12-14], $v))); ((int), [12:16-18], (Lvar ([12:16-18], $w)))]));
                      rhs =
                      (((int, int, int)), [12:22-42],
                       (Call ((((function(bool $x): (int, int, int))), [12:22-38], (Id ([12:22-38], "\\__return_3_tuple"))), [], [(Pnormal, ((bool), [12:39-41], (Lvar ([12:39-41], $x))))], None)))
                      }))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([15:10-25], "\\assign_list_bad");
       fd_fun =
       { f_span = [15:1-18:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([15:36-40], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = (bool); param_type_hint = ((bool), (Some ([15:26-30], (Hprim Tbool)))); 
            param_is_variadic = false; param_pos = [15:31-33]; param_name = "$x"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([17:3-43],
             (Expr
                (((int, int)), [17:3-42],
                 (Binop
                    { bop = (Eq None);
                      lhs =
                      (((int, int)), [17:3-19],
                       (List [((nothing), [17:8-10], (Lvar ([17:8-10], $u))); ((nothing), [17:12-14], (Lvar ([17:12-14], $v))); ((nothing), [17:16-18], (Lvar ([17:16-18], $w)))]));
                      rhs =
                      (((int, int)), [17:22-42],
                       (Hole (
                          (((int, int)), [17:22-42],
                           (Call ((((function(bool $x): (int, int))), [17:22-38], (Id ([17:22-38], "\\__return_2_tuple"))), [], [(Pnormal, ((bool), [17:39-41], (Lvar ([17:39-41], $x))))], None))),
                          ((int, int)), ({suggest:nothing}), Typing)))
                      }))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] })