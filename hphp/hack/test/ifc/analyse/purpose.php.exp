Analyzing __construct:
* pc: pc
* This: \D<\D, lump'1>
* Return: <ret>
* Exception: \Exception<\Exception, lump>
* Params:
  lvars: { $di -> <$di> }
* Final environment:
  Deps: {}
  Locals:
    lvars: { $di -> <$di> }
Constraints:
  [\D < lump'1, pc < lump'1, $di < lump'1]

Analyzing __construct:
* pc: pc
* This: \C<\C, lump'1>
* Return: <ret>
* Exception: \Exception<\Exception, lump>
* Params:
  lvars: { $ci -> <$ci>; $d -> \D<\D, lump'2> }
* Final environment:
  Deps: {}
  Locals:
    lvars: { $ci -> <$ci>; $d -> \D<\D, lump'2> }
Constraints:
  [\C < SECRET, pc < SECRET, $ci < SECRET, \C < SECRET, pc < SECRET,
   lump'2 = SECRET, \D < SECRET]

Analyzing getShallow1:
* pc: pc
* This: \C<\C, lump'1>
* Return: <ret>
* Exception: \Exception<\Exception, lump>
* Params:
  lvars: {}
* Final environment:
  Deps: {}
  Locals:
    lvars: {}
Constraints:
  [SECRET < .ci, \C < .ci, .ci < ret]

Analyzing getShallow2:
* pc: pc
* This: \C<\C, lump'1>
* Return: \D<\D, lump'2>
* Exception: \Exception<\Exception, lump>
* Params:
  lvars: {}
* Final environment:
  Deps: {}
  Locals:
    lvars: {}
Constraints:
  [SECRET < .d, \C < .d, SECRET = lump'2, .d < \D]

Analyzing getDeep:
* pc: pc
* This: \C<\C, lump'1>
* Return: <ret>
* Exception: \Exception<\Exception, lump>
* Params:
  lvars: {}
* Final environment:
  Deps: {}
  Locals:
    lvars: {}
Constraints:
  [SECRET < .d, \C < .d, SECRET < .di, .d < .di, .di < ret]

Analyzing writeDeep:
* pc: pc
* This: \C<\C, lump'1>
* Return: <ret>
* Exception: \Exception<\Exception, lump>
* Params:
  lvars: {}
* Final environment:
  Deps: {}
  Locals:
    lvars: {}
Constraints:
  [SECRET < .d, \C < .d, .d < SECRET, pc < SECRET, lit < SECRET]

