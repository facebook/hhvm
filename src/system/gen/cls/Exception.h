/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010 Facebook, Inc. (http://www.facebook.com)          |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/
// @generated by HipHop Compiler

#ifndef __GENERATED_cls_Exception_h22b3de5c__
#define __GENERATED_cls_Exception_h22b3de5c__

#include <cls/Exception.fw.h>

namespace HPHP {
///////////////////////////////////////////////////////////////////////////////

/* SRC: classes/exception.php line 10 */
FORWARD_DECLARE_CLASS(Exception);
class c_Exception : public ExtObjectData {
  public:

  // Properties
  Variant m_message;
  Variant m_code;
  Variant m_previous;
  Variant m_file;
  Variant m_line;
  Variant m_trace;

  // Class Map
  virtual bool o_instanceof(CStrRef s) const;
  DECLARE_CLASS_COMMON(Exception, Exception)
  DECLARE_INVOKE_EX(Exception, Exception, ObjectData)

  // DECLARE_STATIC_PROP_OPS
  public:
  static Variant os_getInit(CStrRef s);
  #define OMIT_JUMP_TABLE_CLASS_STATIC_GET_Exception 1
  #define OMIT_JUMP_TABLE_CLASS_STATIC_LVAL_Exception 1
  #define OMIT_JUMP_TABLE_CLASS_CONSTANT_Exception 1

  // DECLARE_INSTANCE_PROP_OPS
  public:
  virtual void o_getArray(Array &props, bool pubOnly = false) const;
  #define OMIT_JUMP_TABLE_CLASS_SETARRAY_Exception 1
  #define OMIT_JUMP_TABLE_CLASS_realProp_Exception 1
  #define OMIT_JUMP_TABLE_CLASS_realProp_PRIVATE_Exception 1

  // DECLARE_INSTANCE_PUBLIC_PROP_OPS
  public:
  virtual Variant *o_realPropPublic(CStrRef s, int flags) const;

  // DECLARE_COMMON_INVOKE
  static bool os_get_call_info(MethodCallPackage &mcp, int64 hash = -1);
  #define OMIT_JUMP_TABLE_CLASS_STATIC_INVOKE_Exception 1
  virtual bool o_get_call_info(MethodCallPackage &mcp, int64 hash = -1);

  public:
  void init();
  public: void t___init__();
  public: void t___construct(Variant v_message = NAMSTR(s_sys_ss00000000, ""), Variant v_code = 0LL, Variant v_previous = null);
  public: c_Exception *create(Variant v_message = NAMSTR(s_sys_ss00000000, ""), Variant v_code = 0LL, Variant v_previous = null);
  public: void dynConstruct(CArrRef params);
  public: void getConstructor(MethodCallPackage &mcp);
  public: void dynConstructFromEval(Eval::VariableEnvironment &env, const Eval::FunctionCallExpression *call);
  public: Variant t_getmessage();
  public: Variant t_getprevious();
  public: Variant t_getcode();
  public: Variant t_getfile();
  public: Variant t_getline();
  public: Variant t_gettrace();
  public: String t_gettraceasstring();
  public: String t___tostring();
  DECLARE_METHOD_INVOKE_HELPERS(getmessage);
  DECLARE_METHOD_INVOKE_HELPERS(__tostring);
  DECLARE_METHOD_INVOKE_HELPERS(__construct);
  DECLARE_METHOD_INVOKE_HELPERS(getcode);
  DECLARE_METHOD_INVOKE_HELPERS(getprevious);
  DECLARE_METHOD_INVOKE_HELPERS(getline);
  DECLARE_METHOD_INVOKE_HELPERS(__init__);
  DECLARE_METHOD_INVOKE_HELPERS(getfile);
  DECLARE_METHOD_INVOKE_HELPERS(gettraceasstring);
  DECLARE_METHOD_INVOKE_HELPERS(gettrace);
};
extern struct ObjectStaticCallbacks cw_Exception;
Object co_Exception(CArrRef params, bool init = true);
Object coo_Exception();

///////////////////////////////////////////////////////////////////////////////
}

#endif // __GENERATED_cls_Exception_h22b3de5c__
