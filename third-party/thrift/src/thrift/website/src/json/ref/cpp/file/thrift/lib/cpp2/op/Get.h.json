{
  "refid": "Get_8h",
  "kind": "file",
  "language": "C++",
  "compoundname_html": "Get.h",
  "includes": [
    {
      "local": "no",
      "text_html": "folly/Traits.h"
    },
    {
      "local": "no",
      "text_html": "thrift/lib/cpp/Field.h"
    },
    {
      "refid": "detail_2Get_8h",
      "local": "no",
      "text_html": "thrift/lib/cpp2/op/detail/Get.h"
    },
    {
      "local": "no",
      "text_html": "thrift/lib/cpp2/type/Id.h"
    },
    {
      "local": "no",
      "text_html": "thrift/lib/cpp2/type/NativeType.h"
    },
    {
      "local": "no",
      "text_html": "thrift/lib/cpp2/type/ThriftType.h"
    }
  ],
  "innerclass": [
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1GetOrdinalImpl",
      "prot": "public",
      "text_html": "apache::thrift::op::detail::GetOrdinalImpl"
    },
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1GetOrdinalImpl_3_01std_1_1integral__constant_3_01type_d5c0fbdfa58f5168df45602fb44b8b6c",
      "prot": "public",
      "text_html": "apache::thrift::op::detail::GetOrdinalImpl&lt; std::integral_constant&lt; type::Ordinal, Ord &gt;, Tag &gt;"
    },
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1GetOrdinalImpl_3_01type_1_1field_3_01TypeTag_00_01Fiel122a9d8369b3a862f1ea5aa3b51857ec",
      "prot": "public",
      "text_html": "apache::thrift::op::detail::GetOrdinalImpl&lt; type::field&lt; TypeTag, FieldContext&lt; Struct, Id &gt; &gt;, Tag &gt;"
    },
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get",
      "prot": "public",
      "text_html": "apache::thrift::op::detail::Get"
    },
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01Tag_00_01type_1_1if__concrete_3_01Tag_01_4_01_4",
      "prot": "public",
      "text_html": "apache::thrift::op::detail::Get&lt; Id, Tag, type::if_concrete&lt; Tag &gt; &gt;"
    },
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01void_01_4",
      "prot": "public",
      "text_html": "apache::thrift::op::detail::Get&lt; Id, void &gt;"
    },
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01void_00_01void_01_4",
      "prot": "public",
      "text_html": "apache::thrift::op::detail::Get&lt; void, void &gt;"
    },
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1get__adapter",
      "prot": "public",
      "text_html": "apache::thrift::op::detail::get_adapter"
    },
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1get__adapter_3_01type_1_1field_3_01UTag_00_01Context_01_4_01_4",
      "prot": "public",
      "text_html": "apache::thrift::op::detail::get_adapter&lt; type::field&lt; UTag, Context &gt; &gt;"
    },
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1get__adapter_3_01type_1_1adapted_3_01Adapter_00_01UTag_01_4_01_4",
      "prot": "public",
      "text_html": "apache::thrift::op::detail::get_adapter&lt; type::adapted&lt; Adapter, UTag &gt; &gt;"
    }
  ],
  "innernamespace": [
    {
      "refid": "namespaceapache",
      "text_html": "apache"
    },
    {
      "refid": "namespaceapache_1_1thrift",
      "text_html": "apache::thrift"
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op",
      "text_html": "apache::thrift::op"
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1_1detail",
      "text_html": "apache::thrift::op::detail"
    }
  ],
  "file_location": {
    "file": "fbcode/thrift/lib/cpp2/op/Get.h"
  },
  "filepath": "file/thrift/lib/cpp2/op/Get.h",
  "href": "/ref/cpp/thrift/lib/cpp2/op/Get.h",
  "free_vars": [
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a463aa060e639ddef1ae676bf9c879144",
      "prot": "public",
      "static": "no",
      "mutable": "no",
      "tparams": [
        {
          "type_html": "typename T"
        }
      ],
      "type_html": "FOLLY_INLINE_VARIABLE constexpr std::size_t",
      "definition_html": "FOLLY_INLINE_VARIABLE constexpr std::size_t apache::thrift::op::size_v",
      "argsstring_html": "",
      "name_html": "size_v",
      "initializer_html": "=\n    detail::pa::__fbthrift_field_size_v&lt;T&gt;",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "32",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "32",
        "bodyend": "-1"
      },
      "description": {
        "brief_html": "<p>Resolves to the number of definitions contained in Thrift class. </p>"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a0d0bf0192d65919b779c95173e54d8e2",
      "prot": "public",
      "static": "no",
      "mutable": "no",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename Id"
        }
      ],
      "type_html": "FOLLY_INLINE_VARIABLE constexpr type::Ordinal",
      "definition_html": "FOLLY_INLINE_VARIABLE constexpr type::Ordinal apache::thrift::op::get_ordinal_v",
      "argsstring_html": "",
      "name_html": "get_ordinal_v",
      "initializer_html": "=\n    <code>get_ordinal</code>&lt;T, Id&gt;::<code>value</code>",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "45",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "45",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Gets the ordinal, for example:</p><p><ul>\n<li><p>using Ord = <code>get_ordinal_v&lt;MyS, ident::foo&gt;</code> // Resolves to ordinal at which the field \"foo\" was defined in MyS. </p></li></ul>\n</p>"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a4864d08f816eba57305de1874681762f",
      "prot": "public",
      "static": "no",
      "mutable": "no",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename Id"
        }
      ],
      "type_html": "FOLLY_INLINE_VARIABLE constexpr FieldId",
      "definition_html": "FOLLY_INLINE_VARIABLE constexpr FieldId apache::thrift::op::get_field_id_v",
      "argsstring_html": "",
      "name_html": "get_field_id_v",
      "initializer_html": "=\n    <code>get_field_id</code>&lt;T, Id&gt;::<code>value</code>",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "79",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "79",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Gets the field id, for example:</p><p><ul>\n<li><p>using FieldId = <code>get_field_id&lt;MyS, ident::foo&gt;</code> // Resolves to field id assigned to the field \"foo\" in MyS. </p></li></ul>\n</p>"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a82206d64de55e9a784d6c16691c9788e",
      "prot": "public",
      "static": "no",
      "mutable": "no",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename Id"
        }
      ],
      "type_html": "FOLLY_INLINE_VARIABLE const folly::StringPiece",
      "definition_html": "FOLLY_INLINE_VARIABLE const folly::StringPiece apache::thrift::op::get_name_v",
      "argsstring_html": "",
      "name_html": "get_name_v",
      "initializer_html": "=\n    detail::pa::__fbthrift_get_field_name&lt;T, <code>get_ordinal</code>&lt;T, Id&gt;&gt;()",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "137",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "137",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Gets the thrift field name, for example:</p><p><ul>\n<li><p><code>op::get_name_v</code>&lt;MyStruct, field_id&lt;7&gt;&gt; // Returns the thrift field name associated with field 7 in MyStruct. </p></li></ul>\n</p>"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1af8090e6dd891d2122eeeba29692ebca8",
      "prot": "public",
      "static": "no",
      "mutable": "no",
      "tparams": [
        {
          "type_html": "typename T"
        }
      ],
      "type_html": "FOLLY_INLINE_VARIABLE const folly::StringPiece",
      "definition_html": "FOLLY_INLINE_VARIABLE const folly::StringPiece apache::thrift::op::get_class_name_v",
      "argsstring_html": "",
      "name_html": "get_class_name_v",
      "initializer_html": "=\n    detail::pa::__fbthrift_get_class_name&lt;T&gt;()",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "145",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "145",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Gets the thrift class name, for example:</p><p><ul>\n<li><p><code>op::get_class_name_v&lt;MyStruct&gt;</code> == \"MyStruct\" </p></li></ul>\n</p>"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1ac2a49406a9e08a96edd91844324c4da6",
      "prot": "public",
      "static": "no",
      "mutable": "no",
      "tparams": [
        {
          "type_html": "typename Id",
          "defval_html": "void"
        },
        {
          "type_html": "typename T",
          "defval_html": "void"
        }
      ],
      "type_html": "FOLLY_INLINE_VARIABLE constexpr <a href=\"https://www.internalfb.com/intern/staticdocs/fbcref/ref/cpp/struct/apache/thrift/op/detail/Get\">detail::Get</a>&lt; Id, T &gt;",
      "definition_html": "FOLLY_INLINE_VARIABLE constexpr detail::Get&lt;Id, T&gt; apache::thrift::op::get",
      "argsstring_html": "",
      "name_html": "get",
      "initializer_html": "= {}",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "153",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "153",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Gets the Thrift field, for example:</p><p><code>op::get</code>&lt;type::field_id&lt;7&gt;&gt;(myStruct) = 4; </p>"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1ab5d996082d65368f1759794f59b8e2f0",
      "prot": "public",
      "static": "no",
      "mutable": "no",
      "type_html": "FOLLY_INLINE_VARIABLE constexpr <a href=\"https://www.internalfb.com/intern/staticdocs/fbcref/ref/cpp/struct/apache/thrift/op/detail/GetValueOrNull\">detail::GetValueOrNull</a>",
      "definition_html": "FOLLY_INLINE_VARIABLE constexpr detail::GetValueOrNull apache::thrift::op::getValueOrNull",
      "argsstring_html": "",
      "name_html": "getValueOrNull",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "164",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "164",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Returns pointer to the value from the given field. Returns nullptr if it doesn't have a value. For example:<ul>\n<li><p>get_value_or_null(foo.field_ref()) // returns foo.field_ref().<code>value()</code></p></li><li><p>get_value_or_null(foo.smart_ptr_ref()) // returns *foo.smart_ptr_ref()</p></li><li><p>get_value_or_null(foo.optional_ref()) // returns nullptr if optional field doesn't have a value. </p></li></ul>\n</p>"
      }
    }
  ],
  "free_functions": [
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1acc1c3bc96fdb0ec7aed92197fdef83b5",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "no",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename F"
        }
      ],
      "type_html": "void",
      "definition_html": "void apache::thrift::op::for_each_ordinal",
      "argsstring_html": "(F &amp;&amp;f)",
      "name_html": "for_each_ordinal",
      "param": [
        {
          "type_html": "F &amp;&amp;",
          "declname_html": "f"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "50",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "50",
        "bodyend": "53"
      },
      "definition": {
        "simple_html": "template &lt;typename T, typename F&gt;\nvoid for_each_ordinal(F&amp;&amp; f)",
        "simple_raw": "template <typename T, typename F>\nvoid for_each_ordinal(F&& f)",
        "detailed_html": "template &lt;typename T, typename F&gt;\nvoid for_each_ordinal(F&amp;&amp; f)",
        "detailed_raw": "template <typename T, typename F>\nvoid for_each_ordinal(F&& f)",
        "original_definition_html": "void apache::thrift::op::for_each_ordinal",
        "original_argsstring_html": "(F &amp;&amp;f)"
      },
      "description": {
        "brief_html": "<p>Calls the given function with ordinal&lt;1&gt; to ordinal&lt;N&gt;. </p>"
      },
      "compoundname_html": "apache::thrift::op::for_each_ordinal",
      "namespace_html": "apache::thrift::op"
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a7fa501d28724abc0d374af4f0fc07de3",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "no",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename F"
        },
        {
          "type_html": "std::enable_if_t&lt; size_v&lt; T &gt; !=0 &gt; *",
          "defval_html": "nullptr"
        }
      ],
      "type_html": "decltype(auto)",
      "definition_html": "decltype(auto) apache::thrift::op::find_by_ordinal",
      "argsstring_html": "(F &amp;&amp;f)",
      "name_html": "find_by_ordinal",
      "param": [
        {
          "type_html": "F &amp;&amp;",
          "declname_html": "f"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "58",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "58",
        "bodyend": "61"
      },
      "definition": {
        "simple_html": "template &lt;typename T, typename F, std::enable_if_t&lt;size_v&lt;T&gt; != 0&gt;* = nullptr&gt;\ndecltype(auto) find_by_ordinal(F&amp;&amp; f)",
        "simple_raw": "template <typename T, typename F, std::enable_if_t<size_v<T> != 0>* = nullptr>\ndecltype(auto) find_by_ordinal(F&& f)",
        "detailed_html": "template &lt;typename T, typename F, std::enable_if_t&lt;size_v&lt;T&gt; != 0&gt;* = nullptr&gt;\ndecltype(auto) find_by_ordinal(F&amp;&amp; f)",
        "detailed_raw": "template <typename T, typename F, std::enable_if_t<size_v<T> != 0>* = nullptr>\ndecltype(auto) find_by_ordinal(F&& f)",
        "original_definition_html": "decltype(auto) apache::thrift::op::find_by_ordinal",
        "original_argsstring_html": "(F &amp;&amp;f)"
      },
      "description": {
        "detailed_html": "<p>Calls the given function with with ordinal&lt;1&gt; to ordinal&lt;N&gt;, returing the first 'true' result produced. </p>"
      },
      "compoundname_html": "apache::thrift::op::find_by_ordinal",
      "namespace_html": "apache::thrift::op"
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a117e68a0a022f8249eab743019a954a4",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "no",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename F"
        }
      ],
      "type_html": "std::enable_if_t&lt; <code>size_v</code>&lt; T &gt;==0, bool &gt;",
      "definition_html": "std::enable_if_t&lt;size_v&lt;T&gt; == 0, bool&gt; apache::thrift::op::find_by_ordinal",
      "argsstring_html": "(F &amp;&amp;)",
      "name_html": "find_by_ordinal",
      "param": [
        {
          "type_html": "F &amp;&amp;"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "64",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "64",
        "bodyend": "66"
      },
      "definition": {
        "simple_html": "template &lt;typename T, typename F&gt;\n    std::enable_if_t &lt; size_v&lt;T &gt;= = 0, bool&gt; find_by_ordinal(F&amp;&amp;)",
        "simple_raw": "template <typename T, typename F>\n    std::enable_if_t < size_v<T >= = 0, bool> find_by_ordinal(F&&)",
        "detailed_html": "template &lt;typename T, typename F&gt;\n    std::enable_if_t &lt; size_v&lt;T &gt;= = 0, bool&gt; find_by_ordinal(F&amp;&amp;)",
        "detailed_raw": "template <typename T, typename F>\n    std::enable_if_t < size_v<T >= = 0, bool> find_by_ordinal(F&&)",
        "original_definition_html": "std::enable_if_t&lt;size_v&lt;T&gt; == 0, bool&gt; apache::thrift::op::find_by_ordinal",
        "original_argsstring_html": "(F &amp;&amp;)"
      },
      "compoundname_html": "apache::thrift::op::find_by_ordinal",
      "namespace_html": "apache::thrift::op"
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1ae2020caaee0af4a9f88d29d02ef753a3",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "no",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename F"
        }
      ],
      "type_html": "void",
      "definition_html": "void apache::thrift::op::for_each_field_id",
      "argsstring_html": "(F &amp;&amp;f)",
      "name_html": "for_each_field_id",
      "param": [
        {
          "type_html": "F &amp;&amp;",
          "declname_html": "f"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "84",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "84",
        "bodyend": "86"
      },
      "definition": {
        "simple_html": "template &lt;typename T, typename F&gt;\nvoid for_each_field_id(F&amp;&amp; f)",
        "simple_raw": "template <typename T, typename F>\nvoid for_each_field_id(F&& f)",
        "detailed_html": "template &lt;typename T, typename F&gt;\nvoid for_each_field_id(F&amp;&amp; f)",
        "detailed_raw": "template <typename T, typename F>\nvoid for_each_field_id(F&& f)",
        "original_definition_html": "void apache::thrift::op::for_each_field_id",
        "original_argsstring_html": "(F &amp;&amp;f)"
      },
      "description": {
        "brief_html": "<p>Calls the given function with each field_id&lt;{id}&gt; in Thrift class. </p>"
      },
      "compoundname_html": "apache::thrift::op::for_each_field_id",
      "namespace_html": "apache::thrift::op"
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a9b457c0aa2c8946824a743069994e594",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "no",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename F"
        }
      ],
      "type_html": "decltype(auto)",
      "definition_html": "decltype(auto) apache::thrift::op::find_by_field_id",
      "argsstring_html": "(F &amp;&amp;f)",
      "name_html": "find_by_field_id",
      "param": [
        {
          "type_html": "F &amp;&amp;",
          "declname_html": "f"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "91",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "91",
        "bodyend": "94"
      },
      "definition": {
        "simple_html": "template &lt;typename T, typename F&gt;\ndecltype(auto) find_by_field_id(F&amp;&amp; f)",
        "simple_raw": "template <typename T, typename F>\ndecltype(auto) find_by_field_id(F&& f)",
        "detailed_html": "template &lt;typename T, typename F&gt;\ndecltype(auto) find_by_field_id(F&amp;&amp; f)",
        "detailed_raw": "template <typename T, typename F>\ndecltype(auto) find_by_field_id(F&& f)",
        "original_definition_html": "decltype(auto) apache::thrift::op::find_by_field_id",
        "original_argsstring_html": "(F &amp;&amp;f)"
      },
      "description": {
        "detailed_html": "<p>Calls the given function with with each field_id&lt;{id}&gt;, returing the first 'true' result produced. </p>"
      },
      "compoundname_html": "apache::thrift::op::find_by_field_id",
      "namespace_html": "apache::thrift::op"
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a9f3f8a01b527820b6977f51cc1ab3cb6",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "no",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename F"
        }
      ],
      "type_html": "void",
      "definition_html": "void apache::thrift::op::for_each_ident",
      "argsstring_html": "(F &amp;&amp;f)",
      "name_html": "for_each_ident",
      "param": [
        {
          "type_html": "F &amp;&amp;",
          "declname_html": "f"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "107",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "107",
        "bodyend": "110"
      },
      "definition": {
        "simple_html": "template &lt;typename T, typename F&gt;\nvoid for_each_ident(F&amp;&amp; f)",
        "simple_raw": "template <typename T, typename F>\nvoid for_each_ident(F&& f)",
        "detailed_html": "template &lt;typename T, typename F&gt;\nvoid for_each_ident(F&amp;&amp; f)",
        "detailed_raw": "template <typename T, typename F>\nvoid for_each_ident(F&& f)",
        "original_definition_html": "void apache::thrift::op::for_each_ident",
        "original_argsstring_html": "(F &amp;&amp;f)"
      },
      "description": {
        "detailed_html": "<p>It calls the given function with each folly::tag&lt;thrift::ident::*&gt;{} in Thrift class. </p>"
      },
      "compoundname_html": "apache::thrift::op::for_each_ident",
      "namespace_html": "apache::thrift::op"
    }
  ],
  "free_typedefs": [
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1af1e9d6c6072129ec31b22cb261a62555",
      "prot": "public",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename Id"
        }
      ],
      "type_html": "typename <a href=\"https://www.internalfb.com/intern/staticdocs/fbcref/ref/cpp/struct/apache/thrift/op/detail/GetOrdinalImpl\">detail::GetOrdinalImpl</a>&lt;Id, type::infer_tag&lt;T&gt;&gt;::type",
      "definition_html": "using apache::thrift::op::get_ordinal = typedef typename detail::GetOrdinalImpl&lt;Id, type::infer_tag&lt;T&gt; &gt;::type",
      "argsstring_html": "",
      "name_html": "get_ordinal",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "36",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "37",
        "bodyend": "-1"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a1cc2ff3f076c63ae84d1df67fb6b0334",
      "prot": "public",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename Id"
        }
      ],
      "type_html": "folly::conditional_t&lt;\n    <code>get_ordinal</code>&lt;T, Id&gt;::<code>value</code> == type::Ordinal{},\n    type::field_id&lt;0&gt;,\n    detail::pa::field_id&lt;T,<code> get_ordinal</code>&lt;T, Id&gt;&gt;&gt;",
      "definition_html": "using apache::thrift::op::get_field_id = typedef folly::conditional_t&lt; get_ordinal&lt;T, Id&gt;::value == type::Ordinal{}, type::field_id&lt;0&gt;, detail::pa::field_id&lt;T, get_ordinal&lt;T, Id&gt; &gt;&gt;",
      "argsstring_html": "",
      "name_html": "get_field_id",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "69",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "72",
        "bodyend": "-1"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1ada84492fc1972941c81f6ddd514baf18",
      "prot": "public",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename Id"
        }
      ],
      "type_html": "detail::pa::ident&lt;T, <code>get_ordinal</code>&lt;T, Id&gt;&gt;",
      "definition_html": "using apache::thrift::op::get_ident = typedef detail::pa::ident&lt;T, get_ordinal&lt;T, Id&gt; &gt;",
      "argsstring_html": "",
      "name_html": "get_ident",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "102",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "102",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Gets the ident, for example:</p><p>// Resolves to thrift::ident::* type associated with field 7 in MyS. using Ident = get_ident&lt;MyS, field_id&lt;7&gt;&gt; </p>"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a65d3e354cd701e9cadbbb387eb454e15",
      "prot": "public",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename Id"
        }
      ],
      "type_html": "detail::pa::type_tag&lt;T, <code>get_ordinal</code>&lt;T, Id&gt;&gt;",
      "definition_html": "using apache::thrift::op::get_type_tag = typedef detail::pa::type_tag&lt;T, get_ordinal&lt;T, Id&gt; &gt;",
      "argsstring_html": "",
      "name_html": "get_type_tag",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "118",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "118",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Gets the Thrift type tag, for example:</p><p>// Resolves to Thrift type tag for the field \"foo\" in MyS. using Tag = <code>get_type_tag&lt;MyS, ident::foo&gt;</code> </p>"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1afae5dcf2b18558632b5c949affcc0237",
      "prot": "public",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename Id"
        }
      ],
      "type_html": "typename std::conditional_t&lt;\n    <code>get_ordinal</code>&lt;T, Id&gt;::<code>value</code> == type::Ordinal{},\n    void,\n    type::field&lt;<code>\n        get_type_tag</code>&lt;T, Id&gt;,\n        FieldContext&lt;T, folly::to_underlying(<code>get_field_id</code>&lt;T, Id&gt;::<code>value</code>)&gt;&gt;&gt;",
      "definition_html": "using apache::thrift::op::get_field_tag = typedef typename std::conditional_t&lt; get_ordinal&lt;T, Id&gt;::value == type::Ordinal{}, void, type::field&lt; get_type_tag&lt;T, Id&gt;, FieldContext&lt;T, folly::to_underlying(get_field_id&lt;T, Id&gt;::value)&gt; &gt;&gt;",
      "argsstring_html": "",
      "name_html": "get_field_tag",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "121",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "126",
        "bodyend": "-1"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1aa9fe99e4ad3dff46dd02cc6a3d9c8e6f",
      "prot": "public",
      "tparams": [
        {
          "type_html": "typename Id"
        },
        {
          "type_html": "typename T"
        }
      ],
      "type_html": "type::native_type&lt;<code>get_field_tag</code>&lt;T, Id&gt;&gt;",
      "definition_html": "using apache::thrift::op::get_native_type = typedef type::native_type&lt;get_field_tag&lt;T, Id&gt; &gt;",
      "argsstring_html": "",
      "name_html": "get_native_type",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "129",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "129",
        "bodyend": "-1"
      }
    }
  ],
  "free_overloadgroups": [
    {
      "groupname_html": "",
      "overloadsets": [
        {
          "kind": "overloadset",
          "name_html": "for_each_ordinal",
          "compoundname_html": "apache::thrift::op::for_each_ordinal",
          "functions": [
            {
              "refid": "namespaceapache_1_1thrift_1_1op_1acc1c3bc96fdb0ec7aed92197fdef83b5",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "no",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename T"
                },
                {
                  "type_html": "typename F"
                }
              ],
              "type_html": "void",
              "definition_html": "void apache::thrift::op::for_each_ordinal",
              "argsstring_html": "(F &amp;&amp;f)",
              "name_html": "for_each_ordinal",
              "param": [
                {
                  "type_html": "F &amp;&amp;",
                  "declname_html": "f"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/Get.h",
                "line": "50",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
                "bodystart": "50",
                "bodyend": "53"
              },
              "definition": {
                "simple_html": "template &lt;typename T, typename F&gt;\nvoid for_each_ordinal(F&amp;&amp; f)",
                "simple_raw": "template <typename T, typename F>\nvoid for_each_ordinal(F&& f)",
                "detailed_html": "template &lt;typename T, typename F&gt;\nvoid for_each_ordinal(F&amp;&amp; f)",
                "detailed_raw": "template <typename T, typename F>\nvoid for_each_ordinal(F&& f)",
                "original_definition_html": "void apache::thrift::op::for_each_ordinal",
                "original_argsstring_html": "(F &amp;&amp;f)"
              },
              "description": {
                "brief_html": "<p>Calls the given function with ordinal&lt;1&gt; to ordinal&lt;N&gt;. </p>"
              },
              "compoundname_html": "apache::thrift::op::for_each_ordinal",
              "namespace_html": "apache::thrift::op"
            }
          ],
          "filepath": "f/assoc/file/thrift/lib/cpp2/op/Get.h/for_each_ordinal",
          "namespace_html": "apache::thrift::op",
          "minprot": "public",
          "displayname_html": "for_each_ordinal",
          "brief_html": "<p>Calls the given function with ordinal&lt;1&gt; to ordinal&lt;N&gt;. </p>",
          "groupname_html": "",
          "href": "/ref/cpp/f/assoc/file/thrift/lib/cpp2/op/Get.h/for_each_ordinal",
          "refid": "/ref/cpp/f/assoc/file/thrift/lib/cpp2/op/Get.h/for_each_ordinal"
        },
        {
          "kind": "overloadset",
          "name_html": "find_by_ordinal",
          "compoundname_html": "apache::thrift::op::find_by_ordinal",
          "functions": [
            {
              "refid": "namespaceapache_1_1thrift_1_1op_1a7fa501d28724abc0d374af4f0fc07de3",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "no",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename T"
                },
                {
                  "type_html": "typename F"
                },
                {
                  "type_html": "std::enable_if_t&lt; size_v&lt; T &gt; !=0 &gt; *",
                  "defval_html": "nullptr"
                }
              ],
              "type_html": "decltype(auto)",
              "definition_html": "decltype(auto) apache::thrift::op::find_by_ordinal",
              "argsstring_html": "(F &amp;&amp;f)",
              "name_html": "find_by_ordinal",
              "param": [
                {
                  "type_html": "F &amp;&amp;",
                  "declname_html": "f"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/Get.h",
                "line": "58",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
                "bodystart": "58",
                "bodyend": "61"
              },
              "definition": {
                "simple_html": "template &lt;typename T, typename F, std::enable_if_t&lt;size_v&lt;T&gt; != 0&gt;* = nullptr&gt;\ndecltype(auto) find_by_ordinal(F&amp;&amp; f)",
                "simple_raw": "template <typename T, typename F, std::enable_if_t<size_v<T> != 0>* = nullptr>\ndecltype(auto) find_by_ordinal(F&& f)",
                "detailed_html": "template &lt;typename T, typename F, std::enable_if_t&lt;size_v&lt;T&gt; != 0&gt;* = nullptr&gt;\ndecltype(auto) find_by_ordinal(F&amp;&amp; f)",
                "detailed_raw": "template <typename T, typename F, std::enable_if_t<size_v<T> != 0>* = nullptr>\ndecltype(auto) find_by_ordinal(F&& f)",
                "original_definition_html": "decltype(auto) apache::thrift::op::find_by_ordinal",
                "original_argsstring_html": "(F &amp;&amp;f)"
              },
              "description": {
                "detailed_html": "<p>Calls the given function with with ordinal&lt;1&gt; to ordinal&lt;N&gt;, returing the first 'true' result produced. </p>"
              },
              "compoundname_html": "apache::thrift::op::find_by_ordinal",
              "namespace_html": "apache::thrift::op"
            },
            {
              "refid": "namespaceapache_1_1thrift_1_1op_1a117e68a0a022f8249eab743019a954a4",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "no",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename T"
                },
                {
                  "type_html": "typename F"
                }
              ],
              "type_html": "std::enable_if_t&lt; <code>size_v</code>&lt; T &gt;==0, bool &gt;",
              "definition_html": "std::enable_if_t&lt;size_v&lt;T&gt; == 0, bool&gt; apache::thrift::op::find_by_ordinal",
              "argsstring_html": "(F &amp;&amp;)",
              "name_html": "find_by_ordinal",
              "param": [
                {
                  "type_html": "F &amp;&amp;"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/Get.h",
                "line": "64",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
                "bodystart": "64",
                "bodyend": "66"
              },
              "definition": {
                "simple_html": "template &lt;typename T, typename F&gt;\n    std::enable_if_t &lt; size_v&lt;T &gt;= = 0, bool&gt; find_by_ordinal(F&amp;&amp;)",
                "simple_raw": "template <typename T, typename F>\n    std::enable_if_t < size_v<T >= = 0, bool> find_by_ordinal(F&&)",
                "detailed_html": "template &lt;typename T, typename F&gt;\n    std::enable_if_t &lt; size_v&lt;T &gt;= = 0, bool&gt; find_by_ordinal(F&amp;&amp;)",
                "detailed_raw": "template <typename T, typename F>\n    std::enable_if_t < size_v<T >= = 0, bool> find_by_ordinal(F&&)",
                "original_definition_html": "std::enable_if_t&lt;size_v&lt;T&gt; == 0, bool&gt; apache::thrift::op::find_by_ordinal",
                "original_argsstring_html": "(F &amp;&amp;)"
              },
              "compoundname_html": "apache::thrift::op::find_by_ordinal",
              "namespace_html": "apache::thrift::op"
            }
          ],
          "filepath": "f/assoc/file/thrift/lib/cpp2/op/Get.h/find_by_ordinal",
          "namespace_html": "apache::thrift::op",
          "minprot": "public",
          "displayname_html": "find_by_ordinal",
          "brief_html": "<p>Calls the given function with with ordinal&lt;1&gt; to ordinal&lt;N&gt;, returing the first 'true' result produced. </p>",
          "groupname_html": "",
          "href": "/ref/cpp/f/assoc/file/thrift/lib/cpp2/op/Get.h/find_by_ordinal",
          "refid": "/ref/cpp/f/assoc/file/thrift/lib/cpp2/op/Get.h/find_by_ordinal"
        },
        {
          "kind": "overloadset",
          "name_html": "for_each_field_id",
          "compoundname_html": "apache::thrift::op::for_each_field_id",
          "functions": [
            {
              "refid": "namespaceapache_1_1thrift_1_1op_1ae2020caaee0af4a9f88d29d02ef753a3",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "no",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename T"
                },
                {
                  "type_html": "typename F"
                }
              ],
              "type_html": "void",
              "definition_html": "void apache::thrift::op::for_each_field_id",
              "argsstring_html": "(F &amp;&amp;f)",
              "name_html": "for_each_field_id",
              "param": [
                {
                  "type_html": "F &amp;&amp;",
                  "declname_html": "f"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/Get.h",
                "line": "84",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
                "bodystart": "84",
                "bodyend": "86"
              },
              "definition": {
                "simple_html": "template &lt;typename T, typename F&gt;\nvoid for_each_field_id(F&amp;&amp; f)",
                "simple_raw": "template <typename T, typename F>\nvoid for_each_field_id(F&& f)",
                "detailed_html": "template &lt;typename T, typename F&gt;\nvoid for_each_field_id(F&amp;&amp; f)",
                "detailed_raw": "template <typename T, typename F>\nvoid for_each_field_id(F&& f)",
                "original_definition_html": "void apache::thrift::op::for_each_field_id",
                "original_argsstring_html": "(F &amp;&amp;f)"
              },
              "description": {
                "brief_html": "<p>Calls the given function with each field_id&lt;{id}&gt; in Thrift class. </p>"
              },
              "compoundname_html": "apache::thrift::op::for_each_field_id",
              "namespace_html": "apache::thrift::op"
            }
          ],
          "filepath": "f/assoc/file/thrift/lib/cpp2/op/Get.h/for_each_field_id",
          "namespace_html": "apache::thrift::op",
          "minprot": "public",
          "displayname_html": "for_each_field_id",
          "brief_html": "<p>Calls the given function with each field_id&lt;{id}&gt; in Thrift class. </p>",
          "groupname_html": "",
          "href": "/ref/cpp/f/assoc/file/thrift/lib/cpp2/op/Get.h/for_each_field_id",
          "refid": "/ref/cpp/f/assoc/file/thrift/lib/cpp2/op/Get.h/for_each_field_id"
        },
        {
          "kind": "overloadset",
          "name_html": "find_by_field_id",
          "compoundname_html": "apache::thrift::op::find_by_field_id",
          "functions": [
            {
              "refid": "namespaceapache_1_1thrift_1_1op_1a9b457c0aa2c8946824a743069994e594",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "no",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename T"
                },
                {
                  "type_html": "typename F"
                }
              ],
              "type_html": "decltype(auto)",
              "definition_html": "decltype(auto) apache::thrift::op::find_by_field_id",
              "argsstring_html": "(F &amp;&amp;f)",
              "name_html": "find_by_field_id",
              "param": [
                {
                  "type_html": "F &amp;&amp;",
                  "declname_html": "f"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/Get.h",
                "line": "91",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
                "bodystart": "91",
                "bodyend": "94"
              },
              "definition": {
                "simple_html": "template &lt;typename T, typename F&gt;\ndecltype(auto) find_by_field_id(F&amp;&amp; f)",
                "simple_raw": "template <typename T, typename F>\ndecltype(auto) find_by_field_id(F&& f)",
                "detailed_html": "template &lt;typename T, typename F&gt;\ndecltype(auto) find_by_field_id(F&amp;&amp; f)",
                "detailed_raw": "template <typename T, typename F>\ndecltype(auto) find_by_field_id(F&& f)",
                "original_definition_html": "decltype(auto) apache::thrift::op::find_by_field_id",
                "original_argsstring_html": "(F &amp;&amp;f)"
              },
              "description": {
                "detailed_html": "<p>Calls the given function with with each field_id&lt;{id}&gt;, returing the first 'true' result produced. </p>"
              },
              "compoundname_html": "apache::thrift::op::find_by_field_id",
              "namespace_html": "apache::thrift::op"
            }
          ],
          "filepath": "f/assoc/file/thrift/lib/cpp2/op/Get.h/find_by_field_id",
          "namespace_html": "apache::thrift::op",
          "minprot": "public",
          "displayname_html": "find_by_field_id",
          "brief_html": "<p>Calls the given function with with each field_id&lt;{id}&gt;, returing the first 'true' result produced. </p>",
          "groupname_html": "",
          "href": "/ref/cpp/f/assoc/file/thrift/lib/cpp2/op/Get.h/find_by_field_id",
          "refid": "/ref/cpp/f/assoc/file/thrift/lib/cpp2/op/Get.h/find_by_field_id"
        },
        {
          "kind": "overloadset",
          "name_html": "for_each_ident",
          "compoundname_html": "apache::thrift::op::for_each_ident",
          "functions": [
            {
              "refid": "namespaceapache_1_1thrift_1_1op_1a9f3f8a01b527820b6977f51cc1ab3cb6",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "no",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename T"
                },
                {
                  "type_html": "typename F"
                }
              ],
              "type_html": "void",
              "definition_html": "void apache::thrift::op::for_each_ident",
              "argsstring_html": "(F &amp;&amp;f)",
              "name_html": "for_each_ident",
              "param": [
                {
                  "type_html": "F &amp;&amp;",
                  "declname_html": "f"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/Get.h",
                "line": "107",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
                "bodystart": "107",
                "bodyend": "110"
              },
              "definition": {
                "simple_html": "template &lt;typename T, typename F&gt;\nvoid for_each_ident(F&amp;&amp; f)",
                "simple_raw": "template <typename T, typename F>\nvoid for_each_ident(F&& f)",
                "detailed_html": "template &lt;typename T, typename F&gt;\nvoid for_each_ident(F&amp;&amp; f)",
                "detailed_raw": "template <typename T, typename F>\nvoid for_each_ident(F&& f)",
                "original_definition_html": "void apache::thrift::op::for_each_ident",
                "original_argsstring_html": "(F &amp;&amp;f)"
              },
              "description": {
                "detailed_html": "<p>It calls the given function with each folly::tag&lt;thrift::ident::*&gt;{} in Thrift class. </p>"
              },
              "compoundname_html": "apache::thrift::op::for_each_ident",
              "namespace_html": "apache::thrift::op"
            }
          ],
          "filepath": "f/assoc/file/thrift/lib/cpp2/op/Get.h/for_each_ident",
          "namespace_html": "apache::thrift::op",
          "minprot": "public",
          "displayname_html": "for_each_ident",
          "brief_html": "<p>It calls the given function with each folly::tag&lt;thrift::ident::*&gt;{} in Thrift class. </p>",
          "groupname_html": "",
          "href": "/ref/cpp/f/assoc/file/thrift/lib/cpp2/op/Get.h/for_each_ident",
          "refid": "/ref/cpp/f/assoc/file/thrift/lib/cpp2/op/Get.h/for_each_ident"
        }
      ]
    }
  ]
}