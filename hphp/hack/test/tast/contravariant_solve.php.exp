[(Class
    { c_span = [4:1-19]; c_annotation = (); c_mode = Mstrict; c_final = false; 
      c_is_xhp = false; c_has_xhp_keyword = false; c_kind = Cinterface; 
      c_name = ([4:11-12], "\\I"); c_tparams = [{ tp_variance = Contravariant; tp_name = ([4:14-15], "T"); tp_parameters = []; tp_constraints = []; tp_reified = Erased; tp_user_attributes = [] }];
      c_extends = []; c_uses = []; c_xhp_attr_uses = []; c_xhp_category = None; 
      c_reqs = []; c_implements = []; c_where_constraints = []; c_consts = []; 
      c_typeconsts = []; c_vars = []; c_methods = []; c_xhp_children = []; 
      c_xhp_attrs = [];
      c_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      c_user_attributes = []; c_file_attributes = []; c_docs_url = None; 
      c_enum = None; c_doc_comment = None; c_emit_id = None; c_internal = false; 
      c_module = None });
  (Class
     { c_span = [6:1-30]; c_annotation = (); c_mode = Mstrict; c_final = false; 
       c_is_xhp = false; c_has_xhp_keyword = false; c_kind = (Cclass Concrete); 
       c_name = ([6:7-8], "\\E"); c_tparams = [{ tp_variance = Invariant; tp_name = ([6:9-10], "T"); tp_parameters = []; tp_constraints = []; tp_reified = Erased; tp_user_attributes = [] }];
       c_extends = []; c_uses = []; c_xhp_attr_uses = []; c_xhp_category = None; 
       c_reqs = []; c_implements = [([6:23-27], (Happly (([6:23-24], "\\I"), [([6:25-26], (Habstr ("T", [])))])))]; 
       c_where_constraints = []; c_consts = []; c_typeconsts = []; c_vars = []; 
       c_methods = []; c_xhp_children = []; c_xhp_attrs = [];
       c_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       c_user_attributes = []; c_file_attributes = []; c_docs_url = None; 
       c_enum = None; c_doc_comment = None; c_emit_id = None; c_internal = false; 
       c_module = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([8:10-11], "\\f");
       fd_fun =
       { f_span = [8:1-10:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((I<T>), (Some ([8:34-38], (Happly (([8:34-35], "\\I"), [([8:36-37], (Habstr ("T", [])))])))));
         f_params =
         [{ param_annotation = (I<T>); param_type_hint = ((I<T>), (Some ([8:15-19], (Happly (([8:15-16], "\\I"), [([8:17-18], (Habstr ("T", [])))]))))); 
            param_is_variadic = false; param_pos = [8:20-22]; param_name = "$_"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None };
           { param_annotation = (I<T>); param_type_hint = ((I<T>), (Some ([8:24-28], (Happly (([8:24-25], "\\I"), [([8:26-27], (Habstr ("T", [])))]))))); 
             param_is_variadic = false; param_pos = [8:29-31]; param_name = "$_"; 
             param_expr = None; param_readonly = None; param_callconv = Pnormal; 
             param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([9:3-25],
             (Throw
                ((Exception), [9:9-24],
                 (New (((Exception), [9:13-22], (CI ([9:13-22], "\\Exception"))), [], [], None, ((function(string $message = _, int $code = _, ?Exception $previous = _)[]: void)))))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None;
       fd_tparams = [{ tp_variance = Invariant; tp_name = ([8:12-13], "T"); tp_parameters = []; tp_constraints = []; tp_reified = Erased; tp_user_attributes = [] }]; 
       fd_where_constraints = [] });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([12:10-11], "\\g");
       fd_fun =
       { f_span = [12:1-14:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((E<T>), (Some ([12:22-26], (Happly (([12:22-23], "\\E"), [([12:24-25], (Habstr ("T", [])))])))));
         f_params =
         [{ param_annotation = (T); param_type_hint = ((T), (Some ([12:15-16], (Habstr ("T", []))))); 
            param_is_variadic = false; param_pos = [12:17-19]; param_name = "$_"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([13:3-25],
             (Throw
                ((Exception), [13:9-24],
                 (New (((Exception), [13:13-22], (CI ([13:13-22], "\\Exception"))), [], [], None, ((function(string $message = _, int $code = _, ?Exception $previous = _)[]: void)))))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None;
       fd_tparams = [{ tp_variance = Invariant; tp_name = ([12:12-13], "T"); tp_parameters = []; tp_constraints = []; tp_reified = Erased; tp_user_attributes = [] }]; 
       fd_where_constraints = [] });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([16:10-14], "\\test");
       fd_fun =
       { f_span = [16:1-18:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([16:18-22], (Hprim Tvoid)))); 
         f_params = []; f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([17:3-22],
             (Expr
                ((void), [17:3-21],
                 (Binop
                    { bop = (Eq None); lhs = ((void), [17:3-5], (Lplaceholder [17:3-5]));
                      rhs =
                      ((I<int>), [17:8-21],
                       (Call ((((function<T>(I<int> $_, I<int> $_): I<int>)), [17:8-9], (Id ([17:8-9], "\\f"))), 
                          [((int), ([17:8-9], (Happly (([Pos.none], "_"), []))))],
                          [(Pnormal,
                            ((E<int>), [17:10-14],
                             (Call ((((function<T>(int $_): E<int>)), [17:10-11], (Id ([17:10-11], "\\g"))), 
                                [((int), ([17:10-11], (Happly (([Pos.none], "_"), []))))], 
                                [(Pnormal, ((int), [17:12-13], (Int "1")))], None))));
                            (Pnormal,
                             ((E<int>), [17:16-20],
                              (Call ((((function<T>(int $_): E<int>)), [17:16-17], (Id ([17:16-17], "\\g"))), 
                                 [((int), ([17:16-17], (Happly (([Pos.none], "_"), []))))], 
                                 [(Pnormal, ((int), [17:18-19], (Int "2")))], None))))
                            ],
                          None)))
                      }))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] })