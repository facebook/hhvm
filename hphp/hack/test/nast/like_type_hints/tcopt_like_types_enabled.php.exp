[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
      fd_file_attributes =
      [{ fa_user_attributes = [{ ua_name = ([2:8-32], "__EnableUnstableFeatures"); ua_params = [((), [2:33-50], (String "like_type_hints"))] }];
         fa_namespace =
         { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
           ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
           ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false }
         }
        ];
      fd_mode = Mstrict; fd_name = ([4:10-34], "\\tcopt_like_types_enabled");
      fd_fun =
      { f_span = [4:1-52]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_tparams = []; f_ret = ((), (Some ([4:45-49], (Hprim Tvoid))));
        f_params =
        [{ param_annotation = (); param_type_hint = ((), (Some ([4:35-39], (Hlike ([4:36-39], (Hprim Tint)))))); 
           param_pos = [4:40-42]; param_name = "$x"; param_info = Param_required; 
           param_readonly = None; param_splat = None; param_callconv = Pnormal; 
           param_named = None; param_user_attributes = []; param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([Pos.none], Noop)] }; 
        f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([4:10-34], "__SupportDynamicType"); ua_params = [] }]; 
        f_external = false; f_doc_comment = None };
      fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
      fd_package = None })
  ]
