[(Fun
    { f_span = [3:1-28:2]; f_annotation = (); f_mode = <opaque>;
      f_ret = ((void), (Some ([10:4-8], (Hprim Tvoid))));
      f_name = ([3:10-27], "\\test_array_filter"); f_tparams = [];
      f_where_constraints = []; f_variadic = FVnonVariadic;
      f_params =
      [{ param_annotation = ([4:9-23], array);
         param_type_hint = ((array), (Some ([4:3-8], (Harray (None, None)))));
         param_is_reference = false; param_is_variadic = false;
         param_pos = [4:9-23]; param_name = "$untyped_array";
         param_expr = None; param_callconv = None;
         param_user_attributes = []; param_visibility = None };
        { param_annotation = ([5:18-31], array<?string>);
          param_type_hint =
          ((array<?string>),
           (Some ([5:3-17],
                  (Harray (
                     (Some ([5:9-16], (Hoption ([5:10-16], (Hprim Tstring))))),
                     None)))));
          param_is_reference = false; param_is_variadic = false;
          param_pos = [5:18-31]; param_name = "$vector_array";
          param_expr = None; param_callconv = None;
          param_user_attributes = []; param_visibility = None };
        { param_annotation = ([6:22-32], Container<?string>);
          param_type_hint =
          ((Container<?string>),
           (Some ([6:3-21],
                  (Happly (([6:3-12], "\\Container"),
                     [([6:13-20], (Hoption ([6:14-20], (Hprim Tstring))))])))));
          param_is_reference = false; param_is_variadic = false;
          param_pos = [6:22-32]; param_name = "$container";
          param_expr = None; param_callconv = None;
          param_user_attributes = []; param_visibility = None };
        { param_annotation = ([7:32-48], KeyedContainer<int, ?string>);
          param_type_hint =
          ((KeyedContainer<int, ?string>),
           (Some ([7:3-31],
                  (Happly (([7:3-17], "\\KeyedContainer"),
                     [([7:18-21], (Hprim Tint));
                       ([7:23-30], (Hoption ([7:24-30], (Hprim Tstring))))]
                     )))));
          param_is_reference = false; param_is_variadic = false;
          param_pos = [7:32-48]; param_name = "$keyed_container";
          param_expr = None; param_callconv = None;
          param_user_attributes = []; param_visibility = None };
        { param_annotation = ([8:3-11], _); param_type_hint = ((_), None);
          param_is_reference = false; param_is_variadic = false;
          param_pos = [8:3-11]; param_name = "$untyped"; param_expr = None;
          param_callconv = None; param_user_attributes = [];
          param_visibility = None };
        { param_annotation = ([9:8-10], bool);
          param_type_hint = ((bool), (Some ([9:3-7], (Hprim Tbool))));
          param_is_reference = false; param_is_variadic = false;
          param_pos = [9:8-10]; param_name = "$b"; param_expr = None;
          param_callconv = None; param_user_attributes = [];
          param_visibility = None }
        ];
      f_body =
      { fb_ast =
        [([11:3-52],
          (Expr
             (([11:3-51], Container<?string>),
              (Binop ((Eq None),
                 (([11:3-14], Container<?string>),
                  (Lvar ([11:3-14], $unresolved))),
                 (([11:17-51], Container<?string>),
                  (Eif ((([11:17-19], bool), (Lvar ([11:17-19], $b))),
                     (Some (([11:22-32], Container<?string>),
                            (Lvar ([11:22-32], $container)))),
                     (([11:35-51], KeyedContainer<int, ?string>),
                      (Lvar ([11:35-51], $keyed_container)))
                     )))
                 )))));
          ([13:3-32],
           (Expr
              (([13:3-31], array),
               (Call (Cnormal,
                  (([13:3-15], (function<Tv>(Container<_> $input, ?(function(_): bool) $callback): array)),
                   (Id ([13:3-15], "\\array_filter"))),
                  [],
                  [(([13:16-30], array), (Lvar ([13:16-30], $untyped_array)))
                    ],
                  [])))));
          ([14:3-31],
           (Expr
              (([14:3-30], array<string>),
               (Call (Cnormal,
                  (([14:3-15], (function<Tv>(Container<?string> $input, ?(function(?string): bool) $callback): array<string>)),
                   (Id ([14:3-15], "\\array_filter"))),
                  [],
                  [(([14:16-29], array<?string>),
                    (Lvar ([14:16-29], $vector_array)))],
                  [])))));
          ([15:3-28],
           (Expr
              (([15:3-27], array<arraykey, string>),
               (Call (Cnormal,
                  (([15:3-15], (function<Tv>(Container<?string> $input, ?(function(?string): bool) $callback): array<arraykey, string>)),
                   (Id ([15:3-15], "\\array_filter"))),
                  [],
                  [(([15:16-26], Container<?string>),
                    (Lvar ([15:16-26], $container)))],
                  [])))));
          ([16:3-34],
           (Expr
              (([16:3-33], array<int, string>),
               (Call (Cnormal,
                  (([16:3-15], (function<Tv>(Container<?string> $input, ?(function(?string): bool) $callback): array<int, string>)),
                   (Id ([16:3-15], "\\array_filter"))),
                  [],
                  [(([16:16-32], KeyedContainer<int, ?string>),
                    (Lvar ([16:16-32], $keyed_container)))],
                  [])))));
          ([17:3-26],
           (Expr
              (([17:3-25], _),
               (Call (Cnormal,
                  (([17:3-15], (function<Tv>(Container<_> $input, ?(function(_): bool) $callback): _)),
                   (Id ([17:3-15], "\\array_filter"))),
                  [], [(([17:16-24], _), (Lvar ([17:16-24], $untyped)))], 
                  [])))));
          ([18:3-29],
           (Expr
              (([18:3-28], array<arraykey, string>),
               (Call (Cnormal,
                  (([18:3-15], (function<Tv>(Container<?string> $input, ?(function(?string): bool) $callback): array<arraykey, string>)),
                   (Id ([18:3-15], "\\array_filter"))),
                  [],
                  [(([18:16-27], Container<?string>),
                    (Lvar ([18:16-27], $unresolved)))],
                  [])))));
          ([20:3-36],
           (Expr
              (([20:3-35], (function(?string $x): bool)),
               (Binop ((Eq None),
                  (([20:3-5], (function(?string $x): bool)),
                   (Lvar ([20:3-5], $f))),
                  (([20:8-35], (function(?string $x): bool)),
                   (Lfun (
                      { f_span = [20:8-35]; f_annotation = ();
                        f_mode = <opaque>;
                        f_ret = ((bool), (Some ([20:22-26], (Hprim Tbool))));
                        f_name = ([20:8-35], ";anonymous"); f_tparams = [];
                        f_where_constraints = []; f_variadic = FVnonVariadic;
                        f_params =
                        [{ param_annotation = ([20:17-19], ?string);
                           param_type_hint =
                           ((?string),
                            (Some ([20:9-16],
                                   (Hoption ([20:10-16], (Hprim Tstring))))));
                           param_is_reference = false;
                           param_is_variadic = false; param_pos = [20:17-19];
                           param_name = "$x"; param_expr = None;
                           param_callconv = None; param_user_attributes = [];
                           param_visibility = None }
                          ];
                        f_body =
                        { fb_ast =
                          [([20:31-35],
                            (Return (Some (([20:31-35], bool), True))))];
                          fb_annotation = No unsafe blocks };
                        f_fun_kind = FSync; f_user_attributes = [];
                        f_file_attributes = []; f_external = false;
                        f_namespace = <opaque>; f_doc_comment = None;
                        f_static = false },
                      [])))
                  )))));
          ([22:3-36],
           (Expr
              (([22:3-35], array),
               (Call (Cnormal,
                  (([22:3-15], (function<Tv>(Container<_> $input, ?(function(_): bool) $callback): array)),
                   (Id ([22:3-15], "\\array_filter"))),
                  [],
                  [(([22:16-30], array), (Lvar ([22:16-30], $untyped_array)));
                    (([22:32-34], (function(?string $x): bool)),
                     (Lvar ([22:32-34], $f)))
                    ],
                  [])))));
          ([23:3-35],
           (Expr
              (([23:3-34], array<?string>),
               (Call (Cnormal,
                  (([23:3-15], (function<Tv>(Container<?string> $input, ?(function(?string): bool) $callback): array<?string>)),
                   (Id ([23:3-15], "\\array_filter"))),
                  [],
                  [(([23:16-29], array<?string>),
                    (Lvar ([23:16-29], $vector_array)));
                    (([23:31-33], (function(?string $x): bool)),
                     (Lvar ([23:31-33], $f)))
                    ],
                  [])))));
          ([24:3-32],
           (Expr
              (([24:3-31], array<arraykey, ?string>),
               (Call (Cnormal,
                  (([24:3-15], (function<Tv>(Container<?string> $input, ?(function(?string): bool) $callback): array<arraykey, ?string>)),
                   (Id ([24:3-15], "\\array_filter"))),
                  [],
                  [(([24:16-26], Container<?string>),
                    (Lvar ([24:16-26], $container)));
                    (([24:28-30], (function(?string $x): bool)),
                     (Lvar ([24:28-30], $f)))
                    ],
                  [])))));
          ([25:3-38],
           (Expr
              (([25:3-37], array<int, ?string>),
               (Call (Cnormal,
                  (([25:3-15], (function<Tv>(Container<?string> $input, ?(function(?string): bool) $callback): array<int, ?string>)),
                   (Id ([25:3-15], "\\array_filter"))),
                  [],
                  [(([25:16-32], KeyedContainer<int, ?string>),
                    (Lvar ([25:16-32], $keyed_container)));
                    (([25:34-36], (function(?string $x): bool)),
                     (Lvar ([25:34-36], $f)))
                    ],
                  [])))));
          ([26:3-30],
           (Expr
              (([26:3-29], _),
               (Call (Cnormal,
                  (([26:3-15], (function<Tv>(Container<_> $input, ?(function(_): bool) $callback): _)),
                   (Id ([26:3-15], "\\array_filter"))),
                  [],
                  [(([26:16-24], _), (Lvar ([26:16-24], $untyped)));
                    (([26:26-28], (function(?string $x): bool)),
                     (Lvar ([26:26-28], $f)))
                    ],
                  [])))));
          ([27:3-33],
           (Expr
              (([27:3-32], array<arraykey, ?string>),
               (Call (Cnormal,
                  (([27:3-15], (function<Tv>(Container<?string> $input, ?(function(?string): bool) $callback): array<arraykey, ?string>)),
                   (Id ([27:3-15], "\\array_filter"))),
                  [],
                  [(([27:16-27], Container<?string>),
                    (Lvar ([27:16-27], $unresolved)));
                    (([27:29-31], (function(?string $x): bool)),
                     (Lvar ([27:29-31], $f)))
                    ],
                  [])))))
          ];
        fb_annotation = No unsafe blocks };
      f_fun_kind = FSync; f_user_attributes = []; f_file_attributes = [];
      f_external = false; f_namespace = <opaque>; f_doc_comment = None;
      f_static = false })
  ]
