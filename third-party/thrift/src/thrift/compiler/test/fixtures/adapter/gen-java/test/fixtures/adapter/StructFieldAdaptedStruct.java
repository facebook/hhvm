/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package test.fixtures.adapter;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.thrift.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="StructFieldAdaptedStruct", builder=StructFieldAdaptedStruct.Builder.class)
public final class StructFieldAdaptedStruct implements com.facebook.thrift.payload.ThriftSerializable {

    @ThriftConstructor
    public StructFieldAdaptedStruct(
        @com.facebook.swift.codec.ThriftField(value=1, name="adaptedStruct", requiredness=Requiredness.NONE) final test.fixtures.adapter.AdaptedStruct adaptedStruct,
        @com.facebook.swift.codec.ThriftField(value=2, name="adaptedTypedef", requiredness=Requiredness.NONE) final test.fixtures.adapter.AdaptedStruct adaptedTypedef,
        @com.facebook.swift.codec.ThriftField(value=3, name="directlyAdapted", requiredness=Requiredness.NONE) final test.fixtures.adapter.DirectlyAdaptedStruct directlyAdapted,
        @com.facebook.swift.codec.ThriftField(value=4, name="typedefOfAdapted", requiredness=Requiredness.NONE) final test.fixtures.adapter.DirectlyAdaptedStruct typedefOfAdapted
    ) {
        this.adaptedStruct = adaptedStruct;
        this.adaptedTypedef = adaptedTypedef;
        this.directlyAdapted = directlyAdapted;
        this.typedefOfAdapted = typedefOfAdapted;
    }
    
    @ThriftConstructor
    protected StructFieldAdaptedStruct() {
      this.adaptedStruct = null;
      this.adaptedTypedef = null;
      this.directlyAdapted = null;
      this.typedefOfAdapted = null;
    }
    
    public static class Builder {
    
        private test.fixtures.adapter.AdaptedStruct adaptedStruct = null;
        private test.fixtures.adapter.AdaptedStruct adaptedTypedef = null;
        private test.fixtures.adapter.DirectlyAdaptedStruct directlyAdapted = null;
        private test.fixtures.adapter.DirectlyAdaptedStruct typedefOfAdapted = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="adaptedStruct", requiredness=Requiredness.NONE)
        public Builder setAdaptedStruct(test.fixtures.adapter.AdaptedStruct adaptedStruct) {
            this.adaptedStruct = adaptedStruct;
            return this;
        }
    
        public test.fixtures.adapter.AdaptedStruct getAdaptedStruct() { return adaptedStruct; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="adaptedTypedef", requiredness=Requiredness.NONE)
        public Builder setAdaptedTypedef(test.fixtures.adapter.AdaptedStruct adaptedTypedef) {
            this.adaptedTypedef = adaptedTypedef;
            return this;
        }
    
        public test.fixtures.adapter.AdaptedStruct getAdaptedTypedef() { return adaptedTypedef; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="directlyAdapted", requiredness=Requiredness.NONE)
        public Builder setDirectlyAdapted(test.fixtures.adapter.DirectlyAdaptedStruct directlyAdapted) {
            this.directlyAdapted = directlyAdapted;
            return this;
        }
    
        public test.fixtures.adapter.DirectlyAdaptedStruct getDirectlyAdapted() { return directlyAdapted; }
    
            @com.facebook.swift.codec.ThriftField(value=4, name="typedefOfAdapted", requiredness=Requiredness.NONE)
        public Builder setTypedefOfAdapted(test.fixtures.adapter.DirectlyAdaptedStruct typedefOfAdapted) {
            this.typedefOfAdapted = typedefOfAdapted;
            return this;
        }
    
        public test.fixtures.adapter.DirectlyAdaptedStruct getTypedefOfAdapted() { return typedefOfAdapted; }
    
        public Builder() { }
        public Builder(StructFieldAdaptedStruct other) {
            this.adaptedStruct = other.adaptedStruct;
            this.adaptedTypedef = other.adaptedTypedef;
            this.directlyAdapted = other.directlyAdapted;
            this.typedefOfAdapted = other.typedefOfAdapted;
        }
    
        @ThriftConstructor
        public StructFieldAdaptedStruct build() {
            StructFieldAdaptedStruct result = new StructFieldAdaptedStruct (
                this.adaptedStruct,
                this.adaptedTypedef,
                this.directlyAdapted,
                this.typedefOfAdapted
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("StructFieldAdaptedStruct");
    private final test.fixtures.adapter.AdaptedStruct adaptedStruct;
    public static final int _ADAPTEDSTRUCT = 1;
    private static final TField ADAPTED_STRUCT_FIELD_DESC = new TField("adaptedStruct", TType.STRUCT, (short)1);
        private final test.fixtures.adapter.AdaptedStruct adaptedTypedef;
    public static final int _ADAPTEDTYPEDEF = 2;
    private static final TField ADAPTED_TYPEDEF_FIELD_DESC = new TField("adaptedTypedef", TType.STRUCT, (short)2);
        private final test.fixtures.adapter.DirectlyAdaptedStruct directlyAdapted;
    public static final int _DIRECTLYADAPTED = 3;
    private static final TField DIRECTLY_ADAPTED_FIELD_DESC = new TField("directlyAdapted", TType.STRUCT, (short)3);
        private final test.fixtures.adapter.DirectlyAdaptedStruct typedefOfAdapted;
    public static final int _TYPEDEFOFADAPTED = 4;
    private static final TField TYPEDEF_OF_ADAPTED_FIELD_DESC = new TField("typedefOfAdapted", TType.STRUCT, (short)4);
    static {
      NAMES_TO_IDS.put("adaptedStruct", 1);
      THRIFT_NAMES_TO_IDS.put("adaptedStruct", 1);
      FIELD_METADATA.put(1, ADAPTED_STRUCT_FIELD_DESC);
      NAMES_TO_IDS.put("adaptedTypedef", 2);
      THRIFT_NAMES_TO_IDS.put("adaptedTypedef", 2);
      FIELD_METADATA.put(2, ADAPTED_TYPEDEF_FIELD_DESC);
      NAMES_TO_IDS.put("directlyAdapted", 3);
      THRIFT_NAMES_TO_IDS.put("directlyAdapted", 3);
      FIELD_METADATA.put(3, DIRECTLY_ADAPTED_FIELD_DESC);
      NAMES_TO_IDS.put("typedefOfAdapted", 4);
      THRIFT_NAMES_TO_IDS.put("typedefOfAdapted", 4);
      FIELD_METADATA.put(4, TYPEDEF_OF_ADAPTED_FIELD_DESC);
      com.facebook.thrift.type.TypeRegistry.add(new com.facebook.thrift.type.Type(
        new com.facebook.thrift.type.UniversalName("facebook.com/thrift/test/StructFieldAdaptedStruct"), 
        StructFieldAdaptedStruct.class, StructFieldAdaptedStruct::read0));
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="adaptedStruct", requiredness=Requiredness.NONE)
    public test.fixtures.adapter.AdaptedStruct getAdaptedStruct() { return adaptedStruct; }
    
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="adaptedTypedef", requiredness=Requiredness.NONE)
    public test.fixtures.adapter.AdaptedStruct getAdaptedTypedef() { return adaptedTypedef; }
    
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=3, name="directlyAdapted", requiredness=Requiredness.NONE)
    public test.fixtures.adapter.DirectlyAdaptedStruct getDirectlyAdapted() { return directlyAdapted; }
    
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=4, name="typedefOfAdapted", requiredness=Requiredness.NONE)
    public test.fixtures.adapter.DirectlyAdaptedStruct getTypedefOfAdapted() { return typedefOfAdapted; }
    
    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("adaptedStruct", adaptedStruct);
        helper.add("adaptedTypedef", adaptedTypedef);
        helper.add("directlyAdapted", directlyAdapted);
        helper.add("typedefOfAdapted", typedefOfAdapted);
        return helper.toString();
    }
    
    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        StructFieldAdaptedStruct other = (StructFieldAdaptedStruct)o;
    
        return
            Objects.equals(adaptedStruct, other.adaptedStruct) &&
            Objects.equals(adaptedTypedef, other.adaptedTypedef) &&
            Objects.equals(directlyAdapted, other.directlyAdapted) &&
            Objects.equals(typedefOfAdapted, other.typedefOfAdapted) &&
            true;
    }
    
    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            adaptedStruct,
            adaptedTypedef,
            directlyAdapted,
            typedefOfAdapted
        });
    }
    
    
    public static com.facebook.thrift.payload.Reader<StructFieldAdaptedStruct> asReader() {
      return StructFieldAdaptedStruct::read0;
    }
    
    public static StructFieldAdaptedStruct read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(StructFieldAdaptedStruct.NAMES_TO_IDS, StructFieldAdaptedStruct.THRIFT_NAMES_TO_IDS, StructFieldAdaptedStruct.FIELD_METADATA);
      StructFieldAdaptedStruct.Builder builder = new StructFieldAdaptedStruct.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _ADAPTEDSTRUCT:
          if (__field.type == TType.STRUCT) {
            test.fixtures.adapter.AdaptedStruct adaptedStruct = test.fixtures.adapter.AdaptedStruct.read0(oprot);
            builder.setAdaptedStruct(adaptedStruct);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ADAPTEDTYPEDEF:
          if (__field.type == TType.STRUCT) {
            test.fixtures.adapter.AdaptedStruct adaptedTypedef = test.fixtures.adapter.AdaptedStruct.read0(oprot);
            builder.setAdaptedTypedef(adaptedTypedef);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _DIRECTLYADAPTED:
          if (__field.type == TType.STRUCT) {
            test.fixtures.adapter.DirectlyAdaptedStruct directlyAdapted = test.fixtures.adapter.DirectlyAdaptedStruct.read0(oprot);
            builder.setDirectlyAdapted(directlyAdapted);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TYPEDEFOFADAPTED:
          if (__field.type == TType.STRUCT) {
            test.fixtures.adapter.DirectlyAdaptedStruct typedefOfAdapted = test.fixtures.adapter.DirectlyAdaptedStruct.read0(oprot);
            builder.setTypedefOfAdapted(typedefOfAdapted);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }
    
    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (adaptedStruct != null) {
        oprot.writeFieldBegin(ADAPTED_STRUCT_FIELD_DESC);
        this.adaptedStruct.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (adaptedTypedef != null) {
        oprot.writeFieldBegin(ADAPTED_TYPEDEF_FIELD_DESC);
        this.adaptedTypedef.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (directlyAdapted != null) {
        oprot.writeFieldBegin(DIRECTLY_ADAPTED_FIELD_DESC);
        this.directlyAdapted.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (typedefOfAdapted != null) {
        oprot.writeFieldBegin(TYPEDEF_OF_ADAPTED_FIELD_DESC);
        this.typedefOfAdapted.write0(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }
    
    private static class _StructFieldAdaptedStructLazy {
        private static final StructFieldAdaptedStruct _DEFAULT = new StructFieldAdaptedStruct.Builder().build();
    }
    
    public static StructFieldAdaptedStruct defaultInstance() {
        return  _StructFieldAdaptedStructLazy._DEFAULT;
    }
}
