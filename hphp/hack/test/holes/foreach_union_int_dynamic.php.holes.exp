[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([3:10-35], "\\foreach_union_int_dynamic");
      fd_fun =
      { f_span = [3:1-7:2]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_ret = ((void), (Some ([3:56-60], (Hprim Tvoid))));
        f_params =
        [{ param_annotation = ((dynamic | int)); param_type_hint = (((dynamic | int)), (Some ([3:36-49], (Hunion [([3:37-40], (Hprim Tint)); ([3:41-48], Hdynamic)])))); 
           param_is_variadic = false; param_pos = [3:50-53]; param_name = "$xs"; 
           param_expr = None; param_readonly = None; param_callconv = Pnormal; 
           param_user_attributes = []; param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None;
        f_body =
        { fb_ast =
          [([5:3-6:4],
            (Foreach ((((dynamic | int)), [5:12-15], (Hole ((((dynamic | int)), [5:12-15], (Lvar ([5:12-15], $xs))), ((dynamic | int)), (Traversable<nothing>), Typing))),
               (As_v ((nothing), [5:19-21], (Lvar ([5:19-21], $x)))), 
               [([5:3-6:4], (AssertEnv (Join, {$#capability $#local_capability $xs})))])))
            ]
          };
        f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
        f_doc_comment = None };
      fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] })