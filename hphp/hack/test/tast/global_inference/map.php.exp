[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>; ns_const_uses = <opaque>; 
        ns_name = None; ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mpartial;
      fd_fun =
      { f_span = [4:1-9:2]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_ret = ((int), None); f_name = ([4:10-13], "\\foo"); 
        f_tparams = []; f_where_constraints = []; f_variadic = FVnonVariadic;
        f_params =
        [{ param_annotation = (Map<string, int>); param_type_hint = ((Map<string, int>), (Some ([4:14-17], (Happly (([4:14-17], "\\HH\\Map"), []))))); 
           param_is_variadic = false; param_pos = [4:18-20]; param_name = "$m"; 
           param_expr = None; param_readonly = None; param_callconv = Pnormal; 
           param_user_attributes = []; param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None;
        f_body =
        { fb_ast =
          [([6:3-18],
            (Expr
               ((int), [6:3-17],
                (Binop ((Eq None), ((int), [6:3-12], (Array_get (((Map<string, int>), [6:3-5], (Lvar ([6:3-5], $m))), (Some ((string), [6:6-11], (String "hey")))))), ((int), [6:15-17], (Int "40")))))));
            ([8:3-19], (Return (Some ((int), [8:10-18], (Array_get (((Map<string, int>), [8:10-12], (Lvar ([8:10-12], $m))), (Some ((string), [8:13-17], (String "ho")))))))))]
          };
        f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
        f_doc_comment = None }
      })