.hh_file 1;
#
# Test boolean binary operations which cannot be generated directly via PHP
#

.main {
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "main"
  PopC
  Int 1
  RetC
}

.function print_bool_result($res) {
  CGetL $res
  String "\n"
  Concat
  Print
  PopC

  Null
  RetC
}

# These functions are needed because otherwise the constants will be folded
.function g_true() {
  True
  RetC
}
.function g_false() {
  False
  RetC
}

.function main() {

# two registers
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  Add
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  Add
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  Add
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  Add
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  Sub
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  Sub
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  Sub
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  Sub
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  BitOr
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  BitOr
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  BitOr
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  BitOr
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  BitAnd
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  BitAnd
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  BitAnd
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  BitAnd
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  BitXor
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  BitXor
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  BitXor
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  BitXor
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  Mul
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  Mul
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  Mul
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  Mul
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  Div
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

# exclude divide by zero

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  Div
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

# exclude divide by zero

# try a few cases with one register and one immediate

  NullUninit
  NullUninit
  NullUninit
  False
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  Add
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  True
  Sub
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  False
  BitOr
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  True
  BitAnd
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_false"
  False
  BitXor
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" - "g_true"
  True
  Mul
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

# HHIRSimplification == false to test two immediates

  NullUninit
  NullUninit
  NullUninit
  True
  True
  Add
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  True
  False
  Sub
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  False
  False
  BitOr
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  False
  True
  BitAnd
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  True
  False
  BitXor
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  NullUninit
  NullUninit
  NullUninit
  False
  True
  Mul
  FCallFuncD <> 1 1 "" - "print_bool_result"
  PopC

  Null
  RetC
}
