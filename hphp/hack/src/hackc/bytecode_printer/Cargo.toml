# @generated by autocargo from //hphp/hack/src/hackc/bytecode_printer:bytecode_printer
[package]
name = "bytecode_printer"
version = "0.0.0"
edition = "2021"

[lib]
path = "lib.rs"

[dependencies]
anyhow = "1.0.51"
bstr = { version = "0.2", features = ["serde1"] }
bumpalo = { version = "3.8", features = ["collections"] }
env = { path = "../emitter/cargo/env" }
escaper = { path = "../../utils/escaper" }
ffi = { path = "../../utils/ffi" }
hackc_unit = { path = "../hhbc/cargo/hackc_unit" }
hash = { path = "../../utils/hash" }
hhas_adata = { path = "../hhbc/cargo/hhas_adata" }
hhas_attribute = { path = "../hhbc/cargo/hhas_attribute" }
hhas_body = { path = "../hhbc/cargo/hhas_body" }
hhas_class = { path = "../hhbc/cargo/hhas_class" }
hhas_coeffects = { path = "../hhbc/cargo/hhas_coeffects" }
hhas_constant = { path = "../hhbc/cargo/hhas_constant" }
hhas_function = { path = "../hhbc/cargo/hhas_function" }
hhas_method = { path = "../hhbc/cargo/hhas_method" }
hhas_param = { path = "../hhbc/cargo/hhas_param" }
hhas_pos = { path = "../hhbc/cargo/hhas_pos" }
hhas_property = { path = "../hhbc/cargo/hhas_property" }
hhas_symbol_refs = { path = "../hhbc/cargo/hhas_symbol_refs" }
hhas_type = { path = "../hhbc/cargo/hhas_type" }
hhas_type_const = { path = "../hhbc/cargo/hhas_type_const" }
hhas_typedef = { path = "../hhbc/cargo/hhas_typedef" }
hhbc_ast = { path = "../hhbc/cargo/hhbc_ast" }
hhbc_id = { path = "../hhbc/cargo/hhbc_id" }
hhbc_string_utils = { path = "../utils/cargo/hhbc_string_utils" }
hhvm_hhbc_defs_ffi = { path = "../hhvm_cxx/hhvm_hhbc_defs" }
hhvm_types_ffi = { path = "../hhvm_cxx/hhvm_types" }
iterator = { path = "../emitter/cargo/iterator" }
itertools = "0.10.3"
label = { path = "../emitter/cargo/label" }
local = { path = "../emitter/cargo/local" }
ocaml_helper = { path = "../../utils/ocaml_helper" }
oxidized = { path = "../../oxidized" }
print_opcode = { path = "print_opcode/cargo/lib" }
runtime = { path = "../emitter/cargo/runtime" }
thiserror = "1.0.30"
write_bytes = { path = "../../utils/write_bytes/write_bytes" }
