// Autogenerated by Thrift for thrift/compiler/test/fixtures/adapter/src/module.thrift
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//  @generated

package module

import (
    "maps"

    thrift "github.com/facebook/fbthrift/thrift/lib/go/thrift/types"
    metadata "github.com/facebook/fbthrift/thrift/lib/thrift/metadata"
)

// (needed to ensure safety because of naive import list construction)
var _ = thrift.VOID
var _ = maps.Copy[map[int]int, map[int]int]
var _ = metadata.GoUnusedProtection__

// Premade Thrift types
var (
    premadeThriftType_module_Color =
        &metadata.ThriftType{
            TEnum:
                &metadata.ThriftEnumType{
                    Name: "module.Color",
                },
        }
    premadeThriftType_module_ThriftAdaptedEnum =
        &metadata.ThriftType{
            TEnum:
                &metadata.ThriftEnumType{
                    Name: "module.ThriftAdaptedEnum",
                },
        }
    premadeThriftType_string =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_STRING_TYPE),
        }
    premadeThriftType_module_MyAnnotation =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.MyAnnotation",
                },
        }
    premadeThriftType_i32 =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_I32_TYPE),
        }
    premadeThriftType_module_i32_5137 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.i32_5137",
                    UnderlyingType: premadeThriftType_i32,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                    },
                },
        }
    premadeThriftType_set_string =
        &metadata.ThriftType{
            TSet:
                &metadata.ThriftSetType{
                    ValueType: premadeThriftType_string,
                },
        }
    premadeThriftType_module_SetWithAdapter =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.SetWithAdapter",
                    UnderlyingType: premadeThriftType_set_string,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "hack.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("\\Adapter2"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::my::Adapter2"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "rust.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::my::Adapter2"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "java.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "adapterClassName":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("com.facebook.thrift.my.Adapter2"),
                                    },
                                "typeClassName":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("com.facebook.thrift.my.AdaptedSet_2"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_StringWithAdapter =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.StringWithAdapter",
                    UnderlyingType: premadeThriftType_string,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "hack.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("\\Adapter1"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::my::Adapter1"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "rust.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::my::Adapter1"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "java.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "adapterClassName":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("com.facebook.thrift.my.Adapter1"),
                                    },
                                "typeClassName":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("com.facebook.thrift.my.AdaptedString_1"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_list_module_StringWithAdapter =
        &metadata.ThriftType{
            TList:
                &metadata.ThriftListType{
                    ValueType: premadeThriftType_module_StringWithAdapter,
                },
        }
    premadeThriftType_module_ListWithElemAdapter =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.ListWithElemAdapter",
                    UnderlyingType: premadeThriftType_list_module_StringWithAdapter,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_ListWithElemAdapter_withAdapter =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.ListWithElemAdapter_withAdapter",
                    UnderlyingType: premadeThriftType_module_ListWithElemAdapter,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "hack.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("\\Adapter2"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::my::Adapter2"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "rust.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::my::Adapter2"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "java.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "adapterClassName":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("com.facebook.thrift.my.Adapter2"),
                                    },
                                "typeClassName":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("com.facebook.thrift.my.AdaptedList_2"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_ListWithElemAdapter_withAdapter_2312 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.ListWithElemAdapter_withAdapter_2312",
                    UnderlyingType: premadeThriftType_module_ListWithElemAdapter_withAdapter,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                    },
                },
        }
    premadeThriftType_map_string_module_ListWithElemAdapter_withAdapter_2312 =
        &metadata.ThriftType{
            TMap:
                &metadata.ThriftMapType{
                    KeyType:   premadeThriftType_string,
                    ValueType: premadeThriftType_module_ListWithElemAdapter_withAdapter_2312,
                },
        }
    premadeThriftType_module_map_string_ListWithElemAdapter_withAdapter_8454 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.map_string_ListWithElemAdapter_withAdapter_8454",
                    UnderlyingType: premadeThriftType_map_string_module_ListWithElemAdapter_withAdapter_2312,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                    },
                },
        }
    premadeThriftType_binary =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_BINARY_TYPE),
        }
    premadeThriftType_module_binary_5673 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.binary_5673",
                    UnderlyingType: premadeThriftType_binary,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                    },
                },
        }
    premadeThriftType_i64 =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_I64_TYPE),
        }
    premadeThriftType_module_MyI64 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.MyI64",
                    UnderlyingType: premadeThriftType_i64,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::my::Adapter1"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "rust.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::my::Adapter1"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "java.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "adapterClassName":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("com.facebook.thrift.my.Adapter1"),
                                    },
                                "typeClassName":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("com.facebook.thrift.my.AdaptedI64_1"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "module.MyAnnotation",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "signature":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("MyI64"),
                                    },
                                "color":
                                    &metadata.ThriftConstValue{
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_DoubleTypedefI64 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.DoubleTypedefI64",
                    UnderlyingType: premadeThriftType_module_MyI64,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                    },
                },
        }
    premadeThriftType_list_i32 =
        &metadata.ThriftType{
            TList:
                &metadata.ThriftListType{
                    ValueType: premadeThriftType_i32,
                },
        }
    premadeThriftType_set_i32 =
        &metadata.ThriftType{
            TSet:
                &metadata.ThriftSetType{
                    ValueType: premadeThriftType_i32,
                },
        }
    premadeThriftType_map_string_i32 =
        &metadata.ThriftType{
            TMap:
                &metadata.ThriftMapType{
                    KeyType:   premadeThriftType_string,
                    ValueType: premadeThriftType_i32,
                },
        }
    premadeThriftType_map_i32_i32 =
        &metadata.ThriftType{
            TMap:
                &metadata.ThriftMapType{
                    KeyType:   premadeThriftType_i32,
                    ValueType: premadeThriftType_i32,
                },
        }
    premadeThriftType_list_map_i32_i32 =
        &metadata.ThriftType{
            TList:
                &metadata.ThriftListType{
                    ValueType: premadeThriftType_map_i32_i32,
                },
        }
    premadeThriftType_list_list_map_i32_i32 =
        &metadata.ThriftType{
            TList:
                &metadata.ThriftListType{
                    ValueType: premadeThriftType_list_map_i32_i32,
                },
        }
    premadeThriftType_module_Foo =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.Foo",
                },
        }
    premadeThriftType_module_Baz =
        &metadata.ThriftType{
            TUnion:
                &metadata.ThriftUnionType{
                    Name: "module.Baz",
                },
        }
    premadeThriftType_module_Foo_6868 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.Foo_6868",
                    UnderlyingType: premadeThriftType_module_Foo,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_Foo_3943 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.Foo_3943",
                    UnderlyingType: premadeThriftType_module_Foo,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_FooWithAdapter =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.FooWithAdapter",
                    UnderlyingType: premadeThriftType_module_Foo,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "hack.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("\\Adapter1"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::my::Adapter1"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "rust.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::my::Adapter1"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "java.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "adapterClassName":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("com.facebook.thrift.my.Adapter1"),
                                    },
                                "typeClassName":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("com.facebook.thrift.my.AdaptedFoo_1"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_FooWithAdapter_9317 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.FooWithAdapter_9317",
                    UnderlyingType: premadeThriftType_module_FooWithAdapter,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                    },
                },
        }
    premadeThriftType_list_module_FooWithAdapter_9317 =
        &metadata.ThriftType{
            TList:
                &metadata.ThriftListType{
                    ValueType: premadeThriftType_module_FooWithAdapter_9317,
                },
        }
    premadeThriftType_module_Baz_7352 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.Baz_7352",
                    UnderlyingType: premadeThriftType_module_Baz,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_DirectlyAdapted =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.DirectlyAdapted",
                },
        }
    premadeThriftType_list_module_Foo =
        &metadata.ThriftType{
            TList:
                &metadata.ThriftListType{
                    ValueType: premadeThriftType_module_Foo,
                },
        }
    premadeThriftType_module_ListOfFooTypedef =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.ListOfFooTypedef",
                    UnderlyingType: premadeThriftType_list_module_Foo,
                },
        }
    premadeThriftType_module_Bar =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.Bar",
                },
        }
    premadeThriftType_module_IndependentDirectlyAdapted =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.IndependentDirectlyAdapted",
                },
        }
    premadeThriftType_module_StructWithFieldAdapter =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.StructWithFieldAdapter",
                },
        }
    premadeThriftType_module_TerseAdaptedFields =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.TerseAdaptedFields",
                },
        }
    premadeThriftType_module_A =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.A",
                },
        }
    premadeThriftType_module_AdaptedA =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.AdaptedA",
                    UnderlyingType: premadeThriftType_module_A,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::my::Adapter"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_B =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.B",
                },
        }
    premadeThriftType_module_Config =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.Config",
                },
        }
    premadeThriftType_module_MyStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.MyStruct",
                },
        }
    premadeThriftType_module_DurationMs =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.DurationMs",
                    UnderlyingType: premadeThriftType_i64,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::apache::thrift::test::AdaptTestMsAdapter"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_IOBuf =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.IOBuf",
                    UnderlyingType: premadeThriftType_binary,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Type",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::folly::IOBuf"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_CustomProtocolType =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.CustomProtocolType",
                    UnderlyingType: premadeThriftType_module_IOBuf,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::apache::thrift::test::CustomProtocolAdapter"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_IndirectionString =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.IndirectionString",
                    UnderlyingType: premadeThriftType_string,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::apache::thrift::IndirectionAdapter<::apache::thrift::test::IndirectionString>"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_bool =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_BOOL_TYPE),
        }
    premadeThriftType_module_AdaptedBool =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.AdaptedBool",
                    UnderlyingType: premadeThriftType_bool,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::apache::thrift::test::TemplatedTestAdapter"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_AdaptedInteger =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.AdaptedInteger",
                    UnderlyingType: premadeThriftType_i32,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::apache::thrift::test::TemplatedTestAdapter"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_AdaptTestStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.AdaptTestStruct",
                },
        }
    premadeThriftType_byte =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_BYTE_TYPE),
        }
    premadeThriftType_module_AdaptedByte =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.AdaptedByte",
                    UnderlyingType: premadeThriftType_byte,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::apache::thrift::test::TemplatedTestAdapter"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_i16 =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_I16_TYPE),
        }
    premadeThriftType_module_AdaptedShort =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.AdaptedShort",
                    UnderlyingType: premadeThriftType_i16,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::apache::thrift::test::TemplatedTestAdapter"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_AdaptedLong =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.AdaptedLong",
                    UnderlyingType: premadeThriftType_i64,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::apache::thrift::test::TemplatedTestAdapter"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_double =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_DOUBLE_TYPE),
        }
    premadeThriftType_module_AdaptedDouble =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.AdaptedDouble",
                    UnderlyingType: premadeThriftType_double,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::apache::thrift::test::TemplatedTestAdapter"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_AdaptedString =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.AdaptedString",
                    UnderlyingType: premadeThriftType_string,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::apache::thrift::test::TemplatedTestAdapter"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_list_i64 =
        &metadata.ThriftType{
            TList:
                &metadata.ThriftListType{
                    ValueType: premadeThriftType_i64,
                },
        }
    premadeThriftType_set_i64 =
        &metadata.ThriftType{
            TSet:
                &metadata.ThriftSetType{
                    ValueType: premadeThriftType_i64,
                },
        }
    premadeThriftType_map_i64_i64 =
        &metadata.ThriftType{
            TMap:
                &metadata.ThriftMapType{
                    KeyType:   premadeThriftType_i64,
                    ValueType: premadeThriftType_i64,
                },
        }
    premadeThriftType_module_AdaptedEnum =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.AdaptedEnum",
                    UnderlyingType: premadeThriftType_module_ThriftAdaptedEnum,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::apache::thrift::StaticCastAdapter<::apache::thrift::test::basic::AdaptedEnum, ::apache::thrift::test::basic::ThriftAdaptedEnum>"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_DoubleTypedefBool =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.DoubleTypedefBool",
                    UnderlyingType: premadeThriftType_module_AdaptedBool,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_AdaptTemplatedTestStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.AdaptTemplatedTestStruct",
                },
        }
    premadeThriftType_module_AdaptTemplatedNestedTestStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.AdaptTemplatedNestedTestStruct",
                },
        }
    premadeThriftType_module_AdaptTestUnion =
        &metadata.ThriftType{
            TUnion:
                &metadata.ThriftUnionType{
                    Name: "module.AdaptTestUnion",
                },
        }
    premadeThriftType_module_AdaptedStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.AdaptedStruct",
                },
        }
    premadeThriftType_module_DirectlyAdaptedStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.DirectlyAdaptedStruct",
                },
        }
    premadeThriftType_module_AdaptedTypedef =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.AdaptedTypedef",
                    UnderlyingType: premadeThriftType_module_AdaptedStruct,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::apache::thrift::test::TemplatedTestAdapter"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_TypedefOfDirect =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.TypedefOfDirect",
                    UnderlyingType: premadeThriftType_module_DirectlyAdaptedStruct,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_StructFieldAdaptedStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.StructFieldAdaptedStruct",
                },
        }
    premadeThriftType_module_CircularStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.CircularStruct",
                },
        }
    premadeThriftType_module_CircularAdaptee =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.CircularAdaptee",
                },
        }
    premadeThriftType_module_AdaptedCircularAdaptee =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.AdaptedCircularAdaptee",
                    UnderlyingType: premadeThriftType_module_CircularAdaptee,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::apache::thrift::test::MemberAccessAdapter"),
                                    },
                                "adaptedType":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::apache::thrift::test::TaggedWrapper<CircularAdaptee, CircularStruct>"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_DeclaredAfterStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.DeclaredAfterStruct",
                },
        }
    premadeThriftType_module_ReorderedStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.ReorderedStruct",
                },
        }
    premadeThriftType_module_RenamedStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.RenamedStruct",
                },
        }
    premadeThriftType_module_SameNamespaceStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.SameNamespaceStruct",
                },
        }
    premadeThriftType_module_HeapAllocated =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.HeapAllocated",
                },
        }
    premadeThriftType_module_MoveOnly =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.MoveOnly",
                },
        }
    premadeThriftType_module_AlsoMoveOnly =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.AlsoMoveOnly",
                },
        }
    premadeThriftType_module_ApplyAdapter =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.ApplyAdapter",
                },
        }
    premadeThriftType_module_TransitiveAdapted =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.TransitiveAdapted",
                },
        }
    premadeThriftType_module_CountingInt =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.CountingInt",
                    UnderlyingType: premadeThriftType_i64,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::apache::thrift::test::CountingAdapter<true, int>"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_CountingStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.CountingStruct",
                },
        }
    premadeThriftType_module_Person =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.Person",
                },
        }
    premadeThriftType_module_Person2 =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.Person2",
                },
        }
    premadeThriftType_module_RenamedStructWithStructAdapterAndFieldAdapter =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.RenamedStructWithStructAdapterAndFieldAdapter",
                },
        }
    premadeThriftType_module_MyI32 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.MyI32",
                    UnderlyingType: premadeThriftType_i32,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "hack.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("\\Adapter1"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::my::Adapter1"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "rust.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::my::Adapter1"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "java.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "adapterClassName":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("com.facebook.thrift.my.Adapter1"),
                                    },
                                "typeClassName":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("com.facebook.thrift.my.AdaptedI32_1"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_StructWithAdapter =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.StructWithAdapter",
                    UnderlyingType: premadeThriftType_module_Bar,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "hack.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("\\Adapter2"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::my::Adapter2"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_UnionWithAdapter =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.UnionWithAdapter",
                    UnderlyingType: premadeThriftType_module_Baz,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "hack.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("\\Adapter2"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::my::Adapter2"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_StringWithCppAdapter =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.StringWithCppAdapter",
                    UnderlyingType: premadeThriftType_string,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::my::Adapter2"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_MyI32_4873 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.MyI32_4873",
                    UnderlyingType: premadeThriftType_module_MyI32,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_StringWithAdapter_7208 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.StringWithAdapter_7208",
                    UnderlyingType: premadeThriftType_module_StringWithAdapter,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "thrift.AllowLegacyTypedefUri",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                            },
                        },
                    },
                },
        }
)

// Premade struct metadatas
var (
    premadeStructMetadata_MyAnnotation =
        &metadata.ThriftStruct{
            Name:    "module.MyAnnotation",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "signature",
                    IsOptional: false,
                    Type:       premadeThriftType_string,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "color",
                    IsOptional: false,
                    Type:       premadeThriftType_module_Color,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "python.Adapter",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                        "name":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("my.module.Adapter2"),
                            },
                        "typeHint":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("my.another.module.AdaptedType2[]"),
                            },
                    },
                },
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "scope.Transitive",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                    },
                },
            },
        }
    premadeStructMetadata_Foo =
        &metadata.ThriftStruct{
            Name:    "module.Foo",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "intField",
                    IsOptional: false,
                    Type:       premadeThriftType_module_i32_5137,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "optionalIntField",
                    IsOptional: true,
                    Type:       premadeThriftType_module_i32_5137,
                },
                &metadata.ThriftField{
                    Id:         3,
                    Name:       "intFieldWithDefault",
                    IsOptional: false,
                    Type:       premadeThriftType_module_i32_5137,
                },
                &metadata.ThriftField{
                    Id:         4,
                    Name:       "setField",
                    IsOptional: false,
                    Type:       premadeThriftType_module_SetWithAdapter,
                },
                &metadata.ThriftField{
                    Id:         5,
                    Name:       "optionalSetField",
                    IsOptional: true,
                    Type:       premadeThriftType_module_SetWithAdapter,
                },
                &metadata.ThriftField{
                    Id:         6,
                    Name:       "mapField",
                    IsOptional: false,
                    Type:       premadeThriftType_module_map_string_ListWithElemAdapter_withAdapter_8454,
                },
                &metadata.ThriftField{
                    Id:         7,
                    Name:       "optionalMapField",
                    IsOptional: true,
                    Type:       premadeThriftType_module_map_string_ListWithElemAdapter_withAdapter_8454,
                },
                &metadata.ThriftField{
                    Id:         8,
                    Name:       "binaryField",
                    IsOptional: false,
                    Type:       premadeThriftType_module_binary_5673,
                },
                &metadata.ThriftField{
                    Id:         9,
                    Name:       "longField",
                    IsOptional: false,
                    Type:       premadeThriftType_module_MyI64,
                },
                &metadata.ThriftField{
                    Id:         10,
                    Name:       "adaptedLongField",
                    IsOptional: false,
                    Type:       premadeThriftType_module_MyI64,
                },
                &metadata.ThriftField{
                    Id:         11,
                    Name:       "doubleAdaptedField",
                    IsOptional: false,
                    Type:       premadeThriftType_module_DoubleTypedefI64,
                },
                &metadata.ThriftField{
                    Id:         12,
                    Name:       "adapted_list",
                    IsOptional: false,
                    Type:       premadeThriftType_list_i32,
                },
                &metadata.ThriftField{
                    Id:         13,
                    Name:       "adapted_set",
                    IsOptional: false,
                    Type:       premadeThriftType_set_i32,
                },
                &metadata.ThriftField{
                    Id:         14,
                    Name:       "adapted_map",
                    IsOptional: false,
                    Type:       premadeThriftType_map_string_i32,
                },
                &metadata.ThriftField{
                    Id:         15,
                    Name:       "adapted_list_nested",
                    IsOptional: false,
                    Type:       premadeThriftType_list_list_map_i32_i32,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.EnableCustomTypeOrdering",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                    },
                },
            },
        }
    premadeStructMetadata_Baz =
        &metadata.ThriftStruct{
            Name:    "module.Baz",
            IsUnion: true,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "intField",
                    IsOptional: false,
                    Type:       premadeThriftType_module_i32_5137,
                },
                &metadata.ThriftField{
                    Id:         4,
                    Name:       "setField",
                    IsOptional: false,
                    Type:       premadeThriftType_module_SetWithAdapter,
                },
                &metadata.ThriftField{
                    Id:         6,
                    Name:       "mapField",
                    IsOptional: false,
                    Type:       premadeThriftType_module_map_string_ListWithElemAdapter_withAdapter_8454,
                },
                &metadata.ThriftField{
                    Id:         8,
                    Name:       "binaryField",
                    IsOptional: false,
                    Type:       premadeThriftType_module_binary_5673,
                },
                &metadata.ThriftField{
                    Id:         9,
                    Name:       "longField",
                    IsOptional: false,
                    Type:       premadeThriftType_module_MyI64,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.EnableCustomTypeOrdering",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                    },
                },
            },
        }
    premadeStructMetadata_Bar =
        &metadata.ThriftStruct{
            Name:    "module.Bar",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "structField",
                    IsOptional: false,
                    Type:       premadeThriftType_module_Foo_6868,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "optionalStructField",
                    IsOptional: true,
                    Type:       premadeThriftType_module_Foo_3943,
                },
                &metadata.ThriftField{
                    Id:         3,
                    Name:       "structListField",
                    IsOptional: false,
                    Type:       premadeThriftType_list_module_FooWithAdapter_9317,
                },
                &metadata.ThriftField{
                    Id:         4,
                    Name:       "optionalStructListField",
                    IsOptional: true,
                    Type:       premadeThriftType_list_module_FooWithAdapter_9317,
                },
                &metadata.ThriftField{
                    Id:         5,
                    Name:       "unionField",
                    IsOptional: false,
                    Type:       premadeThriftType_module_Baz_7352,
                },
                &metadata.ThriftField{
                    Id:         6,
                    Name:       "optionalUnionField",
                    IsOptional: true,
                    Type:       premadeThriftType_module_Baz_7352,
                },
                &metadata.ThriftField{
                    Id:         7,
                    Name:       "adaptedStructField",
                    IsOptional: false,
                    Type:       premadeThriftType_module_DirectlyAdapted,
                },
                &metadata.ThriftField{
                    Id:         8,
                    Name:       "structListFieldWithTypedef",
                    IsOptional: false,
                    Type:       premadeThriftType_module_ListOfFooTypedef,
                },
            },
        }
    premadeStructMetadata_DirectlyAdapted =
        &metadata.ThriftStruct{
            Name:    "module.DirectlyAdapted",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "field",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.Adapter",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                        "name":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("::my::Adapter"),
                            },
                    },
                },
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "python.Adapter",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                        "name":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("my.module.Adapter"),
                            },
                        "typeHint":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("my.another.module.AdaptedType"),
                            },
                    },
                },
            },
        }
    premadeStructMetadata_IndependentDirectlyAdapted =
        &metadata.ThriftStruct{
            Name:    "module.IndependentDirectlyAdapted",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "field",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.Adapter",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                        "name":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("::my::Adapter"),
                            },
                        "adaptedType":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("::my::Type"),
                            },
                    },
                },
            },
        }
    premadeStructMetadata_StructWithFieldAdapter =
        &metadata.ThriftStruct{
            Name:    "module.StructWithFieldAdapter",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "field",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "shared_field",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
                &metadata.ThriftField{
                    Id:         3,
                    Name:       "opt_shared_field",
                    IsOptional: true,
                    Type:       premadeThriftType_i32,
                },
                &metadata.ThriftField{
                    Id:         4,
                    Name:       "opt_boxed_field",
                    IsOptional: true,
                    Type:       premadeThriftType_i32,
                },
            },
        }
    premadeStructMetadata_TerseAdaptedFields =
        &metadata.ThriftStruct{
            Name:    "module.TerseAdaptedFields",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "int_field",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "string_field",
                    IsOptional: false,
                    Type:       premadeThriftType_string,
                },
                &metadata.ThriftField{
                    Id:         3,
                    Name:       "set_field",
                    IsOptional: false,
                    Type:       premadeThriftType_set_i32,
                },
            },
        }
    premadeStructMetadata_B =
        &metadata.ThriftStruct{
            Name:    "module.B",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "a",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedA,
                },
            },
        }
    premadeStructMetadata_A =
        &metadata.ThriftStruct{
            Name:    "module.A",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
            },
        }
    premadeStructMetadata_Config =
        &metadata.ThriftStruct{
            Name:    "module.Config",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "path",
                    IsOptional: false,
                    Type:       premadeThriftType_string,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.Adapter",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                        "name":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("MyVarAdapter"),
                            },
                    },
                },
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "python.Adapter",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                        "name":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("my.ConfigAdapter"),
                            },
                        "typeHint":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("my.ConfiguredVar[]"),
                            },
                    },
                },
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "scope.Transitive",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                    },
                },
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "thrift.Experimental",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                    },
                },
            },
        }
    premadeStructMetadata_MyStruct =
        &metadata.ThriftStruct{
            Name:    "module.MyStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "field",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "set_string",
                    IsOptional: false,
                    Type:       premadeThriftType_module_SetWithAdapter,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.EnableCustomTypeOrdering",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                    },
                },
            },
        }
    premadeStructMetadata_AdaptTestStruct =
        &metadata.ThriftStruct{
            Name:    "module.AdaptTestStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "delay",
                    IsOptional: false,
                    Type:       premadeThriftType_module_DurationMs,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "custom",
                    IsOptional: false,
                    Type:       premadeThriftType_module_CustomProtocolType,
                },
                &metadata.ThriftField{
                    Id:         3,
                    Name:       "timeout",
                    IsOptional: false,
                    Type:       premadeThriftType_i64,
                },
                &metadata.ThriftField{
                    Id:         4,
                    Name:       "data",
                    IsOptional: false,
                    Type:       premadeThriftType_i64,
                },
                &metadata.ThriftField{
                    Id:         5,
                    Name:       "meta",
                    IsOptional: false,
                    Type:       premadeThriftType_string,
                },
                &metadata.ThriftField{
                    Id:         6,
                    Name:       "indirectionString",
                    IsOptional: false,
                    Type:       premadeThriftType_module_IndirectionString,
                },
                &metadata.ThriftField{
                    Id:         7,
                    Name:       "string_data",
                    IsOptional: false,
                    Type:       premadeThriftType_string,
                },
                &metadata.ThriftField{
                    Id:         8,
                    Name:       "double_wrapped_bool",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedBool,
                },
                &metadata.ThriftField{
                    Id:         9,
                    Name:       "double_wrapped_integer",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedInteger,
                },
                &metadata.ThriftField{
                    Id:         10,
                    Name:       "binary_data",
                    IsOptional: false,
                    Type:       premadeThriftType_binary,
                },
            },
        }
    premadeStructMetadata_AdaptTemplatedTestStruct =
        &metadata.ThriftStruct{
            Name:    "module.AdaptTemplatedTestStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "adaptedBool",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedBool,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "adaptedByte",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedByte,
                },
                &metadata.ThriftField{
                    Id:         3,
                    Name:       "adaptedShort",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedShort,
                },
                &metadata.ThriftField{
                    Id:         4,
                    Name:       "adaptedInteger",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedInteger,
                },
                &metadata.ThriftField{
                    Id:         5,
                    Name:       "adaptedLong",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedLong,
                },
                &metadata.ThriftField{
                    Id:         6,
                    Name:       "adaptedDouble",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedDouble,
                },
                &metadata.ThriftField{
                    Id:         7,
                    Name:       "adaptedString",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedString,
                },
                &metadata.ThriftField{
                    Id:         8,
                    Name:       "adaptedList",
                    IsOptional: false,
                    Type:       premadeThriftType_list_i64,
                },
                &metadata.ThriftField{
                    Id:         9,
                    Name:       "adaptedSet",
                    IsOptional: false,
                    Type:       premadeThriftType_set_i64,
                },
                &metadata.ThriftField{
                    Id:         10,
                    Name:       "adaptedMap",
                    IsOptional: false,
                    Type:       premadeThriftType_map_i64_i64,
                },
                &metadata.ThriftField{
                    Id:         11,
                    Name:       "adaptedBoolDefault",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedBool,
                },
                &metadata.ThriftField{
                    Id:         12,
                    Name:       "adaptedByteDefault",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedByte,
                },
                &metadata.ThriftField{
                    Id:         13,
                    Name:       "adaptedShortDefault",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedShort,
                },
                &metadata.ThriftField{
                    Id:         14,
                    Name:       "adaptedIntegerDefault",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedInteger,
                },
                &metadata.ThriftField{
                    Id:         15,
                    Name:       "adaptedLongDefault",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedLong,
                },
                &metadata.ThriftField{
                    Id:         16,
                    Name:       "adaptedDoubleDefault",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedDouble,
                },
                &metadata.ThriftField{
                    Id:         17,
                    Name:       "adaptedStringDefault",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedString,
                },
                &metadata.ThriftField{
                    Id:         18,
                    Name:       "adaptedEnum",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedEnum,
                },
                &metadata.ThriftField{
                    Id:         19,
                    Name:       "adaptedListDefault",
                    IsOptional: false,
                    Type:       premadeThriftType_list_i64,
                },
                &metadata.ThriftField{
                    Id:         20,
                    Name:       "adaptedSetDefault",
                    IsOptional: false,
                    Type:       premadeThriftType_set_i64,
                },
                &metadata.ThriftField{
                    Id:         21,
                    Name:       "adaptedMapDefault",
                    IsOptional: false,
                    Type:       premadeThriftType_map_i64_i64,
                },
                &metadata.ThriftField{
                    Id:         22,
                    Name:       "doubleTypedefBool",
                    IsOptional: false,
                    Type:       premadeThriftType_module_DoubleTypedefBool,
                },
            },
        }
    premadeStructMetadata_AdaptTemplatedNestedTestStruct =
        &metadata.ThriftStruct{
            Name:    "module.AdaptTemplatedNestedTestStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "adaptedStruct",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptTemplatedTestStruct,
                },
            },
        }
    premadeStructMetadata_AdaptTestUnion =
        &metadata.ThriftStruct{
            Name:    "module.AdaptTestUnion",
            IsUnion: true,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "delay",
                    IsOptional: false,
                    Type:       premadeThriftType_module_DurationMs,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "custom",
                    IsOptional: false,
                    Type:       premadeThriftType_module_CustomProtocolType,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.Name",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                        "value":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("ThriftAdaptTestUnion"),
                            },
                    },
                },
            },
        }
    premadeStructMetadata_AdaptedStruct =
        &metadata.ThriftStruct{
            Name:    "module.AdaptedStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "data",
                    IsOptional: false,
                    Type:       premadeThriftType_i64,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.Name",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                        "value":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("ThriftAdaptedStruct"),
                            },
                    },
                },
            },
        }
    premadeStructMetadata_DirectlyAdaptedStruct =
        &metadata.ThriftStruct{
            Name:    "module.DirectlyAdaptedStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "data",
                    IsOptional: false,
                    Type:       premadeThriftType_i64,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.Adapter",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                        "name":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("::apache::thrift::test::TemplatedTestAdapter"),
                            },
                    },
                },
            },
        }
    premadeStructMetadata_StructFieldAdaptedStruct =
        &metadata.ThriftStruct{
            Name:    "module.StructFieldAdaptedStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "adaptedStruct",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedStruct,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "adaptedTypedef",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedTypedef,
                },
                &metadata.ThriftField{
                    Id:         3,
                    Name:       "directlyAdapted",
                    IsOptional: false,
                    Type:       premadeThriftType_module_DirectlyAdaptedStruct,
                },
                &metadata.ThriftField{
                    Id:         4,
                    Name:       "typedefOfAdapted",
                    IsOptional: false,
                    Type:       premadeThriftType_module_TypedefOfDirect,
                },
            },
        }
    premadeStructMetadata_CircularAdaptee =
        &metadata.ThriftStruct{
            Name:    "module.CircularAdaptee",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "field",
                    IsOptional: false,
                    Type:       premadeThriftType_module_CircularStruct,
                },
            },
        }
    premadeStructMetadata_CircularStruct =
        &metadata.ThriftStruct{
            Name:    "module.CircularStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "field",
                    IsOptional: true,
                    Type:       premadeThriftType_module_AdaptedCircularAdaptee,
                },
            },
        }
    premadeStructMetadata_ReorderedStruct =
        &metadata.ThriftStruct{
            Name:    "module.ReorderedStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "reordered_dependent_adapted",
                    IsOptional: false,
                    Type:       premadeThriftType_module_DeclaredAfterStruct,
                },
            },
        }
    premadeStructMetadata_DeclaredAfterStruct =
        &metadata.ThriftStruct{
            Name:    "module.DeclaredAfterStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.Adapter",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                        "name":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("::apache::thrift::test::IdentityAdapter<detail::DeclaredAfterStruct>"),
                            },
                    },
                },
            },
        }
    premadeStructMetadata_RenamedStruct =
        &metadata.ThriftStruct{
            Name:    "module.RenamedStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "data",
                    IsOptional: false,
                    Type:       premadeThriftType_i64,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.Adapter",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                        "name":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("::apache::thrift::test::TemplatedTestAdapter"),
                            },
                        "underlyingName":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("UnderlyingRenamedStruct"),
                            },
                    },
                },
            },
        }
    premadeStructMetadata_SameNamespaceStruct =
        &metadata.ThriftStruct{
            Name:    "module.SameNamespaceStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "data",
                    IsOptional: false,
                    Type:       premadeThriftType_i64,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.Adapter",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                        "name":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("::apache::thrift::test::TemplatedTestAdapter"),
                            },
                        "underlyingName":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("UnderlyingSameNamespaceStruct"),
                            },
                        "extraNamespace":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize(""),
                            },
                    },
                },
            },
        }
    premadeStructMetadata_HeapAllocated =
        &metadata.ThriftStruct{
            Name:    "module.HeapAllocated",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.Adapter",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                        "name":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("::apache::thrift::test::MoveOnlyAdapter"),
                            },
                        "moveOnly":
                            &metadata.ThriftConstValue{
                                CvBool: thrift.Pointerize(true),
                            },
                    },
                },
            },
        }
    premadeStructMetadata_MoveOnly =
        &metadata.ThriftStruct{
            Name:    "module.MoveOnly",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "ptr",
                    IsOptional: false,
                    Type:       premadeThriftType_module_HeapAllocated,
                },
            },
        }
    premadeStructMetadata_AlsoMoveOnly =
        &metadata.ThriftStruct{
            Name:    "module.AlsoMoveOnly",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "ptr",
                    IsOptional: false,
                    Type:       premadeThriftType_i64,
                },
            },
        }
    premadeStructMetadata_ApplyAdapter =
        &metadata.ThriftStruct{
            Name:    "module.ApplyAdapter",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.Adapter",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                        "name":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("::apache::thrift::test::TemplatedTestAdapter"),
                            },
                    },
                },
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "scope.Transitive",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                    },
                },
            },
        }
    premadeStructMetadata_TransitiveAdapted =
        &metadata.ThriftStruct{
            Name:    "module.TransitiveAdapted",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "module.ApplyAdapter",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                    },
                },
            },
        }
    premadeStructMetadata_CountingStruct =
        &metadata.ThriftStruct{
            Name:    "module.CountingStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "regularInt",
                    IsOptional: true,
                    Type:       premadeThriftType_i64,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "countingInt",
                    IsOptional: true,
                    Type:       premadeThriftType_module_CountingInt,
                },
                &metadata.ThriftField{
                    Id:         3,
                    Name:       "regularString",
                    IsOptional: true,
                    Type:       premadeThriftType_string,
                },
            },
        }
    premadeStructMetadata_Person =
        &metadata.ThriftStruct{
            Name:    "module.Person",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "name",
                    IsOptional: false,
                    Type:       premadeThriftType_string,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.Adapter",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                        "name":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("::apache::thrift::test::VariableAdapter"),
                            },
                    },
                },
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "scope.Transitive",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                    },
                },
            },
        }
    premadeStructMetadata_Person2 =
        &metadata.ThriftStruct{
            Name:    "module.Person2",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "name",
                    IsOptional: false,
                    Type:       premadeThriftType_string,
                },
            },
        }
    premadeStructMetadata_RenamedStructWithStructAdapterAndFieldAdapter =
        &metadata.ThriftStruct{
            Name:    "module.RenamedStructWithStructAdapterAndFieldAdapter",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "field",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.Adapter",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                        "name":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("::apache::thrift::test::StructAdapter"),
                            },
                        "underlyingName":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("Renamed"),
                            },
                    },
                },
            },
        }
)

var premadeThriftTypesMap = func() map[string]*metadata.ThriftType {
    fbthriftThriftTypesMap := make(map[string]*metadata.ThriftType)
    fbthriftThriftTypesMap["module.Color"] = premadeThriftType_module_Color
    fbthriftThriftTypesMap["module.ThriftAdaptedEnum"] = premadeThriftType_module_ThriftAdaptedEnum
    fbthriftThriftTypesMap["string"] = premadeThriftType_string
    fbthriftThriftTypesMap["module.MyAnnotation"] = premadeThriftType_module_MyAnnotation
    fbthriftThriftTypesMap["i32"] = premadeThriftType_i32
    fbthriftThriftTypesMap["module.i32_5137"] = premadeThriftType_module_i32_5137
    fbthriftThriftTypesMap["module.SetWithAdapter"] = premadeThriftType_module_SetWithAdapter
    fbthriftThriftTypesMap["module.StringWithAdapter"] = premadeThriftType_module_StringWithAdapter
    fbthriftThriftTypesMap["module.ListWithElemAdapter"] = premadeThriftType_module_ListWithElemAdapter
    fbthriftThriftTypesMap["module.ListWithElemAdapter_withAdapter"] = premadeThriftType_module_ListWithElemAdapter_withAdapter
    fbthriftThriftTypesMap["module.ListWithElemAdapter_withAdapter_2312"] = premadeThriftType_module_ListWithElemAdapter_withAdapter_2312
    fbthriftThriftTypesMap["module.map_string_ListWithElemAdapter_withAdapter_8454"] = premadeThriftType_module_map_string_ListWithElemAdapter_withAdapter_8454
    fbthriftThriftTypesMap["binary"] = premadeThriftType_binary
    fbthriftThriftTypesMap["module.binary_5673"] = premadeThriftType_module_binary_5673
    fbthriftThriftTypesMap["i64"] = premadeThriftType_i64
    fbthriftThriftTypesMap["module.MyI64"] = premadeThriftType_module_MyI64
    fbthriftThriftTypesMap["module.DoubleTypedefI64"] = premadeThriftType_module_DoubleTypedefI64
    fbthriftThriftTypesMap["module.Foo"] = premadeThriftType_module_Foo
    fbthriftThriftTypesMap["module.Baz"] = premadeThriftType_module_Baz
    fbthriftThriftTypesMap["module.Foo_6868"] = premadeThriftType_module_Foo_6868
    fbthriftThriftTypesMap["module.Foo_3943"] = premadeThriftType_module_Foo_3943
    fbthriftThriftTypesMap["module.FooWithAdapter"] = premadeThriftType_module_FooWithAdapter
    fbthriftThriftTypesMap["module.FooWithAdapter_9317"] = premadeThriftType_module_FooWithAdapter_9317
    fbthriftThriftTypesMap["module.Baz_7352"] = premadeThriftType_module_Baz_7352
    fbthriftThriftTypesMap["module.DirectlyAdapted"] = premadeThriftType_module_DirectlyAdapted
    fbthriftThriftTypesMap["module.ListOfFooTypedef"] = premadeThriftType_module_ListOfFooTypedef
    fbthriftThriftTypesMap["module.Bar"] = premadeThriftType_module_Bar
    fbthriftThriftTypesMap["module.IndependentDirectlyAdapted"] = premadeThriftType_module_IndependentDirectlyAdapted
    fbthriftThriftTypesMap["module.StructWithFieldAdapter"] = premadeThriftType_module_StructWithFieldAdapter
    fbthriftThriftTypesMap["module.TerseAdaptedFields"] = premadeThriftType_module_TerseAdaptedFields
    fbthriftThriftTypesMap["module.A"] = premadeThriftType_module_A
    fbthriftThriftTypesMap["module.AdaptedA"] = premadeThriftType_module_AdaptedA
    fbthriftThriftTypesMap["module.B"] = premadeThriftType_module_B
    fbthriftThriftTypesMap["module.Config"] = premadeThriftType_module_Config
    fbthriftThriftTypesMap["module.MyStruct"] = premadeThriftType_module_MyStruct
    fbthriftThriftTypesMap["module.DurationMs"] = premadeThriftType_module_DurationMs
    fbthriftThriftTypesMap["module.IOBuf"] = premadeThriftType_module_IOBuf
    fbthriftThriftTypesMap["module.CustomProtocolType"] = premadeThriftType_module_CustomProtocolType
    fbthriftThriftTypesMap["module.IndirectionString"] = premadeThriftType_module_IndirectionString
    fbthriftThriftTypesMap["bool"] = premadeThriftType_bool
    fbthriftThriftTypesMap["module.AdaptedBool"] = premadeThriftType_module_AdaptedBool
    fbthriftThriftTypesMap["module.AdaptedInteger"] = premadeThriftType_module_AdaptedInteger
    fbthriftThriftTypesMap["module.AdaptTestStruct"] = premadeThriftType_module_AdaptTestStruct
    fbthriftThriftTypesMap["byte"] = premadeThriftType_byte
    fbthriftThriftTypesMap["module.AdaptedByte"] = premadeThriftType_module_AdaptedByte
    fbthriftThriftTypesMap["i16"] = premadeThriftType_i16
    fbthriftThriftTypesMap["module.AdaptedShort"] = premadeThriftType_module_AdaptedShort
    fbthriftThriftTypesMap["module.AdaptedLong"] = premadeThriftType_module_AdaptedLong
    fbthriftThriftTypesMap["double"] = premadeThriftType_double
    fbthriftThriftTypesMap["module.AdaptedDouble"] = premadeThriftType_module_AdaptedDouble
    fbthriftThriftTypesMap["module.AdaptedString"] = premadeThriftType_module_AdaptedString
    fbthriftThriftTypesMap["module.AdaptedEnum"] = premadeThriftType_module_AdaptedEnum
    fbthriftThriftTypesMap["module.DoubleTypedefBool"] = premadeThriftType_module_DoubleTypedefBool
    fbthriftThriftTypesMap["module.AdaptTemplatedTestStruct"] = premadeThriftType_module_AdaptTemplatedTestStruct
    fbthriftThriftTypesMap["module.AdaptTemplatedNestedTestStruct"] = premadeThriftType_module_AdaptTemplatedNestedTestStruct
    fbthriftThriftTypesMap["module.AdaptTestUnion"] = premadeThriftType_module_AdaptTestUnion
    fbthriftThriftTypesMap["module.AdaptedStruct"] = premadeThriftType_module_AdaptedStruct
    fbthriftThriftTypesMap["module.DirectlyAdaptedStruct"] = premadeThriftType_module_DirectlyAdaptedStruct
    fbthriftThriftTypesMap["module.AdaptedTypedef"] = premadeThriftType_module_AdaptedTypedef
    fbthriftThriftTypesMap["module.TypedefOfDirect"] = premadeThriftType_module_TypedefOfDirect
    fbthriftThriftTypesMap["module.StructFieldAdaptedStruct"] = premadeThriftType_module_StructFieldAdaptedStruct
    fbthriftThriftTypesMap["module.CircularStruct"] = premadeThriftType_module_CircularStruct
    fbthriftThriftTypesMap["module.CircularAdaptee"] = premadeThriftType_module_CircularAdaptee
    fbthriftThriftTypesMap["module.AdaptedCircularAdaptee"] = premadeThriftType_module_AdaptedCircularAdaptee
    fbthriftThriftTypesMap["module.DeclaredAfterStruct"] = premadeThriftType_module_DeclaredAfterStruct
    fbthriftThriftTypesMap["module.ReorderedStruct"] = premadeThriftType_module_ReorderedStruct
    fbthriftThriftTypesMap["module.RenamedStruct"] = premadeThriftType_module_RenamedStruct
    fbthriftThriftTypesMap["module.SameNamespaceStruct"] = premadeThriftType_module_SameNamespaceStruct
    fbthriftThriftTypesMap["module.HeapAllocated"] = premadeThriftType_module_HeapAllocated
    fbthriftThriftTypesMap["module.MoveOnly"] = premadeThriftType_module_MoveOnly
    fbthriftThriftTypesMap["module.AlsoMoveOnly"] = premadeThriftType_module_AlsoMoveOnly
    fbthriftThriftTypesMap["module.ApplyAdapter"] = premadeThriftType_module_ApplyAdapter
    fbthriftThriftTypesMap["module.TransitiveAdapted"] = premadeThriftType_module_TransitiveAdapted
    fbthriftThriftTypesMap["module.CountingInt"] = premadeThriftType_module_CountingInt
    fbthriftThriftTypesMap["module.CountingStruct"] = premadeThriftType_module_CountingStruct
    fbthriftThriftTypesMap["module.Person"] = premadeThriftType_module_Person
    fbthriftThriftTypesMap["module.Person2"] = premadeThriftType_module_Person2
    fbthriftThriftTypesMap["module.RenamedStructWithStructAdapterAndFieldAdapter"] = premadeThriftType_module_RenamedStructWithStructAdapterAndFieldAdapter
    fbthriftThriftTypesMap["module.MyI32"] = premadeThriftType_module_MyI32
    fbthriftThriftTypesMap["module.StructWithAdapter"] = premadeThriftType_module_StructWithAdapter
    fbthriftThriftTypesMap["module.UnionWithAdapter"] = premadeThriftType_module_UnionWithAdapter
    fbthriftThriftTypesMap["module.StringWithCppAdapter"] = premadeThriftType_module_StringWithCppAdapter
    fbthriftThriftTypesMap["module.MyI32_4873"] = premadeThriftType_module_MyI32_4873
    fbthriftThriftTypesMap["module.StringWithAdapter_7208"] = premadeThriftType_module_StringWithAdapter_7208
    return fbthriftThriftTypesMap
}()

var structMetadatas = func() []*metadata.ThriftStruct {
    fbthriftResults := make([]*metadata.ThriftStruct, 0)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_MyAnnotation)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_Foo)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_Baz)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_Bar)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_DirectlyAdapted)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_IndependentDirectlyAdapted)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_StructWithFieldAdapter)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_TerseAdaptedFields)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_B)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_A)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_Config)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_MyStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_AdaptTestStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_AdaptTemplatedTestStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_AdaptTemplatedNestedTestStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_AdaptTestUnion)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_AdaptedStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_DirectlyAdaptedStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_StructFieldAdaptedStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_CircularAdaptee)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_CircularStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_ReorderedStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_DeclaredAfterStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_RenamedStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_SameNamespaceStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_HeapAllocated)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_MoveOnly)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_AlsoMoveOnly)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_ApplyAdapter)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_TransitiveAdapted)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_CountingStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_Person)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_Person2)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_RenamedStructWithStructAdapterAndFieldAdapter)
    return fbthriftResults
}()

var exceptionMetadatas = func() []*metadata.ThriftException {
    fbthriftResults := make([]*metadata.ThriftException, 0)
    return fbthriftResults
}()

var enumMetadatas = func() []*metadata.ThriftEnum {
    fbthriftResults := make([]*metadata.ThriftEnum, 0)
    fbthriftResults = append(fbthriftResults,
        &metadata.ThriftEnum{
            Name:     "module.Color",
            Elements: map[int32]string{
                0: "UNKNOWN",
                1: "RED",
                2: "GREEN",
                3: "BLUE",
            },
        },
    )
    fbthriftResults = append(fbthriftResults,
        &metadata.ThriftEnum{
            Name:     "module.ThriftAdaptedEnum",
            Elements: map[int32]string{
                0: "Zero",
                1: "One",
            },
        },
    )
    return fbthriftResults
}()

var serviceMetadatas = func() []*metadata.ThriftService {
    fbthriftResults := make([]*metadata.ThriftService, 0)
    fbthriftResults = append(fbthriftResults,
        &metadata.ThriftService{
            Name:      "module.Service",
            Functions: []*metadata.ThriftFunction{
                &metadata.ThriftFunction{
                    Name:       "func",
                    IsOneway:   false,
                    ReturnType: premadeThriftType_module_MyI32_4873,
                    Arguments:  []*metadata.ThriftField{
                        &metadata.ThriftField{
                            Id:         1,
                            Name:       "arg1",
                            IsOptional: false,
                            Type:       premadeThriftType_module_StringWithAdapter_7208,
                        },
                        &metadata.ThriftField{
                            Id:         2,
                            Name:       "arg2",
                            IsOptional: false,
                            Type:       premadeThriftType_module_StringWithCppAdapter,
                        },
                        &metadata.ThriftField{
                            Id:         3,
                            Name:       "arg3",
                            IsOptional: false,
                            Type:       premadeThriftType_module_Foo,
                        },
                    },
                },
            },
        },
    )
    fbthriftResults = append(fbthriftResults,
        &metadata.ThriftService{
            Name:      "module.AdapterService",
            Functions: []*metadata.ThriftFunction{
                &metadata.ThriftFunction{
                    Name:       "count",
                    IsOneway:   false,
                    ReturnType: premadeThriftType_module_CountingStruct,
                },
                &metadata.ThriftFunction{
                    Name:       "adaptedTypes",
                    IsOneway:   false,
                    ReturnType: premadeThriftType_module_HeapAllocated,
                    Arguments:  []*metadata.ThriftField{
                        &metadata.ThriftField{
                            Id:         1,
                            Name:       "arg",
                            IsOptional: false,
                            Type:       premadeThriftType_module_HeapAllocated,
                        },
                    },
                },
            },
        },
    )
    return fbthriftResults
}()

// Thrift metadata for this package, as well as all of its recursive imports.
var packageThriftMetadata = func() *metadata.ThriftMetadata {
    allEnumsMap := make(map[string]*metadata.ThriftEnum)
    allStructsMap := make(map[string]*metadata.ThriftStruct)
    allExceptionsMap := make(map[string]*metadata.ThriftException)
    allServicesMap := make(map[string]*metadata.ThriftService)

    // Add enum metadatas from the current program...
    for _, enumMetadata := range enumMetadatas {
        allEnumsMap[enumMetadata.GetName()] = enumMetadata
    }
    // Add struct metadatas from the current program...
    for _, structMetadata := range structMetadatas {
        allStructsMap[structMetadata.GetName()] = structMetadata
    }
    // Add exception metadatas from the current program...
    for _, exceptionMetadata := range exceptionMetadatas {
        allExceptionsMap[exceptionMetadata.GetName()] = exceptionMetadata
    }
    // Add service metadatas from the current program...
    for _, serviceMetadata := range serviceMetadatas {
        allServicesMap[serviceMetadata.GetName()] = serviceMetadata
    }

    // Obtain Thrift metadatas from recursively included programs...
    var recursiveThriftMetadatas []*metadata.ThriftMetadata

    // ...now merge metadatas from recursively included programs.
    for _, thriftMetadata := range recursiveThriftMetadatas {
        maps.Copy(allEnumsMap, thriftMetadata.GetEnums())
        maps.Copy(allStructsMap, thriftMetadata.GetStructs())
        maps.Copy(allExceptionsMap, thriftMetadata.GetExceptions())
        maps.Copy(allServicesMap, thriftMetadata.GetServices())
    }

    return metadata.NewThriftMetadata().
        SetEnums(allEnumsMap).
        SetStructs(allStructsMap).
        SetExceptions(allExceptionsMap).
        SetServices(allServicesMap)
}()

// GetMetadataThriftType (INTERNAL USE ONLY).
// Returns metadata ThriftType for a given full type name.
func GetMetadataThriftType(fullName string) *metadata.ThriftType {
    return premadeThriftTypesMap[fullName]
}

// GetThriftMetadata returns complete Thrift metadata for current and imported packages.
func GetThriftMetadata() *metadata.ThriftMetadata {
    return packageThriftMetadata
}

// GetThriftMetadataForService returns Thrift metadata for the given service.
func GetThriftMetadataForService(scopedServiceName string) *metadata.ThriftMetadata {
    allServicesMap := packageThriftMetadata.GetServices()
    relevantServicesMap := make(map[string]*metadata.ThriftService)

    serviceMetadata := allServicesMap[scopedServiceName]
    // Visit and record all recursive parents of the target service.
    for serviceMetadata != nil {
        relevantServicesMap[serviceMetadata.GetName()] = serviceMetadata
        if serviceMetadata.IsSetParent() {
            serviceMetadata = allServicesMap[serviceMetadata.GetParent()]
        } else {
            serviceMetadata = nil
        }
    }

    return metadata.NewThriftMetadata().
        SetEnums(packageThriftMetadata.GetEnums()).
        SetStructs(packageThriftMetadata.GetStructs()).
        SetExceptions(packageThriftMetadata.GetExceptions()).
        SetServices(relevantServicesMap)
}
