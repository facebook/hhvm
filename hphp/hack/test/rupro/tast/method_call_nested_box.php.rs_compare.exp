--- ocaml
+++ rust
@@ -79,14 +80,13 @@
          { fb_ast =
            [([13:5-26],
              (Expr
-                ((IBox<<expr#1> as IBox<int>>), [13:5-25],
-                 (Binop ((Eq None), ((IBox<<expr#1> as IBox<int>>), [13:5-9], (Lvar ([13:5-9], $box))),
-                    ((IBox<<expr#1> as IBox<int>>), [13:12-25],
+                ((IBox<IBox<int>>), [13:5-25],
+                 (Binop ((Eq None), ((IBox<IBox<int>>), [13:5-9], (Lvar ([13:5-9], $box))),
+                    ((IBox<IBox<int>>), [13:12-25],
                      (Call (
-                        (((function<T>(): IBox<<expr#1> as IBox<int>>)), [13:12-23],
-                         (Obj_get (((IBoxFactory), [13:12-14], (Lvar ([13:12-14], $f))), (
-                            ((function<T>(): IBox<<expr#1> as IBox<int>>)), [13:16-23], (Id ([13:16-23], "new_box"))), OG_nullthrows, Is_method))),
-                        [((<expr#1> as IBox<int>), ([13:16-23], (Happly (([Pos.none], "_"), []))))], 
+                        (((function<T>(): IBox<IBox<int>>)), [13:12-23],
+                         (Obj_get (((IBoxFactory), [13:12-14], (Lvar ([13:12-14], $f))), (((function<T>(): IBox<IBox<int>>)), [13:16-23], (Id ([13:16-23], "new_box"))), OG_nullthrows, Is_method))),
+                        [((IBox<int>), ([13:16-23], (Happly (([Pos.none], "_"), []))))], 
                         [], None)))
                     )))));
              ([14:5-33],
@@ -111,9 +111,8 @@
               (Expr
                  ((void), [16:5-27],
                   (Call (
-                     (((function(<expr#1> as IBox<int> $x): void)), [16:5-14],
-                      (Obj_get (((IBox<<expr#1> as IBox<int>>), [16:5-9], (Lvar ([16:5-9], $box))), (
-                         ((function(<expr#1> as IBox<int> $x): void)), [16:11-14], (Id ([16:11-14], "set"))), OG_nullthrows, Is_method))),
+                     (((function(IBox<int> $x): void)), [16:5-14],
+                      (Obj_get (((IBox<IBox<int>>), [16:5-9], (Lvar ([16:5-9], $box))), (((function(IBox<int> $x): void)), [16:11-14], (Id ([16:11-14], "set"))), OG_nullthrows, Is_method))),
                      [], [(Pnormal, ((IBox<int>), [16:15-26], (Lvar ([16:15-26], $nested_box))))], None)))));
              ([17:5-29],
               (Expr
@@ -123,11 +122,10 @@
                       (Call (
                          (((function(): int)), [17:10-26],
                           (Obj_get (
-                             ((<expr#1> as IBox<int>), [17:10-21],
+                             ((IBox<int>), [17:10-21],
                               (Call (
-                                 (((function(): <expr#1> as IBox<int>)), [17:10-19],
-                                  (Obj_get (((IBox<<expr#1> as IBox<int>>), [17:10-14], (Lvar ([17:10-14], $box))), (
-                                     ((function(): <expr#1> as IBox<int>)), [17:16-19], (Id ([17:16-19], "get"))), OG_nullthrows, Is_method))),
+                                 (((function(): IBox<int>)), [17:10-19],
+                                  (Obj_get (((IBox<IBox<int>>), [17:10-14], (Lvar ([17:10-14], $box))), (((function(): IBox<int>)), [17:16-19], (Id ([17:16-19], "get"))), OG_nullthrows, Is_method))),
                                  [], [], None))),
                              (((function(): int)), [17:23-26], (Id ([17:23-26], "get"))), OG_nullthrows, Is_method))),
                          [], [], None)))
