.hh_file 1;

.main {
  Int 1
  RetC
}

.function <"object" "object" hh_type extended_hint > map(<"HH\\mixed" N  > $callback = DV4("""f()""")) {
  .numiters 2;
  .declvars $res $v $k;
L3:
  CGetL $callback
  DecodeCufIter 0 L0
  .try {
    This
    Clone
    SetL $res
    PopC
    This
    IterInitK 1 L1 $v $k
    .try {
    L2:
      FPushCufIter 1 0
      CGetL $v
      FThrowOnRefMismatch "0"
      FCall 1 0 1 - "" ""
      UnboxR
      AssertRATL $res Obj=HH\Map
      BaseL $res Define
      SetM 0 EL:$k
      PopC
      IterNextK 1 L2 $v $k
      Jmp L1
    } .catch {
      IterFree 1
      Throw
    }
  } .catch {
    CIterFree 0
    Throw
  }
L1:
  CIterFree 0
  AssertRATL $res Obj=HH\Map
  CGetL $res
  RetC
L0:
  FPushCtorD 1 "InvalidArgumentException"
  String "Parameter must be a valid callback"
  FCall 1 0 1 - "" ""
  PopR
  Throw
DV4:
  FPushFuncD 0 "f"
  FCall 0 0 1 - "" ""
  UnboxR
  SetL $callback
  PopC
  JmpNS L3
}
