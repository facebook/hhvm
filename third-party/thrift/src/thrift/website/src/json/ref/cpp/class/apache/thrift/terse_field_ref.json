{
  "refid": "classapache_1_1thrift_1_1terse__field__ref",
  "kind": "class",
  "language": "C++",
  "prot": "public",
  "compoundname_html": "apache::thrift::terse_field_ref",
  "includes": {
    "refid": "FieldRef_8h",
    "local": "no",
    "text_html": "FieldRef.h"
  },
  "tparams": [
    {
      "type_html": "typename",
      "declname_html": "T",
      "defname_html": "T"
    }
  ],
  "types": [
    {
      "refid": "classapache_1_1thrift_1_1terse__field__ref_1a975969c2259230587522ee2d54105ad1",
      "prot": "public",
      "type_html": "std::remove_reference_t&lt;T&gt;",
      "definition_html": "using apache::thrift::terse_field_ref&lt; T &gt;::value_type =  std::remove_reference_t&lt;T&gt;",
      "argsstring_html": "",
      "name_html": "value_type",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "2238",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "2238",
        "bodyend": "-1"
      },
      "parentid": "classapache_1_1thrift_1_1terse__field__ref"
    },
    {
      "refid": "classapache_1_1thrift_1_1terse__field__ref_1a0bf60544e89d3f5cf4ba48f62d98d633",
      "prot": "public",
      "type_html": "T",
      "definition_html": "using apache::thrift::terse_field_ref&lt; T &gt;::reference_type =  T",
      "argsstring_html": "",
      "name_html": "reference_type",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "2239",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "2239",
        "bodyend": "-1"
      },
      "parentid": "classapache_1_1thrift_1_1terse__field__ref"
    }
  ],
  "functions": [
    {
      "refid": "classapache_1_1thrift_1_1terse__field__ref_1af702ed988df928c0ab0772e9fe65bdc2",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "type_html": "FOLLY_ERASE",
      "definition_html": "FOLLY_ERASE apache::thrift::terse_field_ref&lt; T &gt;::terse_field_ref",
      "argsstring_html": "(reference_type value) noexcept",
      "name_html": "terse_field_ref",
      "param": [
        {
          "type_html": "<code>reference_type</code>",
          "declname_html": "value"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "2241",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "2241",
        "bodyend": "2241"
      },
      "definition": {
        "simple_html": "FOLLY_ERASE terse_field_ref(reference_type value)",
        "simple_raw": "FOLLY_ERASE terse_field_ref(reference_type value)",
        "detailed_html": "inline FOLLY_ERASE terse_field_ref(reference_type value) noexcept",
        "detailed_raw": "inline FOLLY_ERASE terse_field_ref(reference_type value) noexcept",
        "original_definition_html": "FOLLY_ERASE apache::thrift::terse_field_ref&lt; T &gt;::terse_field_ref",
        "original_argsstring_html": "(reference_type value) noexcept"
      },
      "filepath": "fns/class/apache/thrift/terse_field_ref/terse_field_ref",
      "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/terse_field_ref"
    },
    {
      "refid": "classapache_1_1thrift_1_1terse__field__ref_1a6d7d265fcfdc4357b55d7b23bd239dc8",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename U"
        },
        {
          "type_html": "typename",
          "defval_html": "<code>detail::EnableIfImplicit</code>&lt;T, U&gt;"
        }
      ],
      "type_html": "FOLLY_ERASE",
      "definition_html": "FOLLY_ERASE apache::thrift::terse_field_ref&lt; T &gt;::terse_field_ref",
      "argsstring_html": "(const terse_field_ref&lt; U &gt; &amp;other) noexcept",
      "name_html": "terse_field_ref",
      "param": [
        {
          "type_html": "const <code>terse_field_ref</code>&lt; U &gt; &amp;",
          "declname_html": "other"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "2244",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "2244",
        "bodyend": "2246"
      },
      "definition": {
        "simple_html": "template &lt;typename U, typename = detail::EnableIfImplicit&lt;T, U&gt;&gt;\nFOLLY_ERASE terse_field_ref(const terse_field_ref&lt;U&gt;&amp; other)",
        "simple_raw": "template <typename U, typename = detail::EnableIfImplicit<T, U>>\nFOLLY_ERASE terse_field_ref(const terse_field_ref<U>& other)",
        "detailed_html": "template &lt;typename U, typename = detail::EnableIfImplicit&lt;T, U&gt;&gt;\ninline FOLLY_ERASE terse_field_ref(const terse_field_ref&lt;U&gt;&amp; other) noexcept",
        "detailed_raw": "template <typename U, typename = detail::EnableIfImplicit<T, U>>\ninline FOLLY_ERASE terse_field_ref(const terse_field_ref<U>& other) noexcept",
        "original_definition_html": "FOLLY_ERASE apache::thrift::terse_field_ref&lt; T &gt;::terse_field_ref",
        "original_argsstring_html": "(const terse_field_ref&lt; U &gt; &amp;other) noexcept"
      },
      "filepath": "fns/class/apache/thrift/terse_field_ref/terse_field_ref",
      "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/terse_field_ref"
    },
    {
      "refid": "classapache_1_1thrift_1_1terse__field__ref_1aba79ca7990b3b96a948085826a5ed6f2",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "yes",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename U"
        },
        {
          "type_html": "std::enable_if_t&lt; std::is_same&lt; T, U &amp;&amp;&gt;{}||std::is_same&lt; T, const U &amp;&amp;&gt;{}, int &gt;",
          "defval_html": "0"
        }
      ],
      "type_html": "FOLLY_ERASE",
      "definition_html": "FOLLY_ERASE apache::thrift::terse_field_ref&lt; T &gt;::terse_field_ref",
      "argsstring_html": "(const terse_field_ref&lt; U &amp;&gt; &amp;other) noexcept",
      "name_html": "terse_field_ref",
      "param": [
        {
          "type_html": "const <code>terse_field_ref</code>&lt; U &amp;&gt; &amp;",
          "declname_html": "other"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "2253",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "2253",
        "bodyend": "2255"
      },
      "definition": {
        "simple_html": "template &lt;\n    typename U,\n    std::enable_if_t&lt;\n        std::is_same&lt;T, U&amp;&amp;&gt;{} || std::is_same&lt;T, const U&amp;&amp;&gt;{},\n        int&gt; = 0&gt;\nFOLLY_ERASE terse_field_ref(const terse_field_ref&lt;U&amp;&gt;&amp; other)",
        "simple_raw": "template <\n    typename U,\n    std::enable_if_t<\n        std::is_same<T, U&&>{} || std::is_same<T, const U&&>{},\n        int> = 0>\nFOLLY_ERASE terse_field_ref(const terse_field_ref<U&>& other)",
        "detailed_html": "template &lt;\n    typename U,\n    std::enable_if_t&lt;\n        std::is_same&lt;T, U&amp;&amp;&gt;{} || std::is_same&lt;T, const U&amp;&amp;&gt;{},\n        int&gt; = 0&gt;\nexplicit inline FOLLY_ERASE terse_field_ref(\n    const terse_field_ref&lt;U&amp;&gt;&amp; other) noexcept",
        "detailed_raw": "template <\n    typename U,\n    std::enable_if_t<\n        std::is_same<T, U&&>{} || std::is_same<T, const U&&>{},\n        int> = 0>\nexplicit inline FOLLY_ERASE terse_field_ref(\n    const terse_field_ref<U&>& other) noexcept",
        "original_definition_html": "FOLLY_ERASE apache::thrift::terse_field_ref&lt; T &gt;::terse_field_ref",
        "original_argsstring_html": "(const terse_field_ref&lt; U &amp;&gt; &amp;other) noexcept"
      },
      "filepath": "fns/class/apache/thrift/terse_field_ref/terse_field_ref",
      "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/terse_field_ref"
    },
    {
      "refid": "classapache_1_1thrift_1_1terse__field__ref_1a0a3496a3dec30a3c9b69d98172d85981",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename U",
          "defval_html": "<code>value_type</code>"
        }
      ],
      "type_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_assignable&lt; <code>value_type</code> &amp;, U &amp;&amp; &gt;::<code>value</code>, <code>terse_field_ref</code> &amp; &gt;",
      "definition_html": "FOLLY_ERASE std:: enable_if_t&lt;std::is_assignable&lt;value_type&amp;, U&amp;&amp;&gt;::value, terse_field_ref&amp;&gt; apache::thrift::terse_field_ref&lt; T &gt;::operator=",
      "argsstring_html": "(U &amp;&amp;value) noexcept(std::is_nothrow_assignable&lt; value_type &amp;, U &amp;&amp;&gt;::value)",
      "name_html": "operator=",
      "param": [
        {
          "type_html": "U &amp;&amp;",
          "declname_html": "value"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "2260",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "2260",
        "bodyend": "2264"
      },
      "definition": {
        "simple_html": "template &lt;typename U = value_type&gt;\nFOLLY_ERASE std::\n    enable_if_t&lt;std::is_assignable&lt;value_type&amp;, U&amp;&amp;&gt;::value, terse_field_ref&amp;&gt;\n    operator=(U&amp;&amp; value)",
        "simple_raw": "template <typename U = value_type>\nFOLLY_ERASE std::\n    enable_if_t<std::is_assignable<value_type&, U&&>::value, terse_field_ref&>\n    operator=(U&& value)",
        "detailed_html": "template &lt;typename U = value_type&gt;\ninline FOLLY_ERASE std::\n    enable_if_t&lt;std::is_assignable&lt;value_type&amp;, U&amp;&amp;&gt;::value, terse_field_ref&amp;&gt;\n    operator=(U&amp;&amp; value) noexcept(\n        (std::is_nothrow_assignable&lt;value_type&amp;, U&amp;&amp;&gt;::value))",
        "detailed_raw": "template <typename U = value_type>\ninline FOLLY_ERASE std::\n    enable_if_t<std::is_assignable<value_type&, U&&>::value, terse_field_ref&>\n    operator=(U&& value) noexcept(\n        (std::is_nothrow_assignable<value_type&, U&&>::value))",
        "original_definition_html": "FOLLY_ERASE std:: enable_if_t&lt;std::is_assignable&lt;value_type&amp;, U&amp;&amp;&gt;::value, terse_field_ref&amp;&gt; apache::thrift::terse_field_ref&lt; T &gt;::operator=",
        "original_argsstring_html": "(U &amp;&amp;value) noexcept(std::is_nothrow_assignable&lt; value_type &amp;, U &amp;&amp;&gt;::value)"
      },
      "filepath": "fns/class/apache/thrift/terse_field_ref/operator.assign",
      "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/operator.assign"
    },
    {
      "refid": "classapache_1_1thrift_1_1terse__field__ref_1aa0e20c7df79f2015e9faca2a4ad2e2e6",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "type_html": "FOLLY_ERASE <code>terse_field_ref</code> &amp;",
      "definition_html": "FOLLY_ERASE terse_field_ref&amp; apache::thrift::terse_field_ref&lt; T &gt;::operator=",
      "argsstring_html": "(value_type &amp;&amp;value) noexcept(std::is_nothrow_move_assignable&lt; value_type &gt;::value)",
      "name_html": "operator=",
      "param": [
        {
          "type_html": "<code>value_type</code> &amp;&amp;",
          "declname_html": "value"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "2267",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "2267",
        "bodyend": "2272"
      },
      "definition": {
        "simple_html": "FOLLY_ERASE terse_field_ref&amp; operator=(value_type&amp;&amp; value)",
        "simple_raw": "FOLLY_ERASE terse_field_ref& operator=(value_type&& value)",
        "detailed_html": "inline FOLLY_ERASE terse_field_ref&amp; operator=(value_type&amp;&amp; value) noexcept(\n    (std::is_nothrow_move_assignable&lt;value_type&gt;::value))",
        "detailed_raw": "inline FOLLY_ERASE terse_field_ref& operator=(value_type&& value) noexcept(\n    (std::is_nothrow_move_assignable<value_type>::value))",
        "original_definition_html": "FOLLY_ERASE terse_field_ref&amp; apache::thrift::terse_field_ref&lt; T &gt;::operator=",
        "original_argsstring_html": "(value_type &amp;&amp;value) noexcept(std::is_nothrow_move_assignable&lt; value_type &gt;::value)"
      },
      "filepath": "fns/class/apache/thrift/terse_field_ref/operator.assign",
      "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/operator.assign"
    },
    {
      "refid": "classapache_1_1thrift_1_1terse__field__ref_1a43828a8d4f46a4bb0b0975d80967211d",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename U"
        }
      ],
      "type_html": "FOLLY_ERASE void",
      "definition_html": "FOLLY_ERASE void apache::thrift::terse_field_ref&lt; T &gt;::copy_from",
      "argsstring_html": "(const terse_field_ref&lt; U &gt; &amp;other) noexcept(std::is_nothrow_assignable&lt; value_type &amp;, U &gt;::value)",
      "name_html": "copy_from",
      "param": [
        {
          "type_html": "const <code>terse_field_ref</code>&lt; U &gt; &amp;",
          "declname_html": "other"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "2275",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "2275",
        "bodyend": "2278"
      },
      "definition": {
        "simple_html": "template &lt;typename U&gt;\nFOLLY_ERASE void copy_from(const terse_field_ref&lt;U&gt;&amp; other)",
        "simple_raw": "template <typename U>\nFOLLY_ERASE void copy_from(const terse_field_ref<U>& other)",
        "detailed_html": "template &lt;typename U&gt;\ninline FOLLY_ERASE void copy_from(const terse_field_ref&lt;U&gt;&amp; other) noexcept(\n    (std::is_nothrow_assignable&lt;value_type&amp;, U&gt;::value))",
        "detailed_raw": "template <typename U>\ninline FOLLY_ERASE void copy_from(const terse_field_ref<U>& other) noexcept(\n    (std::is_nothrow_assignable<value_type&, U>::value))",
        "original_definition_html": "FOLLY_ERASE void apache::thrift::terse_field_ref&lt; T &gt;::copy_from",
        "original_argsstring_html": "(const terse_field_ref&lt; U &gt; &amp;other) noexcept(std::is_nothrow_assignable&lt; value_type &amp;, U &gt;::value)"
      },
      "filepath": "fns/class/apache/thrift/terse_field_ref/copy_from",
      "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/copy_from"
    },
    {
      "refid": "classapache_1_1thrift_1_1terse__field__ref_1a9418899f488bfa85932f26c4edff4a9c",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename U"
        }
      ],
      "type_html": "FOLLY_ERASE void",
      "definition_html": "FOLLY_ERASE void apache::thrift::terse_field_ref&lt; T &gt;::move_from",
      "argsstring_html": "(terse_field_ref&lt; U &gt; other) noexcept(std::is_nothrow_assignable&lt; value_type &amp;, std::remove_reference_t&lt; U &gt; &amp;&amp;&gt;::value)",
      "name_html": "move_from",
      "param": [
        {
          "type_html": "<code>terse_field_ref</code>&lt; U &gt;",
          "declname_html": "other"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "2281",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "2281",
        "bodyend": "2285"
      },
      "definition": {
        "simple_html": "template &lt;typename U&gt;\nFOLLY_ERASE void move_from(terse_field_ref&lt;U&gt; other)",
        "simple_raw": "template <typename U>\nFOLLY_ERASE void move_from(terse_field_ref<U> other)",
        "detailed_html": "template &lt;typename U&gt;\ninline FOLLY_ERASE void move_from(terse_field_ref&lt;U&gt; other) noexcept(\n    (std::is_nothrow_assignable&lt;value_type&amp;, std::remove_reference_t&lt;U&gt;&amp;&amp;&gt;::\n         value))",
        "detailed_raw": "template <typename U>\ninline FOLLY_ERASE void move_from(terse_field_ref<U> other) noexcept(\n    (std::is_nothrow_assignable<value_type&, std::remove_reference_t<U>&&>::\n         value))",
        "original_definition_html": "FOLLY_ERASE void apache::thrift::terse_field_ref&lt; T &gt;::move_from",
        "original_argsstring_html": "(terse_field_ref&lt; U &gt; other) noexcept(std::is_nothrow_assignable&lt; value_type &amp;, std::remove_reference_t&lt; U &gt; &amp;&amp;&gt;::value)"
      },
      "filepath": "fns/class/apache/thrift/terse_field_ref/move_from",
      "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/move_from"
    },
    {
      "refid": "classapache_1_1thrift_1_1terse__field__ref_1a412b635fc006b2a329295eb0b7986d8e",
      "prot": "public",
      "static": "no",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "type_html": "FOLLY_ERASE <code>reference_type</code>",
      "definition_html": "FOLLY_ERASE reference_type apache::thrift::terse_field_ref&lt; T &gt;::value",
      "argsstring_html": "() const noexcept",
      "name_html": "value",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "2287",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "2287",
        "bodyend": "2289"
      },
      "definition": {
        "simple_html": "FOLLY_ERASE reference_type value() const",
        "simple_raw": "FOLLY_ERASE reference_type value() const",
        "detailed_html": "inline FOLLY_ERASE reference_type value() const noexcept",
        "detailed_raw": "inline FOLLY_ERASE reference_type value() const noexcept",
        "original_definition_html": "FOLLY_ERASE reference_type apache::thrift::terse_field_ref&lt; T &gt;::value",
        "original_argsstring_html": "() const noexcept"
      },
      "filepath": "fns/class/apache/thrift/terse_field_ref/value",
      "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/value"
    },
    {
      "refid": "classapache_1_1thrift_1_1terse__field__ref_1a7a4794cf4fc4127f281445d436cd3112",
      "prot": "public",
      "static": "no",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "type_html": "FOLLY_ERASE <code>reference_type</code>",
      "definition_html": "FOLLY_ERASE reference_type apache::thrift::terse_field_ref&lt; T &gt;::operator*",
      "argsstring_html": "() const noexcept",
      "name_html": "operator*",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "2291",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "2291",
        "bodyend": "2293"
      },
      "definition": {
        "simple_html": "FOLLY_ERASE reference_type operator*() const",
        "simple_raw": "FOLLY_ERASE reference_type operator*() const",
        "detailed_html": "inline FOLLY_ERASE reference_type operator*() const noexcept",
        "detailed_raw": "inline FOLLY_ERASE reference_type operator*() const noexcept",
        "original_definition_html": "FOLLY_ERASE reference_type apache::thrift::terse_field_ref&lt; T &gt;::operator*",
        "original_argsstring_html": "() const noexcept"
      },
      "filepath": "fns/class/apache/thrift/terse_field_ref/operator.mul",
      "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/operator.mul"
    },
    {
      "refid": "classapache_1_1thrift_1_1terse__field__ref_1ace42e46a96d553629d6f8d7eef098954",
      "prot": "public",
      "static": "no",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename U",
          "defval_html": "<code>value_type</code>"
        }
      ],
      "type_html": "FOLLY_ERASE <code>detail::EnableIfNonConst</code>&lt; U &gt; *",
      "definition_html": "FOLLY_ERASE detail::EnableIfNonConst&lt;U&gt;* apache::thrift::terse_field_ref&lt; T &gt;::operator-&gt;",
      "argsstring_html": "() const noexcept",
      "name_html": "operator-&gt;",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "2300",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "2300",
        "bodyend": "2302"
      },
      "definition": {
        "simple_html": "template &lt;typename U = value_type&gt;\nFOLLY_ERASE detail::EnableIfNonConst&lt;U&gt;* operator-&gt;() const",
        "simple_raw": "template <typename U = value_type>\nFOLLY_ERASE detail::EnableIfNonConst<U>* operator->() const",
        "detailed_html": "template &lt;typename U = value_type&gt;\ninline FOLLY_ERASE detail::EnableIfNonConst&lt;U&gt;* operator-&gt;() const noexcept",
        "detailed_raw": "template <typename U = value_type>\ninline FOLLY_ERASE detail::EnableIfNonConst<U>* operator->() const noexcept",
        "original_definition_html": "FOLLY_ERASE detail::EnableIfNonConst&lt;U&gt;* apache::thrift::terse_field_ref&lt; T &gt;::operator-&gt;",
        "original_argsstring_html": "() const noexcept"
      },
      "filepath": "fns/class/apache/thrift/terse_field_ref/operator.arrow",
      "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/operator.arrow"
    },
    {
      "refid": "classapache_1_1thrift_1_1terse__field__ref_1a55f16c1dc6a2e439791f7624a6b5f949",
      "prot": "public",
      "static": "no",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename U",
          "defval_html": "<code>value_type</code>"
        }
      ],
      "type_html": "FOLLY_ERASE <code>detail::EnableIfConst</code>&lt; U &gt; *",
      "definition_html": "FOLLY_ERASE detail::EnableIfConst&lt;U&gt;* apache::thrift::terse_field_ref&lt; T &gt;::operator-&gt;",
      "argsstring_html": "() const noexcept",
      "name_html": "operator-&gt;",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "2305",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "2305",
        "bodyend": "2307"
      },
      "definition": {
        "simple_html": "template &lt;typename U = value_type&gt;\nFOLLY_ERASE detail::EnableIfConst&lt;U&gt;* operator-&gt;() const",
        "simple_raw": "template <typename U = value_type>\nFOLLY_ERASE detail::EnableIfConst<U>* operator->() const",
        "detailed_html": "template &lt;typename U = value_type&gt;\ninline FOLLY_ERASE detail::EnableIfConst&lt;U&gt;* operator-&gt;() const noexcept",
        "detailed_raw": "template <typename U = value_type>\ninline FOLLY_ERASE detail::EnableIfConst<U>* operator->() const noexcept",
        "original_definition_html": "FOLLY_ERASE detail::EnableIfConst&lt;U&gt;* apache::thrift::terse_field_ref&lt; T &gt;::operator-&gt;",
        "original_argsstring_html": "() const noexcept"
      },
      "filepath": "fns/class/apache/thrift/terse_field_ref/operator.arrow",
      "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/operator.arrow"
    },
    {
      "refid": "classapache_1_1thrift_1_1terse__field__ref_1a0ae9ecaaf072f722d47d2a013f9fb677",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "type_html": "FOLLY_ERASE <code>value_type</code> *",
      "definition_html": "FOLLY_ERASE value_type* apache::thrift::terse_field_ref&lt; T &gt;::operator-&gt;",
      "argsstring_html": "() noexcept",
      "name_html": "operator-&gt;",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "2309",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "2309",
        "bodyend": "2309"
      },
      "definition": {
        "simple_html": "FOLLY_ERASE value_type* operator-&gt;()",
        "simple_raw": "FOLLY_ERASE value_type* operator->()",
        "detailed_html": "inline FOLLY_ERASE value_type* operator-&gt;() noexcept",
        "detailed_raw": "inline FOLLY_ERASE value_type* operator->() noexcept",
        "original_definition_html": "FOLLY_ERASE value_type* apache::thrift::terse_field_ref&lt; T &gt;::operator-&gt;",
        "original_argsstring_html": "() noexcept"
      },
      "filepath": "fns/class/apache/thrift/terse_field_ref/operator.arrow",
      "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/operator.arrow"
    },
    {
      "refid": "classapache_1_1thrift_1_1terse__field__ref_1a5a65b4332b52fb26a40ac77553fc98ee",
      "prot": "public",
      "static": "no",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename Index"
        }
      ],
      "type_html": "FOLLY_ERASE auto",
      "definition_html": "FOLLY_ERASE auto apache::thrift::terse_field_ref&lt; T &gt;::operator[]",
      "argsstring_html": "(const Index &amp;index) const -&gt; decltype(auto)",
      "name_html": "operator[]",
      "param": [
        {
          "type_html": "const Index &amp;",
          "declname_html": "index"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "2312",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "2312",
        "bodyend": "2314"
      },
      "definition": {
        "simple_html": "template &lt;typename Index&gt;\nFOLLY_ERASE auto operator[](const Index&amp; index) const -&gt; decltype(auto)",
        "simple_raw": "template <typename Index>\nFOLLY_ERASE auto operator[](const Index& index) const -> decltype(auto)",
        "detailed_html": "template &lt;typename Index&gt;\ninline FOLLY_ERASE auto operator[](const Index&amp; index) const -&gt; decltype(auto)",
        "detailed_raw": "template <typename Index>\ninline FOLLY_ERASE auto operator[](const Index& index) const -> decltype(auto)",
        "original_definition_html": "FOLLY_ERASE auto apache::thrift::terse_field_ref&lt; T &gt;::operator[]",
        "original_argsstring_html": "(const Index &amp;index) const -&gt; decltype(auto)"
      },
      "filepath": "fns/class/apache/thrift/terse_field_ref/operator.at",
      "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/operator.at"
    },
    {
      "refid": "classapache_1_1thrift_1_1terse__field__ref_1a14b72ca33180d8ab7d69173f32f38bfc",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename...",
          "declname_html": "Args",
          "defname_html": "Args"
        }
      ],
      "type_html": "FOLLY_ERASE <code>value_type</code> &amp;",
      "definition_html": "FOLLY_ERASE value_type&amp; apache::thrift::terse_field_ref&lt; T &gt;::emplace",
      "argsstring_html": "(Args &amp;&amp;... args)",
      "name_html": "emplace",
      "param": [
        {
          "type_html": "Args &amp;&amp;...",
          "declname_html": "args"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "2317",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "2317",
        "bodyend": "2320"
      },
      "definition": {
        "simple_html": "template &lt;typename... Args&gt;\nFOLLY_ERASE value_type&amp; emplace(Args&amp;&amp;... args)",
        "simple_raw": "template <typename... Args>\nFOLLY_ERASE value_type& emplace(Args&&... args)",
        "detailed_html": "template &lt;typename... Args&gt;\ninline FOLLY_ERASE value_type&amp; emplace(Args&amp;&amp;... args)",
        "detailed_raw": "template <typename... Args>\ninline FOLLY_ERASE value_type& emplace(Args&&... args)",
        "original_definition_html": "FOLLY_ERASE value_type&amp; apache::thrift::terse_field_ref&lt; T &gt;::emplace",
        "original_argsstring_html": "(Args &amp;&amp;... args)"
      },
      "filepath": "fns/class/apache/thrift/terse_field_ref/emplace",
      "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/emplace"
    },
    {
      "refid": "classapache_1_1thrift_1_1terse__field__ref_1a041d76b806d8f3262336f2c5207df9e3",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "class U"
        },
        {
          "type_html": "class...",
          "declname_html": "Args",
          "defname_html": "Args"
        }
      ],
      "type_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_constructible&lt; <code>value_type</code>, std::initializer_list&lt; U &gt;, Args &amp;&amp;... &gt;::<code>value</code>, <code>value_type</code> &amp; &gt;",
      "definition_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_constructible&lt;value_type, std::initializer_list&lt;U&gt;, Args&amp;&amp;...&gt;:: value, value_type&amp;&gt; apache::thrift::terse_field_ref&lt; T &gt;::emplace",
      "argsstring_html": "(std::initializer_list&lt; U &gt; ilist, Args &amp;&amp;... args)",
      "name_html": "emplace",
      "param": [
        {
          "type_html": "std::initializer_list&lt; U &gt;",
          "declname_html": "ilist"
        },
        {
          "type_html": "Args &amp;&amp;...",
          "declname_html": "args"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "2327",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "2327",
        "bodyend": "2330"
      },
      "definition": {
        "simple_html": "template &lt;class U, class... Args&gt;\nFOLLY_ERASE std::enable_if_t&lt;\n    std::is_constructible&lt;value_type, std::initializer_list&lt;U&gt;, Args&amp;&amp;...&gt;::\n        value,\n    value_type&amp;&gt;\nemplace(std::initializer_list&lt;U&gt; ilist, Args&amp;&amp;... args)",
        "simple_raw": "template <class U, class... Args>\nFOLLY_ERASE std::enable_if_t<\n    std::is_constructible<value_type, std::initializer_list<U>, Args&&...>::\n        value,\n    value_type&>\nemplace(std::initializer_list<U> ilist, Args&&... args)",
        "detailed_html": "template &lt;class U, class... Args&gt;\ninline FOLLY_ERASE std::enable_if_t&lt;\n    std::is_constructible&lt;value_type, std::initializer_list&lt;U&gt;, Args&amp;&amp;...&gt;::\n        value,\n    value_type&amp;&gt;\nemplace(std::initializer_list&lt;U&gt; ilist, Args&amp;&amp;... args)",
        "detailed_raw": "template <class U, class... Args>\ninline FOLLY_ERASE std::enable_if_t<\n    std::is_constructible<value_type, std::initializer_list<U>, Args&&...>::\n        value,\n    value_type&>\nemplace(std::initializer_list<U> ilist, Args&&... args)",
        "original_definition_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_constructible&lt;value_type, std::initializer_list&lt;U&gt;, Args&amp;&amp;...&gt;:: value, value_type&amp;&gt; apache::thrift::terse_field_ref&lt; T &gt;::emplace",
        "original_argsstring_html": "(std::initializer_list&lt; U &gt; ilist, Args &amp;&amp;... args)"
      },
      "filepath": "fns/class/apache/thrift/terse_field_ref/emplace",
      "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/emplace"
    }
  ],
  "friends": [
    {
      "refid": "classapache_1_1thrift_1_1terse__field__ref_1abb42c96fcf801b4618f86fd6e3ece9db",
      "prot": "private",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "no",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename U"
        }
      ],
      "type_html": "friend class",
      "definition_html": "friend class terse_field_ref",
      "argsstring_html": "",
      "name_html": "terse_field_ref",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "2235",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "2232",
        "bodyend": "-1"
      }
    }
  ],
  "location": {
    "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
    "line": "2231",
    "column": "1",
    "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
    "bodystart": "2231",
    "bodyend": "2334"
  },
  "namespacednames_html": [
    "apache",
    "thrift",
    "terse_field_ref"
  ],
  "enums": [],
  "members": [
    {
      "refid": "classapache_1_1thrift_1_1terse__field__ref_1ad76cffe47c5b8860baa5d4aaf498515b",
      "prot": "private",
      "static": "no",
      "mutable": "no",
      "type_html": "<code>value_type</code> &amp;",
      "definition_html": "value_type&amp; apache::thrift::terse_field_ref&lt; T &gt;::value_",
      "argsstring_html": "",
      "name_html": "value_",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "2333",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "2333",
        "bodyend": "-1"
      }
    }
  ],
  "declaration_raw": "template < typename T >\nclass terse_field_ref;",
  "declaration_html": "template &lt; typename T &gt;\nclass terse_field_ref;",
  "filepath": "class/apache/thrift/terse_field_ref",
  "href": "/ref/cpp/class/apache/thrift/terse_field_ref",
  "overloadgroups": [
    {
      "groupname_html": "",
      "overloadsets": [
        {
          "kind": "overloadset",
          "name_html": "terse_field_ref",
          "compoundname_html": "apache::thrift::terse_field_ref::terse_field_ref",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1terse__field__ref_1af702ed988df928c0ab0772e9fe65bdc2",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "type_html": "FOLLY_ERASE",
              "definition_html": "FOLLY_ERASE apache::thrift::terse_field_ref&lt; T &gt;::terse_field_ref",
              "argsstring_html": "(reference_type value) noexcept",
              "name_html": "terse_field_ref",
              "param": [
                {
                  "type_html": "<code>reference_type</code>",
                  "declname_html": "value"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "2241",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "2241",
                "bodyend": "2241"
              },
              "definition": {
                "simple_html": "FOLLY_ERASE terse_field_ref(reference_type value)",
                "simple_raw": "FOLLY_ERASE terse_field_ref(reference_type value)",
                "detailed_html": "inline FOLLY_ERASE terse_field_ref(reference_type value) noexcept",
                "detailed_raw": "inline FOLLY_ERASE terse_field_ref(reference_type value) noexcept",
                "original_definition_html": "FOLLY_ERASE apache::thrift::terse_field_ref&lt; T &gt;::terse_field_ref",
                "original_argsstring_html": "(reference_type value) noexcept"
              },
              "filepath": "fns/class/apache/thrift/terse_field_ref/terse_field_ref",
              "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/terse_field_ref",
              "parentid": "classapache_1_1thrift_1_1terse__field__ref",
              "constructor": true,
              "compoundname_html": "apache::thrift::terse_field_ref::terse_field_ref"
            },
            {
              "refid": "classapache_1_1thrift_1_1terse__field__ref_1a6d7d265fcfdc4357b55d7b23bd239dc8",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename U"
                },
                {
                  "type_html": "typename",
                  "defval_html": "<code>detail::EnableIfImplicit</code>&lt;T, U&gt;"
                }
              ],
              "type_html": "FOLLY_ERASE",
              "definition_html": "FOLLY_ERASE apache::thrift::terse_field_ref&lt; T &gt;::terse_field_ref",
              "argsstring_html": "(const terse_field_ref&lt; U &gt; &amp;other) noexcept",
              "name_html": "terse_field_ref",
              "param": [
                {
                  "type_html": "const <code>terse_field_ref</code>&lt; U &gt; &amp;",
                  "declname_html": "other"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "2244",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "2244",
                "bodyend": "2246"
              },
              "definition": {
                "simple_html": "template &lt;typename U, typename = detail::EnableIfImplicit&lt;T, U&gt;&gt;\nFOLLY_ERASE terse_field_ref(const terse_field_ref&lt;U&gt;&amp; other)",
                "simple_raw": "template <typename U, typename = detail::EnableIfImplicit<T, U>>\nFOLLY_ERASE terse_field_ref(const terse_field_ref<U>& other)",
                "detailed_html": "template &lt;typename U, typename = detail::EnableIfImplicit&lt;T, U&gt;&gt;\ninline FOLLY_ERASE terse_field_ref(const terse_field_ref&lt;U&gt;&amp; other) noexcept",
                "detailed_raw": "template <typename U, typename = detail::EnableIfImplicit<T, U>>\ninline FOLLY_ERASE terse_field_ref(const terse_field_ref<U>& other) noexcept",
                "original_definition_html": "FOLLY_ERASE apache::thrift::terse_field_ref&lt; T &gt;::terse_field_ref",
                "original_argsstring_html": "(const terse_field_ref&lt; U &gt; &amp;other) noexcept"
              },
              "filepath": "fns/class/apache/thrift/terse_field_ref/terse_field_ref",
              "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/terse_field_ref",
              "parentid": "classapache_1_1thrift_1_1terse__field__ref",
              "constructor": true,
              "compoundname_html": "apache::thrift::terse_field_ref::terse_field_ref"
            },
            {
              "refid": "classapache_1_1thrift_1_1terse__field__ref_1aba79ca7990b3b96a948085826a5ed6f2",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "yes",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename U"
                },
                {
                  "type_html": "std::enable_if_t&lt; std::is_same&lt; T, U &amp;&amp;&gt;{}||std::is_same&lt; T, const U &amp;&amp;&gt;{}, int &gt;",
                  "defval_html": "0"
                }
              ],
              "type_html": "FOLLY_ERASE",
              "definition_html": "FOLLY_ERASE apache::thrift::terse_field_ref&lt; T &gt;::terse_field_ref",
              "argsstring_html": "(const terse_field_ref&lt; U &amp;&gt; &amp;other) noexcept",
              "name_html": "terse_field_ref",
              "param": [
                {
                  "type_html": "const <code>terse_field_ref</code>&lt; U &amp;&gt; &amp;",
                  "declname_html": "other"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "2253",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "2253",
                "bodyend": "2255"
              },
              "definition": {
                "simple_html": "template &lt;\n    typename U,\n    std::enable_if_t&lt;\n        std::is_same&lt;T, U&amp;&amp;&gt;{} || std::is_same&lt;T, const U&amp;&amp;&gt;{},\n        int&gt; = 0&gt;\nFOLLY_ERASE terse_field_ref(const terse_field_ref&lt;U&amp;&gt;&amp; other)",
                "simple_raw": "template <\n    typename U,\n    std::enable_if_t<\n        std::is_same<T, U&&>{} || std::is_same<T, const U&&>{},\n        int> = 0>\nFOLLY_ERASE terse_field_ref(const terse_field_ref<U&>& other)",
                "detailed_html": "template &lt;\n    typename U,\n    std::enable_if_t&lt;\n        std::is_same&lt;T, U&amp;&amp;&gt;{} || std::is_same&lt;T, const U&amp;&amp;&gt;{},\n        int&gt; = 0&gt;\nexplicit inline FOLLY_ERASE terse_field_ref(\n    const terse_field_ref&lt;U&amp;&gt;&amp; other) noexcept",
                "detailed_raw": "template <\n    typename U,\n    std::enable_if_t<\n        std::is_same<T, U&&>{} || std::is_same<T, const U&&>{},\n        int> = 0>\nexplicit inline FOLLY_ERASE terse_field_ref(\n    const terse_field_ref<U&>& other) noexcept",
                "original_definition_html": "FOLLY_ERASE apache::thrift::terse_field_ref&lt; T &gt;::terse_field_ref",
                "original_argsstring_html": "(const terse_field_ref&lt; U &amp;&gt; &amp;other) noexcept"
              },
              "filepath": "fns/class/apache/thrift/terse_field_ref/terse_field_ref",
              "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/terse_field_ref",
              "parentid": "classapache_1_1thrift_1_1terse__field__ref",
              "constructor": true,
              "compoundname_html": "apache::thrift::terse_field_ref::terse_field_ref"
            }
          ],
          "filepath": "f/class/apache/thrift/terse_field_ref/terse_field_ref",
          "minprot": "public",
          "displayname_html": "(constructor)",
          "brief_html": "Constructs the terse_field_ref.",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/terse_field_ref/terse_field_ref",
          "refid": "/ref/cpp/f/class/apache/thrift/terse_field_ref/terse_field_ref"
        },
        {
          "kind": "overloadset",
          "name_html": "operator=",
          "compoundname_html": "apache::thrift::terse_field_ref::operator=",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1terse__field__ref_1a0a3496a3dec30a3c9b69d98172d85981",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename U",
                  "defval_html": "<code>value_type</code>"
                }
              ],
              "type_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_assignable&lt; <code>value_type</code> &amp;, U &amp;&amp; &gt;::<code>value</code>, <code>terse_field_ref</code> &amp; &gt;",
              "definition_html": "FOLLY_ERASE std:: enable_if_t&lt;std::is_assignable&lt;value_type&amp;, U&amp;&amp;&gt;::value, terse_field_ref&amp;&gt; apache::thrift::terse_field_ref&lt; T &gt;::operator=",
              "argsstring_html": "(U &amp;&amp;value) noexcept(std::is_nothrow_assignable&lt; value_type &amp;, U &amp;&amp;&gt;::value)",
              "name_html": "operator=",
              "param": [
                {
                  "type_html": "U &amp;&amp;",
                  "declname_html": "value"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "2260",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "2260",
                "bodyend": "2264"
              },
              "definition": {
                "simple_html": "template &lt;typename U = value_type&gt;\nFOLLY_ERASE std::\n    enable_if_t&lt;std::is_assignable&lt;value_type&amp;, U&amp;&amp;&gt;::value, terse_field_ref&amp;&gt;\n    operator=(U&amp;&amp; value)",
                "simple_raw": "template <typename U = value_type>\nFOLLY_ERASE std::\n    enable_if_t<std::is_assignable<value_type&, U&&>::value, terse_field_ref&>\n    operator=(U&& value)",
                "detailed_html": "template &lt;typename U = value_type&gt;\ninline FOLLY_ERASE std::\n    enable_if_t&lt;std::is_assignable&lt;value_type&amp;, U&amp;&amp;&gt;::value, terse_field_ref&amp;&gt;\n    operator=(U&amp;&amp; value) noexcept(\n        (std::is_nothrow_assignable&lt;value_type&amp;, U&amp;&amp;&gt;::value))",
                "detailed_raw": "template <typename U = value_type>\ninline FOLLY_ERASE std::\n    enable_if_t<std::is_assignable<value_type&, U&&>::value, terse_field_ref&>\n    operator=(U&& value) noexcept(\n        (std::is_nothrow_assignable<value_type&, U&&>::value))",
                "original_definition_html": "FOLLY_ERASE std:: enable_if_t&lt;std::is_assignable&lt;value_type&amp;, U&amp;&amp;&gt;::value, terse_field_ref&amp;&gt; apache::thrift::terse_field_ref&lt; T &gt;::operator=",
                "original_argsstring_html": "(U &amp;&amp;value) noexcept(std::is_nothrow_assignable&lt; value_type &amp;, U &amp;&amp;&gt;::value)"
              },
              "filepath": "fns/class/apache/thrift/terse_field_ref/operator.assign",
              "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/operator.assign",
              "parentid": "classapache_1_1thrift_1_1terse__field__ref",
              "compoundname_html": "apache::thrift::terse_field_ref::operator="
            },
            {
              "refid": "classapache_1_1thrift_1_1terse__field__ref_1aa0e20c7df79f2015e9faca2a4ad2e2e6",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "type_html": "FOLLY_ERASE <code>terse_field_ref</code> &amp;",
              "definition_html": "FOLLY_ERASE terse_field_ref&amp; apache::thrift::terse_field_ref&lt; T &gt;::operator=",
              "argsstring_html": "(value_type &amp;&amp;value) noexcept(std::is_nothrow_move_assignable&lt; value_type &gt;::value)",
              "name_html": "operator=",
              "param": [
                {
                  "type_html": "<code>value_type</code> &amp;&amp;",
                  "declname_html": "value"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "2267",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "2267",
                "bodyend": "2272"
              },
              "definition": {
                "simple_html": "FOLLY_ERASE terse_field_ref&amp; operator=(value_type&amp;&amp; value)",
                "simple_raw": "FOLLY_ERASE terse_field_ref& operator=(value_type&& value)",
                "detailed_html": "inline FOLLY_ERASE terse_field_ref&amp; operator=(value_type&amp;&amp; value) noexcept(\n    (std::is_nothrow_move_assignable&lt;value_type&gt;::value))",
                "detailed_raw": "inline FOLLY_ERASE terse_field_ref& operator=(value_type&& value) noexcept(\n    (std::is_nothrow_move_assignable<value_type>::value))",
                "original_definition_html": "FOLLY_ERASE terse_field_ref&amp; apache::thrift::terse_field_ref&lt; T &gt;::operator=",
                "original_argsstring_html": "(value_type &amp;&amp;value) noexcept(std::is_nothrow_move_assignable&lt; value_type &gt;::value)"
              },
              "filepath": "fns/class/apache/thrift/terse_field_ref/operator.assign",
              "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/operator.assign",
              "parentid": "classapache_1_1thrift_1_1terse__field__ref",
              "compoundname_html": "apache::thrift::terse_field_ref::operator="
            }
          ],
          "filepath": "f/class/apache/thrift/terse_field_ref/operator.assign",
          "minprot": "public",
          "displayname_html": "operator=",
          "brief_html": "",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/terse_field_ref/operator.assign",
          "refid": "/ref/cpp/f/class/apache/thrift/terse_field_ref/operator.assign"
        },
        {
          "kind": "overloadset",
          "name_html": "copy_from",
          "compoundname_html": "apache::thrift::terse_field_ref::copy_from",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1terse__field__ref_1a43828a8d4f46a4bb0b0975d80967211d",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename U"
                }
              ],
              "type_html": "FOLLY_ERASE void",
              "definition_html": "FOLLY_ERASE void apache::thrift::terse_field_ref&lt; T &gt;::copy_from",
              "argsstring_html": "(const terse_field_ref&lt; U &gt; &amp;other) noexcept(std::is_nothrow_assignable&lt; value_type &amp;, U &gt;::value)",
              "name_html": "copy_from",
              "param": [
                {
                  "type_html": "const <code>terse_field_ref</code>&lt; U &gt; &amp;",
                  "declname_html": "other"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "2275",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "2275",
                "bodyend": "2278"
              },
              "definition": {
                "simple_html": "template &lt;typename U&gt;\nFOLLY_ERASE void copy_from(const terse_field_ref&lt;U&gt;&amp; other)",
                "simple_raw": "template <typename U>\nFOLLY_ERASE void copy_from(const terse_field_ref<U>& other)",
                "detailed_html": "template &lt;typename U&gt;\ninline FOLLY_ERASE void copy_from(const terse_field_ref&lt;U&gt;&amp; other) noexcept(\n    (std::is_nothrow_assignable&lt;value_type&amp;, U&gt;::value))",
                "detailed_raw": "template <typename U>\ninline FOLLY_ERASE void copy_from(const terse_field_ref<U>& other) noexcept(\n    (std::is_nothrow_assignable<value_type&, U>::value))",
                "original_definition_html": "FOLLY_ERASE void apache::thrift::terse_field_ref&lt; T &gt;::copy_from",
                "original_argsstring_html": "(const terse_field_ref&lt; U &gt; &amp;other) noexcept(std::is_nothrow_assignable&lt; value_type &amp;, U &gt;::value)"
              },
              "filepath": "fns/class/apache/thrift/terse_field_ref/copy_from",
              "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/copy_from",
              "parentid": "classapache_1_1thrift_1_1terse__field__ref",
              "compoundname_html": "apache::thrift::terse_field_ref::copy_from"
            }
          ],
          "filepath": "f/class/apache/thrift/terse_field_ref/copy_from",
          "minprot": "public",
          "displayname_html": "copy_from",
          "brief_html": "",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/terse_field_ref/copy_from",
          "refid": "/ref/cpp/f/class/apache/thrift/terse_field_ref/copy_from"
        },
        {
          "kind": "overloadset",
          "name_html": "move_from",
          "compoundname_html": "apache::thrift::terse_field_ref::move_from",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1terse__field__ref_1a9418899f488bfa85932f26c4edff4a9c",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename U"
                }
              ],
              "type_html": "FOLLY_ERASE void",
              "definition_html": "FOLLY_ERASE void apache::thrift::terse_field_ref&lt; T &gt;::move_from",
              "argsstring_html": "(terse_field_ref&lt; U &gt; other) noexcept(std::is_nothrow_assignable&lt; value_type &amp;, std::remove_reference_t&lt; U &gt; &amp;&amp;&gt;::value)",
              "name_html": "move_from",
              "param": [
                {
                  "type_html": "<code>terse_field_ref</code>&lt; U &gt;",
                  "declname_html": "other"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "2281",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "2281",
                "bodyend": "2285"
              },
              "definition": {
                "simple_html": "template &lt;typename U&gt;\nFOLLY_ERASE void move_from(terse_field_ref&lt;U&gt; other)",
                "simple_raw": "template <typename U>\nFOLLY_ERASE void move_from(terse_field_ref<U> other)",
                "detailed_html": "template &lt;typename U&gt;\ninline FOLLY_ERASE void move_from(terse_field_ref&lt;U&gt; other) noexcept(\n    (std::is_nothrow_assignable&lt;value_type&amp;, std::remove_reference_t&lt;U&gt;&amp;&amp;&gt;::\n         value))",
                "detailed_raw": "template <typename U>\ninline FOLLY_ERASE void move_from(terse_field_ref<U> other) noexcept(\n    (std::is_nothrow_assignable<value_type&, std::remove_reference_t<U>&&>::\n         value))",
                "original_definition_html": "FOLLY_ERASE void apache::thrift::terse_field_ref&lt; T &gt;::move_from",
                "original_argsstring_html": "(terse_field_ref&lt; U &gt; other) noexcept(std::is_nothrow_assignable&lt; value_type &amp;, std::remove_reference_t&lt; U &gt; &amp;&amp;&gt;::value)"
              },
              "filepath": "fns/class/apache/thrift/terse_field_ref/move_from",
              "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/move_from",
              "parentid": "classapache_1_1thrift_1_1terse__field__ref",
              "compoundname_html": "apache::thrift::terse_field_ref::move_from"
            }
          ],
          "filepath": "f/class/apache/thrift/terse_field_ref/move_from",
          "minprot": "public",
          "displayname_html": "move_from",
          "brief_html": "",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/terse_field_ref/move_from",
          "refid": "/ref/cpp/f/class/apache/thrift/terse_field_ref/move_from"
        },
        {
          "kind": "overloadset",
          "name_html": "value",
          "compoundname_html": "apache::thrift::terse_field_ref::value",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1terse__field__ref_1a412b635fc006b2a329295eb0b7986d8e",
              "prot": "public",
              "static": "no",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "type_html": "FOLLY_ERASE <code>reference_type</code>",
              "definition_html": "FOLLY_ERASE reference_type apache::thrift::terse_field_ref&lt; T &gt;::value",
              "argsstring_html": "() const noexcept",
              "name_html": "value",
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "2287",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "2287",
                "bodyend": "2289"
              },
              "definition": {
                "simple_html": "FOLLY_ERASE reference_type value() const",
                "simple_raw": "FOLLY_ERASE reference_type value() const",
                "detailed_html": "inline FOLLY_ERASE reference_type value() const noexcept",
                "detailed_raw": "inline FOLLY_ERASE reference_type value() const noexcept",
                "original_definition_html": "FOLLY_ERASE reference_type apache::thrift::terse_field_ref&lt; T &gt;::value",
                "original_argsstring_html": "() const noexcept"
              },
              "filepath": "fns/class/apache/thrift/terse_field_ref/value",
              "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/value",
              "parentid": "classapache_1_1thrift_1_1terse__field__ref",
              "compoundname_html": "apache::thrift::terse_field_ref::value"
            }
          ],
          "filepath": "f/class/apache/thrift/terse_field_ref/value",
          "minprot": "public",
          "displayname_html": "value",
          "brief_html": "",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/terse_field_ref/value",
          "refid": "/ref/cpp/f/class/apache/thrift/terse_field_ref/value"
        },
        {
          "kind": "overloadset",
          "name_html": "operator*",
          "compoundname_html": "apache::thrift::terse_field_ref::operator*",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1terse__field__ref_1a7a4794cf4fc4127f281445d436cd3112",
              "prot": "public",
              "static": "no",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "type_html": "FOLLY_ERASE <code>reference_type</code>",
              "definition_html": "FOLLY_ERASE reference_type apache::thrift::terse_field_ref&lt; T &gt;::operator*",
              "argsstring_html": "() const noexcept",
              "name_html": "operator*",
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "2291",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "2291",
                "bodyend": "2293"
              },
              "definition": {
                "simple_html": "FOLLY_ERASE reference_type operator*() const",
                "simple_raw": "FOLLY_ERASE reference_type operator*() const",
                "detailed_html": "inline FOLLY_ERASE reference_type operator*() const noexcept",
                "detailed_raw": "inline FOLLY_ERASE reference_type operator*() const noexcept",
                "original_definition_html": "FOLLY_ERASE reference_type apache::thrift::terse_field_ref&lt; T &gt;::operator*",
                "original_argsstring_html": "() const noexcept"
              },
              "filepath": "fns/class/apache/thrift/terse_field_ref/operator.mul",
              "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/operator.mul",
              "parentid": "classapache_1_1thrift_1_1terse__field__ref",
              "compoundname_html": "apache::thrift::terse_field_ref::operator*"
            }
          ],
          "filepath": "f/class/apache/thrift/terse_field_ref/operator.mul",
          "minprot": "public",
          "displayname_html": "operator*",
          "brief_html": "",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/terse_field_ref/operator.mul",
          "refid": "/ref/cpp/f/class/apache/thrift/terse_field_ref/operator.mul"
        },
        {
          "kind": "overloadset",
          "name_html": "operator-&gt;",
          "compoundname_html": "apache::thrift::terse_field_ref::operator-&gt;",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1terse__field__ref_1ace42e46a96d553629d6f8d7eef098954",
              "prot": "public",
              "static": "no",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename U",
                  "defval_html": "<code>value_type</code>"
                }
              ],
              "type_html": "FOLLY_ERASE <code>detail::EnableIfNonConst</code>&lt; U &gt; *",
              "definition_html": "FOLLY_ERASE detail::EnableIfNonConst&lt;U&gt;* apache::thrift::terse_field_ref&lt; T &gt;::operator-&gt;",
              "argsstring_html": "() const noexcept",
              "name_html": "operator-&gt;",
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "2300",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "2300",
                "bodyend": "2302"
              },
              "definition": {
                "simple_html": "template &lt;typename U = value_type&gt;\nFOLLY_ERASE detail::EnableIfNonConst&lt;U&gt;* operator-&gt;() const",
                "simple_raw": "template <typename U = value_type>\nFOLLY_ERASE detail::EnableIfNonConst<U>* operator->() const",
                "detailed_html": "template &lt;typename U = value_type&gt;\ninline FOLLY_ERASE detail::EnableIfNonConst&lt;U&gt;* operator-&gt;() const noexcept",
                "detailed_raw": "template <typename U = value_type>\ninline FOLLY_ERASE detail::EnableIfNonConst<U>* operator->() const noexcept",
                "original_definition_html": "FOLLY_ERASE detail::EnableIfNonConst&lt;U&gt;* apache::thrift::terse_field_ref&lt; T &gt;::operator-&gt;",
                "original_argsstring_html": "() const noexcept"
              },
              "filepath": "fns/class/apache/thrift/terse_field_ref/operator.arrow",
              "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/operator.arrow",
              "parentid": "classapache_1_1thrift_1_1terse__field__ref",
              "compoundname_html": "apache::thrift::terse_field_ref::operator-&gt;"
            },
            {
              "refid": "classapache_1_1thrift_1_1terse__field__ref_1a55f16c1dc6a2e439791f7624a6b5f949",
              "prot": "public",
              "static": "no",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename U",
                  "defval_html": "<code>value_type</code>"
                }
              ],
              "type_html": "FOLLY_ERASE <code>detail::EnableIfConst</code>&lt; U &gt; *",
              "definition_html": "FOLLY_ERASE detail::EnableIfConst&lt;U&gt;* apache::thrift::terse_field_ref&lt; T &gt;::operator-&gt;",
              "argsstring_html": "() const noexcept",
              "name_html": "operator-&gt;",
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "2305",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "2305",
                "bodyend": "2307"
              },
              "definition": {
                "simple_html": "template &lt;typename U = value_type&gt;\nFOLLY_ERASE detail::EnableIfConst&lt;U&gt;* operator-&gt;() const",
                "simple_raw": "template <typename U = value_type>\nFOLLY_ERASE detail::EnableIfConst<U>* operator->() const",
                "detailed_html": "template &lt;typename U = value_type&gt;\ninline FOLLY_ERASE detail::EnableIfConst&lt;U&gt;* operator-&gt;() const noexcept",
                "detailed_raw": "template <typename U = value_type>\ninline FOLLY_ERASE detail::EnableIfConst<U>* operator->() const noexcept",
                "original_definition_html": "FOLLY_ERASE detail::EnableIfConst&lt;U&gt;* apache::thrift::terse_field_ref&lt; T &gt;::operator-&gt;",
                "original_argsstring_html": "() const noexcept"
              },
              "filepath": "fns/class/apache/thrift/terse_field_ref/operator.arrow",
              "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/operator.arrow",
              "parentid": "classapache_1_1thrift_1_1terse__field__ref",
              "compoundname_html": "apache::thrift::terse_field_ref::operator-&gt;"
            },
            {
              "refid": "classapache_1_1thrift_1_1terse__field__ref_1a0ae9ecaaf072f722d47d2a013f9fb677",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "type_html": "FOLLY_ERASE <code>value_type</code> *",
              "definition_html": "FOLLY_ERASE value_type* apache::thrift::terse_field_ref&lt; T &gt;::operator-&gt;",
              "argsstring_html": "() noexcept",
              "name_html": "operator-&gt;",
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "2309",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "2309",
                "bodyend": "2309"
              },
              "definition": {
                "simple_html": "FOLLY_ERASE value_type* operator-&gt;()",
                "simple_raw": "FOLLY_ERASE value_type* operator->()",
                "detailed_html": "inline FOLLY_ERASE value_type* operator-&gt;() noexcept",
                "detailed_raw": "inline FOLLY_ERASE value_type* operator->() noexcept",
                "original_definition_html": "FOLLY_ERASE value_type* apache::thrift::terse_field_ref&lt; T &gt;::operator-&gt;",
                "original_argsstring_html": "() noexcept"
              },
              "filepath": "fns/class/apache/thrift/terse_field_ref/operator.arrow",
              "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/operator.arrow",
              "parentid": "classapache_1_1thrift_1_1terse__field__ref",
              "compoundname_html": "apache::thrift::terse_field_ref::operator-&gt;"
            }
          ],
          "filepath": "f/class/apache/thrift/terse_field_ref/operator.arrow",
          "minprot": "public",
          "displayname_html": "operator-&gt;",
          "brief_html": "",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/terse_field_ref/operator.arrow",
          "refid": "/ref/cpp/f/class/apache/thrift/terse_field_ref/operator.arrow"
        },
        {
          "kind": "overloadset",
          "name_html": "operator[]",
          "compoundname_html": "apache::thrift::terse_field_ref::operator[]",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1terse__field__ref_1a5a65b4332b52fb26a40ac77553fc98ee",
              "prot": "public",
              "static": "no",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename Index"
                }
              ],
              "type_html": "FOLLY_ERASE auto",
              "definition_html": "FOLLY_ERASE auto apache::thrift::terse_field_ref&lt; T &gt;::operator[]",
              "argsstring_html": "(const Index &amp;index) const -&gt; decltype(auto)",
              "name_html": "operator[]",
              "param": [
                {
                  "type_html": "const Index &amp;",
                  "declname_html": "index"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "2312",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "2312",
                "bodyend": "2314"
              },
              "definition": {
                "simple_html": "template &lt;typename Index&gt;\nFOLLY_ERASE auto operator[](const Index&amp; index) const -&gt; decltype(auto)",
                "simple_raw": "template <typename Index>\nFOLLY_ERASE auto operator[](const Index& index) const -> decltype(auto)",
                "detailed_html": "template &lt;typename Index&gt;\ninline FOLLY_ERASE auto operator[](const Index&amp; index) const -&gt; decltype(auto)",
                "detailed_raw": "template <typename Index>\ninline FOLLY_ERASE auto operator[](const Index& index) const -> decltype(auto)",
                "original_definition_html": "FOLLY_ERASE auto apache::thrift::terse_field_ref&lt; T &gt;::operator[]",
                "original_argsstring_html": "(const Index &amp;index) const -&gt; decltype(auto)"
              },
              "filepath": "fns/class/apache/thrift/terse_field_ref/operator.at",
              "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/operator.at",
              "parentid": "classapache_1_1thrift_1_1terse__field__ref",
              "compoundname_html": "apache::thrift::terse_field_ref::operator[]"
            }
          ],
          "filepath": "f/class/apache/thrift/terse_field_ref/operator.at",
          "minprot": "public",
          "displayname_html": "operator[]",
          "brief_html": "",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/terse_field_ref/operator.at",
          "refid": "/ref/cpp/f/class/apache/thrift/terse_field_ref/operator.at"
        },
        {
          "kind": "overloadset",
          "name_html": "emplace",
          "compoundname_html": "apache::thrift::terse_field_ref::emplace",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1terse__field__ref_1a14b72ca33180d8ab7d69173f32f38bfc",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename...",
                  "declname_html": "Args",
                  "defname_html": "Args"
                }
              ],
              "type_html": "FOLLY_ERASE <code>value_type</code> &amp;",
              "definition_html": "FOLLY_ERASE value_type&amp; apache::thrift::terse_field_ref&lt; T &gt;::emplace",
              "argsstring_html": "(Args &amp;&amp;... args)",
              "name_html": "emplace",
              "param": [
                {
                  "type_html": "Args &amp;&amp;...",
                  "declname_html": "args"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "2317",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "2317",
                "bodyend": "2320"
              },
              "definition": {
                "simple_html": "template &lt;typename... Args&gt;\nFOLLY_ERASE value_type&amp; emplace(Args&amp;&amp;... args)",
                "simple_raw": "template <typename... Args>\nFOLLY_ERASE value_type& emplace(Args&&... args)",
                "detailed_html": "template &lt;typename... Args&gt;\ninline FOLLY_ERASE value_type&amp; emplace(Args&amp;&amp;... args)",
                "detailed_raw": "template <typename... Args>\ninline FOLLY_ERASE value_type& emplace(Args&&... args)",
                "original_definition_html": "FOLLY_ERASE value_type&amp; apache::thrift::terse_field_ref&lt; T &gt;::emplace",
                "original_argsstring_html": "(Args &amp;&amp;... args)"
              },
              "filepath": "fns/class/apache/thrift/terse_field_ref/emplace",
              "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/emplace",
              "parentid": "classapache_1_1thrift_1_1terse__field__ref",
              "compoundname_html": "apache::thrift::terse_field_ref::emplace"
            },
            {
              "refid": "classapache_1_1thrift_1_1terse__field__ref_1a041d76b806d8f3262336f2c5207df9e3",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "class U"
                },
                {
                  "type_html": "class...",
                  "declname_html": "Args",
                  "defname_html": "Args"
                }
              ],
              "type_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_constructible&lt; <code>value_type</code>, std::initializer_list&lt; U &gt;, Args &amp;&amp;... &gt;::<code>value</code>, <code>value_type</code> &amp; &gt;",
              "definition_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_constructible&lt;value_type, std::initializer_list&lt;U&gt;, Args&amp;&amp;...&gt;:: value, value_type&amp;&gt; apache::thrift::terse_field_ref&lt; T &gt;::emplace",
              "argsstring_html": "(std::initializer_list&lt; U &gt; ilist, Args &amp;&amp;... args)",
              "name_html": "emplace",
              "param": [
                {
                  "type_html": "std::initializer_list&lt; U &gt;",
                  "declname_html": "ilist"
                },
                {
                  "type_html": "Args &amp;&amp;...",
                  "declname_html": "args"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "2327",
                "column": "1",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "2327",
                "bodyend": "2330"
              },
              "definition": {
                "simple_html": "template &lt;class U, class... Args&gt;\nFOLLY_ERASE std::enable_if_t&lt;\n    std::is_constructible&lt;value_type, std::initializer_list&lt;U&gt;, Args&amp;&amp;...&gt;::\n        value,\n    value_type&amp;&gt;\nemplace(std::initializer_list&lt;U&gt; ilist, Args&amp;&amp;... args)",
                "simple_raw": "template <class U, class... Args>\nFOLLY_ERASE std::enable_if_t<\n    std::is_constructible<value_type, std::initializer_list<U>, Args&&...>::\n        value,\n    value_type&>\nemplace(std::initializer_list<U> ilist, Args&&... args)",
                "detailed_html": "template &lt;class U, class... Args&gt;\ninline FOLLY_ERASE std::enable_if_t&lt;\n    std::is_constructible&lt;value_type, std::initializer_list&lt;U&gt;, Args&amp;&amp;...&gt;::\n        value,\n    value_type&amp;&gt;\nemplace(std::initializer_list&lt;U&gt; ilist, Args&amp;&amp;... args)",
                "detailed_raw": "template <class U, class... Args>\ninline FOLLY_ERASE std::enable_if_t<\n    std::is_constructible<value_type, std::initializer_list<U>, Args&&...>::\n        value,\n    value_type&>\nemplace(std::initializer_list<U> ilist, Args&&... args)",
                "original_definition_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_constructible&lt;value_type, std::initializer_list&lt;U&gt;, Args&amp;&amp;...&gt;:: value, value_type&amp;&gt; apache::thrift::terse_field_ref&lt; T &gt;::emplace",
                "original_argsstring_html": "(std::initializer_list&lt; U &gt; ilist, Args &amp;&amp;... args)"
              },
              "filepath": "fns/class/apache/thrift/terse_field_ref/emplace",
              "href": "/ref/cpp/fns/class/apache/thrift/terse_field_ref/emplace",
              "parentid": "classapache_1_1thrift_1_1terse__field__ref",
              "compoundname_html": "apache::thrift::terse_field_ref::emplace"
            }
          ],
          "filepath": "f/class/apache/thrift/terse_field_ref/emplace",
          "minprot": "public",
          "displayname_html": "emplace",
          "brief_html": "",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/terse_field_ref/emplace",
          "refid": "/ref/cpp/f/class/apache/thrift/terse_field_ref/emplace"
        }
      ]
    }
  ],
  "free_overloadgroups": []
}