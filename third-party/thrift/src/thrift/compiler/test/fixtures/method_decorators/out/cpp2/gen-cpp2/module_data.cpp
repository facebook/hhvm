/**
 * Autogenerated by Thrift for thrift/compiler/test/fixtures/method_decorators/src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */

#include "thrift/compiler/test/fixtures/method_decorators/gen-cpp2/module_data.h"
#include "thrift/compiler/test/fixtures/method_decorators/gen-cpp2/module_constants.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

namespace cpp2 {
class DecoratedService;
} // namespace cpp2
namespace cpp2 {
class UndecoratedService;
} // namespace cpp2
namespace cpp2 {
class DecoratedService_ExtendsUndecoratedService;
} // namespace cpp2
namespace cpp2 {
class DecoratedService_ExtendsDecoratedService;
} // namespace cpp2
namespace cpp2 {
class UndecoratedService_ExtendsDecoratedService;
} // namespace cpp2
namespace cpp2 {
class DecoratedService_ExtendsUndecoratedService_ExtendsDecoratedService;
} // namespace cpp2
namespace apache::thrift {

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::cpp2::Request>::name = "Request";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::cpp2::Request>::fields_names = { {
  "id"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::cpp2::Request>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::cpp2::Request>::fields_types = { {
  TType::T_STRING,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::cpp2::Request>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::cpp2::detail::AdaptedRequest>::name = "AdaptedRequest";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::cpp2::detail::AdaptedRequest>::fields_names = { {
  "id"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::cpp2::detail::AdaptedRequest>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::cpp2::detail::AdaptedRequest>::fields_types = { {
  TType::T_STRING,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::cpp2::detail::AdaptedRequest>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::cpp2::Response>::name = "Response";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::cpp2::Response>::fields_names = { {
  "text"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::cpp2::Response>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::cpp2::Response>::fields_types = { {
  TType::T_STRING,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::cpp2::Response>::isset_indexes = { {
  0,
}};

namespace detail {




template <> struct TSchemaAssociation<::cpp2::DecoratedService, false> {
  static constexpr ::folly::Range<const ::std::string_view*>(*bundle)() = nullptr;
  static constexpr int64_t programId = -7896720196583643065;
  static constexpr ::std::string_view definitionKey = {"\xd1\x44\x52\x11\x2f\xc7\x1d\x23\xd8\x24\x12\xd8\xd4\x37\xdf\xe7", 16};
};
template <> struct TSchemaAssociation<::cpp2::UndecoratedService, false> {
  static constexpr ::folly::Range<const ::std::string_view*>(*bundle)() = nullptr;
  static constexpr int64_t programId = -7896720196583643065;
  static constexpr ::std::string_view definitionKey = {"\x8d\xfa\xf4\xc5\x87\xb9\x4e\xf1\x30\x60\xe6\xb9\x4e\xe2\x55\x98", 16};
};
template <> struct TSchemaAssociation<::cpp2::DecoratedService_ExtendsUndecoratedService, false> {
  static constexpr ::folly::Range<const ::std::string_view*>(*bundle)() = nullptr;
  static constexpr int64_t programId = -7896720196583643065;
  static constexpr ::std::string_view definitionKey = {"\x00\xf8\x19\x31\x00\xa6\xc2\xc8\xf4\x48\x29\xb0\x5c\xc1\x03\x9d", 16};
};
template <> struct TSchemaAssociation<::cpp2::DecoratedService_ExtendsDecoratedService, false> {
  static constexpr ::folly::Range<const ::std::string_view*>(*bundle)() = nullptr;
  static constexpr int64_t programId = -7896720196583643065;
  static constexpr ::std::string_view definitionKey = {"\xbe\x01\xa1\x22\xd0\x33\xd3\xa3\x12\xe6\x3f\x43\x70\xda\x3d\x4c", 16};
};
template <> struct TSchemaAssociation<::cpp2::UndecoratedService_ExtendsDecoratedService, false> {
  static constexpr ::folly::Range<const ::std::string_view*>(*bundle)() = nullptr;
  static constexpr int64_t programId = -7896720196583643065;
  static constexpr ::std::string_view definitionKey = {"\x44\x7c\x5c\x76\x45\x8e\xab\x3c\x6d\xe7\x3a\xfb\xd5\x12\xfc\x27", 16};
};
template <> struct TSchemaAssociation<::cpp2::DecoratedService_ExtendsUndecoratedService_ExtendsDecoratedService, false> {
  static constexpr ::folly::Range<const ::std::string_view*>(*bundle)() = nullptr;
  static constexpr int64_t programId = -7896720196583643065;
  static constexpr ::std::string_view definitionKey = {"\xa3\x0c\xe2\xd7\x03\x5d\xc4\x45\x5f\xca\x1c\xe1\x14\xd7\x4c\x9b", 16};
};
} // namespace detail
} // namespace apache::thrift
