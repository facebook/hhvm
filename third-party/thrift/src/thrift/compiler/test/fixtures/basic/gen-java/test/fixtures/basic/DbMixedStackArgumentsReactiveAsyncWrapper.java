/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package test.fixtures.basic;

import java.util.*;

public class DbMixedStackArgumentsReactiveAsyncWrapper 
  implements DbMixedStackArguments.Async {
  private DbMixedStackArguments.Reactive _delegate;

  public DbMixedStackArgumentsReactiveAsyncWrapper(DbMixedStackArguments.Reactive _delegate) {
    
    this._delegate = _delegate;
  }

  public DbMixedStackArgumentsReactiveAsyncWrapper(org.apache.thrift.ProtocolId _protocolId, reactor.core.publisher.Mono<? extends com.facebook.thrift.client.RpcClient> _rpcClient, Map<String, String> _headers, Map<String, String> _persistentHeaders) {
    this(new DbMixedStackArgumentsReactiveClient(_protocolId, _rpcClient, _headers, _persistentHeaders));
  }

  @java.lang.Override
  public void close() {
    _delegate.dispose();
  }

  @java.lang.Override
  public com.google.common.util.concurrent.ListenableFuture<byte[]> getDataByKey0(final String key) {
      return com.facebook.thrift.util.FutureUtil.toListenableFuture(_delegate.getDataByKey0(key));
  }

  @java.lang.Override
  public com.google.common.util.concurrent.ListenableFuture<byte[]> getDataByKey0(
    final String key,
    com.facebook.thrift.client.RpcOptions rpcOptions) {
      return com.facebook.thrift.util.FutureUtil.toListenableFuture(_delegate.getDataByKey0(key, rpcOptions));
  }

  @java.lang.Override
  public com.google.common.util.concurrent.ListenableFuture<com.facebook.thrift.client.ResponseWrapper<byte[]>> getDataByKey0Wrapper(
    final String key,
    com.facebook.thrift.client.RpcOptions rpcOptions) {
    return com.facebook.thrift.util.FutureUtil.toListenableFuture(_delegate.getDataByKey0Wrapper(key, rpcOptions));
  }

  @java.lang.Override
  public com.google.common.util.concurrent.ListenableFuture<byte[]> getDataByKey1(final String key) {
      return com.facebook.thrift.util.FutureUtil.toListenableFuture(_delegate.getDataByKey1(key));
  }

  @java.lang.Override
  public com.google.common.util.concurrent.ListenableFuture<byte[]> getDataByKey1(
    final String key,
    com.facebook.thrift.client.RpcOptions rpcOptions) {
      return com.facebook.thrift.util.FutureUtil.toListenableFuture(_delegate.getDataByKey1(key, rpcOptions));
  }

  @java.lang.Override
  public com.google.common.util.concurrent.ListenableFuture<com.facebook.thrift.client.ResponseWrapper<byte[]>> getDataByKey1Wrapper(
    final String key,
    com.facebook.thrift.client.RpcOptions rpcOptions) {
    return com.facebook.thrift.util.FutureUtil.toListenableFuture(_delegate.getDataByKey1Wrapper(key, rpcOptions));
  }

}
