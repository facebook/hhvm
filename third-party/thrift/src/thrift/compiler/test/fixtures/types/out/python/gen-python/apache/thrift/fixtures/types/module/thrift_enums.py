#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from __future__ import annotations
import builtins

import apache.thrift.metadata.thrift_types as _fbthrift_metadata
import thrift.python.types as _fbthrift_python_types
import typing as _std_python_typing



class has_bitwise_ops(_fbthrift_python_types.Enum, int):
    none = 0
    zero = 1
    one = 2
    two = 4
    three = 8
    @staticmethod
    def __get_thrift_name__() -> builtins.str:
        return "module.has_bitwise_ops"

    @staticmethod
    def __get_thrift_uri__() -> _std_python_typing.Optional[builtins.str]:
        return "apache.org/thrift/fixtures/types/has_bitwise_ops"

    @staticmethod
    def __get_metadata__() -> _fbthrift_metadata.ThriftMetadata:
        return gen_metadata_enum_has_bitwise_ops()

    def _to_python(self) -> "has_bitwise_ops":
        return self

    def _to_py3(self) -> "has_bitwise_ops":
        return self

    # pyre-ignore[11]: Annotation `module.ttypes.has_bitwise_ops` is not defined as a type.
    def _to_py_deprecated(self) -> "module.ttypes.has_bitwise_ops":
        return self.value
import typing as _std_python_typing



class is_unscoped(_fbthrift_python_types.Enum, int):
    hello = 0
    world = 1
    @staticmethod
    def __get_thrift_name__() -> builtins.str:
        return "module.is_unscoped"

    @staticmethod
    def __get_thrift_uri__() -> _std_python_typing.Optional[builtins.str]:
        return "apache.org/thrift/fixtures/types/is_unscoped"

    @staticmethod
    def __get_metadata__() -> _fbthrift_metadata.ThriftMetadata:
        return gen_metadata_enum_is_unscoped()

    def _to_python(self) -> "is_unscoped":
        return self

    def _to_py3(self) -> "is_unscoped":
        return self

    # pyre-ignore[11]: Annotation `module.ttypes.is_unscoped` is not defined as a type.
    def _to_py_deprecated(self) -> "module.ttypes.is_unscoped":
        return self.value
import typing as _std_python_typing



class MyForwardRefEnum(_fbthrift_python_types.Enum, int):
    ZERO = 0
    NONZERO = 12
    @staticmethod
    def __get_thrift_name__() -> builtins.str:
        return "module.MyForwardRefEnum"

    @staticmethod
    def __get_thrift_uri__() -> _std_python_typing.Optional[builtins.str]:
        return "apache.org/thrift/fixtures/types/MyForwardRefEnum"

    @staticmethod
    def __get_metadata__() -> _fbthrift_metadata.ThriftMetadata:
        return gen_metadata_enum_MyForwardRefEnum()

    def _to_python(self) -> "MyForwardRefEnum":
        return self

    def _to_py3(self) -> "MyForwardRefEnum":
        return self

    # pyre-ignore[11]: Annotation `module.ttypes.MyForwardRefEnum` is not defined as a type.
    def _to_py_deprecated(self) -> "module.ttypes.MyForwardRefEnum":
        return self.value

def _fbthrift_gen_metadata_enum_has_bitwise_ops(metadata_struct: _fbthrift_metadata.ThriftMetadata) -> _fbthrift_metadata.ThriftMetadata:
    qualified_name = "module.has_bitwise_ops"

    if qualified_name in metadata_struct.enums:
        return metadata_struct
    elements = {
        0: "none",
        1: "zero",
        2: "one",
        4: "two",
        8: "three",
    }
    structured_annotations = [
    ]
    enum_dict = dict(metadata_struct.enums)
    enum_dict[qualified_name] = _fbthrift_metadata.ThriftEnum(name=qualified_name, elements=elements, structured_annotations=structured_annotations)
    new_struct = metadata_struct(enums=enum_dict)

    return new_struct

def gen_metadata_enum_has_bitwise_ops() -> _fbthrift_metadata.ThriftMetadata:
    return _fbthrift_gen_metadata_enum_has_bitwise_ops(
        _fbthrift_metadata.ThriftMetadata(structs={}, enums={}, exceptions={}, services={})
    )

def _fbthrift_gen_metadata_enum_is_unscoped(metadata_struct: _fbthrift_metadata.ThriftMetadata) -> _fbthrift_metadata.ThriftMetadata:
    qualified_name = "module.is_unscoped"

    if qualified_name in metadata_struct.enums:
        return metadata_struct
    elements = {
        0: "hello",
        1: "world",
    }
    structured_annotations = [
    ]
    enum_dict = dict(metadata_struct.enums)
    enum_dict[qualified_name] = _fbthrift_metadata.ThriftEnum(name=qualified_name, elements=elements, structured_annotations=structured_annotations)
    new_struct = metadata_struct(enums=enum_dict)

    return new_struct

def gen_metadata_enum_is_unscoped() -> _fbthrift_metadata.ThriftMetadata:
    return _fbthrift_gen_metadata_enum_is_unscoped(
        _fbthrift_metadata.ThriftMetadata(structs={}, enums={}, exceptions={}, services={})
    )

def _fbthrift_gen_metadata_enum_MyForwardRefEnum(metadata_struct: _fbthrift_metadata.ThriftMetadata) -> _fbthrift_metadata.ThriftMetadata:
    qualified_name = "module.MyForwardRefEnum"

    if qualified_name in metadata_struct.enums:
        return metadata_struct
    elements = {
        0: "ZERO",
        12: "NONZERO",
    }
    structured_annotations = [
    ]
    enum_dict = dict(metadata_struct.enums)
    enum_dict[qualified_name] = _fbthrift_metadata.ThriftEnum(name=qualified_name, elements=elements, structured_annotations=structured_annotations)
    new_struct = metadata_struct(enums=enum_dict)

    return new_struct

def gen_metadata_enum_MyForwardRefEnum() -> _fbthrift_metadata.ThriftMetadata:
    return _fbthrift_gen_metadata_enum_MyForwardRefEnum(
        _fbthrift_metadata.ThriftMetadata(structs={}, enums={}, exceptions={}, services={})
    )

