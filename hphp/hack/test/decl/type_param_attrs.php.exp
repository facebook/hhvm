Parsed decls:

{ Direct_decl_parser.classes =
  { "\\A" ->
    { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
      sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
      sc_name = ([3:7-8], "\\A"); sc_tparams = []; sc_where_constraints = [];
      sc_extends = []; sc_uses = []; sc_xhp_attr_uses = [];
      sc_req_extends = []; sc_req_implements = [];
      sc_implements =
      [(Rhint (root|type_param_attrs.php line 3, characters 20-44),
        (Tapply (([3:20-45], "\\HH\\TypeParameterAttribute"), [])))];
      sc_consts = []; sc_typeconsts = []; sc_pu_enums = []; sc_props = [];
      sc_sprops = [];
      sc_constructor =
      (Some { Shallow_decl_defs.sm_abstract = false; sm_final = false;
              sm_memoizelsb = false; sm_name = ([4:19-30], "__construct");
              sm_override = false; sm_dynamicallycallable = false;
              sm_reactivity = None;
              sm_type =
              (Rwitness (root|type_param_attrs.php line 4, characters 19-29),
               (Tfun
                  { ft_arity = (Fstandard ()); ft_tparams = [];
                    ft_where_constraints = []; ft_params = [];
                    ft_implicit_params =
                    { capability =
                      (Rhint (root|type_param_attrs.php line 4, characters 19-29),
                       (Tunion []))
                      };
                    ft_ret =
                    { et_enforced = false;
                      et_type =
                      (Rwitness (root|type_param_attrs.php line 4, characters 19-29),
                       (Tprim Tvoid))
                      };
                    ft_flags =
                    (make_ft_flags sync none ~return_disposable:false
                      ~returns_mutable:false ~returns_void_to_rx:false);
                    ft_reactive = Nonreactive }));
              sm_visibility = Public; sm_deprecated = None });
      sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
      sc_enum_type = None; sc_decl_errors = <opaque> };
    "\\C" ->
    { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
      sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
      sc_name = ([7:7-8], "\\C");
      sc_tparams =
      [(Invariant, ([7:36-38], "T1"), [],
        Reified<{ Typing_defs_core.ua_name = ([7:26-27], "\\A");
                  ua_classname_params = [] };
                 { Typing_defs_core.ua_name = ([7:11-24], "__Enforceable");
                   ua_classname_params = [] }
                 >)
        ];
      sc_where_constraints = []; sc_extends = []; sc_uses = [];
      sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
      sc_implements = []; sc_consts = []; sc_typeconsts = [];
      sc_pu_enums = []; sc_props = []; sc_sprops = []; sc_constructor = None;
      sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
      sc_enum_type = None; sc_decl_errors = <opaque> } };
  funs = {}; typedefs = {}; consts = {} }

They matched!
