/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#include <thrift/compiler/test/fixtures/no-legacy-apis/src/gen-py3/module/clients_wrapper.h>

namespace test {
namespace fixtures {
namespace basic {


folly::Future<::test::fixtures::basic::MyStruct>
MyServiceClientWrapper::query(
    apache::thrift::RpcOptions& rpcOptions,
    ::test::fixtures::basic::MyUnion arg_u) {
  auto* client = static_cast<::test::fixtures::basic::MyServiceAsyncClient*>(async_client_.get());
  folly::Promise<::test::fixtures::basic::MyStruct> _promise;
  auto _future = _promise.getFuture();
  auto callback = std::make_unique<::thrift::py3::FutureCallback<::test::fixtures::basic::MyStruct>>(
    std::move(_promise), rpcOptions, client->recv_wrapped_query, channel_);
  try {
    client->query(
      rpcOptions,
      std::move(callback),
      arg_u
    );
  } catch (...) {
    return folly::makeFuture<::test::fixtures::basic::MyStruct>(folly::exception_wrapper(
      std::current_exception()
    ));
  }
  return _future;
}

} // namespace test
} // namespace fixtures
} // namespace basic
