[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([5:10-11], "\\f");
      fd_fun =
      { f_span = [5:1-26:2]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_tparams = []; f_ret = ((void), (Some ([5:30-34], (Hprim Tvoid))));
        f_params =
        [{ param_annotation = (bool); param_type_hint = ((bool), (Some ([5:12-16], (Hprim Tbool)))); 
           param_pos = [5:17-19]; param_name = "$b"; param_info = Param_required; 
           param_readonly = None; param_splat = None; param_callconv = Pnormal; 
           param_named = None; param_user_attributes = []; param_visibility = None };
          { param_annotation = (int); param_type_hint = ((int), (Some ([5:21-24], (Hprim Tint)))); 
            param_pos = [5:25-27]; param_name = "$a"; param_info = Param_required; 
            param_readonly = None; param_splat = None; param_callconv = Pnormal; 
            param_named = None; param_user_attributes = []; param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None;
        f_body =
        { fb_ast =
          [([6:3-9:16],
            (Do (
               [([7:5-8], (Expr (((int | string)), [7:5-7], (Lvar ([7:5-7], $a)))));
                 ([8:5-13], (Expr ((string), [8:5-12], (Assign (((string), [8:5-7], (Lvar ([8:5-7], $a))), None, ((string), [8:10-12], (String "")))))))],
               ((bool), [9:12-14], (Lvar ([9:12-14], $b))))));
            ([10:3-6], (Expr ((string), [10:3-5], (Lvar ([10:3-5], $a)))));
            ([12:3-15:16],
             (Do (
                [([13:5-8], (Expr ((string), [13:5-7], (Lvar ([13:5-7], $a)))));
                  ([14:5-13], (Expr ((string), [14:5-12], (Assign (((string), [14:5-7], (Lvar ([14:5-7], $a))), None, ((string), [14:10-12], (String "")))))))],
                ((bool), [15:12-14], (Lvar ([15:12-14], $b))))));
            ([17:3-25:16],
             (Do (
                [([18:5-8], (Expr ((string), [18:5-7], (Lvar ([18:5-7], $a)))));
                  ([19:5-12], (Expr ((int), [19:5-11], (Assign (((int), [19:5-7], (Lvar ([19:5-7], $a))), None, ((int), [19:10-11], (Int "0")))))));
                  ([20:5-23:18],
                   (Do (
                      [([21:7-10], (Expr ((int), [21:7-9], (Lvar ([21:7-9], $a)))));
                        ([22:7-14], (Expr ((int), [22:7-13], (Assign (((int), [22:7-9], (Lvar ([22:7-9], $a))), None, ((int), [22:12-13], (Int "1")))))))],
                      ((bool), [23:14-16], (Lvar ([23:14-16], $b))))));
                  ([24:5-13], (Expr ((string), [24:5-12], (Assign (((string), [24:5-7], (Lvar ([24:5-7], $a))), None, ((string), [24:10-12], (String "")))))))],
                ((bool), [25:12-14], (Lvar ([25:12-14], $b))))))
            ]
          };
        f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([5:10-11], "__SupportDynamicType"); ua_params = [] }]; 
        f_external = false; f_doc_comment = None };
      fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
      fd_package = None })