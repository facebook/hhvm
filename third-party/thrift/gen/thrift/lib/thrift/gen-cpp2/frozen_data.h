/**
 * Autogenerated by Thrift for /home/fbthrift/thrift/lib/thrift/frozen.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#pragma once

#include <thrift/lib/cpp2/gen/module_data_h.h>

#include "thrift/lib/thrift/gen-cpp2/frozen_types.h"

namespace apache { namespace thrift {



template <> struct TStructDataStorage<::apache::thrift::frozen::schema::Field> {
 private:
  using TType = apache::thrift::protocol::TType;

 public:
  static constexpr const std::size_t fields_size = 2;
  static constexpr std::array<folly::StringPiece, fields_size> fields_names = {{
    "layoutId",
    "offset",
  }};
  static constexpr std::array<int16_t, fields_size> fields_ids = {{
    1,
    2,
  }};
  static constexpr std::array<TType, fields_size> fields_types = {{
    TType::T_I16,
    TType::T_I16,
  }};
};


template <> struct TStructDataStorage<::apache::thrift::frozen::schema::Layout> {
 private:
  using TType = apache::thrift::protocol::TType;

 public:
  static constexpr const std::size_t fields_size = 4;
  static constexpr std::array<folly::StringPiece, fields_size> fields_names = {{
    "size",
    "bits",
    "fields",
    "typeName",
  }};
  static constexpr std::array<int16_t, fields_size> fields_ids = {{
    1,
    2,
    3,
    4,
  }};
  static constexpr std::array<TType, fields_size> fields_types = {{
    TType::T_I32,
    TType::T_I16,
    TType::T_MAP,
    TType::T_STRING,
  }};
};


template <> struct TStructDataStorage<::apache::thrift::frozen::schema::Schema> {
 private:
  using TType = apache::thrift::protocol::TType;

 public:
  static constexpr const std::size_t fields_size = 4;
  static constexpr std::array<folly::StringPiece, fields_size> fields_names = {{
    "fileVersion",
    "relaxTypeChecks",
    "layouts",
    "rootLayout",
  }};
  static constexpr std::array<int16_t, fields_size> fields_ids = {{
    4,
    1,
    2,
    3,
  }};
  static constexpr std::array<TType, fields_size> fields_types = {{
    TType::T_I32,
    TType::T_BOOL,
    TType::T_MAP,
    TType::T_I16,
  }};
};


}} // apache::thrift
