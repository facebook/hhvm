{{!

  Copyright (c) Meta Platforms, Inc. and its affiliates.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

}}
{{#type:typedef?}}{{!
  }}{{type:setTypeName}}{{!
  }}{{#type:isAdapterSet?}}{{!
    }}{{#type:isMapKey?}}{{#type:typedef_type}}{{type:setIsMapKey}}{{type:setAdapter}}{{> WriteType}}{{/type:typedef_type}}{{/type:isMapKey?}}{{!
    }}{{#type:isMapValue?}}{{#type:typedef_type}}{{type:setIsMapValue}}{{type:setAdapter}}{{> WriteType}}{{/type:typedef_type}}{{/type:isMapValue?}}{{!
    }}{{^type:isMapKey?}}{{^type:isMapValue?}}{{#type:typedef_type}}{{type:setAdapter}}{{> WriteType}}{{/type:typedef_type}}{{/type:isMapValue?}}{{/type:isMapKey?}}{{!
  }}{{/type:isAdapterSet?}}{{!
  }}{{^type:isAdapterSet?}}{{!
    }}{{#type:isMapKey?}}{{#type:typedef_type}}{{type:setIsMapKey}}{{> WriteType}}{{/type:typedef_type}}{{/type:isMapKey?}}{{!
    }}{{#type:isMapValue?}}{{#type:typedef_type}}{{type:setIsMapValue}}{{> WriteType}}{{/type:typedef_type}}{{/type:isMapValue?}}{{!
    }}{{^type:isMapKey?}}{{^type:isMapValue?}}{{#type:typedef_type}}{{> WriteType}}{{/type:typedef_type}}{{/type:isMapValue?}}{{/type:isMapKey?}}{{!
  }}{{/type:isAdapterSet?}}{{!
}}{{/type:typedef?}}{{!
}}{{^type:typedef?}}{{!
}}{{#type:set?}}oprot.writeSetBegin(new TSet(TType.{{#type:set_elem_type}}{{> TType}}{{/type:set_elem_type}}, _iter{{field:prevNestedDepth}}{{> KeyValue}}.size()));
        for ({{#type:set_elem_type}}{{> AdaptedType}}{{/type:set_elem_type}} _iter{{field:nestedDepth}} : _iter{{field:prevNestedDepth}}{{> KeyValue}}) {
          {{field:setIsNested}}{{type:setIsNotMap}}{{!
          }}{{#type:set_elem_type}}{{!
          }}{{#type:isContainer?}}{{> WriteTypeAdapter}}{{/type:isContainer?}}{{!
          }}{{^type:isContainer?}}{{#type:hasAdapter?}}{{type:setAdapter}}{{/type:hasAdapter?}}{{> WriteType}}{{!
          }}{{/type:isContainer?}}{{/type:set_elem_type}}
        }
        oprot.writeSetEnd();{{!
}}{{/type:set?}}{{!

}}{{#type:list?}}{{!
}}oprot.writeListBegin(new TList(TType.{{#type:list_elem_type}}{{> TType}}{{/type:list_elem_type}}, _iter{{field:prevNestedDepth}}{{> KeyValue}}.size()));
        for ({{#type:list_elem_type}}{{> AdaptedType}}{{/type:list_elem_type}} _iter{{field:nestedDepth}} : _iter{{field:prevNestedDepth}}{{> KeyValue}}) {
          {{field:setIsNested}}{{type:setIsNotMap}}{{!
          }}{{#type:list_elem_type}}{{!
          }}{{#type:isContainer?}}{{> WriteTypeAdapter}}{{/type:isContainer?}}{{!
          }}{{^type:isContainer?}}{{#type:hasAdapter?}}{{type:setAdapter}}{{/type:hasAdapter?}}{{> WriteType}}{{!
          }}{{/type:isContainer?}}{{/type:list_elem_type}}
        }
        oprot.writeListEnd();{{!
}}{{/type:list?}}{{!

}}{{#type:map?}}{{!
}}oprot.writeMapBegin(new TMap(TType.{{#type:key_type}}{{> TType}}{{/type:key_type}}, TType.{{#type:value_type}}{{> TType}}{{/type:value_type}}, _iter{{field:prevNestedDepth}}{{> KeyValue}}.size()));
        for (Map.Entry<{{#type:key_type}}{{> BoxedType}}{{/type:key_type}}, {{#type:value_type}}{{> BoxedType}}{{/type:value_type}}> _iter{{field:nestedDepth}} : _iter{{field:prevNestedDepth}}{{> KeyValue}}.entrySet()) {
          {{field:setIsNested}}{{!

          }}{{#type:key_type}}{{type:setIsMapKey}}{{!
          }}{{#type:isContainer?}}{{> WriteTypeAdapter}}{{/type:isContainer?}}{{!
          }}{{^type:isContainer?}}{{#type:hasAdapter?}}{{type:setAdapter}}{{/type:hasAdapter?}}{{> WriteType}}{{!
          }}{{/type:isContainer?}}{{/type:key_type}}
          {{!
          }}{{#type:value_type}}{{type:setIsMapValue}}{{!
          }}{{#type:isContainer?}}{{> WriteTypeAdapter}}{{/type:isContainer?}}{{!
          }}{{^type:isContainer?}}{{#type:hasAdapter?}}{{type:setAdapter}}{{/type:hasAdapter?}}{{> WriteType}}{{!
          }}{{/type:isContainer?}}{{/type:value_type}}
        }
        oprot.writeMapEnd();{{!
}}{{/type:map?}}{{!

}}{{#type:struct?}}{{!
}}{{#field:isNested?}}{{> WriteNestedType}}.write0(oprot);{{!
}}{{/field:isNested?}}{{!
}}{{^field:isNested?}}{{^struct:isUnion?}}{{^field:hasAdapterOrWrapper?}}this.{{/field:hasAdapterOrWrapper?}}{{/struct:isUnion?}}{{field:javaName}}.write0(oprot);{{/field:isNested?}}{{!
}}{{/type:struct?}}{{!

}}{{#type:enum?}}{{!
}}{{#field:isNested?}}oprot.writeI32(_iter{{field:nestedDepth}} == null ? 0 : com.facebook.thrift.util.EnumUtil.getValue({{> WriteNestedType}}));{{!
}}{{/field:isNested?}}{{!
}}{{^field:isNested?}}oprot.writeI32({{^struct:isUnion?}}{{^field:hasAdapterOrWrapper?}}this.{{/field:hasAdapterOrWrapper?}}{{/struct:isUnion?}}{{field:javaName}} == null ? 0 : com.facebook.thrift.util.EnumUtil.getValue({{^struct:isUnion?}}{{^field:hasAdapterOrWrapper?}}this.{{/field:hasAdapterOrWrapper?}}{{/struct:isUnion?}}{{field:javaName}}));{{/field:isNested?}}{{!
}}{{/type:enum?}}{{!

}}{{#type:binary?}}{{!
}}{{#field:isNested?}}{{!
}}{{^field:hasAdapterOrWrapper?}}{{#type:isAdapterSet?}}org.apache.thrift.protocol.TProtocolUtil.writeBinary(oprot, {{> WriteNestedType}});{{/type:isAdapterSet?}}{{^type:isAdapterSet?}}oprot.writeBinary({{^type:javaType}}java.nio.ByteBuffer.wrap{{/type:javaType}}({{> WriteNestedType}}));{{/type:isAdapterSet?}}{{/field:hasAdapterOrWrapper?}}{{!
}}{{#field:hasAdapterOrWrapper?}}org.apache.thrift.protocol.TProtocolUtil.writeBinary(oprot, {{> WriteNestedType}});{{/field:hasAdapterOrWrapper?}}{{!
}}{{/field:isNested?}}{{!
}}{{^field:isNested?}}{{!
}}{{^field:hasAdapterOrWrapper?}}oprot.writeBinary({{^type:javaType}}java.nio.ByteBuffer.wrap{{/type:javaType}}({{^struct:isUnion?}}this.{{/struct:isUnion?}}{{field:javaName}}));{{/field:hasAdapterOrWrapper?}}{{!
}}{{#field:hasAdapterOrWrapper?}}org.apache.thrift.protocol.TProtocolUtil.writeBinary(oprot, {{field:javaName}});{{/field:hasAdapterOrWrapper?}}{{!
}}{{/field:isNested?}}{{!
}}{{/type:binary?}}{{!

}}{{#type:string?}}{{!
}}{{#field:isNested?}}{{!
  }}{{#type:isBinaryString?}}{{!
  }}{{^field:hasAdapterOrWrapper?}}{{#type:isAdapterSet?}}org.apache.thrift.protocol.TProtocolUtil.writeBinary(oprot, {{> WriteNestedType}});{{/type:isAdapterSet?}}{{^type:isAdapterSet?}}oprot.writeBinary(java.nio.ByteBuffer.wrap({{> WriteNestedType}}));{{/type:isAdapterSet?}}{{/field:hasAdapterOrWrapper?}}{{!
  }}{{#field:hasAdapterOrWrapper?}}org.apache.thrift.protocol.TProtocolUtil.writeBinary(oprot, {{> WriteNestedType}});{{/field:hasAdapterOrWrapper?}}{{!
  }}{{/type:isBinaryString?}}{{!
  }}{{^type:isBinaryString?}}{{!
    }}oprot.writeString({{> WriteNestedType}});{{!
}}{{/type:isBinaryString?}}{{!
}}{{/field:isNested?}}{{!
}}{{^field:isNested?}}{{!
  }}{{#type:isBinaryString?}}{{!
  }}{{^field:hasAdapterOrWrapper?}}oprot.writeBinary({{^type:javaType}}java.nio.ByteBuffer.wrap{{/type:javaType}}({{^struct:isUnion?}}this.{{/struct:isUnion?}}{{field:javaName}}));{{/field:hasAdapterOrWrapper?}}{{!
  }}{{#field:hasAdapterOrWrapper?}}org.apache.thrift.protocol.TProtocolUtil.writeBinary(oprot, {{field:javaName}});{{/field:hasAdapterOrWrapper?}}{{!
  }}{{/type:isBinaryString?}}{{!
  }}{{^type:isBinaryString?}}{{!
    }}oprot.writeString({{^struct:isUnion?}}{{^field:hasAdapterOrWrapper?}}this.{{/field:hasAdapterOrWrapper?}}{{/struct:isUnion?}}{{field:javaName}});{{!
  }}{{/type:isBinaryString?}}{{!

}}{{/field:isNested?}}{{!
}}{{/type:string?}}{{!

}}{{#type:bool?}}{{!
}}{{#field:isNested?}}oprot.writeBool({{> WriteNestedType}});{{!
}}{{/field:isNested?}}{{!
}}{{^field:isNested?}}oprot.writeBool({{^struct:isUnion?}}{{^field:hasAdapterOrWrapper?}}this.{{/field:hasAdapterOrWrapper?}}{{/struct:isUnion?}}{{field:javaName}});{{/field:isNested?}}{{!
}}{{/type:bool?}}{{!

}}{{#type:byte?}}{{!
}}{{#field:isNested?}}oprot.writeByte({{> WriteNestedType}});{{!
}}{{/field:isNested?}}{{!
}}{{^field:isNested?}}oprot.writeByte({{^struct:isUnion?}}{{^field:hasAdapterOrWrapper?}}this.{{/field:hasAdapterOrWrapper?}}{{/struct:isUnion?}}{{field:javaName}});{{/field:isNested?}}{{!
}}{{/type:byte?}}{{!

}}{{#type:i16?}}{{!
}}{{#field:isNested?}}oprot.writeI16({{> WriteNestedType}});{{!
}}{{/field:isNested?}}{{!
}}{{^field:isNested?}}oprot.writeI16({{^struct:isUnion?}}{{^field:hasAdapterOrWrapper?}}this.{{/field:hasAdapterOrWrapper?}}{{/struct:isUnion?}}{{field:javaName}});{{/field:isNested?}}{{!
}}{{/type:i16?}}{{!

}}{{#type:i32?}}{{!
}}{{#field:isNested?}}oprot.writeI32({{> WriteNestedType}});{{!
}}{{/field:isNested?}}{{!
}}{{^field:isNested?}}oprot.writeI32({{^struct:isUnion?}}{{^field:hasAdapterOrWrapper?}}this.{{/field:hasAdapterOrWrapper?}}{{/struct:isUnion?}}{{field:javaName}});{{/field:isNested?}}{{!
}}{{/type:i32?}}{{!

}}{{#type:i64?}}{{!
}}{{#field:isNested?}}oprot.writeI64({{> WriteNestedType}});{{!
}}{{/field:isNested?}}{{!
}}{{^field:isNested?}}oprot.writeI64({{^struct:isUnion?}}{{^field:hasAdapterOrWrapper?}}this.{{/field:hasAdapterOrWrapper?}}{{/struct:isUnion?}}{{field:javaName}});{{/field:isNested?}}{{!
}}{{/type:i64?}}{{!

}}{{#type:float?}}{{!
}}{{#field:isNested?}}oprot.writeFloat({{> WriteNestedType}});{{!
}}{{/field:isNested?}}{{!
}}{{^field:isNested?}}oprot.writeFloat({{^struct:isUnion?}}{{^field:hasAdapterOrWrapper?}}this.{{/field:hasAdapterOrWrapper?}}{{/struct:isUnion?}}{{field:javaName}});{{/field:isNested?}}{{!
}}{{/type:float?}}{{!

}}{{#type:double?}}{{!
}}{{#field:isNested?}}oprot.writeDouble({{> WriteNestedType}});{{!
}}{{/field:isNested?}}{{!
}}{{^field:isNested?}}oprot.writeDouble({{^struct:isUnion?}}{{^field:hasAdapterOrWrapper?}}this.{{/field:hasAdapterOrWrapper?}}{{/struct:isUnion?}}{{field:javaName}});{{/field:isNested?}}{{!
}}{{/type:double?}}{{!

}}{{/type:typedef?}}