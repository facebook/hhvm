Errors:
  [8:20-21] Wildcard typehints are not allowed in this position
[(Stmt ([2:1-5], (Expr ((), [2:1-5], (Eif (((), [2:1-2], (Id ([2:1-2], "\\<"))), (Some ((), [2:3-5], (Id ([2:3-5], "\\hh")))), ((), [3:1-4:1], Null)))))));
  (Class
     { c_span = [4:1-11]; c_annotation = (); c_mode = Mstrict; c_final = false; 
       c_is_xhp = false; c_has_xhp_keyword = false; c_kind = (Cclass Concrete); 
       c_name = ([4:7-8], "\\A"); c_tparams = []; c_extends = []; c_uses = []; 
       c_xhp_attr_uses = []; c_xhp_category = None; c_reqs = []; c_implements = []; 
       c_where_constraints = []; c_consts = []; c_typeconsts = []; c_vars = []; 
       c_methods = []; c_xhp_children = []; c_xhp_attrs = [];
       c_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       c_user_attributes = [];
       c_file_attributes =
       [{ fa_user_attributes = [{ ua_name = ([1:8-32], "__EnableUnstableFeatures"); ua_params = [((), [1:33-52], (String "upcast_expression"))] }];
          fa_namespace =
          { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
            ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
            ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false }
          }
         ];
       c_docs_url = None; c_enum = None; c_doc_comment = None; c_emit_id = None; 
       c_internal = false; c_module = None });
  (Class
     { c_span = [5:1-14]; c_annotation = (); c_mode = Mstrict; c_final = false; 
       c_is_xhp = false; c_has_xhp_keyword = false; c_kind = (Cclass Concrete); 
       c_name = ([5:7-8], "\\B"); c_tparams = [{ tp_variance = Invariant; tp_name = ([5:9-10], "T"); tp_parameters = []; tp_constraints = []; tp_reified = Erased; tp_user_attributes = [] }];
       c_extends = []; c_uses = []; c_xhp_attr_uses = []; c_xhp_category = None; 
       c_reqs = []; c_implements = []; c_where_constraints = []; c_consts = []; 
       c_typeconsts = []; c_vars = []; c_methods = []; c_xhp_children = []; 
       c_xhp_attrs = [];
       c_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       c_user_attributes = [];
       c_file_attributes =
       [{ fa_user_attributes = [{ ua_name = ([1:8-32], "__EnableUnstableFeatures"); ua_params = [((), [1:33-52], (String "upcast_expression"))] }];
          fa_namespace =
          { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
            ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
            ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false }
          }
         ];
       c_docs_url = None; c_enum = None; c_doc_comment = None; c_emit_id = None; 
       c_internal = false; c_module = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes =
       [{ fa_user_attributes = [{ ua_name = ([1:8-32], "__EnableUnstableFeatures"); ua_params = [((), [1:33-52], (String "upcast_expression"))] }];
          fa_namespace =
          { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
            ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
            ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false }
          }
         ];
       fd_mode = Mstrict; fd_name = ([7:10-35], "\\wildcard_hint_upcast_expr");
       fd_fun =
       { f_span = [7:1-9:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((), (Some ([7:43-47], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = (); param_type_hint = ((), (Some ([7:36-37], (Happly (([7:36-37], "\\A"), []))))); 
            param_is_variadic = false; param_pos = [7:38-40]; param_name = "$x"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([8:3-23],
             (Expr
                ((), [8:3-22],
                 (Binop
                    { bop = (Eq None); lhs = ((), [8:3-5], (Lplaceholder [8:3-5]));
                      rhs = ((), [8:8-22], (Upcast (((), [8:8-10], (Lvar ([8:8-10], $x))), ([8:18-22], (Happly (([8:18-19], "\\B"), [([8:20-21], Herr)])))))) }))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] })
  ]
