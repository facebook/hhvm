[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([3:10-15], "\\my_id");
      fd_fun =
      { f_span = [3:1-5:2]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_tparams = []; f_ret = ((), (Some ([3:26-27], (Habstr "T"))));
        f_params =
        [{ param_annotation = (); param_type_hint = ((), (Some ([3:19-20], (Habstr "T")))); 
           param_pos = [3:21-23]; param_name = "$x"; param_info = Param_required; 
           param_readonly = None; param_splat = None; param_callconv = Pnormal; 
           param_named = None; param_user_attributes = []; param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([4:3-13], (Return (Some ((), [4:10-12], (Lvar ([4:10-12], $x))))))] }; 
        f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([3:10-15], "__SupportDynamicType"); ua_params = [] }]; 
        f_external = false; f_doc_comment = None };
      fd_internal = false; fd_module = None;
      fd_tparams =
      [{ tp_variance = Invariant; tp_name = ([3:16-17], "T"); tp_constraints = [(Constraint_as, ([3:16-17], (Happly (([3:16-17], "\\HH\\supportdyn"), [([3:16-17], Hmixed)]))))]; 
         tp_reified = Erased; tp_user_attributes = [] }
        ];
      fd_where_constraints = []; fd_package = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([7:10-23], "\\wildcard_call");
       fd_fun =
       { f_span = [7:1-9:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_tparams = []; f_ret = ((), (Some ([7:27-31], (Hprim Tvoid)))); 
         f_params = []; f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([8:3-16],
             (Expr
                ((), [8:3-15], (Call { func = ((), [8:3-8], (Id ([8:3-8], "\\my_id"))); targs = [((), ([8:9-10], Hwildcard))]; args = [(Anormal ((), [8:12-14], (Int "42")))]; unpacked_arg = None }))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([7:10-23], "__SupportDynamicType"); ua_params = [] }]; 
         f_external = false; f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
       fd_package = None })
  ]
