[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([3:10-37], "\\assign_array_get_index_dict");
      fd_fun =
      { f_span = [3:1-7:2]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_ret = ((void), (Some ([3:51-55], (Hprim Tvoid))));
        f_params =
        [{ param_annotation = (mixed); param_type_hint = ((mixed), (Some ([3:38-43], Hmixed))); 
           param_is_variadic = false; param_pos = [3:44-48]; param_name = "$idx"; 
           param_expr = None; param_readonly = None; param_callconv = Pnormal; 
           param_user_attributes = []; param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None;
        f_body =
        { fb_ast =
          [([4:3-16],
            (Expr
               ((dict<nothing, nothing>), [4:3-15],
                (Binop
                   { bop = (Eq None); lhs = ((dict<nothing, nothing>), [4:3-6], (Lvar ([4:3-6], $xs))); rhs = ((dict<nothing, nothing>), [4:9-15], (KeyValCollection (([4:9-13], Dict), None, []))) }))));
            ([6:3-17],
             (Expr
                ((int), [6:3-16],
                 (Binop
                    { bop = (Eq None);
                      lhs =
                      ((int), [6:3-12],
                       (Array_get (((dict<mixed, int>), [6:3-6], (Lvar ([6:3-6], $xs))), (Some (
                          (mixed), [6:7-11], (Hole (((mixed), [6:7-11], (Lvar ([6:7-11], $idx))), (mixed), (arraykey), Typing)))))));
                      rhs = ((int), [6:15-16], (Int "1")) }))))
            ]
          };
        f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
        f_doc_comment = None };
      fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] })