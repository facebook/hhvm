*** Testing array_combine() : assoc array with diff values to both $keys and $values argument ***
-- Iteration 1 --
array(0) {
}
-- Iteration 2 --
array(1) {
  [0]=>
  int(0)
}
-- Iteration 3 --
array(1) {
  [1]=>
  int(1)
}
-- Iteration 4 --
array(4) {
  [1]=>
  int(1)
  [2]=>
  int(2)
  [3]=>
  int(3)
  [4]=>
  int(4)
}
-- Iteration 5 --
array(1) {
  ["2.3333"]=>
  float(2.3333)
}
-- Iteration 6 --
array(4) {
  ["1.2"]=>
  float(1.2)
  ["3.33"]=>
  float(3.33)
  ["4.8999992284"]=>
  float(4.8999992284)
  ["33333333.333"]=>
  float(33333333.333)
}
-- Iteration 7 --
array(4) {
  ["	Hello"]=>
  string(6) "	Hello"
  ["col	or"]=>
  string(6) "col	or"
  ["world"]=>
  string(7) "world"
  ["pen
"]=>
  string(4) "pen
"
}
-- Iteration 8 --
array(4) {
  ["\tHello"]=>
  string(7) "\tHello"
  ["col\tor"]=>
  string(7) "col\tor"
  ["\v\fworld"]=>
  string(9) "\v\fworld"
  ["pen\n"]=>
  string(5) "pen\n"
}
-- Iteration 9 --
array(2) {
  ["hello"]=>
  string(5) "hello"
  ["Hello world"]=>
  string(11) "Hello world"
}
-- Iteration 10 --
array(3) {
  ["Class A object"]=>
  object(classA)#%d (0) {
  }
  [""]=>
  NULL
  ["Resource id #%d"]=>
  resource(%d) of type (stream)
}
-- Iteration 11 --
array(8) {
  ["hello"]=>
  string(5) "hello"
  ["Class A object"]=>
  object(classA)#%d (0) {
  }
  ["fruit"]=>
  string(5) "fruit"
  ["Resource id #%d"]=>
  resource(%d) of type (stream)
  [133]=>
  int(133)
  ["444.432"]=>
  float(444.432)
  [""]=>
  NULL
  ["Hello world"]=>
  string(11) "Hello world"
}
Done