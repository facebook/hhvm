Parsed decls:

{ Direct_decl_parser.classes =
  { "\\A" ->
    { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
      sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
      sc_name = ([3:7-8], "\\A"); sc_tparams = []; sc_where_constraints = [];
      sc_extends = []; sc_uses = []; sc_xhp_attr_uses = [];
      sc_req_extends = []; sc_req_implements = []; sc_implements = [];
      sc_consts = []; sc_typeconsts = []; sc_pu_enums = []; sc_props = [];
      sc_sprops = []; sc_constructor = None; sc_static_methods = [];
      sc_methods =
      [{ Shallow_decl_defs.sm_abstract = false; sm_final = false;
         sm_memoizelsb = false; sm_name = ([4:19-20], "a");
         sm_override = false; sm_dynamicallycallable = false;
         sm_reactivity = None;
         sm_type =
         (Rwitness (root|classes_inheritance.php line 4, characters 19-19),
          (Tfun
             { ft_arity = (Fstandard ()); ft_tparams = [];
               ft_where_constraints = []; ft_params = [];
               ft_implicit_params =
               { capability =
                 (Rhint (root|classes_inheritance.php line 4, characters 19-19),
                  (Tunion []))
                 };
               ft_ret =
               { et_enforced = false;
                 et_type =
                 (Rhint (root|classes_inheritance.php line 4, characters 24-27),
                  (Tprim Tvoid))
                 };
               ft_flags =
               (make_ft_flags sync none ~return_disposable:false
                 ~returns_mutable:false ~returns_void_to_rx:false);
               ft_reactive = Nonreactive }));
         sm_visibility = Public; sm_deprecated = None };
        { Shallow_decl_defs.sm_abstract = false; sm_final = false;
          sm_memoizelsb = false; sm_name = ([5:19-20], "b");
          sm_override = false; sm_dynamicallycallable = false;
          sm_reactivity = None;
          sm_type =
          (Rwitness (root|classes_inheritance.php line 5, characters 19-19),
           (Tfun
              { ft_arity = (Fstandard ()); ft_tparams = [];
                ft_where_constraints = []; ft_params = [];
                ft_implicit_params =
                { capability =
                  (Rhint (root|classes_inheritance.php line 5, characters 19-19),
                   (Tunion []))
                  };
                ft_ret =
                { et_enforced = false;
                  et_type =
                  (Rhint (root|classes_inheritance.php line 5, characters 24-27),
                   (Tprim Tvoid))
                  };
                ft_flags =
                (make_ft_flags sync none ~return_disposable:false
                  ~returns_mutable:false ~returns_void_to_rx:false);
                ft_reactive = Nonreactive }));
          sm_visibility = Public; sm_deprecated = None }
        ];
      sc_user_attributes = []; sc_enum_type = None; sc_decl_errors = <opaque>
      };
    "\\B" ->
    { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
      sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
      sc_name = ([8:7-8], "\\B"); sc_tparams = []; sc_where_constraints = [];
      sc_extends =
      [(Rhint (root|classes_inheritance.php line 8, characters 17-17),
        (Tapply (([8:17-18], "\\A"), [])))];
      sc_uses = []; sc_xhp_attr_uses = []; sc_req_extends = [];
      sc_req_implements = []; sc_implements = []; sc_consts = [];
      sc_typeconsts = []; sc_pu_enums = []; sc_props = []; sc_sprops = [];
      sc_constructor = None; sc_static_methods = [];
      sc_methods =
      [{ Shallow_decl_defs.sm_abstract = false; sm_final = false;
         sm_memoizelsb = false; sm_name = ([9:19-20], "b");
         sm_override = false; sm_dynamicallycallable = false;
         sm_reactivity = None;
         sm_type =
         (Rwitness (root|classes_inheritance.php line 9, characters 19-19),
          (Tfun
             { ft_arity = (Fstandard ()); ft_tparams = [];
               ft_where_constraints = []; ft_params = [];
               ft_implicit_params =
               { capability =
                 (Rhint (root|classes_inheritance.php line 9, characters 19-19),
                  (Tunion []))
                 };
               ft_ret =
               { et_enforced = false;
                 et_type =
                 (Rhint (root|classes_inheritance.php line 9, characters 24-27),
                  (Tprim Tvoid))
                 };
               ft_flags =
               (make_ft_flags sync none ~return_disposable:false
                 ~returns_mutable:false ~returns_void_to_rx:false);
               ft_reactive = Nonreactive }));
         sm_visibility = Public; sm_deprecated = None };
        { Shallow_decl_defs.sm_abstract = false; sm_final = false;
          sm_memoizelsb = false; sm_name = ([10:19-20], "c");
          sm_override = false; sm_dynamicallycallable = false;
          sm_reactivity = None;
          sm_type =
          (Rwitness (root|classes_inheritance.php line 10, characters 19-19),
           (Tfun
              { ft_arity = (Fstandard ()); ft_tparams = [];
                ft_where_constraints = []; ft_params = [];
                ft_implicit_params =
                { capability =
                  (Rhint (root|classes_inheritance.php line 10, characters 19-19),
                   (Tunion []))
                  };
                ft_ret =
                { et_enforced = false;
                  et_type =
                  (Rhint (root|classes_inheritance.php line 10, characters 24-27),
                   (Tprim Tvoid))
                  };
                ft_flags =
                (make_ft_flags sync none ~return_disposable:false
                  ~returns_mutable:false ~returns_void_to_rx:false);
                ft_reactive = Nonreactive }));
          sm_visibility = Public; sm_deprecated = None }
        ];
      sc_user_attributes = []; sc_enum_type = None; sc_decl_errors = <opaque>
      };
    "\\C" ->
    { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
      sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cinterface;
      sc_name = ([13:11-12], "\\C"); sc_tparams = [];
      sc_where_constraints = []; sc_extends = []; sc_uses = [];
      sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
      sc_implements = []; sc_consts = []; sc_typeconsts = [];
      sc_pu_enums = []; sc_props = []; sc_sprops = []; sc_constructor = None;
      sc_static_methods = [];
      sc_methods =
      [{ Shallow_decl_defs.sm_abstract = true; sm_final = false;
         sm_memoizelsb = false; sm_name = ([14:19-20], "c");
         sm_override = false; sm_dynamicallycallable = false;
         sm_reactivity = None;
         sm_type =
         (Rwitness (root|classes_inheritance.php line 14, characters 19-19),
          (Tfun
             { ft_arity = (Fstandard ()); ft_tparams = [];
               ft_where_constraints = []; ft_params = [];
               ft_implicit_params =
               { capability =
                 (Rhint (root|classes_inheritance.php line 14, characters 19-19),
                  (Tunion []))
                 };
               ft_ret =
               { et_enforced = false;
                 et_type =
                 (Rhint (root|classes_inheritance.php line 14, characters 24-27),
                  (Tprim Tvoid))
                 };
               ft_flags =
               (make_ft_flags sync none ~return_disposable:false
                 ~returns_mutable:false ~returns_void_to_rx:false);
               ft_reactive = Nonreactive }));
         sm_visibility = Public; sm_deprecated = None }
        ];
      sc_user_attributes = []; sc_enum_type = None; sc_decl_errors = <opaque>
      };
    "\\D" ->
    { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
      sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cinterface;
      sc_name = ([17:11-12], "\\D"); sc_tparams = [];
      sc_where_constraints = [];
      sc_extends =
      [(Rhint (root|classes_inheritance.php line 17, characters 21-21),
        (Tapply (([17:21-22], "\\C"), [])))];
      sc_uses = []; sc_xhp_attr_uses = []; sc_req_extends = [];
      sc_req_implements = []; sc_implements = []; sc_consts = [];
      sc_typeconsts = []; sc_pu_enums = []; sc_props = []; sc_sprops = [];
      sc_constructor = None; sc_static_methods = [];
      sc_methods =
      [{ Shallow_decl_defs.sm_abstract = true; sm_final = false;
         sm_memoizelsb = false; sm_name = ([18:19-20], "d");
         sm_override = false; sm_dynamicallycallable = false;
         sm_reactivity = None;
         sm_type =
         (Rwitness (root|classes_inheritance.php line 18, characters 19-19),
          (Tfun
             { ft_arity = (Fstandard ()); ft_tparams = [];
               ft_where_constraints = []; ft_params = [];
               ft_implicit_params =
               { capability =
                 (Rhint (root|classes_inheritance.php line 18, characters 19-19),
                  (Tunion []))
                 };
               ft_ret =
               { et_enforced = false;
                 et_type =
                 (Rhint (root|classes_inheritance.php line 18, characters 24-27),
                  (Tprim Tvoid))
                 };
               ft_flags =
               (make_ft_flags sync none ~return_disposable:false
                 ~returns_mutable:false ~returns_void_to_rx:false);
               ft_reactive = Nonreactive }));
         sm_visibility = Public; sm_deprecated = None }
        ];
      sc_user_attributes = []; sc_enum_type = None; sc_decl_errors = <opaque>
      };
    "\\E" ->
    { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
      sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
      sc_name = ([21:7-8], "\\E"); sc_tparams = [];
      sc_where_constraints = []; sc_extends = []; sc_uses = [];
      sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
      sc_implements =
      [(Rhint (root|classes_inheritance.php line 21, characters 20-20),
        (Tapply (([21:20-21], "\\C"), [])))];
      sc_consts = []; sc_typeconsts = []; sc_pu_enums = []; sc_props = [];
      sc_sprops = []; sc_constructor = None; sc_static_methods = [];
      sc_methods =
      [{ Shallow_decl_defs.sm_abstract = false; sm_final = false;
         sm_memoizelsb = false; sm_name = ([22:19-20], "c");
         sm_override = false; sm_dynamicallycallable = false;
         sm_reactivity = None;
         sm_type =
         (Rwitness (root|classes_inheritance.php line 22, characters 19-19),
          (Tfun
             { ft_arity = (Fstandard ()); ft_tparams = [];
               ft_where_constraints = []; ft_params = [];
               ft_implicit_params =
               { capability =
                 (Rhint (root|classes_inheritance.php line 22, characters 19-19),
                  (Tunion []))
                 };
               ft_ret =
               { et_enforced = false;
                 et_type =
                 (Rhint (root|classes_inheritance.php line 22, characters 24-27),
                  (Tprim Tvoid))
                 };
               ft_flags =
               (make_ft_flags sync none ~return_disposable:false
                 ~returns_mutable:false ~returns_void_to_rx:false);
               ft_reactive = Nonreactive }));
         sm_visibility = Public; sm_deprecated = None }
        ];
      sc_user_attributes = []; sc_enum_type = None; sc_decl_errors = <opaque>
      };
    "\\F" ->
    { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
      sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
      sc_name = ([25:7-8], "\\F"); sc_tparams = [];
      sc_where_constraints = [];
      sc_extends =
      [(Rhint (root|classes_inheritance.php line 25, characters 17-17),
        (Tapply (([25:17-18], "\\E"), [])))];
      sc_uses = []; sc_xhp_attr_uses = []; sc_req_extends = [];
      sc_req_implements = [];
      sc_implements =
      [(Rhint (root|classes_inheritance.php line 25, characters 30-30),
        (Tapply (([25:30-31], "\\D"), [])))];
      sc_consts = []; sc_typeconsts = []; sc_pu_enums = []; sc_props = [];
      sc_sprops = []; sc_constructor = None; sc_static_methods = [];
      sc_methods =
      [{ Shallow_decl_defs.sm_abstract = false; sm_final = false;
         sm_memoizelsb = false; sm_name = ([26:19-20], "d");
         sm_override = false; sm_dynamicallycallable = false;
         sm_reactivity = None;
         sm_type =
         (Rwitness (root|classes_inheritance.php line 26, characters 19-19),
          (Tfun
             { ft_arity = (Fstandard ()); ft_tparams = [];
               ft_where_constraints = []; ft_params = [];
               ft_implicit_params =
               { capability =
                 (Rhint (root|classes_inheritance.php line 26, characters 19-19),
                  (Tunion []))
                 };
               ft_ret =
               { et_enforced = false;
                 et_type =
                 (Rhint (root|classes_inheritance.php line 26, characters 24-27),
                  (Tprim Tvoid))
                 };
               ft_flags =
               (make_ft_flags sync none ~return_disposable:false
                 ~returns_mutable:false ~returns_void_to_rx:false);
               ft_reactive = Nonreactive }));
         sm_visibility = Public; sm_deprecated = None }
        ];
      sc_user_attributes = []; sc_enum_type = None; sc_decl_errors = <opaque>
      } };
  funs = {}; typedefs = {}; consts = {} }

They matched!
