{
  "refid": "Create_8h",
  "kind": "file",
  "language": "C++",
  "compoundname_html": "Create.h",
  "includes": [
    {
      "local": "no",
      "text_html": "folly/Traits.h"
    },
    {
      "refid": "detail_2Create_8h",
      "local": "no",
      "text_html": "thrift/lib/cpp2/op/detail/Create.h"
    }
  ],
  "innernamespace": [
    {
      "refid": "namespaceapache",
      "text_html": "apache"
    },
    {
      "refid": "namespaceapache_1_1thrift",
      "text_html": "apache::thrift"
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op",
      "text_html": "apache::thrift::op"
    }
  ],
  "file_location": {
    "file": "fbcode/thrift/lib/cpp2/op/Create.h"
  },
  "filepath": "file/thrift/lib/cpp2/op/Create.h",
  "href": "/ref/cpp/thrift/lib/cpp2/op/Create.h",
  "free_vars": [
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1ae046140e2b362bee81475ac934cbcd2a",
      "prot": "public",
      "static": "no",
      "mutable": "no",
      "tparams": [
        {
          "type_html": "typename Tag"
        }
      ],
      "type_html": "FOLLY_INLINE_VARIABLE constexpr <a href=\"https://www.internalfb.com/intern/staticdocs/fbcref/ref/cpp/struct/apache/thrift/op/detail/Create\">detail::Create</a>&lt; Tag &gt;",
      "definition_html": "FOLLY_INLINE_VARIABLE constexpr detail::Create&lt;Tag&gt; apache::thrift::op::create",
      "argsstring_html": "",
      "name_html": "create",
      "initializer_html": "{}",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Create.h",
        "line": "38",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Create.h",
        "bodystart": "38",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Returns the default for the given type.</p><p>Some adapted types might not have default constructor. This allows default constructing those adapted types.</p><p>For example:<ul>\n<li><p><code>create&lt;type::i32_t&gt;()</code> -&gt; 0</p></li><li><p>create&lt;adapted&lt;Adapter, type::i32_t&gt;&gt;() -&gt; Adapted&lt;int32_t&gt;{}</p></li><li><p>create&lt;field_t&lt;FieldId, adapted&lt;FieldAdapter, type::i32_t&gt;&gt;&gt;(Struct) -&gt; AdaptedWithContext&lt;int32_t&gt;{}; </p></li></ul>\n</p>"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a669653ec8b26370c4396af2a312ac1c8",
      "prot": "public",
      "static": "no",
      "mutable": "no",
      "tparams": [
        {
          "type_html": "typename Id",
          "defval_html": "void"
        },
        {
          "type_html": "typename Tag",
          "defval_html": "void"
        }
      ],
      "type_html": "FOLLY_INLINE_VARIABLE constexpr <a href=\"https://www.internalfb.com/intern/staticdocs/fbcref/ref/cpp/struct/apache/thrift/op/detail/Ensure\">detail::Ensure</a>&lt; Id, Tag &gt;",
      "definition_html": "FOLLY_INLINE_VARIABLE constexpr detail::Ensure&lt;Id, Tag&gt; apache::thrift::op::ensure",
      "argsstring_html": "",
      "name_html": "ensure",
      "initializer_html": "{}",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Create.h",
        "line": "45",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Create.h",
        "bodystart": "45",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Ensures the given field. If the field doesn't exist, emplaces the field. For example:<ul>\n<li><p>ensure&lt;field_tag&gt;(foo) // calls foo.field_ref().<code>ensure()</code> </p></li></ul>\n</p>"
      }
    }
  ],
  "free_overloadgroups": []
}