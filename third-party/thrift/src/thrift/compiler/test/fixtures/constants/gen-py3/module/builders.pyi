#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

import typing as _typing

import folly.iobuf as _fbthrift_iobuf
import thrift.py3.builder


import module.types as _module_types


class Internship_Builder(thrift.py3.builder.StructBuilder):
    weeks: _typing.Optional[int]
    title: _typing.Optional[str]
    employer: _typing.Optional[_module_types.Company]
    compensation: _typing.Optional[float]
    school: _typing.Optional[str]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class Range_Builder(thrift.py3.builder.StructBuilder):
    min: _typing.Optional[int]
    max: _typing.Optional[int]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class struct1_Builder(thrift.py3.builder.StructBuilder):
    a: _typing.Optional[int]
    b: _typing.Optional[str]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class struct2_Builder(thrift.py3.builder.StructBuilder):
    a: _typing.Optional[int]
    b: _typing.Optional[str]
    c: _typing.Any
    d: _typing.Optional[list]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class struct3_Builder(thrift.py3.builder.StructBuilder):
    a: _typing.Optional[str]
    b: _typing.Optional[int]
    c: _typing.Any

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class struct4_Builder(thrift.py3.builder.StructBuilder):
    a: _typing.Optional[int]
    b: _typing.Optional[float]
    c: _typing.Optional[int]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class union1_Builder(thrift.py3.builder.StructBuilder):
    i: _typing.Optional[int]
    d: _typing.Optional[float]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class union2_Builder(thrift.py3.builder.StructBuilder):
    i: _typing.Optional[int]
    d: _typing.Optional[float]
    s: _typing.Any
    u: _typing.Any

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


