{{!

  Copyright (c) Meta Platforms, Inc. and affiliates.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

}}
{
  "__fbthrift": "@{{!}}generated",
  "thrift_module" : "{{program:name}}",
  {{#each (array.enumerate program:includes with_first=true with_last=true) as |index include first? last?|}}
    {{#if first?}}
    {{! Before the first entry, open the object}}
  "includes": {
    {{/if first?}}
    "{{include.program.name}}": {{!
}}"{{include.program.include_prefix}}{{include.program.name}}.thrift"{{#if (not last?)}},{{#else}}
    {{! After the last entry, close the object on a new line}}
  },{{/if (not last?)}}
  {{/each}}
  {{#each (array.enumerate (map.items program:namespaces) with_first=true with_last=true)
      as |index namespace first? last?|}}
    {{#if first?}}
  "namespaces": {
    {{/if first?}}
    "{{namespace.key}}": "{{namespace.value}}"{{#if (not last?)}},{{#else}}
  },{{/if (not last?)}}
  {{/each}}
  {{#if (not program:package.empty?)}}
  {{#let package = program:package}}
  "package": {
    {{#if package.domain?}}
    "domain_prefix": "{{package.domain_prefix}}",
    "domain_suffix": "{{package.domain_suffix}}",
    {{/if package.domain?}}
    {{#if (object.notnull? package.path)}}
    "path": "{{package.path}}",
    {{/if (object.notnull? package.path)}}
    "filename": "{{program:name}}"
  },{{/if (not program:package.empty?)}}
  {{#program:docs?}}
  "global_docstring": {{program:docstring}},{{/program:docs?}}{{!
  }}{{#program:typedefs?}}
  "typedefs": {
    {{#program:typedefs}}
      "{{typedef:name}}": {
        "name": "{{typedef:name}}",
        "type": {{#typedef:type}}{{> type}}{{/typedef:type}},
        "is_exception": {{typedef:exception?}},
        "lineno": {{typedef:lineno}}
      }{{^last?}},{{/last?}}
    {{/program:typedefs}}
  },{{/program:typedefs?}}{{!
  }}{{#program:constants?}}
  "constants": {
      {{#program:constants}}
      {{#constant:type}}{{#constant:value}}
      "{{constant:name}}": {
        "name": "{{constant:name}}",
        "type": "{{value:type.true_type.full_name}}",
        "value": {{value:string_value_any}},{{!
        }}{{#constant:docs?}}
        "docstring": {{constant:docstring}},{{/constant:docs?}}
        "lineno": {{constant:lineno}}
      }{{/constant:value}}{{/constant:type}}{{^last?}},{{/last?}}
      {{/program:constants}}
  },{{/program:constants?}}{{!
  }}{{#program:enums?}}
  "enumerations" :
  {
    {{> enums}}
  },
  {{/program:enums?}}
  {{#program:structs?}}
  "structs" :
  {
    {{> structs}}
  },
  {{/program:structs?}}
  {{#program:services?}}
  "services" :
  {
    {{> services}}
  },
  {{/program:services?}}
  {{! rearrange to avoid trailing comma issue}}
  "source_path" : "{{program:normalized_include_prefix}}{{program:name}}",
  {{! This explicit 'self.' will need to be removed once json_experimental
      generator is no extending mstch generator, and extends Whisker generator
      directly.
      When operating through mstch_compat, when 'program:namespace_of' is resolved
      through implicit `self` fallback, the Whisker engine will not attach the
      self prototype handle as the parent/'this' argument for the function.
  }}
  "py_namespace" : "{{(program:self.namespace_of language="py")}}"
}
