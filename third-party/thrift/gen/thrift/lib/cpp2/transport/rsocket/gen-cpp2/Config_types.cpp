/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include "thrift/lib/cpp2/transport/rsocket/gen-cpp2/Config_types.h"
#include "thrift/lib/cpp2/transport/rsocket/gen-cpp2/Config_types.tcc"

#include <thrift/lib/cpp2/gen/module_types_cpp.h>

#include "thrift/lib/cpp2/transport/rsocket/gen-cpp2/Config_data.h"


namespace apache {
namespace thrift {
namespace detail {

void TccStructTraits<::apache::thrift::RSocketSetupParameters>::translateFieldName(
    FOLLY_MAYBE_UNUSED folly::StringPiece _fname,
    FOLLY_MAYBE_UNUSED int16_t& fid,
    FOLLY_MAYBE_UNUSED apache::thrift::protocol::TType& _ftype) {
  if (false) {}
}

} // namespace detail
} // namespace thrift
} // namespace apache

namespace apache { namespace thrift {

RSocketSetupParameters::RSocketSetupParameters(apache::thrift::FragileConstructor) {}

void RSocketSetupParameters::__clear() {
  // clear all fields
}

bool RSocketSetupParameters::operator==(const RSocketSetupParameters& rhs) const {
  (void)rhs;
  auto& lhs = *this;
  (void)lhs;
  return true;
}

bool RSocketSetupParameters::operator<(const RSocketSetupParameters& rhs) const {
  (void)rhs;
  auto& lhs = *this;
  (void)lhs;
  return false;
}


void swap(RSocketSetupParameters& a, RSocketSetupParameters& b) {
  using ::std::swap;
  (void)a;
  (void)b;
}

template void RSocketSetupParameters::readNoXfer<>(apache::thrift::BinaryProtocolReader*);
template uint32_t RSocketSetupParameters::write<>(apache::thrift::BinaryProtocolWriter*) const;
template uint32_t RSocketSetupParameters::serializedSize<>(apache::thrift::BinaryProtocolWriter const*) const;
template uint32_t RSocketSetupParameters::serializedSizeZC<>(apache::thrift::BinaryProtocolWriter const*) const;
template void RSocketSetupParameters::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t RSocketSetupParameters::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t RSocketSetupParameters::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t RSocketSetupParameters::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

}} // apache::thrift
