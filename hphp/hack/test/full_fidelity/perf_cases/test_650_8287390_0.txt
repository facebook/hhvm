<?hh
<< wZWE ( ) >> async function mESNhEJ ( ) : shape ( ) { while ( ( ( ( ( ( ( ( @ @ ( function ( $hX ) : mixed use ( $lCb ) { } ) ) ? ( $aDGwQTm = $uPamOT ) : ( ( float ) list ( $qEUjNBtM , $jPN ) ) ) ? : ( ( ( $rXgRs ++ ) instanceof $hYRCj ) ) ) ) <= ( ( ( $uR -- ) ) ) instanceof $fKRDOg ) ) ) ) foreach ( 'single string' await as 0123 => list ( ) ) try { while ( $fFjgfpjWo /= ( $qRnaph /= ( $sMYINoDW = $yQmU ) ) ) try { do ; while ( 42.42 ) ; } finally { do ; while ( 42.42 ) ; } } catch ( mixed $gOLBsI ) { } catch ( string $gMwOkdqT ) { } catch ( resource $cNAN ) { foreach ( $fSVzq as $hCeM => $lZQnOksL ) ; } { ; } foreach ( shape ( 'single string' => + ( bool ) $kXDcfPZ , 'single string' => 0b101010 ) as ( string ) $qRAfu -= ( $gJmhOHWeT &= 42.42 ) => list ( ) ) ( ( ( $xL ) ) < ( ( 42.42 ) ) ) && ( ( ( $fFCl ) ? : ( $zKVJpCQJc ) ) ) ; { do throw ! ( int ) $xIVmU = ( $aUGr ^= ~ ( string ) $bPkeOurL ) ; while ( ( ( ( ( ( $kAskoLxmE ) ? ( $hC ) : ( $uZeWoHjS ) ) ) < ( ( ( $tZ ) ? ( $sRmVs ) : ( $sRASBBT ) ) ) ) + ( ( ( function ( $rIrCy ) : vGkCUTYDh use ( $zNw ) { } instanceof $gGOvj ) ) ) ) ) ; } $rCIwgZe = ( float ) $oTPl &= $oSpLsF ; try { } finally { } ; ; do ; while ( $vTGYYmPFp ) ; { } foreach ( $lAx as $tIgBymyF ) ; for ( $eGbe ; ; ) ; { } if ( ( - ( int ) ( string ) $yIa ) ) { if ( await - ( string ) shape ( 'single string' => $yJ ) ) throw @ ( ( 0b101010 ) ) && ( ( 12 ) ) ; elseif ( ( ( bool ) $bVAsuGp -> ( 42.42 ) ) ) { ; ; } } switch ( clone shape ( ) ( ( ( int ) 12 ) , function ( ) { } ) [ ] -> lJRqIiAjQ ) { default : if ( ( ( $sTMa = ( $rJmTYFPfT ^= "heredoc" ) instanceof jEjB ) ) ) if ( @ $zRDKUejGq |= 0x16 ) { } elseif ( $bZPFgYQMg ) ; elseif ( "nowdoc" ) ; elseif ( 42.42 ) ; else { } } switch ( ( ( ( ( int ) function ( ) : rMzp use ( $dFae , $gDtjtFK , $fJBNXV ) { } ) ? : ( ( ( @ $rG ) ) | ( ( ( $eDoiWUxp instanceof $sWhGWIYXY ) ) ) ) . ( ( array ( ) ( ( @ ( ( ( $bVsG ) ) < ( ( $iDc ) ) ) ) ) ( clone ( int ) ( ( $rNw -- ) ) [ ( int ) $pV /= $jXzSS ] ) -> dBiGKoY ) ) ) ) ) { case shape ( ) : try { try { } finally { ; ; } } finally { } ; ; ; { try { } catch ( string $lStf ) { } finally { } } for ( $aB ; 42.42 ; ) ; if ( $rQlq ) ; elseif ( $rXszObFTb ) ; do try { } finally { } while ( ( ( int ) function ( $fMH ) : this use ( $zUbJ ) { } ) ) ; } ; return @ $sFb += list ( $iV ) ; }
