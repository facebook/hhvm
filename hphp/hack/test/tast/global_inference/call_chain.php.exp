[(Fun
    { f_span = [3:1-5:2]; f_annotation = (); f_mode = Mpartial;
      f_ret = ((int), None); f_name = ([3:10-12], "\\f1"); f_tparams = [];
      f_where_constraints = []; f_variadic = FVnonVariadic;
      f_params =
      [{ param_annotation = ([3:13-15], num);
         param_type_hint = ((num), None); param_is_variadic = false;
         param_pos = [3:13-15]; param_name = "$x"; param_expr = None;
         param_callconv = None; param_user_attributes = [];
         param_visibility = None }
        ];
      f_body =
      { fb_ast =
        [([4:3-17],
          (Return
             (Some (([4:10-16], int),
                    (Binop (Plus, (([4:10-12], num), (Lvar ([4:10-12], $x))),
                       (([4:15-16], int), (Int "0"))))))))
          ];
        fb_annotation = No unsafe blocks };
      f_fun_kind = FSync; f_user_attributes = []; f_file_attributes = [];
      f_external = false;
      f_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
        ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
        ns_const_uses = <opaque>; ns_name = None; ns_auto_ns_map = [];
        ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      f_doc_comment = None; f_static = false })
  ]
[(Fun
    { f_span = [3:1-5:2]; f_annotation = (); f_mode = Mpartial;
      f_ret = ((int), None); f_name = ([3:10-12], "\\f2"); f_tparams = [];
      f_where_constraints = []; f_variadic = FVnonVariadic;
      f_params =
      [{ param_annotation = ([3:13-15], num);
         param_type_hint = ((num), None); param_is_variadic = false;
         param_pos = [3:13-15]; param_name = "$x"; param_expr = None;
         param_callconv = None; param_user_attributes = [];
         param_visibility = None }
        ];
      f_body =
      { fb_ast =
        [([4:3-17],
          (Return
             (Some (([4:10-16], int),
                    (Call (Cnormal,
                       (([4:10-12], (function(num $x): int)),
                        (Id ([4:10-12], "\\f1"))),
                       [], [(([4:13-15], num), (Lvar ([4:13-15], $x)))], None
                       ))))))
          ];
        fb_annotation = No unsafe blocks };
      f_fun_kind = FSync; f_user_attributes = []; f_file_attributes = [];
      f_external = false;
      f_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
        ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
        ns_const_uses = <opaque>; ns_name = None; ns_auto_ns_map = [];
        ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      f_doc_comment = None; f_static = false })
  ]
[(Fun
    { f_span = [3:1-5:2]; f_annotation = (); f_mode = Mpartial;
      f_ret = ((int), None); f_name = ([3:10-12], "\\f3"); f_tparams = [];
      f_where_constraints = []; f_variadic = FVnonVariadic;
      f_params =
      [{ param_annotation = ([3:13-15], num);
         param_type_hint = ((num), None); param_is_variadic = false;
         param_pos = [3:13-15]; param_name = "$x"; param_expr = None;
         param_callconv = None; param_user_attributes = [];
         param_visibility = None }
        ];
      f_body =
      { fb_ast =
        [([4:3-17],
          (Return
             (Some (([4:10-16], int),
                    (Call (Cnormal,
                       (([4:10-12], (function(num $x): int)),
                        (Id ([4:10-12], "\\f2"))),
                       [], [(([4:13-15], num), (Lvar ([4:13-15], $x)))], None
                       ))))))
          ];
        fb_annotation = No unsafe blocks };
      f_fun_kind = FSync; f_user_attributes = []; f_file_attributes = [];
      f_external = false;
      f_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
        ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
        ns_const_uses = <opaque>; ns_name = None; ns_auto_ns_map = [];
        ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      f_doc_comment = None; f_static = false })
  ]
