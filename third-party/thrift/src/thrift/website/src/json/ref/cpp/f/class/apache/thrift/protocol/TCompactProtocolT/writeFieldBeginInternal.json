{
  "kind": "overloadset",
  "name_html": "writeFieldBeginInternal",
  "compoundname_html": "apache::thrift::protocol::TCompactProtocolT::writeFieldBeginInternal",
  "functions": [
    {
      "refid": "classapache_1_1thrift_1_1protocol_1_1TCompactProtocolT_1a5873ae8b70505e572b85ae0b328b060b",
      "prot": "protected",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "no",
      "virtual": "non-virtual",
      "type_html": "int32_t",
      "definition_html": "int32_t apache::thrift::protocol::TCompactProtocolT&lt; Transport_ &gt;::writeFieldBeginInternal",
      "argsstring_html": "(const char *name, const TType fieldType, const int16_t fieldId, int8_t typeOverride)",
      "name_html": "writeFieldBeginInternal",
      "param": [
        {
          "type_html": "const char *",
          "declname_html": "name"
        },
        {
          "type_html": "const TType",
          "declname_html": "fieldType"
        },
        {
          "type_html": "const int16_t",
          "declname_html": "fieldId"
        },
        {
          "type_html": "int8_t",
          "declname_html": "typeOverride"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp/protocol/TCompactProtocol.h",
        "line": "195",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp/protocol/TCompactProtocol-inl.h",
        "bodystart": "313",
        "bodyend": "336"
      },
      "definition": {
        "simple_html": "int32_t writeFieldBeginInternal(\n    const char* name,\n    const TType fieldType,\n    const int16_t fieldId,\n    int8_t typeOverride)",
        "simple_raw": "int32_t writeFieldBeginInternal(\n    const char* name,\n    const TType fieldType,\n    const int16_t fieldId,\n    int8_t typeOverride)",
        "detailed_html": "protected int32_t writeFieldBeginInternal(\n    const char* name,\n    const TType fieldType,\n    const int16_t fieldId,\n    int8_t typeOverride)",
        "detailed_raw": "protected int32_t writeFieldBeginInternal(\n    const char* name,\n    const TType fieldType,\n    const int16_t fieldId,\n    int8_t typeOverride)",
        "original_definition_html": "int32_t apache::thrift::protocol::TCompactProtocolT&lt; Transport_ &gt;::writeFieldBeginInternal",
        "original_argsstring_html": "(const char *name, const TType fieldType, const int16_t fieldId, int8_t typeOverride)"
      },
      "description": {
        "detailed_html": "<p>The workhorse of writeFieldBegin. It has the option of doing a 'type override' of the type header. This is used specifically in the boolean field case. </p>"
      },
      "filepath": "fns/class/apache/thrift/protocol/TCompactProtocolT/writeFieldBeginInternal",
      "href": "/ref/cpp/fns/class/apache/thrift/protocol/TCompactProtocolT/writeFieldBeginInternal",
      "parentid": "classapache_1_1thrift_1_1protocol_1_1TCompactProtocolT",
      "compoundname_html": "apache::thrift::protocol::TCompactProtocolT::writeFieldBeginInternal"
    }
  ],
  "filepath": "f/class/apache/thrift/protocol/TCompactProtocolT/writeFieldBeginInternal",
  "minprot": "protected",
  "displayname_html": "writeFieldBeginInternal",
  "brief_html": "<p>The workhorse of writeFieldBegin. It has the option of doing a 'type override' of the type header. This is used specifically in the boolean field case. </p>",
  "groupname_html": "",
  "href": "/ref/cpp/f/class/apache/thrift/protocol/TCompactProtocolT/writeFieldBeginInternal",
  "refid": "/ref/cpp/f/class/apache/thrift/protocol/TCompactProtocolT/writeFieldBeginInternal"
}