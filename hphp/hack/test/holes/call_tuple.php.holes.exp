[(Class
    { c_span = [3:1-5:2]; c_annotation = (); c_mode = Mstrict; c_final = false; 
      c_is_xhp = false; c_has_xhp_keyword = false; c_kind = (Cclass Concrete); 
      c_name = ([3:7-16], "\\TestTuple"); c_tparams = []; c_extends = []; 
      c_uses = []; c_xhp_attr_uses = []; c_xhp_category = None; c_reqs = []; 
      c_implements = []; c_where_constraints = []; c_consts = []; c_typeconsts = []; 
      c_vars = [];
      c_methods =
      [{ m_span = [4:3-44]; m_annotation = (); m_final = false; m_abstract = false; 
         m_static = false; m_readonly_this = false; m_visibility = Public; 
         m_name = ([4:19-20], "a"); m_tparams = []; m_where_constraints = [];
         m_params =
         [{ param_annotation = ((int, int)); param_type_hint = (((int, int)), (Some ([4:21-31], (Htuple [([4:22-25], (Hprim Tint)); ([4:27-30], (Hprim Tint))])))); 
            param_is_variadic = false; param_pos = [4:32-34]; param_name = "$a"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         m_ctxs = None; m_unsafe_ctxs = None; m_body = { fb_ast = [([Pos.none], Noop)] }; 
         m_fun_kind = FSync; m_user_attributes = []; m_readonly_ret = None; 
         m_ret = ((void), (Some ([4:37-41], (Hprim Tvoid)))); m_external = false; 
         m_doc_comment = None }
        ];
      c_xhp_children = []; c_xhp_attrs = [];
      c_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      c_user_attributes = []; c_file_attributes = []; c_docs_url = None; 
      c_enum = None; c_doc_comment = None; c_emit_id = None; c_internal = false; 
      c_module = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([7:10-11], "\\a");
       fd_fun =
       { f_span = [7:1-35]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([7:28-32], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = ((int, int)); param_type_hint = (((int, int)), (Some ([7:12-22], (Htuple [([7:13-16], (Hprim Tint)); ([7:18-21], (Hprim Tint))])))); 
            param_is_variadic = false; param_pos = [7:23-25]; param_name = "$a"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([Pos.none], Noop)] }; 
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([9:10-20], "\\call_tuple");
       fd_fun =
       { f_span = [9:1-24:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([12:4-8], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = ((int, bool)); param_type_hint = (((int, bool)), (Some ([10:3-14], (Htuple [([10:4-7], (Hprim Tint)); ([10:9-13], (Hprim Tbool))])))); 
            param_is_variadic = false; param_pos = [10:15-18]; param_name = "$a1"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None };
           { param_annotation = ((bool, int)); param_type_hint = (((bool, int)), (Some ([11:3-14], (Htuple [([11:4-8], (Hprim Tbool)); ([11:10-13], (Hprim Tint))])))); 
             param_is_variadic = false; param_pos = [11:15-18]; param_name = "$a2"; 
             param_expr = None; param_readonly = None; param_callconv = Pnormal; 
             param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([14:3-10],
             (Expr
                ((void), [14:3-9],
                 (Call ((((function((int, int) $a): void)), [14:3-4], (Id ([14:3-4], "\\a"))), 
                    [], [(Pnormal, (((int, bool)), [14:5-8], (Hole ((((int, bool)), [14:5-8], (Lvar ([14:5-8], $a1))), ((int, bool)), ((int, int)), Typing))))], None)))));
             ([16:3-10],
              (Expr
                 ((void), [16:3-9],
                  (Call ((((function((int, int) $a): void)), [16:3-4], (Id ([16:3-4], "\\a"))), 
                     [], [(Pnormal, (((bool, int)), [16:5-8], (Hole ((((bool, int)), [16:5-8], (Lvar ([16:5-8], $a2))), ((bool, int)), ((int, int)), Typing))))], None)))));
             ([18:3-26],
              (Expr
                 ((TestTuple), [18:3-25],
                  (Binop
                     { bop = (Eq None); lhs = ((TestTuple), [18:3-7], (Lvar ([18:3-7], $foo)));
                       rhs = ((TestTuple), [18:10-25], (New (((TestTuple), [18:14-23], (CI ([18:14-23], "\\TestTuple"))), [], [], None, ((function(): void))))) }))));
             ([21:3-16],
              (Expr
                 ((void), [21:3-15],
                  (Call (
                     (((function((int, int) $a): void)), [21:3-10],
                      (Obj_get (((TestTuple), [21:3-7], (Lvar ([21:3-7], $foo))), (((function((int, int) $a): void)), [21:9-10], (Id ([21:9-10], "a"))), OG_nullthrows, Is_method))),
                     [], [(Pnormal, (((int, bool)), [21:11-14], (Hole ((((int, bool)), [21:11-14], (Lvar ([21:11-14], $a1))), ((int, bool)), ((int, int)), Typing))))], None)))));
             ([23:3-16],
              (Expr
                 ((void), [23:3-15],
                  (Call (
                     (((function((int, int) $a): void)), [23:3-10],
                      (Obj_get (((TestTuple), [23:3-7], (Lvar ([23:3-7], $foo))), (((function((int, int) $a): void)), [23:9-10], (Id ([23:9-10], "a"))), OG_nullthrows, Is_method))),
                     [], [(Pnormal, (((bool, int)), [23:11-14], (Hole ((((bool, int)), [23:11-14], (Lvar ([23:11-14], $a2))), ((bool, int)), ((int, int)), Typing))))], None)))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([26:10-25], "\\call_tuple_cast");
       fd_fun =
       { f_span = [26:1-41:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([29:4-8], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = ((int, bool)); param_type_hint = (((int, bool)), (Some ([27:3-14], (Htuple [([27:4-7], (Hprim Tint)); ([27:9-13], (Hprim Tbool))])))); 
            param_is_variadic = false; param_pos = [27:15-18]; param_name = "$a1"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None };
           { param_annotation = ((bool, int)); param_type_hint = (((bool, int)), (Some ([28:3-14], (Htuple [([28:4-8], (Hprim Tbool)); ([28:10-13], (Hprim Tint))])))); 
             param_is_variadic = false; param_pos = [28:15-18]; param_name = "$a2"; 
             param_expr = None; param_readonly = None; param_callconv = Pnormal; 
             param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([31:3-55],
             (Expr
                ((void), [31:3-54],
                 (Call ((((function((int, int) $a): void)), [31:3-4], (Id ([31:3-4], "\\a"))), 
                    [],
                    [(Pnormal,
                      (((int, int)), [31:5-53],
                       (Hole ((((int, bool)), [31:49-52], (Lvar ([31:49-52], $a1))), ((int, bool)), ((int, int)),
                          (UnsafeCast
                             [([31:27-37], (Htuple [([31:28-31], (Hprim Tint)); ([31:32-36], (Hprim Tbool))])); ([31:38-47], (Htuple [([31:39-42], (Hprim Tint)); ([31:43-46], (Hprim Tint))]))])
                          ))))
                      ],
                    None)))));
             ([33:3-55],
              (Expr
                 ((void), [33:3-54],
                  (Call ((((function((int, int) $a): void)), [33:3-4], (Id ([33:3-4], "\\a"))), 
                     [],
                     [(Pnormal,
                       (((int, int)), [33:5-53],
                        (Hole ((((bool, int)), [33:49-52], (Lvar ([33:49-52], $a2))), ((bool, int)), ((int, int)),
                           (UnsafeCast
                              [([33:27-37], (Htuple [([33:28-32], (Hprim Tbool)); ([33:33-36], (Hprim Tint))])); ([33:38-47], (Htuple [([33:39-42], (Hprim Tint)); ([33:43-46], (Hprim Tint))]))])
                           ))))
                       ],
                     None)))));
             ([35:3-26],
              (Expr
                 ((TestTuple), [35:3-25],
                  (Binop
                     { bop = (Eq None); lhs = ((TestTuple), [35:3-7], (Lvar ([35:3-7], $foo)));
                       rhs = ((TestTuple), [35:10-25], (New (((TestTuple), [35:14-23], (CI ([35:14-23], "\\TestTuple"))), [], [], None, ((function(): void))))) }))));
             ([38:3-61],
              (Expr
                 ((void), [38:3-60],
                  (Call (
                     (((function((int, int) $a): void)), [38:3-10],
                      (Obj_get (((TestTuple), [38:3-7], (Lvar ([38:3-7], $foo))), (((function((int, int) $a): void)), [38:9-10], (Id ([38:9-10], "a"))), OG_nullthrows, Is_method))),
                     [],
                     [(Pnormal,
                       (((int, int)), [38:11-59],
                        (Hole ((((int, bool)), [38:55-58], (Lvar ([38:55-58], $a1))), ((int, bool)), ((int, int)),
                           (UnsafeCast
                              [([38:33-43], (Htuple [([38:34-37], (Hprim Tint)); ([38:38-42], (Hprim Tbool))])); ([38:44-53], (Htuple [([38:45-48], (Hprim Tint)); ([38:49-52], (Hprim Tint))]))])
                           ))))
                       ],
                     None)))));
             ([40:3-61],
              (Expr
                 ((void), [40:3-60],
                  (Call (
                     (((function((int, int) $a): void)), [40:3-10],
                      (Obj_get (((TestTuple), [40:3-7], (Lvar ([40:3-7], $foo))), (((function((int, int) $a): void)), [40:9-10], (Id ([40:9-10], "a"))), OG_nullthrows, Is_method))),
                     [],
                     [(Pnormal,
                       (((int, int)), [40:11-59],
                        (Hole ((((bool, int)), [40:55-58], (Lvar ([40:55-58], $a2))), ((bool, int)), ((int, int)),
                           (UnsafeCast
                              [([40:33-43], (Htuple [([40:34-38], (Hprim Tbool)); ([40:39-42], (Hprim Tint))])); ([40:44-53], (Htuple [([40:45-48], (Hprim Tint)); ([40:49-52], (Hprim Tint))]))])
                           ))))
                       ],
                     None)))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] })