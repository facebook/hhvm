Str\capitalize
  INSERT Str\capitalize(
  INSERT )
  (function(string $string): string)
Str\capitalize_words
  INSERT Str\capitalize_words(
  INSERT )
  (function(string $string, ?string $delimiters = _): string)
Str\chunk
  INSERT Str\chunk(
  INSERT )
  (function(string $string, int $chunk_size = _): vec<string>)
Str\compare
  INSERT Str\compare(
  INSERT , ${1:\$string2})
  (function(string $string1, string $string2): int)
Str\compare_ci
  INSERT Str\compare_ci(
  INSERT , ${1:\$string2})
  (function(string $string1, string $string2): int)
Str\contains
  INSERT Str\contains(
  INSERT , ${1:\$needle})
  (function(string $haystack, string $needle, int $offset = _): bool)
Str\contains_ci
  INSERT Str\contains_ci(
  INSERT , ${1:\$needle})
  (function(string $haystack, string $needle, int $offset = _): bool)
Str\ends_with
  INSERT Str\ends_with(
  INSERT , ${1:\$suffix})
  (function(string $string, string $suffix): bool)
Str\ends_with_ci
  INSERT Str\ends_with_ci(
  INSERT , ${1:\$suffix})
  (function(string $string, string $suffix): bool)
Str\is_empty
  INSERT Str\is_empty(
  INSERT )
  (function(?string $string): bool)
Str\length
  INSERT Str\length(
  INSERT )
  (function(string $string): int)
Str\lowercase
  INSERT Str\lowercase(
  INSERT )
  (function(string $string): string)
Str\pad_left
  INSERT Str\pad_left(
  INSERT , ${1:\$total_length})
  (function(string $string, int $total_length, string $pad_string = _): string)
Str\pad_right
  INSERT Str\pad_right(
  INSERT , ${1:\$total_length})
  (function(string $string, int $total_length, string $pad_string = _): string)
Str\repeat
  INSERT Str\repeat(
  INSERT , ${1:\$multiplier})
  (function(string $string, int $multiplier): string)
Str\replace
  INSERT Str\replace(
  INSERT , ${1:\$needle}, ${2:\$replacement})
  (function(string $haystack, string $needle, string $replacement): string)
Str\replace_ci
  INSERT Str\replace_ci(
  INSERT , ${1:\$needle}, ${2:\$replacement})
  (function(string $haystack, string $needle, string $replacement): string)
Str\replace_every
  INSERT Str\replace_every(
  INSERT , ${1:\$replacements})
  (function(string $haystack, KeyedContainer<string, string> $replacements): string)
Str\replace_every_ci
  INSERT Str\replace_every_ci(
  INSERT , ${1:\$replacements})
  (function(string $haystack, KeyedContainer<string, string> $replacements): string)
Str\replace_every_nonrecursive
  INSERT Str\replace_every_nonrecursive(
  INSERT , ${1:\$replacements})
  (function(string $haystack, KeyedContainer<string, string> $replacements): string)
Str\replace_every_nonrecursive_ci
  INSERT Str\replace_every_nonrecursive_ci(
  INSERT , ${1:\$replacements})
  (function(string $haystack, KeyedContainer<string, string> $replacements): string)
Str\reverse
  INSERT Str\reverse(
  INSERT )
  (function(string $string): string)
Str\search
  INSERT Str\search(
  INSERT , ${1:\$needle})
  (function(string $haystack, string $needle, int $offset = _): ?int)
Str\search_ci
  INSERT Str\search_ci(
  INSERT , ${1:\$needle})
  (function(string $haystack, string $needle, int $offset = _): ?int)
Str\search_last
  INSERT Str\search_last(
  INSERT , ${1:\$needle})
  (function(string $haystack, string $needle, int $offset = _): ?int)
Str\slice
  INSERT Str\slice(
  INSERT , ${1:\$offset})
  (function(string $string, int $offset, ?int $length = _): string)
Str\splice
  INSERT Str\splice(
  INSERT , ${1:\$replacement}, ${2:\$offset})
  (function(string $string, string $replacement, int $offset, ?int $length = _): string)
Str\split
  INSERT Str\split(
  INSERT , ${1:\$delimiter})
  (function(string $string, string $delimiter, ?int $limit = _): vec<string>)
Str\starts_with
  INSERT Str\starts_with(
  INSERT , ${1:\$prefix})
  (function(string $string, string $prefix): bool)
Str\starts_with_ci
  INSERT Str\starts_with_ci(
  INSERT , ${1:\$prefix})
  (function(string $string, string $prefix): bool)
Str\strip_prefix
  INSERT Str\strip_prefix(
  INSERT , ${1:\$prefix})
  (function(string $string, string $prefix): string)
Str\strip_suffix
  INSERT Str\strip_suffix(
  INSERT , ${1:\$suffix})
  (function(string $string, string $suffix): string)
Str\to_int
  INSERT Str\to_int(
  INSERT )
  (function(string $string): ?int)
Str\trim
  INSERT Str\trim(
  INSERT )
  (function(string $string, ?string $char_mask = _): string)
Str\trim_left
  INSERT Str\trim_left(
  INSERT )
  (function(string $string, ?string $char_mask = _): string)
Str\trim_right
  INSERT Str\trim_right(
  INSERT )
  (function(string $string, ?string $char_mask = _): string)
Str\uppercase
  INSERT Str\uppercase(
  INSERT )
  (function(string $string): string)
