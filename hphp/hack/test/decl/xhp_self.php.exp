[("\\REACT_XHP_FIX",
  (Shallow_decl_defs.Typedef
     { Typing_defs.td_module = None; td_pos = [3:6-19]; td_vis = Transparent;
       td_tparams =
       [{ Typing_defs_core.tp_variance = Covariant;
          tp_name = ([3:21-22], "T"); tp_tparams = []; tp_constraints = [];
          tp_reified = Erased; tp_user_attributes = [] }
         ];
       td_as_constraint = None; td_super_constraint = None;
       td_type = (Rhint ([3:26-27]), (Tgeneric ("T", [])));
       td_is_ctx = false; td_attributes = []; td_internal = false;
       td_docs_url = None }));
  ("\\:Foo",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = true;
        sc_abstract = false; sc_is_xhp = true; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
        sc_module = None; sc_name = ([5:13-17], "\\:Foo"); sc_tparams = [];
        sc_where_constraints = []; sc_extends = []; sc_uses = [];
        sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false; sc_req_extends = [];
        sc_req_implements = []; sc_req_class = []; sc_implements = [];
        sc_support_dynamic_type = false; sc_consts = [];
        sc_typeconsts =
        [{ Shallow_decl_defs.stc_name = ([6:14-20], "TProps");
           stc_kind =
           (Typing_defs.TCConcrete
              { Typing_defs.tc_type =
                (Rhint ([6:23-40]),
                 (Tshape ((Rhint ([Pos.none]), (Tunion [])),
                    { (Typing_defs_core.TSFlit_str ([6:29-32], "x")) ->
                      { sft_optional = false;
                        sft_ty = (Rhint ([6:36-39]), (Tprim Tint)) } }
                    )))
                });
           stc_enforceable = ([Pos.none], false); stc_reifiable = None;
           stc_is_ctx = false }
          ];
        sc_props =
        [{ Shallow_decl_defs.sp_name = ([8:41-46], ":props");
           sp_xhp_attr =
           (Some { xa_tag = (Some Required); xa_has_default = false });
           sp_type =
           (Rhint ([8:13-40]),
            (Tapply (([8:13-26], "\\REACT_XHP_FIX"),
               [(Rhint ([8:27-39]),
                 (Taccess
                    ((Rhint ([8:27-39]), (Tapply (([5:13-17], "\\:Foo"), []))),
                     [([8:33-39], "TProps")])))
                 ]
               )));
           sp_visibility = Public; sp_flags = needs_init }
          ];
        sc_sprops = []; sc_constructor = None; sc_static_methods = [];
        sc_methods =
        [{ Shallow_decl_defs.sm_name = ([10:22-30], "getProps");
           sm_type =
           (Rwitness_from_decl ([10:22-30]),
            (Tfun
               { ft_tparams = []; ft_where_constraints = []; ft_params = [];
                 ft_implicit_params =
                 { capability = (CapDefaults [10:22-30]) };
                 ft_ret =
                 { et_enforced = Typing_defs_core.Unenforced;
                   et_type =
                   (Rhint ([10:34-46]),
                    (Taccess
                       ((Rhint ([10:34-46]),
                         (Tapply (([5:13-17], "\\:Foo"), []))),
                        [([10:40-46], "TProps")])))
                   };
                 ft_flags =
                 (make_ft_flags FSync ~return_disposable:false
                   ~returns_readonly:false ~support_dynamic_type:false
                   ~readonly_this:false ~is_memoized:false ~variadic:false);
                 ft_ifc_decl = FDPolicied {PUBLIC}ft_cross_package = None }));
           sm_visibility = Protected; sm_deprecated = None;
           sm_flags = (empty); sm_attributes = [] }
          ];
        sc_user_attributes = []; sc_enum_type = None; sc_docs_url = None }))
  ]
