// @generated by hh_manual from manual/hack/55-expression-trees/15-defining-dsls.md
// @codegen-command : buck run fbcode//hphp/hack/src/hh_manual:hh_manual extract fbcode/hphp/hack/manual/hack/
abstract class MyDslAst {}

class MyDslAstBinOp extends MyDslAst {
  public function __construct(
    public MyDslAst $lhs,
    public string $operator,
    public MyDslAst $rhs,
  ) {}
}

class MyDslAstInt extends MyDslAst {
  public function __construct(public int $value) {}
}

class MyDsl {
  public static function makeTree<<<__Explicit>> TInfer>(
    ?ExprPos $pos,
    mixed $_metadata,
    (function(MyDsl): MyDslAst) $visit_expr,
  ): MyDslExprTree<TInfer> {
    return new MyDslExprTree($pos, $visit_expr);
  }

  // ... all the visitFoo methods here
 }

class MyDslExprTree<+T> implements Spliceable<MyDsl, MyDslAst, T> {
  public function __construct(
    public ?ExprPos $pos,
    private (function(MyDsl): MyDslAst) $builder,
  ) {}

  public function visit(MyDsl $v): MyDslAst {
    return ($this->builder)($v);
  }
}
