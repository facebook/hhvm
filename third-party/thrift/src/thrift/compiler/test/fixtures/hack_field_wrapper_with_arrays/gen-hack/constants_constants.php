<?hh
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

class constants_CONSTANTS implements \IThriftConstants {
  /**
   * Original thrift constant:-
   * enum constants.Company my_company
   */
  const MyCompany my_company = Company::FACEBOOK;

  /**
   * Original thrift constant:-
   * struct constants.Internship instagram
   */
  <<__Memoize>>
  public static function instagram()[write_props]: Internship{
    $Internship0 = Internship::withDefaultValues();
    $Internship0->weeks = 12;

    $Internship0->title = "Software Engineer";

    $Internship0->employer = Company::INSTAGRAM;

    $Internship0->get_compensation()->setValue_DO_NOT_USE_THRIFT_INTERNAL(1200.0);

    $Internship0->school = "Monters University";

    $Internship0->intern_id = \MyTypeIntWrapper::fromThrift_DO_NOT_USE_THRIFT_INTERNAL<\detail\i64WithWrapper>(10011);

    return $Internship0;
  }

  /**
   * Original thrift constant:-
   * list<struct constants.Internship> internList
   */
  <<__Memoize>>
  public static function internList()[write_props]: vec<Internship>{
    $Internship0 = Internship::withDefaultValues();
    $Internship0->weeks = 12;

    $Internship0->title = "Software Engineer";

    $Internship0->employer = Company::INSTAGRAM;

    $Internship0->get_compensation()->setValue_DO_NOT_USE_THRIFT_INTERNAL(1200.0);

    $Internship0->school = "Monters University";

    $Internship0->intern_id = \MyTypeIntWrapper::fromThrift_DO_NOT_USE_THRIFT_INTERNAL<\detail\i64WithWrapper>(10011);

    $Internship1 = Internship::withDefaultValues();
    $Internship1->weeks = 10;

    $Internship1->title = "Sales Intern";

    $Internship1->employer = Company::FACEBOOK;

    $Internship1->get_compensation()->setValue_DO_NOT_USE_THRIFT_INTERNAL(1000.0);

    $Internship1->intern_id = \MyTypeIntWrapper::fromThrift_DO_NOT_USE_THRIFT_INTERNAL<\detail\i64WithWrapper>(10013);

    return vec[
      $Internship0,
      $Internship1,
    ];
  }

  /**
   * Original thrift constant:-
   * list<struct constants.SWE> engineers
   */
  <<__Memoize>>
  public static function engineers()[write_props]: vec<SWE>{
    return vec[
      SWE::fromShape(
        shape(
          "employer" => Company::FACEBOOK,
          "compensation" => 1000.0,
        )
      ),
      SWE::fromShape(
        shape(
          "employer" => Company::WHATSAPP,
          "compensation" => 1200.0,
        )
      ),
      SWE::fromShape(
        shape(
          "employer" => Company::OCULUS,
          "compensation" => 1200.0,
        )
      ),
    ];
  }

  /**
   * Original thrift constant:-
   * list<struct include.StructWithWrapper> wrapped_structs
   */
  <<__Memoize>>
  public static function wrapped_structs()[write_props]: vec<StructWithWrapper>{
    return vec[
      \MyStructWrapper::fromThrift_DO_NOT_USE_THRIFT_INTERNAL<\thrift_adapted_types\StructWithWrapper>(\thrift_adapted_types\StructWithWrapper::fromShape(
        shape(
          "int_field" => 1,
        )
      )),
      \MyStructWrapper::fromThrift_DO_NOT_USE_THRIFT_INTERNAL<\thrift_adapted_types\StructWithWrapper>(\thrift_adapted_types\StructWithWrapper::fromShape(
        shape(
          "int_field" => 2,
        )
      )),
    ];
  }

  /**
   * Original thrift constant:-
   * list<i64> wrapped_ints
   */
  <<__Memoize>>
  public static function wrapped_ints()[write_props]: vec<i64WithWrapper>{
    return vec[
      \MyTypeIntWrapper::fromThrift_DO_NOT_USE_THRIFT_INTERNAL<\detail\i64WithWrapper>(1),
      \MyTypeIntWrapper::fromThrift_DO_NOT_USE_THRIFT_INTERNAL<\detail\i64WithWrapper>(2),
    ];
  }


  public static function getAllStructuredAnnotations()[write_props]: dict<string, dict<string, \IThriftStruct>> {
    return dict[
      'engineers' => dict[
        'AnnotationStruct' => AnnotationStruct::fromShape(
          shape(
          )
        ),
      ],
    ];
  }
}

