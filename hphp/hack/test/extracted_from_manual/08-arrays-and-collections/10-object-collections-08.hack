// @generated by hh_manual from manual/hack/08-arrays-and-collections/10-object-collections.md
// @codegen-command : buck run fbcode//hphp/hack/src/hh_manual:hh_manual extract fbcode/hphp/hack/manual/hack/
async function example_snippet_wrapper(): Awaitable<void> {
  $items = Map {'a' => 1, 'b' => 3};
  
  // Accessing items by key.
  $items['a']; // 1
  $items['z']; // throws OutOfBoundsException
  
  // Accessing keys that may be absent.
  idx($items, 'a'); // 1
  idx($items, 'z'); // null
  idx($items, 'z', 'default'); // 'default'
  
  // Modifying items. This mutates the Map in place.
  $items['a'] = 42; // Map {'a' => 42, 'b' => 3}
  $items['z'] = 100; // Map {'a' => 42, 'b' => 3, 'z' => 100}
  
  // Getting the keys.
  Vec\keys(Map {'a' => 1, 'b' => 3}); // vec['a', 'b']
  
  // Getting the values.
  vec(Map {'a' => 1, 'b' => 3}); // vec[1, 3]
  
  // Getting the length.
  C\count($items); // 3
  
  // Iterating values.
  foreach ($items as $value) {
    echo $value;
  }
  // Iterating keys and values.
  foreach ($items as $key => $value) {
    echo $key;
    echo $value;
  }
  
  // Equality checks compare references.
  $items === $items; // true
  Map {} === Map {}; // false
  
  // Converting from an Iterable.
  new Map(dict['key1' => 'value1']); // Map { 'key1' => 'value1'}
  new Map(vec['a', 'b']); // Map {0 => 'a', 1 => 'b'}
  
  // Type checks
  $items is Map<_, _>; // true
}
