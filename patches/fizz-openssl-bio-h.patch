diff --git a/third-party/fizz/src/fizz/protocol/Certificate.cpp b/third-party/fizz/src/fizz/protocol/Certificate.cpp
index 67551c5..4851f4e 100644
--- a/third-party/fizz/src/fizz/protocol/Certificate.cpp
+++ b/third-party/fizz/src/fizz/protocol/Certificate.cpp
@@ -6,6 +6,7 @@
  *  LICENSE file in the root directory of this source tree.
  */
 
+#include <openssl/bio.h>
 #include <fizz/protocol/Certificate.h>
 
 namespace {
@@ -133,7 +134,10 @@ std::unique_ptr<SelfCert> selfCertFromDataInternal(
     throw std::runtime_error("no certificates read");
   }
 
-  folly::ssl::BioUniquePtr b(BIO_new_mem_buf(keyData.data(), keyData.size()));
+  folly::ssl::BioUniquePtr b(BIO_new_mem_buf(
+      const_cast<void*>( // needed by openssl 1.0.2d at least
+        reinterpret_cast<const void*>(keyData.data())
+      ), keyData.size()));
 
   if (!b) {
     throw std::runtime_error("failed to create BIO");
diff --git a/third-party/fizz/src/fizz/util/FizzUtil.cpp b/third-party/fizz/src/fizz/util/FizzUtil.cpp
index f0937cf..a7ceba0 100644
--- a/third-party/fizz/src/fizz/util/FizzUtil.cpp
+++ b/third-party/fizz/src/fizz/util/FizzUtil.cpp
@@ -14,6 +14,8 @@
 #include <folly/portability/OpenSSL.h>
 #include <folly/ssl/Init.h>
 
+#include <openssl/bio.h>
+
 namespace fizz {
 
 static int passwordCallback(char* password, int size, int, void* data) {
@@ -73,7 +75,10 @@ folly::ssl::EvpPkeyUniquePtr FizzUtil::readPrivateKey(
 folly::ssl::EvpPkeyUniquePtr FizzUtil::decryptPrivateKey(
     const std::string& data,
     folly::PasswordInFile* pf) {
-  folly::ssl::BioUniquePtr keyBio(BIO_new_mem_buf(data.data(), data.size()));
+  folly::ssl::BioUniquePtr keyBio(BIO_new_mem_buf(
+      const_cast<void*>( // needed by openssl 1.0.2d
+        reinterpret_cast<const void*>(data.data())
+      ), data.size()));
   if (!keyBio) {
     throw std::runtime_error("couldn't create bio");
   }
