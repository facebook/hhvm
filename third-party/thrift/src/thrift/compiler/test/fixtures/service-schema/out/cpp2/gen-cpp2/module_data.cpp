/**
 * Autogenerated by Thrift for thrift/compiler/test/fixtures/service-schema/src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */

#include "thrift/compiler/test/fixtures/service-schema/gen-cpp2/module_data.h"
#include "thrift/compiler/test/fixtures/service-schema/gen-cpp2/module_constants.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

namespace facebook::thrift::test {
class PrimitivesService;
} // namespace facebook::thrift::test
namespace facebook::thrift::test {
class ExtendedService;
} // namespace facebook::thrift::test
namespace apache::thrift {

THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::string_view TStructDataStorage<::facebook::thrift::test::CustomException>::name = "CustomException";
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<std::string_view, 2> TStructDataStorage<::facebook::thrift::test::CustomException>::fields_names = { {
  "name"sv,
  "result"sv,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int16_t, 2> TStructDataStorage<::facebook::thrift::test::CustomException>::fields_ids = { {
  1,
  2,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<protocol::TType, 2> TStructDataStorage<::facebook::thrift::test::CustomException>::fields_types = { {
  TType::T_STRING,
  TType::T_I32,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int, 2> TStructDataStorage<::facebook::thrift::test::CustomException>::isset_indexes = { {
  0,
  1,
}};

namespace detail {

::folly::Range<const ::std::string_view*> TSchemaAssociation<::facebook::thrift::test::CustomException, false>::bundle() {
    return ::facebook::thrift::test::module_constants::_fbthrift_schema_bc0984a218954d47_includes();
}

::folly::Range<const ::std::string_view*> TSchemaAssociation<::facebook::thrift::test::Result, true>::bundle() {
    return ::facebook::thrift::test::module_constants::_fbthrift_schema_bc0984a218954d47_includes();
}

template <> struct TSchemaAssociation<::facebook::thrift::test::PrimitivesService, false> {
  static ::folly::Range<const ::std::string_view*> bundle();
  static constexpr int64_t programId = -4897237288056697529;
  static constexpr ::std::string_view definitionKey = {"\x8a\x6f\xcf\x1a\xc4\x7f\xef\xe9\xfc\xd0\xb5\xce\x3b\x5e\x14\xb4", 16};
};
::folly::Range<const ::std::string_view*> TSchemaAssociation<::facebook::thrift::test::PrimitivesService, false>::bundle() {
    return ::facebook::thrift::test::module_constants::_fbthrift_schema_bc0984a218954d47_includes();
}
template <> struct TSchemaAssociation<::facebook::thrift::test::ExtendedService, false> {
  static ::folly::Range<const ::std::string_view*> bundle();
  static constexpr int64_t programId = -4897237288056697529;
  static constexpr ::std::string_view definitionKey = {"\x2f\x39\x63\x5e\x7a\x62\x4d\xa7\x6e\x69\x78\xae\x7e\x49\xe3\x79", 16};
};
::folly::Range<const ::std::string_view*> TSchemaAssociation<::facebook::thrift::test::ExtendedService, false>::bundle() {
    return ::facebook::thrift::test::module_constants::_fbthrift_schema_bc0984a218954d47_includes();
}
} // namespace detail
} // namespace apache::thrift
