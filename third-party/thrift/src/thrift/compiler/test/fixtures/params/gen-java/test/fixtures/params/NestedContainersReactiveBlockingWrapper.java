/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package test.fixtures.params;

import java.util.*;

public class NestedContainersReactiveBlockingWrapper 
  implements NestedContainers {
  private final NestedContainers.Reactive _delegate;

  public NestedContainersReactiveBlockingWrapper(NestedContainers.Reactive _delegate) {
    
    this._delegate = _delegate;
  }

  public NestedContainersReactiveBlockingWrapper(org.apache.thrift.ProtocolId _protocolId, reactor.core.publisher.Mono<? extends com.facebook.thrift.client.RpcClient> _rpcClient, Map<String, String> _headers, Map<String, String> _persistentHeaders) {
    this(new NestedContainersReactiveClient(_protocolId, _rpcClient, _headers, _persistentHeaders));
  }

  @java.lang.Override
  public void close() {
    _delegate.dispose();
  }

  @java.lang.Override
  public void mapList( final Map<Integer, List<Integer>> foo) throws org.apache.thrift.TException {
      mapListWrapper(foo, com.facebook.thrift.client.RpcOptions.EMPTY);
  }

  @java.lang.Override
  public void mapList(
        final Map<Integer, List<Integer>> foo,
        com.facebook.thrift.client.RpcOptions rpcOptions) throws org.apache.thrift.TException {
      mapListWrapper(foo,rpcOptions);
  }

  @java.lang.Override
  public com.facebook.thrift.client.ResponseWrapper<Void> mapListWrapper(
    final Map<Integer, List<Integer>> foo,
    com.facebook.thrift.client.RpcOptions rpcOptions) throws org.apache.thrift.TException {
      try {
        return _delegate.mapListWrapper(foo, rpcOptions).block();
      } catch (Throwable t) {
        throw com.facebook.thrift.util.ExceptionUtil.wrap(t);
      }
  }
  @java.lang.Override
  public void mapSet( final Map<Integer, Set<Integer>> foo) throws org.apache.thrift.TException {
      mapSetWrapper(foo, com.facebook.thrift.client.RpcOptions.EMPTY);
  }

  @java.lang.Override
  public void mapSet(
        final Map<Integer, Set<Integer>> foo,
        com.facebook.thrift.client.RpcOptions rpcOptions) throws org.apache.thrift.TException {
      mapSetWrapper(foo,rpcOptions);
  }

  @java.lang.Override
  public com.facebook.thrift.client.ResponseWrapper<Void> mapSetWrapper(
    final Map<Integer, Set<Integer>> foo,
    com.facebook.thrift.client.RpcOptions rpcOptions) throws org.apache.thrift.TException {
      try {
        return _delegate.mapSetWrapper(foo, rpcOptions).block();
      } catch (Throwable t) {
        throw com.facebook.thrift.util.ExceptionUtil.wrap(t);
      }
  }
  @java.lang.Override
  public void listMap( final List<Map<Integer, Integer>> foo) throws org.apache.thrift.TException {
      listMapWrapper(foo, com.facebook.thrift.client.RpcOptions.EMPTY);
  }

  @java.lang.Override
  public void listMap(
        final List<Map<Integer, Integer>> foo,
        com.facebook.thrift.client.RpcOptions rpcOptions) throws org.apache.thrift.TException {
      listMapWrapper(foo,rpcOptions);
  }

  @java.lang.Override
  public com.facebook.thrift.client.ResponseWrapper<Void> listMapWrapper(
    final List<Map<Integer, Integer>> foo,
    com.facebook.thrift.client.RpcOptions rpcOptions) throws org.apache.thrift.TException {
      try {
        return _delegate.listMapWrapper(foo, rpcOptions).block();
      } catch (Throwable t) {
        throw com.facebook.thrift.util.ExceptionUtil.wrap(t);
      }
  }
  @java.lang.Override
  public void listSet( final List<Set<Integer>> foo) throws org.apache.thrift.TException {
      listSetWrapper(foo, com.facebook.thrift.client.RpcOptions.EMPTY);
  }

  @java.lang.Override
  public void listSet(
        final List<Set<Integer>> foo,
        com.facebook.thrift.client.RpcOptions rpcOptions) throws org.apache.thrift.TException {
      listSetWrapper(foo,rpcOptions);
  }

  @java.lang.Override
  public com.facebook.thrift.client.ResponseWrapper<Void> listSetWrapper(
    final List<Set<Integer>> foo,
    com.facebook.thrift.client.RpcOptions rpcOptions) throws org.apache.thrift.TException {
      try {
        return _delegate.listSetWrapper(foo, rpcOptions).block();
      } catch (Throwable t) {
        throw com.facebook.thrift.util.ExceptionUtil.wrap(t);
      }
  }
  @java.lang.Override
  public void turtles( final List<List<Map<Integer, Map<Integer, Set<Integer>>>>> foo) throws org.apache.thrift.TException {
      turtlesWrapper(foo, com.facebook.thrift.client.RpcOptions.EMPTY);
  }

  @java.lang.Override
  public void turtles(
        final List<List<Map<Integer, Map<Integer, Set<Integer>>>>> foo,
        com.facebook.thrift.client.RpcOptions rpcOptions) throws org.apache.thrift.TException {
      turtlesWrapper(foo,rpcOptions);
  }

  @java.lang.Override
  public com.facebook.thrift.client.ResponseWrapper<Void> turtlesWrapper(
    final List<List<Map<Integer, Map<Integer, Set<Integer>>>>> foo,
    com.facebook.thrift.client.RpcOptions rpcOptions) throws org.apache.thrift.TException {
      try {
        return _delegate.turtlesWrapper(foo, rpcOptions).block();
      } catch (Throwable t) {
        throw com.facebook.thrift.util.ExceptionUtil.wrap(t);
      }
  }

}
