(*
 * Copyright (c) 2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the "hack" directory of this source tree.
 *
 *
 *)

let test_clean_comments () =
  let s =
    "This file is partially generated. Only make modifications between BEGIN\n"
    ^ "MANUAL SECTION and END MANUAL SECTION designators.\n"
    ^ "\n"
    ^ "This file was generated by:\n"
    ^ "  a/big/pile/of/template\n"
    ^ "If there is a merge conflict, resolve the template itself, as well as\n"
    ^ "any conflicts in MANUAL code sections, and then run:\n"
    ^ "  code-generator --merge ABigPileOfTemplate\n"
    ^ "\n"
    ^ "\u{40}codegen-command : code-generator ABigPileOfTemplate\n"
    ^ "\u{40}codegen-source ABigPileOfTemplate: a/big/pile/of/template\n"
    ^ "\u{40}codegen-class : Foo\n"
    ^ "\n"
    ^ "\u{40}partially-generated SignedSource<<12345checksum>>\n"
  in
  Asserter.String_asserter.assert_equals
    ""
    (ServerDocblockAt.clean_comments s)
    "clean";

  let s =
    "This file is generated. Do not modify it manually!\n"
    ^ "\n"
    ^ "This file was generated by:\n"
    ^ "  somewhere/dir/file\n"
    ^ "If there is a merge conflict, resolve the schema itself, as well\n"
    ^ "as any conflicts in MANUAL code sections, and then run:\n"
    ^ "  gencode --merge\n"
    ^ "\n"
    ^ "For codegen logic, refer to SomeKindOfCodegen.\n"
    ^ "\n"
    ^ "\u{40}codegen-command : gencode\n"
    ^ "\n"
    ^ "\u{40}generated SignedSource<<12345checksum>>\n"
  in
  Asserter.String_asserter.assert_equals
    ""
    (ServerDocblockAt.clean_comments s)
    "clean";

  let s =
    "This file is generated. It is trying to be a pathological case.\n"
    ^ "\u{40}generator1 the quick brown fox\n"
    ^ "\u{40}generator2 the quick brown fox\n"
    ^ "\u{40}generator3 the quick brown fox\n"
    ^ "\u{40}generator4 the quick brown fox\n"
    ^ "\u{40}generator5 the quick brown fox\n"
    ^ "\u{40}generator6 the quick brown fox\n"
    ^ "\u{40}generator7 the quick brown fox\n"
    ^ "\u{40}generator8 the quick brown fox\n"
    ^ "\u{40}generated."
  in
  Asserter.String_asserter.assert_equals
    ""
    (ServerDocblockAt.clean_comments s)
    "clean";

  let s =
    "(c) Facebook, Inc. and its affiliates. Confidential and proprietary."
  in
  Asserter.String_asserter.assert_equals
    ""
    (ServerDocblockAt.clean_comments s)
    "clean";

  let s = "Copyright 2004-present Foobar. All Rights Reserved." in
  Asserter.String_asserter.assert_equals
    ""
    (ServerDocblockAt.clean_comments s)
    "clean";

  let s =
    "Copyright (c) Foobar, Inc. and its affiliates. All Rights Reserved."
  in
  Asserter.String_asserter.assert_equals
    ""
    (ServerDocblockAt.clean_comments s)
    "clean";

  let s = "(c) Contributor <contributor@email.com>" in
  Asserter.String_asserter.assert_equals
    s
    (ServerDocblockAt.clean_comments s)
    "leave unchanged";

  let s = "Requirements\n(a) foo\n(b) bar\n(c) doo" in
  Asserter.String_asserter.assert_equals
    s
    (ServerDocblockAt.clean_comments s)
    "leave unchanged";

  true

let tests = [("test_clean_comments", test_clean_comments)]

let () = Unit_test.run_all tests
