[(Class
    { c_span = [5:1-7:2]; c_annotation = (); c_mode = Mstrict; c_final = false; 
      c_is_xhp = false; c_has_xhp_keyword = false; c_kind = Cinterface; 
      c_name = ([5:11-12], "\\I"); c_tparams = []; c_extends = []; c_uses = []; 
      c_xhp_attr_uses = []; c_xhp_category = None; c_reqs = []; c_implements = []; 
      c_consts = []; c_typeconsts = []; c_vars = [];
      c_methods =
      [{ m_span = [6:3-34]; m_annotation = (); m_final = false; m_abstract = true; 
         m_static = false; m_readonly_this = false; m_visibility = Public; 
         m_name = ([6:19-22], "bar");
         m_tparams =
         [{ tp_variance = Invariant; tp_name = ([6:23-24], "T"); tp_constraints = [(Constraint_as, ([6:23-24], (Happly (([6:23-24], "\\HH\\supportdyn"), [([6:23-24], Hmixed)]))))];
            tp_reified = Erased; tp_user_attributes = [] }
           ];
         m_where_constraints = []; m_params = []; m_ctxs = None; m_unsafe_ctxs = None; 
         m_body = { fb_ast = [] }; m_fun_kind = FSync; m_user_attributes = []; 
         m_readonly_ret = None; m_ret = ((void), (Some ([6:29-33], (Hprim Tvoid)))); 
         m_external = true; m_doc_comment = None }
        ];
      c_xhp_children = []; c_xhp_attrs = [];
      c_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
      c_user_attributes = [{ ua_name = ([5:11-12], "__SupportDynamicType"); ua_params = [] }];
      c_file_attributes =
      [{ fa_user_attributes = [{ ua_name = ([3:9-33], "__EnableUnstableFeatures"); ua_params = [((string), [3:34-65], (String "union_intersection_type_hints"))] }];
         fa_namespace =
         { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
           ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
           ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false }
         }
        ];
      c_docs_url = None; c_enum = None; c_doc_comment = None; c_emit_id = None; 
      c_internal = false; c_module = None; c_package = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
       fd_file_attributes =
       [{ fa_user_attributes = [{ ua_name = ([3:9-33], "__EnableUnstableFeatures"); ua_params = [((string), [3:34-65], (String "union_intersection_type_hints"))] }];
          fa_namespace =
          { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
            ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
            ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false }
          }
         ];
       fd_mode = Mstrict; fd_name = ([9:10-18], "\\dropped1");
       fd_fun =
       { f_span = [9:1-13:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_tparams = []; f_ret = ((void), (Some ([9:77-81], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = (((nonnull & dynamic) | I));
            param_type_hint =
            ((((nonnull & dynamic) | I)),
             (Some ([9:19-44],
                    (Hunion
                       [([9:20-39], (Hintersection [([9:21-28], Hdynamic); ([9:31-38], (Happly (([9:31-38], "\\HH\\supportdyn"), [([9:31-38], Hnonnull)])))]));
                         ([9:42-43], (Happly (([9:42-43], "\\I"), [])))]))));
            param_pos = [9:45-48]; param_name = "$i1"; param_info = Param_required; 
            param_readonly = None; param_splat = None; param_callconv = Pnormal; 
            param_named = None; param_user_attributes = []; param_visibility = None };
           { param_annotation = (~I); param_type_hint = ((~I), (Some ([9:50-63], (Hunion [([9:51-58], Hdynamic); ([9:61-62], (Happly (([9:61-62], "\\I"), [])))])))); 
             param_pos = [9:64-67]; param_name = "$i2"; param_info = Param_required; 
             param_readonly = None; param_splat = None; param_callconv = Pnormal; 
             param_named = None; param_user_attributes = []; param_visibility = None };
           { param_annotation = (I); param_type_hint = ((I), (Some ([9:69-70], (Happly (([9:69-70], "\\I"), []))))); 
             param_pos = [9:71-74]; param_name = "$i3"; param_info = Param_required; 
             param_readonly = None; param_splat = None; param_callconv = Pnormal; 
             param_named = None; param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([10:3-19],
             (Expr
                ((~void), [10:3-18],
                 (Call
                    { func =
                      ((~(function<T>(): void)), [10:3-11],
                       (Obj_get (((((nonnull & dynamic) | I)), [10:3-6], (Lvar ([10:3-6], $i1))), ((~(function<T>(): void)), [10:8-11], (Id ([10:8-11], "bar"))), OG_nullthrows, Is_method)));
                      targs = [((int), ([10:12-15], (Hprim Tint)))]; 
                      args = []; unpacked_arg = None }))));
             ([11:3-19],
              (Expr
                 ((~void), [11:3-18],
                  (Call
                     { func =
                       ((~(function<T>(): void)), [11:3-11],
                        (Obj_get (((~I), [11:3-6], (Lvar ([11:3-6], $i2))), ((~(function<T>(): void)), [11:8-11], (Id ([11:8-11], "bar"))), OG_nullthrows, Is_method)));
                       targs = [((int), ([11:12-15], (Hprim Tint)))]; 
                       args = []; unpacked_arg = None }))));
             ([12:3-19],
              (Expr
                 ((void), [12:3-18],
                  (Call
                     { func =
                       (((function<T>(): void)), [12:3-11],
                        (Obj_get (((I), [12:3-6], (Lvar ([12:3-6], $i3))), (((function<T>(): void)), [12:8-11], (Id ([12:8-11], "bar"))), OG_nullthrows, Is_method)));
                       targs = [((int), ([12:12-15], (Hprim Tint)))]; 
                       args = []; unpacked_arg = None }))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([9:10-18], "__SupportDynamicType"); ua_params = [] }]; 
         f_external = false; f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
       fd_package = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
       fd_file_attributes =
       [{ fa_user_attributes = [{ ua_name = ([3:9-33], "__EnableUnstableFeatures"); ua_params = [((string), [3:34-65], (String "union_intersection_type_hints"))] }];
          fa_namespace =
          { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
            ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
            ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false }
          }
         ];
       fd_mode = Mstrict; fd_name = ([9:10-18], "\\dropped1");
       fd_fun =
       { f_span = [9:1-13:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_tparams = []; f_ret = ((dynamic), (Some ([9:77-81], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = (dynamic);
            param_type_hint =
            ((dynamic),
             (Some ([9:19-44],
                    (Hunion
                       [([9:20-39], (Hintersection [([9:21-28], Hdynamic); ([9:31-38], (Happly (([9:31-38], "\\HH\\supportdyn"), [([9:31-38], Hnonnull)])))]));
                         ([9:42-43], (Happly (([9:42-43], "\\I"), [])))]))));
            param_pos = [9:45-48]; param_name = "$i1"; param_info = Param_required; 
            param_readonly = None; param_splat = None; param_callconv = Pnormal; 
            param_named = None; param_user_attributes = []; param_visibility = None };
           { param_annotation = (dynamic); param_type_hint = ((dynamic), (Some ([9:50-63], (Hunion [([9:51-58], Hdynamic); ([9:61-62], (Happly (([9:61-62], "\\I"), [])))])))); 
             param_pos = [9:64-67]; param_name = "$i2"; param_info = Param_required; 
             param_readonly = None; param_splat = None; param_callconv = Pnormal; 
             param_named = None; param_user_attributes = []; param_visibility = None };
           { param_annotation = (I); param_type_hint = ((I), (Some ([9:69-70], (Happly (([9:69-70], "\\I"), []))))); 
             param_pos = [9:71-74]; param_name = "$i3"; param_info = Param_required; 
             param_readonly = None; param_splat = None; param_callconv = Pnormal; 
             param_named = None; param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([10:3-19],
             (Expr
                ((dynamic), [10:3-18],
                 (Call
                    { func = ((dynamic), [10:3-11], (Obj_get (((dynamic), [10:3-6], (Lvar ([10:3-6], $i1))), ((dynamic), [10:8-11], (Id ([10:8-11], "bar"))), OG_nullthrows, Is_method))); 
                      targs = []; args = []; unpacked_arg = None }))));
             ([11:3-19],
              (Expr
                 ((dynamic), [11:3-18],
                  (Call
                     { func = ((dynamic), [11:3-11], (Obj_get (((dynamic), [11:3-6], (Lvar ([11:3-6], $i2))), ((dynamic), [11:8-11], (Id ([11:8-11], "bar"))), OG_nullthrows, Is_method))); 
                       targs = []; args = []; unpacked_arg = None }))));
             ([12:3-19],
              (Expr
                 ((void), [12:3-18],
                  (Call
                     { func =
                       (((function<T>(): void)), [12:3-11],
                        (Obj_get (((I), [12:3-6], (Lvar ([12:3-6], $i3))), (((function<T>(): void)), [12:8-11], (Id ([12:8-11], "bar"))), OG_nullthrows, Is_method)));
                       targs = [((int), ([12:12-15], (Hprim Tint)))]; 
                       args = []; unpacked_arg = None }))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([9:10-18], "__SupportDynamicType"); ua_params = [] }]; 
         f_external = false; f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
       fd_package = None })