[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([3:10-14], "\\test");
      fd_fun =
      { f_span = [3:1-6:2]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_tparams = []; f_ret = ((~int), (Some ([3:51-54], (Hprim Tint))));
        f_params =
        [{ param_annotation = (bool); param_type_hint = ((bool), (Some ([3:15-19], (Hprim Tbool)))); 
           param_pos = [3:20-22]; param_name = "$b"; param_info = Param_required; 
           param_readonly = None; param_splat = None; param_callconv = Pnormal; 
           param_named = None; param_user_attributes = []; param_visibility = None };
          { param_annotation = ((function(int): ~int));
            param_type_hint =
            (((function(int): ~int)),
             (Some ([3:24-45],
                    (Happly (([3:24-45], "\\HH\\supportdyn"),
                       [([3:24-45],
                         (Hfun
                            { hf_is_readonly = None; hf_tparams = []; 
                              hf_param_tys = [([3:35-38], (Hprim Tint))];
                              hf_param_info = [(Some { hfparam_kind = Pnormal; hfparam_readonlyness = None; hfparam_optional = None; hfparam_splat = None; hfparam_named = None })];
                              hf_variadic_ty = None; hf_ctxs = None; 
                              hf_return_ty = ([3:41-44], (Hlike ([3:41-44], (Hprim Tint)))); 
                              hf_is_readonly_return = None }))
                         ]
                       )))));
            param_pos = [3:46-48]; param_name = "$f"; param_info = Param_required; 
            param_readonly = None; param_splat = None; param_callconv = Pnormal; 
            param_named = None; param_user_attributes = []; param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None;
        f_body =
        { fb_ast =
          [([4:3-13], (If (((bool), [4:7-9], (Lvar ([4:7-9], $b))), [], [([Pos.none], Noop)])));
            ([5:3-16],
             (Return
                (Some ((~int), [5:10-15],
                       (Call { func = (((function(int): ~int)), [5:10-12], (Lvar ([5:10-12], $f))); targs = []; args = [(Anormal ((int), [5:13-14], (Int "1")))]; unpacked_arg = None })))))
            ]
          };
        f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([3:10-14], "__SupportDynamicType"); ua_params = [] }]; 
        f_external = false; f_doc_comment = None };
      fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
      fd_package = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([3:10-14], "\\test");
       fd_fun =
       { f_span = [3:1-6:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_tparams = []; f_ret = ((dynamic), (Some ([3:51-54], (Hprim Tint))));
         f_params =
         [{ param_annotation = (bool); param_type_hint = ((bool), (Some ([3:15-19], (Hprim Tbool)))); 
            param_pos = [3:20-22]; param_name = "$b"; param_info = Param_required; 
            param_readonly = None; param_splat = None; param_callconv = Pnormal; 
            param_named = None; param_user_attributes = []; param_visibility = None };
           { param_annotation = (dynamic);
             param_type_hint =
             ((dynamic),
              (Some ([3:24-45],
                     (Happly (([3:24-45], "\\HH\\supportdyn"),
                        [([3:24-45],
                          (Hfun
                             { hf_is_readonly = None; hf_tparams = []; 
                               hf_param_tys = [([3:35-38], (Hprim Tint))];
                               hf_param_info = [(Some { hfparam_kind = Pnormal; hfparam_readonlyness = None; hfparam_optional = None; hfparam_splat = None; hfparam_named = None })];
                               hf_variadic_ty = None; hf_ctxs = None; 
                               hf_return_ty = ([3:41-44], (Hlike ([3:41-44], (Hprim Tint)))); 
                               hf_is_readonly_return = None }))
                          ]
                        )))));
             param_pos = [3:46-48]; param_name = "$f"; param_info = Param_required; 
             param_readonly = None; param_splat = None; param_callconv = Pnormal; 
             param_named = None; param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([4:3-13], (If (((bool), [4:7-9], (Lvar ([4:7-9], $b))), [], [([Pos.none], Noop)])));
             ([5:3-16],
              (Return
                 (Some ((dynamic), [5:10-15], (Call { func = ((dynamic), [5:10-12], (Lvar ([5:10-12], $f))); targs = []; args = [(Anormal ((int), [5:13-14], (Int "1")))]; unpacked_arg = None })))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([3:10-14], "__SupportDynamicType"); ua_params = [] }]; 
         f_external = false; f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
       fd_package = None })