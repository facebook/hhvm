# @generated by autocargo from //hphp/hack/src/hackc/emitter:emit_unit

[package]
name = "emit_unit"
version = "0.0.0"
edition = "2024"
repository = "https://github.com/facebook/hhvm"
license = "MIT"

[lib]
path = "../../emit_unit.rs"

[dependencies]
ast_scope = { version = "0.0.0", path = "../ast_scope" }
bit-set = "0.5"
bit-vec = "0.6"
bitflags = { version = "2.9", features = ["serde", "std"], default-features = false }
bstr = { version = "1.10.0", features = ["serde", "std", "unicode"] }
constant_folder = { version = "0.0.0", path = "../constant_folder" }
core_utils_rust = { version = "0.0.0", path = "../../../../utils/core" }
decl_provider = { version = "0.0.0", path = "../../../decl_provider" }
decl_vars = { version = "0.0.0", path = "../decl_vars" }
emit_pos = { version = "0.0.0", path = "../emit_pos" }
emit_type_hint = { version = "0.0.0", path = "../emit_type_hint" }
env = { version = "0.0.0", path = "../env" }
error = { version = "0.0.0", path = "../../../error/cargo/error" }
ffi = { version = "0.0.0", path = "../../../ffi/ffi" }
hack_macros = { version = "0.0.0", path = "../../../../utils/hack_macros/cargo/hack_macros" }
hash = { version = "0.0.0", path = "../../../../utils/hash" }
hhbc = { version = "0.0.0", path = "../../../hhbc/cargo/hhbc" }
hhbc_string_utils = { version = "0.0.0", path = "../../../utils/cargo/hhbc_string_utils" }
hhvm_types_ffi = { version = "0.0.0", path = "../../../hhvm_cxx/hhvm_types" }
indexmap = { version = "2.9.0", features = ["arbitrary", "rayon", "serde"] }
instruction_sequence = { version = "0.0.0", path = "../instruction_sequence" }
itertools = "0.14.0"
label_rewriter = { version = "0.0.0", path = "../label_rewriter" }
lazy_static = "1.5"
naming_special_names_rust = { version = "0.0.0", path = "../../../../naming" }
options = { version = "0.0.0", path = "../../../compile/cargo/options" }
oxidized = { version = "0.0.0", path = "../../../../oxidized" }
print_expr = { version = "0.0.0", path = "../../../print_expr" }
priority-queue = "1.2.2"
regex = "1.11.1"
scope = { version = "0.0.0", path = "../scope" }
serde_json = { version = "1.0.140", features = ["alloc", "float_roundtrip", "unbounded_depth"] }
smallvec = { version = "1.15", features = ["impl_bincode", "serde", "specialization", "union"] }
stack_depth = { version = "0.0.0", path = "../../../utils/cargo/stack_depth" }
stack_limit = { version = "0.0.0", path = "../../../../utils/stack_limit" }
statement_state = { version = "0.0.0", path = "../statement_state" }
