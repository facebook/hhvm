# @generated by autocargo from //hphp/hack/src/hackc/emitter:emit_body
[package]
name = "emit_body"
version = "0.0.0"
edition = "2021"

[lib]
path = "../../emit_body.rs"

[dependencies]
ast_scope = { path = "../ast_scope" }
bitflags = "1.3"
bumpalo = { version = "3.8", features = ["collections"] }
class_expr = { path = "../class_expr" }
decl_provider = { path = "../../../decl_provider" }
emit_expression = { path = "../emit_expression" }
emit_fatal = { path = "../emit_fatal" }
emit_param = { path = "../emit_param" }
emit_pos = { path = "../emit_pos" }
emit_type_hint = { path = "../emit_type_hint" }
env = { path = "../env" }
error = { path = "../../../error/cargo/error" }
ffi = { path = "../../../../utils/ffi" }
generator = { path = "../generator" }
hack_macro = { path = "../../../utils/cargo/hack_macro" }
hash = { path = "../../../../utils/hash" }
hhbc = { path = "../../../hhbc/cargo/hhbc" }
hhbc_string_utils = { path = "../../../utils/cargo/hhbc_string_utils" }
indexmap = { version = "1.8.0", features = ["rayon", "serde-1"] }
instruction_sequence = { path = "../instruction_sequence" }
label_rewriter = { path = "../label_rewriter" }
lazy_static = "1.0"
naming_special_names_rust = { path = "../../../../naming" }
ocamlrep = { path = "../../../../ocamlrep" }
options = { path = "../../../compile/cargo/options" }
oxidized = { path = "../../../../oxidized" }
oxidized_by_ref = { path = "../../../../oxidized_by_ref" }
print_expr = { path = "../../../print_expr" }
regex = "1.5.4"
scope = { path = "../scope" }
stack_limit = { path = "../../../../utils/stack_limit" }
statement_state = { path = "../statement_state" }
