*** Testing ksort() : usage variations ***

-- Testing ksort() by supplying various arrays containing sub arrays --

-- Iteration 1 --
- With defualt sort flag -
bool(true)
array(0) {
}
- Sort flag = SORT_REGULAR -
bool(true)
array(0) {
}

-- Iteration 2 --
- With defualt sort flag -
bool(true)
array(1) {
  [1]=>
  array(0) {
  }
}
- Sort flag = SORT_REGULAR -
bool(true)
array(1) {
  [1]=>
  array(0) {
  }
}

-- Iteration 3 --
- With defualt sort flag -
bool(true)
array(3) {
  [1]=>
  int(11)
  [3]=>
  array(2) {
    [0]=>
    int(64)
    [1]=>
    int(61)
  }
  [4]=>
  int(44)
}
- Sort flag = SORT_REGULAR -
bool(true)
array(3) {
  [1]=>
  int(11)
  [3]=>
  array(2) {
    [0]=>
    int(64)
    [1]=>
    int(61)
  }
  [4]=>
  int(44)
}

-- Iteration 4 --
- With defualt sort flag -
bool(true)
array(4) {
  [0]=>
  array(0) {
  }
  [1]=>
  array(1) {
    [0]=>
    int(11)
  }
  [2]=>
  array(2) {
    [0]=>
    int(22)
    [1]=>
    int(-55)
  }
  [3]=>
  array(3) {
    [0]=>
    int(33)
    [1]=>
    int(-5)
    [2]=>
    int(6)
  }
}
- Sort flag = SORT_REGULAR -
bool(true)
array(4) {
  [0]=>
  array(0) {
  }
  [1]=>
  array(1) {
    [0]=>
    int(11)
  }
  [2]=>
  array(2) {
    [0]=>
    int(22)
    [1]=>
    int(-55)
  }
  [3]=>
  array(3) {
    [0]=>
    int(33)
    [1]=>
    int(-5)
    [2]=>
    int(6)
  }
}
Done