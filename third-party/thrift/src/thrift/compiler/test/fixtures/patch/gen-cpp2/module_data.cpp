/**
 * Autogenerated by Thrift for src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */

#include "thrift/compiler/test/fixtures/patch/gen-cpp2/module_data.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

namespace apache {
namespace thrift {

const std::array<::test::fixtures::patch::InnerUnion::Type, 1> TEnumDataStorage<::test::fixtures::patch::InnerUnion::Type>::values = {{
  type::innerOption,
}};
const std::array<folly::StringPiece, 1> TEnumDataStorage<::test::fixtures::patch::InnerUnion::Type>::names = {{
  "innerOption",
}};

const std::array<::test::fixtures::patch::MyUnion::Type, 3> TEnumDataStorage<::test::fixtures::patch::MyUnion::Type>::values = {{
  type::option1,
  type::option2,
  type::option3,
}};
const std::array<folly::StringPiece, 3> TEnumDataStorage<::test::fixtures::patch::MyUnion::Type>::names = {{
  "option1",
  "option2",
  "option3",
}};

const std::array<folly::StringPiece, 2> TStructDataStorage<::test::fixtures::patch::MyData>::fields_names = {{
  "data1",
  "data2",
}};
const std::array<int16_t, 2> TStructDataStorage<::test::fixtures::patch::MyData>::fields_ids = {{
  1,
  2,
}};
const std::array<protocol::TType, 2> TStructDataStorage<::test::fixtures::patch::MyData>::fields_types = {{
  TType::T_STRING,
  TType::T_I32,
}};

const std::array<folly::StringPiece, 1> TStructDataStorage<::test::fixtures::patch::InnerUnion>::fields_names = {{
  "innerOption",
}};
const std::array<int16_t, 1> TStructDataStorage<::test::fixtures::patch::InnerUnion>::fields_ids = {{
  1,
}};
const std::array<protocol::TType, 1> TStructDataStorage<::test::fixtures::patch::InnerUnion>::fields_types = {{
  TType::T_STRING,
}};

const std::array<folly::StringPiece, 3> TStructDataStorage<::test::fixtures::patch::MyUnion>::fields_names = {{
  "option1",
  "option2",
  "option3",
}};
const std::array<int16_t, 3> TStructDataStorage<::test::fixtures::patch::MyUnion>::fields_ids = {{
  1,
  2,
  3,
}};
const std::array<protocol::TType, 3> TStructDataStorage<::test::fixtures::patch::MyUnion>::fields_types = {{
  TType::T_STRING,
  TType::T_I32,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 24> TStructDataStorage<::test::fixtures::patch::MyStruct>::fields_names = {{
  "boolVal",
  "byteVal",
  "i16Val",
  "i32Val",
  "i64Val",
  "floatVal",
  "doubleVal",
  "stringVal",
  "binaryVal",
  "structVal",
  "optBoolVal",
  "optByteVal",
  "optI16Val",
  "optI32Val",
  "optI64Val",
  "optFloatVal",
  "optDoubleVal",
  "optStringVal",
  "optBinaryVal",
  "optStructVal",
  "optListVal",
  "optSetVal",
  "optMapVal",
  "unionVal",
}};
const std::array<int16_t, 24> TStructDataStorage<::test::fixtures::patch::MyStruct>::fields_ids = {{
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  30,
}};
const std::array<protocol::TType, 24> TStructDataStorage<::test::fixtures::patch::MyStruct>::fields_types = {{
  TType::T_BOOL,
  TType::T_BYTE,
  TType::T_I16,
  TType::T_I32,
  TType::T_I64,
  TType::T_FLOAT,
  TType::T_DOUBLE,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_STRUCT,
  TType::T_BOOL,
  TType::T_BYTE,
  TType::T_I16,
  TType::T_I32,
  TType::T_I64,
  TType::T_FLOAT,
  TType::T_DOUBLE,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_STRUCT,
  TType::T_LIST,
  TType::T_SET,
  TType::T_MAP,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 2> TStructDataStorage<::test::fixtures::patch::MyDataFieldPatchStruct>::fields_names = {{
  "data1",
  "data2",
}};
const std::array<int16_t, 2> TStructDataStorage<::test::fixtures::patch::MyDataFieldPatchStruct>::fields_ids = {{
  1,
  2,
}};
const std::array<protocol::TType, 2> TStructDataStorage<::test::fixtures::patch::MyDataFieldPatchStruct>::fields_types = {{
  TType::T_STRUCT,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 5> TStructDataStorage<::test::fixtures::patch::MyDataPatchStruct>::fields_names = {{
  "assign",
  "clear",
  "patchPrior",
  "ensure",
  "patch",
}};
const std::array<int16_t, 5> TStructDataStorage<::test::fixtures::patch::MyDataPatchStruct>::fields_ids = {{
  1,
  2,
  3,
  5,
  6,
}};
const std::array<protocol::TType, 5> TStructDataStorage<::test::fixtures::patch::MyDataPatchStruct>::fields_types = {{
  TType::T_STRUCT,
  TType::T_BOOL,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 4> TStructDataStorage<::test::fixtures::patch::OptionalMyDataPatchStruct>::fields_names = {{
  "clear",
  "patchPrior",
  "ensure",
  "patch",
}};
const std::array<int16_t, 4> TStructDataStorage<::test::fixtures::patch::OptionalMyDataPatchStruct>::fields_ids = {{
  2,
  3,
  4,
  6,
}};
const std::array<protocol::TType, 4> TStructDataStorage<::test::fixtures::patch::OptionalMyDataPatchStruct>::fields_types = {{
  TType::T_BOOL,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 1> TStructDataStorage<::test::fixtures::patch::InnerUnionFieldPatchStruct>::fields_names = {{
  "innerOption",
}};
const std::array<int16_t, 1> TStructDataStorage<::test::fixtures::patch::InnerUnionFieldPatchStruct>::fields_ids = {{
  1,
}};
const std::array<protocol::TType, 1> TStructDataStorage<::test::fixtures::patch::InnerUnionFieldPatchStruct>::fields_types = {{
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 5> TStructDataStorage<::test::fixtures::patch::InnerUnionPatchStruct>::fields_names = {{
  "assign",
  "clear",
  "patchPrior",
  "ensure",
  "patch",
}};
const std::array<int16_t, 5> TStructDataStorage<::test::fixtures::patch::InnerUnionPatchStruct>::fields_ids = {{
  1,
  2,
  3,
  4,
  6,
}};
const std::array<protocol::TType, 5> TStructDataStorage<::test::fixtures::patch::InnerUnionPatchStruct>::fields_types = {{
  TType::T_STRUCT,
  TType::T_BOOL,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 4> TStructDataStorage<::test::fixtures::patch::OptionalInnerUnionPatchStruct>::fields_names = {{
  "clear",
  "patchPrior",
  "ensure",
  "patch",
}};
const std::array<int16_t, 4> TStructDataStorage<::test::fixtures::patch::OptionalInnerUnionPatchStruct>::fields_ids = {{
  2,
  3,
  4,
  6,
}};
const std::array<protocol::TType, 4> TStructDataStorage<::test::fixtures::patch::OptionalInnerUnionPatchStruct>::fields_types = {{
  TType::T_BOOL,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 3> TStructDataStorage<::test::fixtures::patch::MyUnionFieldPatchStruct>::fields_names = {{
  "option1",
  "option2",
  "option3",
}};
const std::array<int16_t, 3> TStructDataStorage<::test::fixtures::patch::MyUnionFieldPatchStruct>::fields_ids = {{
  1,
  2,
  3,
}};
const std::array<protocol::TType, 3> TStructDataStorage<::test::fixtures::patch::MyUnionFieldPatchStruct>::fields_types = {{
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 5> TStructDataStorage<::test::fixtures::patch::MyUnionPatchStruct>::fields_names = {{
  "assign",
  "clear",
  "patchPrior",
  "ensure",
  "patch",
}};
const std::array<int16_t, 5> TStructDataStorage<::test::fixtures::patch::MyUnionPatchStruct>::fields_ids = {{
  1,
  2,
  3,
  4,
  6,
}};
const std::array<protocol::TType, 5> TStructDataStorage<::test::fixtures::patch::MyUnionPatchStruct>::fields_types = {{
  TType::T_STRUCT,
  TType::T_BOOL,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 4> TStructDataStorage<::test::fixtures::patch::OptionalMyUnionPatchStruct>::fields_names = {{
  "clear",
  "patchPrior",
  "ensure",
  "patch",
}};
const std::array<int16_t, 4> TStructDataStorage<::test::fixtures::patch::OptionalMyUnionPatchStruct>::fields_ids = {{
  2,
  3,
  4,
  6,
}};
const std::array<protocol::TType, 4> TStructDataStorage<::test::fixtures::patch::OptionalMyUnionPatchStruct>::fields_types = {{
  TType::T_BOOL,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 4> TStructDataStorage<::test::fixtures::patch::MyStructField21PatchStruct>::fields_names = {{
  "assign",
  "clear",
  "prepend",
  "append",
}};
const std::array<int16_t, 4> TStructDataStorage<::test::fixtures::patch::MyStructField21PatchStruct>::fields_ids = {{
  1,
  2,
  8,
  9,
}};
const std::array<protocol::TType, 4> TStructDataStorage<::test::fixtures::patch::MyStructField21PatchStruct>::fields_types = {{
  TType::T_LIST,
  TType::T_BOOL,
  TType::T_LIST,
  TType::T_LIST,
}};

const std::array<folly::StringPiece, 4> TStructDataStorage<::test::fixtures::patch::OptionalMyStructField21PatchStruct>::fields_names = {{
  "clear",
  "patchPrior",
  "ensure",
  "patch",
}};
const std::array<int16_t, 4> TStructDataStorage<::test::fixtures::patch::OptionalMyStructField21PatchStruct>::fields_ids = {{
  2,
  3,
  4,
  6,
}};
const std::array<protocol::TType, 4> TStructDataStorage<::test::fixtures::patch::OptionalMyStructField21PatchStruct>::fields_types = {{
  TType::T_BOOL,
  TType::T_STRUCT,
  TType::T_LIST,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 4> TStructDataStorage<::test::fixtures::patch::MyStructField22PatchStruct>::fields_names = {{
  "assign",
  "clear",
  "remove",
  "add",
}};
const std::array<int16_t, 4> TStructDataStorage<::test::fixtures::patch::MyStructField22PatchStruct>::fields_ids = {{
  1,
  2,
  7,
  8,
}};
const std::array<protocol::TType, 4> TStructDataStorage<::test::fixtures::patch::MyStructField22PatchStruct>::fields_types = {{
  TType::T_SET,
  TType::T_BOOL,
  TType::T_SET,
  TType::T_SET,
}};

const std::array<folly::StringPiece, 4> TStructDataStorage<::test::fixtures::patch::OptionalMyStructField22PatchStruct>::fields_names = {{
  "clear",
  "patchPrior",
  "ensure",
  "patch",
}};
const std::array<int16_t, 4> TStructDataStorage<::test::fixtures::patch::OptionalMyStructField22PatchStruct>::fields_ids = {{
  2,
  3,
  4,
  6,
}};
const std::array<protocol::TType, 4> TStructDataStorage<::test::fixtures::patch::OptionalMyStructField22PatchStruct>::fields_types = {{
  TType::T_BOOL,
  TType::T_STRUCT,
  TType::T_SET,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 4> TStructDataStorage<::test::fixtures::patch::MyStructField23PatchStruct>::fields_names = {{
  "assign",
  "clear",
  "add",
  "put",
}};
const std::array<int16_t, 4> TStructDataStorage<::test::fixtures::patch::MyStructField23PatchStruct>::fields_ids = {{
  1,
  2,
  5,
  9,
}};
const std::array<protocol::TType, 4> TStructDataStorage<::test::fixtures::patch::MyStructField23PatchStruct>::fields_types = {{
  TType::T_MAP,
  TType::T_BOOL,
  TType::T_MAP,
  TType::T_MAP,
}};

const std::array<folly::StringPiece, 4> TStructDataStorage<::test::fixtures::patch::OptionalMyStructField23PatchStruct>::fields_names = {{
  "clear",
  "patchPrior",
  "ensure",
  "patch",
}};
const std::array<int16_t, 4> TStructDataStorage<::test::fixtures::patch::OptionalMyStructField23PatchStruct>::fields_ids = {{
  2,
  3,
  4,
  6,
}};
const std::array<protocol::TType, 4> TStructDataStorage<::test::fixtures::patch::OptionalMyStructField23PatchStruct>::fields_types = {{
  TType::T_BOOL,
  TType::T_STRUCT,
  TType::T_MAP,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 24> TStructDataStorage<::test::fixtures::patch::MyStructFieldPatchStruct>::fields_names = {{
  "boolVal",
  "byteVal",
  "i16Val",
  "i32Val",
  "i64Val",
  "floatVal",
  "doubleVal",
  "stringVal",
  "binaryVal",
  "structVal",
  "optBoolVal",
  "optByteVal",
  "optI16Val",
  "optI32Val",
  "optI64Val",
  "optFloatVal",
  "optDoubleVal",
  "optStringVal",
  "optBinaryVal",
  "optStructVal",
  "optListVal",
  "optSetVal",
  "optMapVal",
  "unionVal",
}};
const std::array<int16_t, 24> TStructDataStorage<::test::fixtures::patch::MyStructFieldPatchStruct>::fields_ids = {{
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  30,
}};
const std::array<protocol::TType, 24> TStructDataStorage<::test::fixtures::patch::MyStructFieldPatchStruct>::fields_types = {{
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 5> TStructDataStorage<::test::fixtures::patch::MyStructPatchStruct>::fields_names = {{
  "assign",
  "clear",
  "patchPrior",
  "ensure",
  "patch",
}};
const std::array<int16_t, 5> TStructDataStorage<::test::fixtures::patch::MyStructPatchStruct>::fields_ids = {{
  1,
  2,
  3,
  5,
  6,
}};
const std::array<protocol::TType, 5> TStructDataStorage<::test::fixtures::patch::MyStructPatchStruct>::fields_types = {{
  TType::T_STRUCT,
  TType::T_BOOL,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 4> TStructDataStorage<::test::fixtures::patch::OptionalMyStructPatchStruct>::fields_names = {{
  "clear",
  "patchPrior",
  "ensure",
  "patch",
}};
const std::array<int16_t, 4> TStructDataStorage<::test::fixtures::patch::OptionalMyStructPatchStruct>::fields_ids = {{
  2,
  3,
  4,
  6,
}};
const std::array<protocol::TType, 4> TStructDataStorage<::test::fixtures::patch::OptionalMyStructPatchStruct>::fields_types = {{
  TType::T_BOOL,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
}};

} // namespace thrift
} // namespace apache
