/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#pragma once

#include <thrift/lib/cpp2/gen/module_data_h.h>

#include "thrift/lib/thrift/gen-cpp2/metadata_types.h"

namespace apache { namespace thrift {

template <> struct TEnumDataStorage<::apache::thrift::metadata::ThriftPrimitiveType> {
  using type = ::apache::thrift::metadata::ThriftPrimitiveType;
  static constexpr const std::size_t size = 10;
  static constexpr const std::array<type, 10> values = {{
    type::THRIFT_BOOL_TYPE,
    type::THRIFT_BYTE_TYPE,
    type::THRIFT_I16_TYPE,
    type::THRIFT_I32_TYPE,
    type::THRIFT_I64_TYPE,
    type::THRIFT_FLOAT_TYPE,
    type::THRIFT_DOUBLE_TYPE,
    type::THRIFT_BINARY_TYPE,
    type::THRIFT_STRING_TYPE,
    type::THRIFT_VOID_TYPE,
  }};
  static constexpr const std::array<folly::StringPiece, 10> names = {{
    "THRIFT_BOOL_TYPE",
    "THRIFT_BYTE_TYPE",
    "THRIFT_I16_TYPE",
    "THRIFT_I32_TYPE",
    "THRIFT_I64_TYPE",
    "THRIFT_FLOAT_TYPE",
    "THRIFT_DOUBLE_TYPE",
    "THRIFT_BINARY_TYPE",
    "THRIFT_STRING_TYPE",
    "THRIFT_VOID_TYPE",
  }};
};

}} // apache::thrift
