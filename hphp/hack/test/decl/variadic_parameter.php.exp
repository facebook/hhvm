[("\\test",
  (Shallow_decl_defs.Fun
     { Typing_defs.fe_deprecated = None; fe_module = None;
       fe_internal = false;
       fe_type =
       (Rwitness_from_decl ([3:10-14]),
        (Tfun
           { ft_tparams = []; ft_where_constraints = [];
             ft_params =
             [{ fp_pos = [3:42-44]; fp_name = (Some "$f");
                fp_type =
                { et_enforced = Typing_defs_core.Unenforced;
                  et_type =
                  (Rhint ([3:15-41]),
                   (Tfun
                      { ft_tparams = []; ft_where_constraints = [];
                        ft_params =
                        [{ fp_pos = [3:25-30]; fp_name = None;
                           fp_type =
                           { et_enforced = Typing_defs_core.Unenforced;
                             et_type = (Rhint ([3:25-30]), Tmixed) };
                           fp_flags =
                           (make_fp_flags ~accept_disposable:false
                             ~has_default:false
                             ~mode:Typing_defs_core.FPnormal
                             ~ifc_external:false ~ifc_can_call:false
                             ~readonly:false);
                            }
                          ];
                        ft_implicit_params =
                        { capability = (CapDefaults [3:15-41]) };
                        ft_ret =
                        { et_enforced = Typing_defs_core.Unenforced;
                          et_type = (Rhint ([3:36-40]), (Tprim Tvoid)) };
                        ft_flags =
                        (make_ft_flags FSync ~return_disposable:false
                          ~returns_readonly:false ~support_dynamic_type:false
                          ~readonly_this:false ~is_memoized:false
                          ~variadic:true);
                        ft_ifc_decl = FDPolicied {PUBLIC}ft_cross_package =
                                                         None
                        }))
                  };
                fp_flags =
                (make_fp_flags ~accept_disposable:false ~has_default:false
                  ~mode:Typing_defs_core.FPnormal ~ifc_external:false
                  ~ifc_can_call:false ~readonly:false);
                 }
               ];
             ft_implicit_params = { capability = (CapDefaults [3:10-14]) };
             ft_ret =
             { et_enforced = Typing_defs_core.Unenforced;
               et_type = (Rhint ([3:47-51]), (Tprim Tvoid)) };
             ft_flags =
             (make_ft_flags FSync ~return_disposable:false
               ~returns_readonly:false ~support_dynamic_type:false
               ~readonly_this:false ~is_memoized:false ~variadic:false);
             ft_ifc_decl = FDPolicied {PUBLIC}ft_cross_package = None }));
       fe_pos = [3:10-14]; fe_php_std_lib = false;
       fe_support_dynamic_type = false; fe_no_auto_dynamic = false }))
  ]
