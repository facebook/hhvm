/**
 * Autogenerated by Thrift for thrift/compiler/test/fixtures/encode/src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */

#include "thrift/compiler/test/fixtures/encode/gen-cpp2/module_data.h"
#include "thrift/compiler/test/fixtures/encode/gen-cpp2/module_constants.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

namespace apache::thrift {

THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::string_view TStructDataStorage<::facebook::thrift::test::Foo>::name = "Foo";
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::Foo>::fields_names = { {
  "field"sv,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int16_t, 1> TStructDataStorage<::facebook::thrift::test::Foo>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<protocol::TType, 1> TStructDataStorage<::facebook::thrift::test::Foo>::fields_types = { {
  TType::T_I32,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int, 1> TStructDataStorage<::facebook::thrift::test::Foo>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::string_view TStructDataStorage<::facebook::thrift::test::Bar>::name = "Bar";
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::Bar>::fields_names = { {
  "list_field"sv,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int16_t, 1> TStructDataStorage<::facebook::thrift::test::Bar>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<protocol::TType, 1> TStructDataStorage<::facebook::thrift::test::Bar>::fields_types = { {
  TType::T_LIST,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int, 1> TStructDataStorage<::facebook::thrift::test::Bar>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::string_view TStructDataStorage<::facebook::thrift::test::Baz>::name = "Baz";
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<std::string_view, 2> TStructDataStorage<::facebook::thrift::test::Baz>::fields_names = { {
  "list_field"sv,
  "nested_list_field"sv,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int16_t, 2> TStructDataStorage<::facebook::thrift::test::Baz>::fields_ids = { {
  1,
  2,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<protocol::TType, 2> TStructDataStorage<::facebook::thrift::test::Baz>::fields_types = { {
  TType::T_LIST,
  TType::T_LIST,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int, 2> TStructDataStorage<::facebook::thrift::test::Baz>::isset_indexes = { {
  0,
  1,
}};

THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::string_view TStructDataStorage<::facebook::thrift::test::OpEncodeStruct>::name = "OpEncodeStruct";
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<std::string_view, 12> TStructDataStorage<::facebook::thrift::test::OpEncodeStruct>::fields_names = { {
  "int_field"sv,
  "enum_field"sv,
  "foo_field"sv,
  "adapted_field"sv,
  "list_field"sv,
  "list_shared_ptr_field"sv,
  "list_cpp_type_field"sv,
  "set_field"sv,
  "map_field"sv,
  "nested_field"sv,
  "bar_field"sv,
  "adapted_list_field"sv,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int16_t, 12> TStructDataStorage<::facebook::thrift::test::OpEncodeStruct>::fields_ids = { {
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<protocol::TType, 12> TStructDataStorage<::facebook::thrift::test::OpEncodeStruct>::fields_types = { {
  TType::T_I32,
  TType::T_I32,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_LIST,
  TType::T_LIST,
  TType::T_LIST,
  TType::T_SET,
  TType::T_MAP,
  TType::T_MAP,
  TType::T_STRUCT,
  TType::T_LIST,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int, 12> TStructDataStorage<::facebook::thrift::test::OpEncodeStruct>::isset_indexes = { {
  0,
  1,
  2,
  3,
  4,
  -1,
  5,
  6,
  7,
  8,
  9,
  10,
}};

namespace detail {






} // namespace detail
} // namespace apache::thrift
