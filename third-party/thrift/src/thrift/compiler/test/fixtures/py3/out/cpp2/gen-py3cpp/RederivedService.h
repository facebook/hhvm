/**
 * Autogenerated by Thrift for thrift/compiler/test/fixtures/py3/src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */
#pragma once

#include <thrift/lib/cpp2/gen/service_h.h>

#include "thrift/compiler/test/fixtures/py3/gen-py3cpp/RederivedServiceAsyncClient.h"
#include "thrift/compiler/test/fixtures/py3/gen-py3cpp/module_types.h"
#if __has_include("thrift/compiler/test/fixtures/py3/gen-py3cpp/DerivedService.h")
#include "thrift/compiler/test/fixtures/py3/gen-py3cpp/DerivedService.h"
#else
#include "thrift/compiler/test/fixtures/py3/gen-py3cpp/module_handlers.h"
#endif

namespace folly {
  class IOBuf;
  class IOBufQueue;
}
namespace apache { namespace thrift {
  class Cpp2RequestContext;
  class BinaryProtocolReader;
  class CompactProtocolReader;
  namespace transport { class THeader; }
}}

namespace py3::simple {
class RederivedService;
class RederivedServiceAsyncProcessor;

class RederivedServiceServiceInfoHolder : public apache::thrift::ServiceInfoHolder {
  public:
   apache::thrift::ServiceRequestInfoMap const& requestInfoMap() const override;
   static apache::thrift::ServiceRequestInfoMap staticRequestInfoMap();
};
} // namespace py3::simple

namespace apache::thrift {
template <>
class ServiceHandler<::py3::simple::RederivedService> : virtual public ::py3::simple::DerivedServiceSvIf {
  static_assert(!folly::is_detected_v<::apache::thrift::detail::st::detect_complete, ::py3::simple::RederivedService>, "Definition collision with service tag. Either rename the Thrift service using @cpp.Name annotation or rename the conflicting C++ type.");

 public:
  std::string_view getGeneratedName() const override { return "RederivedService"; }

  typedef ::py3::simple::RederivedServiceAsyncProcessor ProcessorType;
  std::unique_ptr<apache::thrift::AsyncProcessor> getProcessor() override;
  CreateMethodMetadataResult createMethodMetadata() override;
 private:
  std::optional<std::reference_wrapper<apache::thrift::ServiceRequestInfoMap const>> getServiceRequestInfoMap() const;
 public:

  virtual ::std::int32_t sync_get_seven();
  [[deprecated("Use sync_get_seven instead")]] virtual ::std::int32_t get_seven();
  virtual folly::Future<::std::int32_t> future_get_seven();
  virtual folly::SemiFuture<::std::int32_t> semifuture_get_seven();
#if FOLLY_HAS_COROUTINES
  virtual folly::coro::Task<::std::int32_t> co_get_seven();
  virtual folly::coro::Task<::std::int32_t> co_get_seven(apache::thrift::RequestParams params);
#endif
  virtual void async_tm_get_seven(apache::thrift::HandlerCallbackPtr<::std::int32_t> callback);
 private:
  static ::py3::simple::RederivedServiceServiceInfoHolder __fbthrift_serviceInfoHolder;
  std::atomic<apache::thrift::detail::si::InvocationType> __fbthrift_invocation_get_seven{apache::thrift::detail::si::InvocationType::AsyncTm};
 public:
  void fbthrift_execute_decorators_before_get_five(apache::thrift::Cpp2RequestContext& /*requestCtx*/) override {}
  void fbthrift_execute_decorators_after_get_five(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int32_t /*result*/) override {}
  void fbthrift_execute_decorators_before_add_five(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int32_t /*p_num*/) override {}
  void fbthrift_execute_decorators_after_add_five(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int32_t /*result*/) override {}
  void fbthrift_execute_decorators_before_do_nothing(apache::thrift::Cpp2RequestContext& /*requestCtx*/) override {}
  void fbthrift_execute_decorators_after_do_nothing(apache::thrift::Cpp2RequestContext& /*requestCtx*/) override {}
  void fbthrift_execute_decorators_before_concat(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::string& /*p_first*/, const ::std::string& /*p_second*/) override {}
  void fbthrift_execute_decorators_after_concat(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::string& /*result*/) override {}
  void fbthrift_execute_decorators_before_get_value(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::py3::simple::SimpleStruct& /*p_simple_struct*/) override {}
  void fbthrift_execute_decorators_after_get_value(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int32_t /*result*/) override {}
  void fbthrift_execute_decorators_before_negate(apache::thrift::Cpp2RequestContext& /*requestCtx*/, bool /*p_input*/) override {}
  void fbthrift_execute_decorators_after_negate(apache::thrift::Cpp2RequestContext& /*requestCtx*/, bool /*result*/) override {}
  void fbthrift_execute_decorators_before_tiny(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int8_t /*p_input*/) override {}
  void fbthrift_execute_decorators_after_tiny(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int8_t /*result*/) override {}
  void fbthrift_execute_decorators_before_small(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int16_t /*p_input*/) override {}
  void fbthrift_execute_decorators_after_small(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int16_t /*result*/) override {}
  void fbthrift_execute_decorators_before_big(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int64_t /*p_input*/) override {}
  void fbthrift_execute_decorators_after_big(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int64_t /*result*/) override {}
  void fbthrift_execute_decorators_before_two(apache::thrift::Cpp2RequestContext& /*requestCtx*/, double /*p_input*/) override {}
  void fbthrift_execute_decorators_after_two(apache::thrift::Cpp2RequestContext& /*requestCtx*/, double /*result*/) override {}
  void fbthrift_execute_decorators_before_expected_exception(apache::thrift::Cpp2RequestContext& /*requestCtx*/) override {}
  void fbthrift_execute_decorators_after_expected_exception(apache::thrift::Cpp2RequestContext& /*requestCtx*/) override {}
  void fbthrift_execute_decorators_before_unexpected_exception(apache::thrift::Cpp2RequestContext& /*requestCtx*/) override {}
  void fbthrift_execute_decorators_after_unexpected_exception(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int32_t /*result*/) override {}
  void fbthrift_execute_decorators_before_sum_i16_list(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::vector<::std::int16_t>& /*p_numbers*/) override {}
  void fbthrift_execute_decorators_after_sum_i16_list(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int32_t /*result*/) override {}
  void fbthrift_execute_decorators_before_sum_i32_list(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::vector<::std::int32_t>& /*p_numbers*/) override {}
  void fbthrift_execute_decorators_after_sum_i32_list(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int32_t /*result*/) override {}
  void fbthrift_execute_decorators_before_sum_i64_list(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::vector<::std::int64_t>& /*p_numbers*/) override {}
  void fbthrift_execute_decorators_after_sum_i64_list(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int32_t /*result*/) override {}
  void fbthrift_execute_decorators_before_concat_many(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::vector<::std::string>& /*p_words*/) override {}
  void fbthrift_execute_decorators_after_concat_many(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::string& /*result*/) override {}
  void fbthrift_execute_decorators_before_count_structs(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::vector<::py3::simple::SimpleStruct>& /*p_items*/) override {}
  void fbthrift_execute_decorators_after_count_structs(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int32_t /*result*/) override {}
  void fbthrift_execute_decorators_before_sum_set(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::set<::std::int32_t>& /*p_numbers*/) override {}
  void fbthrift_execute_decorators_after_sum_set(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int32_t /*result*/) override {}
  void fbthrift_execute_decorators_before_contains_word(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::set<::std::string>& /*p_words*/, const ::std::string& /*p_word*/) override {}
  void fbthrift_execute_decorators_after_contains_word(apache::thrift::Cpp2RequestContext& /*requestCtx*/, bool /*result*/) override {}
  void fbthrift_execute_decorators_before_get_map_value(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::map<::std::string, ::std::string>& /*p_words*/, const ::std::string& /*p_key*/) override {}
  void fbthrift_execute_decorators_after_get_map_value(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::string& /*result*/) override {}
  void fbthrift_execute_decorators_before_map_length(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::map<::std::string, ::py3::simple::SimpleStruct>& /*p_items*/) override {}
  void fbthrift_execute_decorators_after_map_length(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int16_t /*result*/) override {}
  void fbthrift_execute_decorators_before_sum_map_values(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::map<::std::string, ::std::int16_t>& /*p_items*/) override {}
  void fbthrift_execute_decorators_after_sum_map_values(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int16_t /*result*/) override {}
  void fbthrift_execute_decorators_before_complex_sum_i32(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::py3::simple::ComplexStruct& /*p_counter*/) override {}
  void fbthrift_execute_decorators_after_complex_sum_i32(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int32_t /*result*/) override {}
  void fbthrift_execute_decorators_before_repeat_name(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::py3::simple::ComplexStruct& /*p_counter*/) override {}
  void fbthrift_execute_decorators_after_repeat_name(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::string& /*result*/) override {}
  void fbthrift_execute_decorators_before_get_struct(apache::thrift::Cpp2RequestContext& /*requestCtx*/) override {}
  void fbthrift_execute_decorators_after_get_struct(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::py3::simple::SimpleStruct& /*result*/) override {}
  void fbthrift_execute_decorators_before_fib(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int16_t /*p_n*/) override {}
  void fbthrift_execute_decorators_after_fib(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::vector<::std::int32_t>& /*result*/) override {}
  void fbthrift_execute_decorators_before_unique_words(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::vector<::std::string>& /*p_words*/) override {}
  void fbthrift_execute_decorators_after_unique_words(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::set<::std::string>& /*result*/) override {}
  void fbthrift_execute_decorators_before_words_count(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::vector<::std::string>& /*p_words*/) override {}
  void fbthrift_execute_decorators_after_words_count(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::map<::std::string, ::std::int16_t>& /*result*/) override {}
  void fbthrift_execute_decorators_before_set_enum(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::py3::simple::AnEnum /*p_in_enum*/) override {}
  void fbthrift_execute_decorators_after_set_enum(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::py3::simple::AnEnum /*result*/) override {}
  void fbthrift_execute_decorators_before_list_of_lists(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int16_t /*p_num_lists*/, ::std::int16_t /*p_num_items*/) override {}
  void fbthrift_execute_decorators_after_list_of_lists(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::vector<::std::vector<::std::int32_t>>& /*result*/) override {}
  void fbthrift_execute_decorators_before_word_character_frequency(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::string& /*p_sentence*/) override {}
  void fbthrift_execute_decorators_after_word_character_frequency(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::map<::std::string, ::std::map<::std::string, ::std::int32_t>>& /*result*/) override {}
  void fbthrift_execute_decorators_before_list_of_sets(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::string& /*p_some_words*/) override {}
  void fbthrift_execute_decorators_after_list_of_sets(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::vector<::std::set<::std::string>>& /*result*/) override {}
  void fbthrift_execute_decorators_before_nested_map_argument(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::map<::std::string, ::std::vector<::py3::simple::SimpleStruct>>& /*p_struct_map*/) override {}
  void fbthrift_execute_decorators_after_nested_map_argument(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int32_t /*result*/) override {}
  void fbthrift_execute_decorators_before_make_sentence(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::vector<::std::vector<::std::string>>& /*p_word_chars*/) override {}
  void fbthrift_execute_decorators_after_make_sentence(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::string& /*result*/) override {}
  void fbthrift_execute_decorators_before_get_union(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::vector<::std::set<::std::int32_t>>& /*p_sets*/) override {}
  void fbthrift_execute_decorators_after_get_union(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::set<::std::int32_t>& /*result*/) override {}
  void fbthrift_execute_decorators_before_get_keys(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::vector<::std::map<::std::string, ::std::string>>& /*p_string_map*/) override {}
  void fbthrift_execute_decorators_after_get_keys(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::set<::std::string>& /*result*/) override {}
  void fbthrift_execute_decorators_before_lookup_double(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int32_t /*p_key*/) override {}
  void fbthrift_execute_decorators_after_lookup_double(apache::thrift::Cpp2RequestContext& /*requestCtx*/, double /*result*/) override {}
  void fbthrift_execute_decorators_before_retrieve_binary(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::string& /*p_something*/) override {}
  void fbthrift_execute_decorators_after_retrieve_binary(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::string& /*result*/) override {}
  void fbthrift_execute_decorators_before_contain_binary(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::vector<::std::string>& /*p_binaries*/) override {}
  void fbthrift_execute_decorators_after_contain_binary(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::set<::std::string>& /*result*/) override {}
  void fbthrift_execute_decorators_before_contain_enum(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::vector<::py3::simple::AnEnum>& /*p_the_enum*/) override {}
  void fbthrift_execute_decorators_after_contain_enum(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::std::vector<::py3::simple::AnEnum>& /*result*/) override {}
  void fbthrift_execute_decorators_before_get_binary_union_struct(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::py3::simple::BinaryUnion& /*p_u*/) override {}
  void fbthrift_execute_decorators_after_get_binary_union_struct(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::py3::simple::BinaryUnionStruct& /*result*/) override {}
  void fbthrift_execute_decorators_before_get_struct_hidden(apache::thrift::Cpp2RequestContext& /*requestCtx*/) override {}
  void fbthrift_execute_decorators_after_get_struct_hidden(apache::thrift::Cpp2RequestContext& /*requestCtx*/, const ::py3::simple::SimpleStruct& /*result*/) override {}
  void fbthrift_execute_decorators_before_get_six(apache::thrift::Cpp2RequestContext& /*requestCtx*/) override {}
  void fbthrift_execute_decorators_after_get_six(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int32_t /*result*/) override {}

  virtual void fbthrift_execute_decorators_before_get_seven(apache::thrift::Cpp2RequestContext& /*requestCtx*/) {}
  virtual void fbthrift_execute_decorators_after_get_seven(apache::thrift::Cpp2RequestContext& /*requestCtx*/, ::std::int32_t /*result*/) {}
};

namespace detail {
template <> struct TSchemaAssociation<::py3::simple::RederivedService, false> {
  static ::folly::Range<const ::std::string_view*>(*bundle)();
  static constexpr int64_t programId = -8607107063930754448;
  static constexpr ::std::string_view definitionKey = {"\x0e\x71\x8a\x50\x92\x6e\xa8\xf0\xca\x6b\x29\x99\x82\x5b\xd2\x1d", 16};
};
}
} // namespace apache::thrift

namespace py3::simple {
using RederivedServiceSvIf [[deprecated("Use apache::thrift::ServiceHandler<RederivedService> instead")]] = ::apache::thrift::ServiceHandler<RederivedService>;
} // namespace py3::simple

namespace py3::simple {
class RederivedServiceSvNull : public ::apache::thrift::ServiceHandler<RederivedService>, virtual public ::apache::thrift::ServiceHandler<::py3::simple::DerivedService> {
 public:
  ::std::int32_t get_seven() override;
};

class RederivedServiceAsyncProcessor : public ::py3::simple::DerivedServiceAsyncProcessor {
 public:
  std::string_view getServiceName() override;
  void getServiceMetadata(apache::thrift::metadata::ThriftServiceMetadataResponse& response) override;
  using BaseAsyncProcessor = ::py3::simple::DerivedServiceAsyncProcessor;
 protected:
  ::apache::thrift::ServiceHandler<::py3::simple::RederivedService>* iface_;
 public:
  void processSerializedCompressedRequestWithMetadata(apache::thrift::ResponseChannelRequest::UniquePtr req, apache::thrift::SerializedCompressedRequest&& serializedRequest, const apache::thrift::AsyncProcessorFactory::MethodMetadata& methodMetadata, apache::thrift::protocol::PROTOCOL_TYPES protType, apache::thrift::Cpp2RequestContext* context, folly::EventBase* eb, apache::thrift::concurrency::ThreadManager* tm) override;
  void executeRequest(apache::thrift::ServerRequest&& serverRequest, const apache::thrift::AsyncProcessorFactory::MethodMetadata& methodMetadata) override;
 public:
  using ProcessFuncs = GeneratedAsyncProcessorBase::ProcessFuncs<RederivedServiceAsyncProcessor>;
  using ProcessMap = GeneratedAsyncProcessorBase::ProcessMap<ProcessFuncs>;
  static const RederivedServiceAsyncProcessor::ProcessMap& getOwnProcessMap();
 private:
  static const RederivedServiceAsyncProcessor::ProcessMap kOwnProcessMap_;
 private:
  //
  // Service Methods
  //

  //
  // Method 'get_seven'
  //
  template <typename ProtocolIn_, typename ProtocolOut_>
  void setUpAndProcess_get_seven(
      apache::thrift::ResponseChannelRequest::UniquePtr req,
      apache::thrift::SerializedCompressedRequest&& serializedRequest,
      apache::thrift::Cpp2RequestContext* ctx,
      folly::EventBase* eb,
      apache::thrift::concurrency::ThreadManager* tm);

  template <typename ProtocolIn_, typename ProtocolOut_>
  void executeRequest_get_seven(apache::thrift::ServerRequest&& serverRequest);

  template <class ProtocolIn_, class ProtocolOut_>
  static apache::thrift::SerializedResponse return_get_seven(
      apache::thrift::ContextStack* ctx,
      ::std::int32_t const& _return);

  template <class ProtocolIn_, class ProtocolOut_>
  static void throw_wrapped_get_seven(
      apache::thrift::ResponseChannelRequest::UniquePtr req,
      int32_t protoSeqId,
      apache::thrift::ContextStack* ctx,
      folly::exception_wrapper ew,
      apache::thrift::Cpp2RequestContext* reqCtx);
  //
  // End of Method 'get_seven'
  //

  //
  // End of Service Methods
  //
 public:
  RederivedServiceAsyncProcessor(::apache::thrift::ServiceHandler<::py3::simple::RederivedService>* iface) :
      ::py3::simple::DerivedServiceAsyncProcessor(iface),
      iface_(iface) {}
  ~RederivedServiceAsyncProcessor() override {}
};

} // namespace py3::simple
