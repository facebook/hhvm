File "native_bad1.php", line 3, characters 28-28:
Non-native functions must have a body (Parsing[1002])
File "native_bad1.php", line 5, characters 34-34:
Non-native functions must have a body (Parsing[1002])
File "native_bad1.php", line 8, characters 7-12:
Class `Foobar` contains an abstract method and must therefore be declared `abstract` (Parsing[1002])
File "native_bad1.php", line 10, characters 34-34:
A method must have a body or be marked `abstract`. (Parsing[1002])
File "native_bad1.php", line 19, characters 34-34:
A method must have a body or be marked `abstract`. (Parsing[1002])
File "native_bad1.php", line 3, characters 10-18:
Invalid return type (Typing[4336])
  File "native_bad1.php", line 3, characters 23-27:
  Expected `float`
  File "native_bad1.php", line 3, characters 10-18:
  But got `void` because this function does not always return a value
File "native_bad1.php", line 10, characters 19-25:
Invalid return type (Typing[4336])
  File "native_bad1.php", line 10, characters 30-33:
  Expected `null`
  File "native_bad1.php", line 10, characters 19-25:
  But got `void` because this function does not always return a value
File "native_bad1.php", line 19, characters 19-25:
Invalid return type (Typing[4336])
  File "native_bad1.php", line 19, characters 30-33:
  Expected `null`
  File "native_bad1.php", line 19, characters 19-25:
  But got `void` because this function does not always return a value
File "native_bad1.php", line 12, characters 28-37:
Method `getNothing` is abstract but the class is concrete. Either provide an implementation here. (Typing[4465])
  File "native_bad1.php", line 8, characters 7-12:
  Or make the class abstract.
