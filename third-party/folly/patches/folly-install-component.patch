Index: folly/CMakeLists.txt
===================================================================
--- folly.orig/CMakeLists.txt
+++ folly/CMakeLists.txt
@@ -385,8 +385,6 @@ target_compile_definitions(folly_base
     $<TARGET_PROPERTY:folly_deps,INTERFACE_COMPILE_DEFINITIONS>
 )
 
-set(FOLLY_INSTALL_TARGETS folly folly_deps)
-
 option(PYTHON_EXTENSIONS
   "Build Python Bindings for Folly, requires Cython and (BUILD_SHARED_LIBS=ON)"
   OFF
@@ -414,21 +412,31 @@ target_link_libraries(folly_test_util
     ${LIBGMOCK_LIBRARIES}
 )
 apply_folly_compile_options_to_target(folly_test_util)
-list(APPEND FOLLY_INSTALL_TARGETS folly_test_util)
 
-install(TARGETS ${FOLLY_INSTALL_TARGETS}
+install(TARGETS folly folly_deps
   EXPORT folly
+  COMPONENT lib
+  RUNTIME DESTINATION bin
+  LIBRARY DESTINATION ${LIB_INSTALL_DIR}
+  ARCHIVE DESTINATION ${LIB_INSTALL_DIR})
+install(TARGETS folly_test_util
+  EXPORT folly_test_util
+  COMPONENT test_util
   RUNTIME DESTINATION bin
   LIBRARY DESTINATION ${LIB_INSTALL_DIR}
   ARCHIVE DESTINATION ${LIB_INSTALL_DIR})
-auto_install_files(folly ${FOLLY_DIR}
-  ${hfiles}
-)
 install(
   FILES ${CMAKE_CURRENT_BINARY_DIR}/folly/folly-config.h
   DESTINATION ${INCLUDE_INSTALL_DIR}/folly
-  COMPONENT dev
-)
+  COMPONENT dev)
+foreach(HEADER ${hfiles})
+  string(REPLACE "${FOLLY_DIR}" "${INCLUDE_INSTALL_DIR}/folly" DEST "${HEADER}")
+  get_filename_component(DEST "${DEST}" DIRECTORY)
+  install(
+    FILES "${HEADER}"
+    DESTINATION "${DEST}"
+    COMPONENT dev)
+endforeach()
 
 # Generate the folly-config.cmake file for installation so that
 # downstream projects that use on folly can easily depend on it in their CMake
