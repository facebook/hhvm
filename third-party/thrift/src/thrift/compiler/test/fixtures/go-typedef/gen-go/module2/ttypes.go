// Autogenerated by Thrift Compiler (facebook)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
// @generated

package module2

import (
	"bytes"
	"context"
	"sync"
	"fmt"
	thrift "github.com/facebook/fbthrift/thrift/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = sync.Mutex{}
var _ = bytes.Equal
var _ = context.Background

var GoUnusedProtection__ int;

type Enum int64
const (
  Enum_A Enum = 0
  Enum_B Enum = 1
  Enum_C Enum = 2
)

var EnumToName = map[Enum]string {
  Enum_A: "A",
  Enum_B: "B",
  Enum_C: "C",
}

var EnumToValue = map[string]Enum {
  "A": Enum_A,
  "B": Enum_B,
  "C": Enum_C,
}

var EnumNames = []string {
  "A",
  "B",
  "C",
}

var EnumValues = []Enum {
  Enum_A,
  Enum_B,
  Enum_C,
}

func (p Enum) String() string {
  if v, ok := EnumToName[p]; ok {
    return v
  }
  return "<UNSET>"
}

func EnumFromString(s string) (Enum, error) {
  if v, ok := EnumToValue[s]; ok {
    return v, nil
  }
  return Enum(0), fmt.Errorf("not a valid Enum string")
}

func EnumPtr(v Enum) *Enum { return &v }

