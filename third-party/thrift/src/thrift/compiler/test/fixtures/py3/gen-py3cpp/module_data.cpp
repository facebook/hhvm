/**
 * Autogenerated by Thrift for thrift/compiler/test/fixtures/py3/src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */

#include "thrift/compiler/test/fixtures/py3/gen-py3cpp/module_data.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

#if defined(__GNUC__) && defined(__linux__) && !FOLLY_MOBILE
// This attribute is applied to the static data members to ensure that they are
// not stripped from the compiled binary, in order to keep them available for
// use by debuggers at runtime.
//
// The attribute works by forcing all of the data members (both used and unused
// ones) into the same section. This stops the linker from stripping the unused
// data, as it works on a per-section basis and only removes sections if they
// are entirely unused.
#define THRIFT_DATA_SECTION [[gnu::section(".rodata.thrift.data")]]
#else
#define THRIFT_DATA_SECTION
#endif

namespace apache {
namespace thrift {

THRIFT_DATA_SECTION const std::array<::py3::simple::AnEnum, 5> TEnumDataStorage<::py3::simple::AnEnum>::values = {{
  type::None,
  type::ONE,
  type::TWO,
  type::THREE,
  type::FOUR,
}};
THRIFT_DATA_SECTION const std::array<folly::StringPiece, 5> TEnumDataStorage<::py3::simple::AnEnum>::names = {{
  "None",
  "ONE",
  "TWO",
  "THREE",
  "FOUR",
}};

THRIFT_DATA_SECTION const std::array<::py3::simple::AnEnumRenamed, 3> TEnumDataStorage<::py3::simple::AnEnumRenamed>::values = {{
  type::name,
  type::value,
  type::normal,
}};
THRIFT_DATA_SECTION const std::array<folly::StringPiece, 3> TEnumDataStorage<::py3::simple::AnEnumRenamed>::names = {{
  "name",
  "value",
  "normal",
}};

THRIFT_DATA_SECTION const std::array<::py3::simple::Flags, 4> TEnumDataStorage<::py3::simple::Flags>::values = {{
  type::flag_A,
  type::flag_B,
  type::flag_C,
  type::flag_D,
}};
THRIFT_DATA_SECTION const std::array<folly::StringPiece, 4> TEnumDataStorage<::py3::simple::Flags>::names = {{
  "flag_A",
  "flag_B",
  "flag_C",
  "flag_D",
}};

THRIFT_DATA_SECTION const std::array<::py3::simple::BinaryUnion::Type, 1> TEnumDataStorage<::py3::simple::BinaryUnion::Type>::values = {{
  type::iobuf_val,
}};
THRIFT_DATA_SECTION const std::array<folly::StringPiece, 1> TEnumDataStorage<::py3::simple::BinaryUnion::Type>::names = {{
  "iobuf_val",
}};

THRIFT_DATA_SECTION const std::array<folly::StringPiece, 1> TStructDataStorage<::py3::simple::SimpleException>::fields_names = {{
  "err_code",
}};
THRIFT_DATA_SECTION const std::array<int16_t, 1> TStructDataStorage<::py3::simple::SimpleException>::fields_ids = {{
  1,
}};
THRIFT_DATA_SECTION const std::array<protocol::TType, 1> TStructDataStorage<::py3::simple::SimpleException>::fields_types = {{
  TType::T_I16,
}};
THRIFT_DATA_SECTION const std::array<folly::StringPiece, 1> TStructDataStorage<::py3::simple::SimpleException>::storage_names = {{
  "__fbthrift_field_err_code",
}};
THRIFT_DATA_SECTION const std::array<int, 1> TStructDataStorage<::py3::simple::SimpleException>::isset_indexes = {{
  0,
}};

THRIFT_DATA_SECTION const std::array<folly::StringPiece, 1> TStructDataStorage<::py3::simple::OptionalRefStruct>::fields_names = {{
  "optional_blob",
}};
THRIFT_DATA_SECTION const std::array<int16_t, 1> TStructDataStorage<::py3::simple::OptionalRefStruct>::fields_ids = {{
  1,
}};
THRIFT_DATA_SECTION const std::array<protocol::TType, 1> TStructDataStorage<::py3::simple::OptionalRefStruct>::fields_types = {{
  TType::T_STRING,
}};
THRIFT_DATA_SECTION const std::array<folly::StringPiece, 1> TStructDataStorage<::py3::simple::OptionalRefStruct>::storage_names = {{
  "__fbthrift_field_optional_blob",
}};
THRIFT_DATA_SECTION const std::array<int, 1> TStructDataStorage<::py3::simple::OptionalRefStruct>::isset_indexes = {{
  0,
}};

THRIFT_DATA_SECTION const std::array<folly::StringPiece, 8> TStructDataStorage<::py3::simple::SimpleStruct>::fields_names = {{
  "is_on",
  "tiny_int",
  "small_int",
  "nice_sized_int",
  "big_int",
  "real",
  "smaller_real",
  "hidden_field",
}};
THRIFT_DATA_SECTION const std::array<int16_t, 8> TStructDataStorage<::py3::simple::SimpleStruct>::fields_ids = {{
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
}};
THRIFT_DATA_SECTION const std::array<protocol::TType, 8> TStructDataStorage<::py3::simple::SimpleStruct>::fields_types = {{
  TType::T_BOOL,
  TType::T_BYTE,
  TType::T_I16,
  TType::T_I32,
  TType::T_I64,
  TType::T_DOUBLE,
  TType::T_FLOAT,
  TType::T_I16,
}};
THRIFT_DATA_SECTION const std::array<folly::StringPiece, 8> TStructDataStorage<::py3::simple::SimpleStruct>::storage_names = {{
  "__fbthrift_field_is_on",
  "__fbthrift_field_tiny_int",
  "__fbthrift_field_small_int",
  "__fbthrift_field_nice_sized_int",
  "__fbthrift_field_big_int",
  "__fbthrift_field_real",
  "__fbthrift_field_smaller_real",
  "__fbthrift_field_hidden_field",
}};
THRIFT_DATA_SECTION const std::array<int, 8> TStructDataStorage<::py3::simple::SimpleStruct>::isset_indexes = {{
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
}};

THRIFT_DATA_SECTION const std::array<folly::StringPiece, 9> TStructDataStorage<::py3::simple::ComplexStruct>::fields_names = {{
  "structOne",
  "structTwo",
  "an_integer",
  "name",
  "an_enum",
  "some_bytes",
  "from",
  "cdef",
  "bytes_with_cpp_type",
}};
THRIFT_DATA_SECTION const std::array<int16_t, 9> TStructDataStorage<::py3::simple::ComplexStruct>::fields_ids = {{
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
}};
THRIFT_DATA_SECTION const std::array<protocol::TType, 9> TStructDataStorage<::py3::simple::ComplexStruct>::fields_types = {{
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_I32,
  TType::T_STRING,
  TType::T_I32,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_STRING,
}};
THRIFT_DATA_SECTION const std::array<folly::StringPiece, 9> TStructDataStorage<::py3::simple::ComplexStruct>::storage_names = {{
  "__fbthrift_field_structOne",
  "__fbthrift_field_structTwo",
  "__fbthrift_field_an_integer",
  "__fbthrift_field_name",
  "__fbthrift_field_an_enum",
  "__fbthrift_field_some_bytes",
  "__fbthrift_field_from",
  "__fbthrift_field_cdef",
  "__fbthrift_field_bytes_with_cpp_type",
}};
THRIFT_DATA_SECTION const std::array<int, 9> TStructDataStorage<::py3::simple::ComplexStruct>::isset_indexes = {{
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
}};

THRIFT_DATA_SECTION const std::array<folly::StringPiece, 1> TStructDataStorage<::py3::simple::BinaryUnion>::fields_names = {{
  "iobuf_val",
}};
THRIFT_DATA_SECTION const std::array<int16_t, 1> TStructDataStorage<::py3::simple::BinaryUnion>::fields_ids = {{
  1,
}};
THRIFT_DATA_SECTION const std::array<protocol::TType, 1> TStructDataStorage<::py3::simple::BinaryUnion>::fields_types = {{
  TType::T_STRING,
}};
THRIFT_DATA_SECTION const std::array<folly::StringPiece, 1> TStructDataStorage<::py3::simple::BinaryUnion>::storage_names = {{
  "iobuf_val",
}};
THRIFT_DATA_SECTION const std::array<int, 1> TStructDataStorage<::py3::simple::BinaryUnion>::isset_indexes = {{
  0,
}};

THRIFT_DATA_SECTION const std::array<folly::StringPiece, 1> TStructDataStorage<::py3::simple::BinaryUnionStruct>::fields_names = {{
  "u",
}};
THRIFT_DATA_SECTION const std::array<int16_t, 1> TStructDataStorage<::py3::simple::BinaryUnionStruct>::fields_ids = {{
  1,
}};
THRIFT_DATA_SECTION const std::array<protocol::TType, 1> TStructDataStorage<::py3::simple::BinaryUnionStruct>::fields_types = {{
  TType::T_STRUCT,
}};
THRIFT_DATA_SECTION const std::array<folly::StringPiece, 1> TStructDataStorage<::py3::simple::BinaryUnionStruct>::storage_names = {{
  "__fbthrift_field_u",
}};
THRIFT_DATA_SECTION const std::array<int, 1> TStructDataStorage<::py3::simple::BinaryUnionStruct>::isset_indexes = {{
  0,
}};

} // namespace thrift
} // namespace apache
