[(Class
    { c_span = [3:1-6:2]; c_annotation = (); c_mode = Mpartial; c_final = false; 
      c_is_xhp = false; c_has_xhp_keyword = false; c_kind = (Cclass Concrete); 
      c_name = ([3:7-8], "\\C"); c_tparams = []; c_extends = []; c_uses = []; 
      c_use_as_alias = []; c_insteadof_alias = []; c_xhp_attr_uses = []; 
      c_xhp_category = None; c_reqs = []; c_implements = []; c_where_constraints = []; 
      c_consts = []; c_typeconsts = []; c_vars = [];
      c_methods =
      [{ m_span = [4:3-46]; m_annotation = (); m_final = false; m_abstract = false; 
         m_static = true; m_readonly_this = false; m_visibility = Public; 
         m_name = ([4:26-35], "staticFoo"); m_tparams = []; m_where_constraints = []; 
         m_variadic = FVnonVariadic; m_params = []; m_ctxs = None; m_unsafe_ctxs = None; 
         m_body = { fb_ast = [([Pos.none], Noop)] }; m_fun_kind = FSync; 
         m_user_attributes = []; m_readonly_ret = None; m_ret = ((void), (Some ([4:39-43], (Hprim Tvoid)))); 
         m_external = false; m_doc_comment = None };
        { m_span = [5:3-41]; m_annotation = (); m_final = false; m_abstract = false; 
          m_static = false; m_readonly_this = false; m_visibility = Public; 
          m_name = ([5:19-30], "instanceFoo"); m_tparams = []; m_where_constraints = []; 
          m_variadic = FVnonVariadic; m_params = []; m_ctxs = None; m_unsafe_ctxs = None; 
          m_body = { fb_ast = [([Pos.none], Noop)] }; m_fun_kind = FSync; 
          m_user_attributes = []; m_readonly_ret = None; m_ret = ((void), (Some ([5:34-38], (Hprim Tvoid)))); 
          m_external = false; m_doc_comment = None }
        ];
      c_attributes = []; c_xhp_children = []; c_xhp_attrs = [];
      c_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>; ns_const_uses = <opaque>; 
        ns_name = None; ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      c_user_attributes = []; c_file_attributes = []; c_enum = None; 
      c_doc_comment = None; c_emit_id = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>; ns_const_uses = <opaque>; 
         ns_name = None; ns_auto_ns_map = []; ns_is_codegen = false; 
         ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mpartial;
       fd_fun =
       { f_span = [8:1-22:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([8:22-26], (Hprim Tvoid)))); 
         f_name = ([8:10-14], "\\test"); f_tparams = []; f_where_constraints = []; 
         f_variadic = FVnonVariadic;
         f_params =
         [{ param_annotation = (C); param_type_hint = ((C), (Some ([8:15-16], (Happly (([8:15-16], "\\C"), []))))); 
            param_is_variadic = false; param_pos = [8:17-19]; param_name = "$c"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([9:3-15], (Expr ((void), [9:3-15], (Call (((_), [9:3-7], (Id ([9:3-7], "echo"))), [], [(Pnormal, ((string), [9:8-13], (String "foo")))], None)))));
             ([10:3-16], (Expr ((void), [10:3-15], (Call (((_), [10:3-15], (Id ([10:3-15], "echo"))), [], [(Pnormal, ((string), [10:9-14], (String "foo")))], None)))));
             ([12:3-15], (Expr (((function(C $c): void)), [12:3-14], (Fun_id ([12:7-13], "\\test")))));
             ([13:3-37], (Expr (((function(): void)), [13:3-36], (Smethod_id (((C), [13:14-15], (CI ([13:14-15], "\\C"))), ([13:24-35], "staticFoo"))))));
             ([14:3-32], (Expr (((function(): void)), [14:3-31], (Method_id (((C), [14:13-15], (Lvar ([14:13-15], $c))), ([14:17-30], "instanceFoo"))))));
             ([15:3-40], (Expr (((function(C): void)), [15:3-39], (Method_caller (([15:15-16], "\\C"), ([15:25-38], "instanceFoo"))))));
             ([17:3-13], (Expr ((bool), [17:3-12], (Call ((((function($x): bool)), [17:3-8], (Id ([17:3-8], "\\isset"))), [], [(Pnormal, ((C), [17:9-11], (Lvar ([17:9-11], $c))))], None)))));
             ([18:3-13], (Expr ((void), [18:3-13], (Call ((((function($x): void)), [18:3-8], (Id ([18:3-8], "\\unset"))), [], [(Pnormal, ((C), [18:9-11], (Lvar ([18:9-11], $c))))], None)))));
             ([20:3-26],
              (If (((bool), [20:13-17], (Unop (Unot, ((bool), [20:13-17], True)))),
                 [([20:3-25],
                   (Expr
                      ((noreturn), [20:3-25],
                       (Call ((((function(HH\FormatString<PlainSprintf> $fmt, ...): noreturn)), [20:3-12], (Id ([20:3-12], "\\HH\\invariant_violation"))), 
                          [], [(Pnormal, ((string), [20:19-24], (String "foo")))], None)))))
                   ],
                 [([Pos.none], Noop)])));
             ([21:3-30],
              (Expr
                 ((noreturn), [21:3-29],
                  (Call ((((function(HH\FormatString<PlainSprintf> $fmt, ...): noreturn)), [21:3-22], (Id ([21:3-22], "\\HH\\invariant_violation"))), 
                     [], [(Pnormal, ((string), [21:23-28], (String "foo")))], None)))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None }
       })