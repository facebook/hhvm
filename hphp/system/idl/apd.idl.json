{
    "preamble": "",
    "consts": [
    ],
    "funcs": [
        {
            "name": "override_function",
            "desc": "Overrides built-in functions by replacing them in the symbol table.",
            "flags": [
            ],
            "return": {
                "type": "Boolean",
                "desc": "Returns TRUE on success or FALSE on failure."
            },
            "args": [
                {
                    "name": "name",
                    "type": "String",
                    "desc": "The function to override."
                },
                {
                    "name": "args",
                    "type": "String",
                    "desc": "The function arguments, as a comma separated string.\n\nUsually you will want to pass this parameter, as well as the function_code parameter, as a single quote delimited string. The reason for using single quoted strings, is to protect the variable names from parsing, otherwise, if you use double quotes there will be a need to escape the variable names, e.g. \\$your_var."
                },
                {
                    "name": "code",
                    "type": "String",
                    "desc": "The new code for the function."
                }
            ]
        },
        {
            "name": "rename_function",
            "desc": "Renames a orig_name to new_name in the global function table. Useful for temporarily overriding built-in functions.",
            "flags": [
            ],
            "return": {
                "type": "Boolean",
                "desc": "Returns TRUE on success or FALSE on failure."
            },
            "args": [
                {
                    "name": "orig_name",
                    "type": "String",
                    "desc": "The original function name."
                },
                {
                    "name": "new_name",
                    "type": "String",
                    "desc": "The new name for the original_name function."
                }
            ]
        },
        {
            "name": "apd_set_browser_trace",
            "flags": [
            ],
            "return": {
                "type": null
            },
            "args": [
            ]
        },
        {
            "name": "apd_set_pprof_trace",
            "desc": "Starts debugging to pprof_{process_id} in the dump directory.",
            "flags": [
            ],
            "return": {
                "type": "String",
                "desc": "Returns path of the destination file."
            },
            "args": [
                {
                    "name": "dumpdir",
                    "type": "String",
                    "value": "null_string",
                    "desc": "The directory in which the profile dump file is written. If not set, the apd.dumpdir setting from the php.ini file is used."
                },
                {
                    "name": "frament",
                    "type": "String",
                    "value": "null_string"
                }
            ]
        },
        {
            "name": "apd_set_session_trace_socket",
            "desc": "Connects to the specified tcp_server (eg. tcplisten) and sends debugging data to the socket.",
            "flags": [
            ],
            "return": {
                "type": "Boolean",
                "desc": "Returns TRUE on success or FALSE on failure."
            },
            "args": [
                {
                    "name": "ip_or_filename",
                    "type": "String",
                    "desc": "IP or Unix Domain socket (like a file) of the TCP server."
                },
                {
                    "name": "domain",
                    "type": "Int32",
                    "desc": "Can be AF_UNIX for file based sockets or APD_AF_INET for standard tcp\/ip."
                },
                {
                    "name": "port",
                    "type": "Int32",
                    "desc": "You can use any port, but higher numbers are better as most of the lower numbers may be used by other system services."
                },
                {
                    "name": "mask",
                    "type": "Int32",
                    "desc": "An integer which is formed by adding together the XXX_TRACE constants.\n\nIt is not recommended to use MEMORY_TRACE. It is very slow and does not appear to be accurate. ASSIGNMENT_TRACE is not implemented yet.\n\nTo turn on all functional traces (TIMING, FUNCTIONS, ARGS SUMMARY (like strace -c)) use the value 99"
                }
            ]
        },
        {
            "name": "apd_stop_trace",
            "flags": [
            ],
            "return": {
                "type": null
            },
            "args": [
            ]
        },
        {
            "name": "apd_breakpoint",
            "desc": "This can be used to stop the running of your script, and await responses on the connected socket. To step the program, just send enter (a blank line), or enter a php command to be executed.",
            "flags": [
            ],
            "return": {
                "type": "Boolean",
                "desc": "Returns TRUE on success or FALSE on failure."
            },
            "args": [
            ]
        },
        {
            "name": "apd_continue",
            "desc": "Usually sent via the socket to restart the interpreter.",
            "flags": [
            ],
            "return": {
                "type": "Boolean",
                "desc": "Returns TRUE on success or FALSE on failure."
            },
            "args": [
            ]
        },
        {
            "name": "apd_echo",
            "desc": "Usually sent via the socket to request information about the running script.",
            "flags": [
            ],
            "return": {
                "type": "Boolean",
                "desc": "Returns TRUE on success or FALSE on failure."
            },
            "args": [
                {
                    "name": "output",
                    "type": "String",
                    "desc": "The debugged variable."
                }
            ]
        }
    ],
    "classes": [
    ]
}