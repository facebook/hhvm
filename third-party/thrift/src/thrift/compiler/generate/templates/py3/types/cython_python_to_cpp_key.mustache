{{!

  Copyright (c) Meta Platforms, Inc. and affiliates.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

}}{{!

Included in places where a Python object exists and it's underlying C++
representation is required. For most primitives, the conversion can be
done automatically, but for strings, structures, and containers, more
work is required.

This template assumes that the Python object is in a variable named key, and is
most often used with maps. Use the CythonPythonToCppItem template for general
keys (conventionally used for sets, lists, and map values).

}}{{#type:bool?}}key{{/type:bool?}}{{!
}}{{#type:byte?}}key{{/type:byte?}}{{!
}}{{#type:i16?}}key{{/type:i16?}}{{!
}}{{#type:i32?}}key{{/type:i32?}}{{!
}}{{#type:i64?}}key{{/type:i64?}}{{!
}}{{#type:double?}}key{{/type:double?}}{{!
}}{{#type:float?}}key{{/type:float?}}{{!
}}{{#type:string?}}key.encode('UTF-8'){{/type:string?}}{{!
}}{{#type:binary?}}key{{/type:binary?}}{{!
}}{{#type:struct}}{{!
  }}deref((<{{> types/cython_python_type}}>key)._cpp_obj){{!
}}{{/type:struct}}{{!
}}{{#type:container?}}{{!
  }}deref((<{{> types/cython_python_type}}>key)._cpp_obj){{!
}}{{/type:container?}}{{!
}}{{#type:enum?}}<{{> types/cython_cpp_type}}><int>key{{/type:enum?}}
