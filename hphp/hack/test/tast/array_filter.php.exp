[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>; ns_const_uses = <opaque>; 
        ns_name = None; ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mpartial;
      fd_fun =
      { f_span = [3:1-28:2]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_ret = ((void), (Some ([10:4-8], (Hprim Tvoid)))); 
        f_name = ([3:10-27], "\\test_array_filter"); f_tparams = []; 
        f_where_constraints = []; f_variadic = FVnonVariadic;
        f_params =
        [{ param_annotation = (vec_or_dict<arraykey, _>); param_type_hint = ((vec_or_dict<arraykey, _>), (Some ([4:3-19], (Hvec_or_dict (None, ([4:3-19], Hany)))))); 
           param_is_variadic = false; param_pos = [4:20-34]; param_name = "$untyped_array"; 
           param_expr = None; param_readonly = None; param_callconv = Pnormal; 
           param_user_attributes = []; param_visibility = None };
          { param_annotation = (vec<?string>); param_type_hint = ((vec<?string>), (Some ([5:3-18], (Happly (([5:3-9], "\\HH\\vec"), [([5:10-17], (Hoption ([5:11-17], (Hprim Tstring))))])))));
            param_is_variadic = false; param_pos = [5:19-32]; param_name = "$vector_array"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None };
          { param_annotation = (Container<?string>);
            param_type_hint = ((Container<?string>), (Some ([6:3-21], (Happly (([6:3-12], "\\HH\\Container"), [([6:13-20], (Hoption ([6:14-20], (Hprim Tstring))))]))))); 
            param_is_variadic = false; param_pos = [6:22-32]; param_name = "$container"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None };
          { param_annotation = (KeyedContainer<int, ?string>);
            param_type_hint =
            ((KeyedContainer<int, ?string>), (Some ([7:3-31], (Happly (([7:3-17], "\\HH\\KeyedContainer"), [([7:18-21], (Hprim Tint)); ([7:23-30], (Hoption ([7:24-30], (Hprim Tstring))))])))));
            param_is_variadic = false; param_pos = [7:32-48]; param_name = "$keyed_container"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None };
          { param_annotation = (_); param_type_hint = ((_), None); param_is_variadic = false; 
            param_pos = [8:3-11]; param_name = "$untyped"; param_expr = None; 
            param_readonly = None; param_callconv = Pnormal; param_user_attributes = []; 
            param_visibility = None };
          { param_annotation = (bool); param_type_hint = ((bool), (Some ([9:3-7], (Hprim Tbool)))); 
            param_is_variadic = false; param_pos = [9:8-10]; param_name = "$b"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None;
        f_body =
        { fb_ast =
          [([11:3-52],
            (Expr
               ((Container<?string>), [11:3-51],
                (Binop ((Eq None), ((Container<?string>), [11:3-14], (Lvar ([11:3-14], $unresolved))),
                   ((Container<?string>), [11:17-51],
                    (Eif (((bool), [11:17-19], (Lvar ([11:17-19], $b))), (Some (
                       (Container<?string>), [11:22-32], (Lvar ([11:22-32], $container)))), (
                       (KeyedContainer<int, ?string>), [11:35-51], (Lvar ([11:35-51], $keyed_container))))))
                   )))));
            ([13:3-32],
             (Expr
                ((dict<arraykey, (_ & nonnull)>), [13:3-31],
                 (Call ((((function<Tv>(Container<_> $input, ?(function(_): bool) $callback=_): dict<arraykey, (_ & nonnull)>)), [13:3-15], (Id ([13:3-15], "\\array_filter"))),
                    [((_), ([13:3-15], (Happly (([Pos.none], "_"), []))))], 
                    [((vec_or_dict<arraykey, _>), [13:16-30], (Lvar ([13:16-30], $untyped_array)))], None)))));
            ([14:3-31],
             (Expr
                ((dict<int, string>), [14:3-30],
                 (Call ((((function<Tv>(Container<?string> $input, ?(function(?string): bool) $callback=_): dict<int, string>)), [14:3-15], (Id ([14:3-15], "\\array_filter"))),
                    [((?string), ([14:3-15], (Happly (([Pos.none], "_"), []))))], 
                    [((vec<?string>), [14:16-29], (Lvar ([14:16-29], $vector_array)))], None)))));
            ([15:3-28],
             (Expr
                ((dict<arraykey, string>), [15:3-27],
                 (Call ((((function<Tv>(Container<?string> $input, ?(function(?string): bool) $callback=_): dict<arraykey, string>)), [15:3-15], (Id ([15:3-15], "\\array_filter"))),
                    [((?string), ([15:3-15], (Happly (([Pos.none], "_"), []))))], 
                    [((Container<?string>), [15:16-26], (Lvar ([15:16-26], $container)))], None)))));
            ([16:3-34],
             (Expr
                ((dict<int, string>), [16:3-33],
                 (Call ((((function<Tv>(Container<?string> $input, ?(function(?string): bool) $callback=_): dict<int, string>)), [16:3-15], (Id ([16:3-15], "\\array_filter"))),
                    [((?string), ([16:3-15], (Happly (([Pos.none], "_"), []))))], 
                    [((KeyedContainer<int, ?string>), [16:16-32], (Lvar ([16:16-32], $keyed_container)))], None)))));
            ([17:3-26],
             (Expr
                ((_), [17:3-25],
                 (Call ((((function<Tv>(Container<_> $input, ?(function(_): bool) $callback=_): _)), [17:3-15], (Id ([17:3-15], "\\array_filter"))),
                    [((_), ([17:3-15], (Happly (([Pos.none], "_"), []))))], 
                    [((_), [17:16-24], (Lvar ([17:16-24], $untyped)))], None)))));
            ([18:3-29],
             (Expr
                ((dict<arraykey, string>), [18:3-28],
                 (Call ((((function<Tv>(Container<?string> $input, ?(function(?string): bool) $callback=_): dict<arraykey, string>)), [18:3-15], (Id ([18:3-15], "\\array_filter"))),
                    [((?string), ([18:3-15], (Happly (([Pos.none], "_"), []))))], 
                    [((Container<?string>), [18:16-27], (Lvar ([18:16-27], $unresolved)))], None)))));
            ([20:3-36],
             (Expr
                (((function(?string $x): bool)), [20:3-35],
                 (Binop ((Eq None), (((function(?string $x): bool)), [20:3-5], (Lvar ([20:3-5], $f))),
                    (((function(?string $x): bool)), [20:8-35],
                     (Lfun (
                        { f_span = [20:8-35]; f_readonly_this = None; 
                          f_annotation = (); f_readonly_ret = None; f_ret = ((bool), (Some ([20:22-26], (Hprim Tbool)))); 
                          f_name = ([20:8-35], ";anonymous"); f_tparams = []; 
                          f_where_constraints = []; f_variadic = FVnonVariadic;
                          f_params =
                          [{ param_annotation = (?string); param_type_hint = ((?string), (Some ([20:9-16], (Hoption ([20:10-16], (Hprim Tstring)))))); 
                             param_is_variadic = false; param_pos = [20:17-19]; 
                             param_name = "$x"; param_expr = None; param_readonly = None; 
                             param_callconv = Pnormal; param_user_attributes = []; 
                             param_visibility = None }
                            ];
                          f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([20:31-35], (Return (Some ((bool), [20:31-35], True))))] }; 
                          f_fun_kind = FSync; f_user_attributes = []; 
                          f_external = false; f_doc_comment = None },
                        [])))
                    )))));
            ([22:3-36],
             (Expr
                ((dict<arraykey, _>), [22:3-35],
                 (Call ((((function<Tv>(Container<_> $input, ?(function(_): bool) $callback=_): dict<arraykey, _>)), [22:3-15], (Id ([22:3-15], "\\array_filter"))),
                    [((_), ([22:3-15], (Happly (([Pos.none], "_"), []))))],
                    [((vec_or_dict<arraykey, _>), [22:16-30], (Lvar ([22:16-30], $untyped_array))); (((function(?string $x): bool)), [22:32-34], (Lvar ([22:32-34], $f)))], None)))));
            ([23:3-35],
             (Expr
                ((dict<int, ?string>), [23:3-34],
                 (Call ((((function<Tv>(Container<?string> $input, ?(function(?string): bool) $callback=_): dict<int, ?string>)), [23:3-15], (Id ([23:3-15], "\\array_filter"))),
                    [((?string), ([23:3-15], (Happly (([Pos.none], "_"), []))))],
                    [((vec<?string>), [23:16-29], (Lvar ([23:16-29], $vector_array))); (((function(?string $x): bool)), [23:31-33], (Lvar ([23:31-33], $f)))], None)))));
            ([24:3-32],
             (Expr
                ((dict<arraykey, ?string>), [24:3-31],
                 (Call ((((function<Tv>(Container<?string> $input, ?(function(?string): bool) $callback=_): dict<arraykey, ?string>)), [24:3-15], (Id ([24:3-15], "\\array_filter"))),
                    [((?string), ([24:3-15], (Happly (([Pos.none], "_"), []))))],
                    [((Container<?string>), [24:16-26], (Lvar ([24:16-26], $container))); (((function(?string $x): bool)), [24:28-30], (Lvar ([24:28-30], $f)))], None)))));
            ([25:3-38],
             (Expr
                ((dict<int, ?string>), [25:3-37],
                 (Call ((((function<Tv>(Container<?string> $input, ?(function(?string): bool) $callback=_): dict<int, ?string>)), [25:3-15], (Id ([25:3-15], "\\array_filter"))),
                    [((?string), ([25:3-15], (Happly (([Pos.none], "_"), []))))],
                    [((KeyedContainer<int, ?string>), [25:16-32], (Lvar ([25:16-32], $keyed_container))); (((function(?string $x): bool)), [25:34-36], (Lvar ([25:34-36], $f)))], None)))));
            ([26:3-30],
             (Expr
                ((_), [26:3-29],
                 (Call ((((function<Tv>(Container<_> $input, ?(function(_): bool) $callback=_): _)), [26:3-15], (Id ([26:3-15], "\\array_filter"))),
                    [((_), ([26:3-15], (Happly (([Pos.none], "_"), []))))], 
                    [((_), [26:16-24], (Lvar ([26:16-24], $untyped))); (((function(?string $x): bool)), [26:26-28], (Lvar ([26:26-28], $f)))], None)))));
            ([27:3-33],
             (Expr
                ((dict<arraykey, ?string>), [27:3-32],
                 (Call ((((function<Tv>(Container<?string> $input, ?(function(?string): bool) $callback=_): dict<arraykey, ?string>)), [27:3-15], (Id ([27:3-15], "\\array_filter"))),
                    [((?string), ([27:3-15], (Happly (([Pos.none], "_"), []))))],
                    [((Container<?string>), [27:16-27], (Lvar ([27:16-27], $unresolved))); (((function(?string $x): bool)), [27:29-31], (Lvar ([27:29-31], $f)))], None)))))
            ]
          };
        f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
        f_doc_comment = None }
      })