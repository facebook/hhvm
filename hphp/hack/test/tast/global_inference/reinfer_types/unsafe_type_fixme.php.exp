[(Typedef
    { t_annotation = (); t_name = ([2:6-27], "\\UNSAFE_TYPE_HH_FIXME_");
      t_tparams = [{ tp_variance = Invariant; tp_name = ([2:28-29], "T"); tp_parameters = []; tp_constraints = []; tp_reified = Erased; tp_user_attributes = [] }]; 
      t_as_constraint = None; t_super_constraint = None; t_kind = ([2:33-34], (Habstr ("T", []))); 
      t_user_attributes = []; t_file_attributes = []; t_mode = Mstrict; 
      t_vis = Transparent;
      t_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      t_span = [2:1-35]; t_emit_id = None; t_is_ctx = false; t_internal = false; 
      t_module = None; t_docs_url = None })[(Typedef
    { t_annotation = (); t_name = ([4:6-26], "\\UNSAFE_TYPE_HH_FIXME"); 
      t_tparams = []; t_as_constraint = None; t_super_constraint = None; 
      t_kind = ([4:29-50], (Happly (([4:29-50], "\\UNSAFE_TYPE_HH_FIXME_"), []))); 
      t_user_attributes = []; t_file_attributes = []; t_mode = Mstrict; 
      t_vis = Transparent;
      t_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      t_span = [4:1-51]; t_emit_id = None; t_is_ctx = false; t_internal = false; 
      t_module = None; t_docs_url = None })[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([3:10-11], "\\f");
      fd_fun =
      { f_span = [3:1-5:2]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_ret = ((string), (Some ([3:15-35], (Happly (([3:15-35], "\\UNSAFE_TYPE_HH_FIXME"), []))))); 
        f_params = []; f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([4:3-16], (Return (Some ((string), [4:10-15], (String "foo")))))] }; 
        f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
        f_doc_comment = None };
      fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] })[(Class
    { c_span = [2:1-4:2]; c_annotation = (); c_mode = Mstrict; c_final = true; 
      c_is_xhp = false; c_has_xhp_keyword = false; c_kind = (Cclass Abstract); 
      c_name = ([2:22-30], "\\HH_FIXME"); c_tparams = []; c_extends = []; 
      c_uses = []; c_xhp_attr_uses = []; c_xhp_category = None; c_reqs = []; 
      c_implements = []; c_where_constraints = []; c_consts = [];
      c_typeconsts =
      [{ c_tconst_user_attributes = []; c_tconst_name = ([3:14-26], "MISSING_TYPE"); 
         c_tconst_kind = (TCConcrete { c_tc_type = ([3:29-49], (Happly (([3:29-49], "\\UNSAFE_TYPE_HH_FIXME"), []))) }); 
         c_tconst_span = [3:3-50]; c_tconst_doc_comment = None; c_tconst_is_ctx = false }
        ];
      c_vars = []; c_methods = []; c_xhp_children = []; c_xhp_attrs = [];
      c_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      c_user_attributes = []; c_file_attributes = []; c_docs_url = None; 
      c_enum = None; c_doc_comment = None; c_emit_id = None; c_internal = false; 
      c_module = None })[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([3:10-11], "\\g");
      fd_fun =
      { f_span = [3:1-5:2]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_ret = ((int), (Some ([3:15-37], (Haccess (([3:15-23], (Happly (([3:15-23], "\\HH_FIXME"), []))), [([3:25-37], "MISSING_TYPE")]))))); 
        f_params = []; f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([4:3-12], (Return (Some ((int), [4:10-11], (Int "0")))))] }; 
        f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
        f_doc_comment = None };
      fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] })