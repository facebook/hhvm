(* -*- tuareg -*- *)

(* dune doesn't support recursive global search so we implement it
   ourselves since there are way too many files in test/typecheck
*)
let rec sub_folder f acc abs_path rel_path =
  if Sys.file_exists abs_path && Sys.is_directory abs_path then
    let acc = f (abs_path, rel_path) acc in
    let sub = Sys.readdir abs_path in
    Array.fold_left (fun acc name ->
        sub_folder f acc (Filename.concat abs_path name)
          (Filename.concat rel_path name)) acc sub
  else acc

let generate_sub_folders dir rel_dir =
  sub_folder (fun x y -> x :: y) [] dir rel_dir

let generate_glob file = Printf.sprintf "(glob_files %%{project_root}/%s)" file

let generate_hh_flags dirs =
  let aux acc (abs_dir, rel_dir) =
    let absname = Filename.concat abs_dir "HH_FLAGS" in
    let name = Filename.concat rel_dir "HH_FLAGS" in
    if Sys.file_exists absname then
      (generate_glob name) :: acc
    else acc in
  List.fold_left aux [] dirs

let generate_patterns dirs pattern acc =
  let aux acc (_, dir) =
    let name = Filename.concat dir pattern in
    (generate_glob name) :: acc in
  List.fold_left aux acc dirs


let () =
  (* we are in test/typecheck *)
  let test_dir = Sys.getcwd () in
  let subdirs = generate_sub_folders test_dir "test/ffp_autocomplete" in
  let files_hh = generate_hh_flags subdirs in
  let files_php = generate_patterns subdirs "*.php" files_hh in
  let files = generate_patterns subdirs "*.exp" files_php in
  let command =
"    (action (run %{project_root}/test/verify.py %{project_root}/test/ffp_autocomplete
          --program %{exe:../../src/hh_single_type_check.exe}))" in
  let deps files =
    Printf.sprintf
"      (deps %%{exe:../../src/hh_single_type_check.exe}
          %%{project_root}/test/verify.py
          %%{project_root}/test/review.sh
          %s)" (String.concat "\n          " files) in
  let ffp_autocomplete =
    Printf.sprintf "; in %s
(alias
    (name ffp_autocomplete)
    %s
    %s)" test_dir (deps files) command in
  let dune_file = Printf.sprintf "%s

(alias
    (name runtest)
    (deps (alias ffp_autocomplete)))" ffp_autocomplete in

  Jbuild_plugin.V1.send dune_file
