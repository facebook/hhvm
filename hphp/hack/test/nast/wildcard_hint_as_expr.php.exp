[(Class
    { c_span = [3:1-15]; c_annotation = (); c_mode = Mstrict; c_final = false; 
      c_is_xhp = false; c_has_xhp_keyword = false; c_kind = (Cclass Concrete); 
      c_name = ([3:7-12], "\\AAAAA"); c_tparams = []; c_extends = []; 
      c_uses = []; c_xhp_attr_uses = []; c_xhp_category = None; c_reqs = []; 
      c_implements = []; c_consts = []; c_typeconsts = []; c_vars = []; 
      c_methods = []; c_xhp_children = []; c_xhp_attrs = [];
      c_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
      c_user_attributes = [{ ua_name = ([3:7-12], "__SupportDynamicType"); ua_params = [] }]; 
      c_file_attributes = []; c_docs_url = None; c_enum = None; c_doc_comment = None; 
      c_emit_id = None; c_internal = false; c_module = None; c_package = None });
  (Class
     { c_span = [4:1-6:2]; c_annotation = (); c_mode = Mstrict; c_final = true; 
       c_is_xhp = false; c_has_xhp_keyword = false; c_kind = (Cclass Concrete); 
       c_name = ([4:13-18], "\\BBBBB");
       c_tparams =
       [{ tp_variance = Covariant; tp_name = ([4:20-21], "T"); tp_constraints = [(Constraint_as, ([4:20-21], (Happly (([4:20-21], "\\HH\\supportdyn"), [([4:20-21], Hmixed)]))))]; 
          tp_reified = Erased; tp_user_attributes = [] }
         ];
       c_extends = [([4:31-36], (Happly (([4:31-36], "\\AAAAA"), [])))]; 
       c_uses = []; c_xhp_attr_uses = []; c_xhp_category = None; c_reqs = []; 
       c_implements = []; c_consts = []; c_typeconsts = [];
       c_vars =
       [{ cv_final = false; cv_xhp_attr = None; cv_abstract = false; 
          cv_readonly = false; cv_visibility = Private; cv_type = ((), (Some ([5:11-13], (Hoption ([5:12-13], (Habstr "T")))))); 
          cv_id = ([5:14-16], "x"); cv_expr = None; cv_user_attributes = []; 
          cv_doc_comment = None; cv_is_static = false; cv_span = [5:14-16] }
         ];
       c_methods = []; c_xhp_children = []; c_xhp_attrs = [];
       c_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
       c_user_attributes = [{ ua_name = ([4:13-18], "__SupportDynamicType"); ua_params = [] }]; 
       c_file_attributes = []; c_docs_url = None; c_enum = None; c_doc_comment = None; 
       c_emit_id = None; c_internal = false; c_module = None; c_package = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([8:10-31], "\\wildcard_hint_is_expr");
       fd_fun =
       { f_span = [8:1-10:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_tparams = []; f_ret = ((), (Some ([8:43-47], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = (); param_type_hint = ((), (Some ([8:32-37], (Happly (([8:32-37], "\\AAAAA"), []))))); 
            param_pos = [8:38-40]; param_name = "$x"; param_info = Param_required; 
            param_readonly = None; param_splat = None; param_callconv = Pnormal; 
            param_named = None; param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([9:3-23],
             (Expr
                ((), [9:3-22],
                 (Assign (((), [9:3-5], (Lplaceholder [9:3-5])), None,
                    ((), [9:8-22],
                     (As { expr = ((), [9:8-10], (Lvar ([9:8-10], $x))); hint = ([9:14-22], (Happly (([9:14-19], "\\BBBBB"), [([9:20-21], Hwildcard)]))); is_nullable = false; enforce_deep = true }))
                    )))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([8:10-31], "__SupportDynamicType"); ua_params = [] }]; 
         f_external = false; f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
       fd_package = None })
  ]
