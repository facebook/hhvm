[("\\MyClass",
  (Shallow_decl_defs.Class
     { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
       sc_abstract = false; sc_is_xhp = false; sc_internal = false;
       sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
       sc_module = None; sc_name = ([3:7-14], "\\MyClass"); sc_tparams = [];
       sc_extends = []; sc_uses = []; sc_xhp_attr_uses = [];
       sc_xhp_enum_values = {}; sc_xhp_marked_empty = false;
       sc_req_extends = []; sc_req_implements = []; sc_req_constraints = [];
       sc_implements = []; sc_support_dynamic_type = false; sc_consts = [];
       sc_typeconsts = [];
       sc_props =
       [{ Shallow_decl_defs.sp_name = ([5:17-34], "instanceProperty");
          sp_xhp_attr = None; sp_type = (Rhint ([5:10-16]), (Tprim Tstring));
          sp_visibility = Public;
          sp_flags =
          { Shallow_decl_defs.PropFlags.abstract = false; const = false;
            lateinit = false; lsb = false; needs_init = true;
            php_std_lib = false; readonly = false;
            safe_global_variable = false; no_auto_likes = false }
          };
         { Shallow_decl_defs.sp_name = ([6:17-35], "protectedProperty");
           sp_xhp_attr = None; sp_type = (Rhint ([6:13-16]), (Tprim Tint));
           sp_visibility = Protected;
           sp_flags =
           { Shallow_decl_defs.PropFlags.abstract = false; const = false;
             lateinit = false; lsb = false; needs_init = true;
             php_std_lib = false; readonly = false;
             safe_global_variable = false; no_auto_likes = false }
           };
         { Shallow_decl_defs.sp_name = ([7:34-36], "p"); sp_xhp_attr = None;
           sp_type = (Rhint ([7:25-33]), (Tprim Tarraykey));
           sp_visibility = Public;
           sp_flags =
           { Shallow_decl_defs.PropFlags.abstract = false; const = false;
             lateinit = true; lsb = false; needs_init = true;
             php_std_lib = false; readonly = false;
             safe_global_variable = false; no_auto_likes = false }
           }
         ];
       sc_sprops =
       [{ Shallow_decl_defs.sp_name = ([4:25-40], "$staticProperty");
          sp_xhp_attr = None; sp_type = (Rhint ([4:18-24]), (Tprim Tstring));
          sp_visibility = Private;
          sp_flags =
          { Shallow_decl_defs.PropFlags.abstract = false; const = false;
            lateinit = false; lsb = false; needs_init = true;
            php_std_lib = false; readonly = false;
            safe_global_variable = false; no_auto_likes = false }
          }
         ];
       sc_constructor =
       (Some { Shallow_decl_defs.sm_name = ([9:19-30], "__construct");
               sm_type =
               (Rwitness_from_decl ([9:19-30]),
                (Tfun
                   { ft_tparams = []; ft_where_constraints = [];
                     ft_params = [];
                     ft_implicit_params =
                     { capability = (CapDefaults [9:19-30]) };
                     ft_ret = (Rwitness_from_decl ([9:19-30]), (Tprim Tvoid));
                     ft_flags =
                     { Typing_defs_flags.Fun.return_disposable = false;
                       async = false; generator = false; fun_kind = FSync;
                       is_function_pointer = false; returns_readonly = false;
                       readonly_this = false; support_dynamic_type = false;
                       is_memoized = false; variadic = false };
                     ft_require_package = None; ft_instantiated = true }));
               sm_visibility = Public; sm_deprecated = None;
               sm_flags =
               { Shallow_decl_defs.MethodFlags.abstract = false;
                 final = false; override = false;
                 dynamicallycallable = false; php_std_lib = false;
                 support_dynamic_type = false; no_auto_likes = false;
                 needs_concrete = false };
               sm_attributes = []; sm_sort_text = None });
       sc_static_methods = [];
       sc_methods =
       [{ Shallow_decl_defs.sm_name = ([11:20-33], "privateMethod");
          sm_type =
          (Rwitness_from_decl ([11:20-33]),
           (Tfun
              { ft_tparams = []; ft_where_constraints = []; ft_params = [];
                ft_implicit_params =
                { capability = (CapDefaults [11:20-33]) };
                ft_ret = (Rhint ([11:37-41]), (Tprim Tvoid));
                ft_flags =
                { Typing_defs_flags.Fun.return_disposable = false;
                  async = false; generator = false; fun_kind = FSync;
                  is_function_pointer = false; returns_readonly = false;
                  readonly_this = false; support_dynamic_type = false;
                  is_memoized = false; variadic = false };
                ft_require_package = None; ft_instantiated = true }));
          sm_visibility = Private; sm_deprecated = None;
          sm_flags =
          { Shallow_decl_defs.MethodFlags.abstract = false; final = false;
            override = false; dynamicallycallable = false;
            php_std_lib = false; support_dynamic_type = false;
            no_auto_likes = false; needs_concrete = false };
          sm_attributes = []; sm_sort_text = None };
         { Shallow_decl_defs.sm_name = ([12:19-31], "publicMethod");
           sm_type =
           (Rwitness_from_decl ([12:19-31]),
            (Tfun
               { ft_tparams = []; ft_where_constraints = []; ft_params = [];
                 ft_implicit_params =
                 { capability = (CapDefaults [12:19-31]) };
                 ft_ret = (Rhint ([12:35-39]), (Tprim Tvoid));
                 ft_flags =
                 { Typing_defs_flags.Fun.return_disposable = false;
                   async = false; generator = false; fun_kind = FSync;
                   is_function_pointer = false; returns_readonly = false;
                   readonly_this = false; support_dynamic_type = false;
                   is_memoized = false; variadic = false };
                 ft_require_package = None; ft_instantiated = true }));
           sm_visibility = Public; sm_deprecated = None;
           sm_flags =
           { Shallow_decl_defs.MethodFlags.abstract = false; final = false;
             override = false; dynamicallycallable = false;
             php_std_lib = false; support_dynamic_type = false;
             no_auto_likes = false; needs_concrete = false };
           sm_attributes = []; sm_sort_text = None };
         { Shallow_decl_defs.sm_name = ([13:22-37], "protectedMethod");
           sm_type =
           (Rwitness_from_decl ([13:22-37]),
            (Tfun
               { ft_tparams = []; ft_where_constraints = []; ft_params = [];
                 ft_implicit_params =
                 { capability = (CapDefaults [13:22-37]) };
                 ft_ret = (Rhint ([13:41-45]), (Tprim Tvoid));
                 ft_flags =
                 { Typing_defs_flags.Fun.return_disposable = false;
                   async = false; generator = false; fun_kind = FSync;
                   is_function_pointer = false; returns_readonly = false;
                   readonly_this = false; support_dynamic_type = false;
                   is_memoized = false; variadic = false };
                 ft_require_package = None; ft_instantiated = true }));
           sm_visibility = Protected; sm_deprecated = None;
           sm_flags =
           { Shallow_decl_defs.MethodFlags.abstract = false; final = false;
             override = false; dynamicallycallable = false;
             php_std_lib = false; support_dynamic_type = false;
             no_auto_likes = false; needs_concrete = false };
           sm_attributes = []; sm_sort_text = None };
         { Shallow_decl_defs.sm_name = ([14:25-40], "async_generator");
           sm_type =
           (Rwitness_from_decl ([14:25-40]),
            (Tfun
               { ft_tparams = []; ft_where_constraints = [];
                 ft_params =
                 [{ fp_pos = [15:12-17]; fp_name = (Some "$arg1");
                    fp_type = (Rhint ([15:5-11]), (Tprim Tstring));
                    fp_flags =
                    { Typing_defs_flags.FunParam.accept_disposable = false;
                      inout = false; is_optional = false; readonly = false;
                      ignore_readonly_error = false; splat = false;
                      named = false };
                    fp_def_value = None };
                   { fp_pos = [16:9-14]; fp_name = (Some "$arg2");
                     fp_type = (Rhint ([16:5-8]), (Tprim Tint));
                     fp_flags =
                     { Typing_defs_flags.FunParam.accept_disposable = false;
                       inout = false; is_optional = false; readonly = false;
                       ignore_readonly_error = false; splat = false;
                       named = false };
                     fp_def_value = None }
                   ];
                 ft_implicit_params =
                 { capability = (CapDefaults [14:25-40]) };
                 ft_ret =
                 (Rhint ([17:6-42]),
                  (Tapply (([17:6-23], "\\HH\\AsyncGenerator"),
                     [(Rhint ([17:24-27]), (Tprim Tint));
                       (Rhint ([17:29-35]), (Tprim Tstring));
                       (Rhint ([17:37-41]), (Tprim Tvoid))]
                     )));
                 ft_flags =
                 { Typing_defs_flags.Fun.return_disposable = false;
                   async = true; generator = true;
                   fun_kind = FAsyncGenerator; is_function_pointer = false;
                   returns_readonly = false; readonly_this = false;
                   support_dynamic_type = false; is_memoized = false;
                   variadic = false };
                 ft_require_package = None; ft_instantiated = true }));
           sm_visibility = Public; sm_deprecated = None;
           sm_flags =
           { Shallow_decl_defs.MethodFlags.abstract = false; final = false;
             override = false; dynamicallycallable = false;
             php_std_lib = false; support_dynamic_type = false;
             no_auto_likes = false; needs_concrete = false };
           sm_attributes = []; sm_sort_text = None }
         ];
       sc_user_attributes = []; sc_enum_type = None; sc_docs_url = None;
       sc_package = None }));
  ("\\MyAbstractClass",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = true; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Abstract);
        sc_module = None; sc_name = ([23:16-31], "\\MyAbstractClass");
        sc_tparams = []; sc_extends = []; sc_uses = [];
        sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false; sc_req_extends = [];
        sc_req_implements = []; sc_req_constraints = []; sc_implements = [];
        sc_support_dynamic_type = false; sc_consts = []; sc_typeconsts = [];
        sc_props = []; sc_sprops = []; sc_constructor = None;
        sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
        sc_enum_type = None; sc_docs_url = None; sc_package = None }));
  ("\\MyFinalClass",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = true;
        sc_abstract = false; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
        sc_module = None; sc_name = ([24:13-25], "\\MyFinalClass");
        sc_tparams = []; sc_extends = []; sc_uses = [];
        sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false; sc_req_extends = [];
        sc_req_implements = []; sc_req_constraints = []; sc_implements = [];
        sc_support_dynamic_type = false; sc_consts = []; sc_typeconsts = [];
        sc_props = []; sc_sprops = []; sc_constructor = None;
        sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
        sc_enum_type = None; sc_docs_url = None; sc_package = None }));
  ("\\MyStaticClass",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = true;
        sc_abstract = true; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Abstract);
        sc_module = None; sc_name = ([25:22-35], "\\MyStaticClass");
        sc_tparams = []; sc_extends = []; sc_uses = [];
        sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false; sc_req_extends = [];
        sc_req_implements = []; sc_req_constraints = []; sc_implements = [];
        sc_support_dynamic_type = false; sc_consts = []; sc_typeconsts = [];
        sc_props = []; sc_sprops = []; sc_constructor = None;
        sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
        sc_enum_type = None; sc_docs_url = None; sc_package = None }));
  ("\\MyConstructorPropertiesClass",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = false; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
        sc_module = None;
        sc_name = ([27:7-35], "\\MyConstructorPropertiesClass");
        sc_tparams = []; sc_extends = []; sc_uses = [];
        sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false; sc_req_extends = [];
        sc_req_implements = []; sc_req_constraints = []; sc_implements = [];
        sc_support_dynamic_type = false; sc_consts = []; sc_typeconsts = [];
        sc_props =
        [{ Shallow_decl_defs.sp_name = ([29:20-28], "private");
           sp_xhp_attr = None;
           sp_type = (Rhint ([29:13-19]), (Tprim Tstring));
           sp_visibility = Private;
           sp_flags =
           { Shallow_decl_defs.PropFlags.abstract = false; const = false;
             lateinit = false; lsb = false; needs_init = true;
             php_std_lib = false; readonly = false;
             safe_global_variable = false; no_auto_likes = false }
           };
          { Shallow_decl_defs.sp_name = ([30:22-32], "protected");
            sp_xhp_attr = None;
            sp_type = (Rhint ([30:15-21]), (Tprim Tstring));
            sp_visibility = Protected;
            sp_flags =
            { Shallow_decl_defs.PropFlags.abstract = false; const = false;
              lateinit = false; lsb = false; needs_init = true;
              php_std_lib = false; readonly = false;
              safe_global_variable = false; no_auto_likes = false }
            };
          { Shallow_decl_defs.sp_name = ([31:19-26], "public");
            sp_xhp_attr = None;
            sp_type = (Rhint ([31:12-18]), (Tprim Tstring));
            sp_visibility = Public;
            sp_flags =
            { Shallow_decl_defs.PropFlags.abstract = false; const = false;
              lateinit = false; lsb = false; needs_init = true;
              php_std_lib = false; readonly = false;
              safe_global_variable = false; no_auto_likes = false }
            };
          { Shallow_decl_defs.sp_name = ([32:19-30], "hasDefault");
            sp_xhp_attr = None;
            sp_type = (Rhint ([32:12-18]), (Tprim Tstring));
            sp_visibility = Public;
            sp_flags =
            { Shallow_decl_defs.PropFlags.abstract = false; const = false;
              lateinit = false; lsb = false; needs_init = true;
              php_std_lib = false; readonly = false;
              safe_global_variable = false; no_auto_likes = false }
            }
          ];
        sc_sprops = [];
        sc_constructor =
        (Some { Shallow_decl_defs.sm_name = ([28:19-30], "__construct");
                sm_type =
                (Rwitness_from_decl ([28:19-30]),
                 (Tfun
                    { ft_tparams = []; ft_where_constraints = [];
                      ft_params =
                      [{ fp_pos = [29:20-28]; fp_name = (Some "$private");
                         fp_type = (Rhint ([29:13-19]), (Tprim Tstring));
                         fp_flags =
                         { Typing_defs_flags.FunParam.accept_disposable =
                           false; inout = false; is_optional = false;
                           readonly = false; ignore_readonly_error = false;
                           splat = false; named = false };
                         fp_def_value = None };
                        { fp_pos = [30:22-32]; fp_name = (Some "$protected");
                          fp_type = (Rhint ([30:15-21]), (Tprim Tstring));
                          fp_flags =
                          { Typing_defs_flags.FunParam.accept_disposable =
                            false; inout = false; is_optional = false;
                            readonly = false; ignore_readonly_error = false;
                            splat = false; named = false };
                          fp_def_value = None };
                        { fp_pos = [31:19-26]; fp_name = (Some "$public");
                          fp_type = (Rhint ([31:12-18]), (Tprim Tstring));
                          fp_flags =
                          { Typing_defs_flags.FunParam.accept_disposable =
                            false; inout = false; is_optional = false;
                            readonly = false; ignore_readonly_error = false;
                            splat = false; named = false };
                          fp_def_value = None };
                        { fp_pos = [32:19-30];
                          fp_name = (Some "$hasDefault");
                          fp_type = (Rhint ([32:12-18]), (Tprim Tstring));
                          fp_flags =
                          { Typing_defs_flags.FunParam.accept_disposable =
                            false; inout = false; is_optional = true;
                            readonly = false; ignore_readonly_error = false;
                            splat = false; named = false };
                          fp_def_value = None }
                        ];
                      ft_implicit_params =
                      { capability = (CapDefaults [28:19-30]) };
                      ft_ret =
                      (Rwitness_from_decl ([28:19-30]), (Tprim Tvoid));
                      ft_flags =
                      { Typing_defs_flags.Fun.return_disposable = false;
                        async = false; generator = false; fun_kind = FSync;
                        is_function_pointer = false;
                        returns_readonly = false; readonly_this = false;
                        support_dynamic_type = false; is_memoized = false;
                        variadic = false };
                      ft_require_package = None; ft_instantiated = true }));
                sm_visibility = Public; sm_deprecated = None;
                sm_flags =
                { Shallow_decl_defs.MethodFlags.abstract = false;
                  final = false; override = false;
                  dynamicallycallable = false; php_std_lib = false;
                  support_dynamic_type = false; no_auto_likes = false;
                  needs_concrete = false };
                sm_attributes = []; sm_sort_text = None });
        sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
        sc_enum_type = None; sc_docs_url = None; sc_package = None }))
  ]
