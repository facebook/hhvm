# tests that constructors and destructors fail verification properly when
# poorly defined

.main {
  .declvars $x;
  DefCls 0
  NewObjD "A"
  Dup
  FPushCtor 1
  String "foo"
  FCall <> 1 1 "" - "" ""
  PopC
  SetL $x
  PopC
  CGetL $x
  FPushObjMethodD 1 "set" NullThrows
  String "bar"
  FCall <> 1 1 "" - "" ""
  PopC
  FPushFuncD 1 "var_dump"
  CGetL $x
  FPushObjMethodD 0 "get" NullThrows
  FCall <> 0 1 "" - "" ""
  FCall <> 1 1 "" - "" ""
  PopC
  Int 1
  RetC
}

.class A {
  .property [public] attre =
    """N;""";
  .method [public] <"" N  > get() {
    CheckThis
    BaseH
    QueryM 0 CGet PT:"attre"
    RetC
  }
  .method [public] <"" N  > set($x) {
    CheckThis
    CGetL $x
    BaseH
    SetM 0 PT:"attre"
    PopC
    Null
    RetC
  }
  .method [public static] <"" N  > __construct($attre) {
    CGetL $attre
    BaseH
    SetM 0 PT:"attre"
    PopC
    Null
    RetC
  }
  .method [public] <"" N  > __destruct() isClosureBody {
    String ""
    BaseH
    SetM 0 PT:"attre"
    PopC
    Null
    RetC
  }
}
