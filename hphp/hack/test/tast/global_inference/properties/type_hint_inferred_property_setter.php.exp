Errors:
  [4:10-12] Please add a type hint `public SomeType $x`
  [12:19-23] Was expecting a return type hint
  [6:31-33] Was expecting a type hint
[(Class
    { c_span = [3:1-15:2]; c_annotation = (); c_mode = Mstrict; c_final = false; 
      c_is_xhp = false; c_has_xhp_keyword = false; c_kind = (Cclass Concrete); 
      c_name = ([3:7-8], "\\A"); c_tparams = []; c_extends = []; c_uses = []; 
      c_xhp_attr_uses = []; c_xhp_category = None; c_reqs = []; c_implements = []; 
      c_where_constraints = []; c_consts = []; c_typeconsts = [];
      c_vars =
      [{ cv_final = false; cv_xhp_attr = None; cv_abstract = false; cv_readonly = false; 
         cv_visibility = Public; cv_type = ((int), None); cv_id = ([4:10-12], "x"); 
         cv_expr = None; cv_user_attributes = []; cv_doc_comment = None; 
         cv_is_promoted_variadic = false; cv_is_static = false; cv_span = [4:10-12] }
        ];
      c_methods =
      [{ m_span = [6:3-8:4]; m_annotation = (); m_final = false; m_abstract = false; 
         m_static = false; m_readonly_this = false; m_visibility = Public; 
         m_name = ([6:19-30], "__construct"); m_tparams = []; m_where_constraints = [];
         m_params =
         [{ param_annotation = (int); param_type_hint = ((int), None); 
            param_is_variadic = false; param_pos = [6:31-33]; param_name = "$x"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         m_ctxs = None; m_unsafe_ctxs = None;
         m_body =
         { fb_ast =
           [([7:5-19],
             (Expr
                ((int), [7:5-18],
                 (Binop
                    { bop = (Eq None); lhs = ((int), [7:5-13], (Obj_get (((this), [7:5-10], This), ((int), [7:12-13], (Id ([7:12-13], "x"))), OG_nullthrows, Is_prop)));
                      rhs = ((int), [7:16-18], (Lvar ([7:16-18], $x))) }))))
             ]
           };
         m_fun_kind = FSync; m_user_attributes = []; m_readonly_ret = None; 
         m_ret = ((void), (Some ([6:19-30], (Hprim Tvoid)))); m_external = false; 
         m_doc_comment = None };
        { m_span = [12:3-14:4]; m_annotation = (); m_final = false; m_abstract = false; 
          m_static = false; m_readonly_this = false; m_visibility = Public; 
          m_name = ([12:19-23], "getX"); m_tparams = []; m_where_constraints = []; 
          m_params = []; m_ctxs = None; m_unsafe_ctxs = None;
          m_body = { fb_ast = [([13:5-21], (Return (Some ((int), [13:12-20], (Obj_get (((this), [13:12-17], This), ((int), [13:19-20], (Id ([13:19-20], "x"))), OG_nullthrows, Is_prop))))))] };
          m_fun_kind = FSync; m_user_attributes = []; m_readonly_ret = None; 
          m_ret = ((int), None); m_external = false; m_doc_comment = None }
        ];
      c_xhp_children = []; c_xhp_attrs = [];
      c_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      c_user_attributes = []; c_file_attributes = []; c_docs_url = None; 
      c_enum = None; c_doc_comment = None; c_emit_id = None; c_internal = false; 
      c_module = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([17:10-13], "\\foo");
       fd_fun =
       { f_span = [17:1-19:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([17:17-21], (Hprim Tvoid)))); 
         f_params = []; f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([18:3-17],
             (Expr
                ((void), [18:3-16],
                 (Binop
                    { bop = (Eq None); lhs = ((void), [18:3-5], (Lplaceholder [18:3-5]));
                      rhs = ((A), [18:8-16], (New (((A), [18:12-13], (CI ([18:12-13], "\\A"))), [], [((int), [18:14-15], (Int "1"))], None, ((function(int $x): void))))) }))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] })