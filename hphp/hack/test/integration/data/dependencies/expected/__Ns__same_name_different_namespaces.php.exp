////toplevel.php
<?hh
function extract_standalone_make_default<T>(): T {
  throw new Exception();
}

////namespaces.php
<?hh
namespace Test1 {
  function f(int $x): \Test1\A {
    throw new \Exception();
  }
  class A {

  }
  namespace NestedTest {
    function g(int $x): \Test1\NestedTest\A {
      throw new \Exception();
    }
    class A extends UltraNested\B {

    }
    namespace UltraNested {
      function noop(): void {
        throw new \Exception();
      }
      class B {

      }
    }

  }

}

namespace Test2 {
  function f(int $x): \Test1\A {
    throw new \Exception();
  }
}

namespace Ns {
  function same_name_different_namespaces(int $x): int {
    \Test1\NestedTest\g($x);
    \Test1\NestedTest\UltraNested\noop();
    if ($x < 0) {
      \Test1\f($x);
      return $x;
    } else {
      \Test2\f($x);
      return -$x;
    }
  }
}


