{
    "preamble": "",
    "consts": [
    ],
    "funcs": [
        {
            "name": "hphpd_break",
            "desc": "Sets a hard breakpoint. When a debugger is running, this line of code will break into debugger, if condition is met. If there is no debugger that's attached, it will not do anything.",
            "flags": [
                "HipHopSpecific",
                "NoFCallBuiltin"
            ],
            "return": {
                "type": null
            },
            "args": [
                {
                    "name": "condition",
                    "type": "Boolean",
                    "value": "true",
                    "desc": "If true, break, otherwise, continue."
                }
            ]
        },
        {
            "name": "hphp_debugger_attached",
            "desc": "Quickly determine if a debugger is attached to this process and configured to debug this thread.",
            "flags": [
                "HipHopSpecific",
                "NoFCallBuiltin"
            ],
            "return": {
                "type": "Boolean",
                "desc": "TRUE if a debugger is attached, FALSE if not."
            },
            "args": [
            ]
        },
        {
            "name": "hphp_get_debugger_info",
            "desc": "Determine if a debugger is attached to this process and configured to debug this thread, and return information about the attached debugger.",
            "flags": [
                "HipHopSpecific",
                "NoFCallBuiltin"
            ],
            "return": {
                "type": "Variant",
                "desc": "An array of information about the debugger as array('clientIP' => {ip address of client}, 'clientPort' => {port of the client}). If no debugger is attached, an empty array is returned. If a script is being debugged within hphpd, the ip address and port will be null."
            },
            "args": [
            ]
        }
    ],
    "classes": [
    ]
}
