/**
 * Autogenerated by Thrift for thrift/compiler/test/fixtures/basic-annotations/src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */

#include "thrift/compiler/test/fixtures/basic-annotations/gen-cpp2/module_data.h"
#include "thrift/compiler/test/fixtures/basic-annotations/gen-cpp2/module_constants.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

namespace cpp2 {
class MyService;
} // namespace cpp2
namespace cpp2 {
class MyServicePrioParent;
} // namespace cpp2
namespace cpp2 {
class MyServicePrioChild;
} // namespace cpp2
namespace cpp2 {
class GoodService;
} // namespace cpp2
namespace cpp2 {
class FooBarBazService;
} // namespace cpp2
namespace apache::thrift {

THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::string_view TStructDataStorage<::cpp2::MyStructNestedAnnotation>::name = "MyStructNestedAnnotation";
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<std::string_view, 1> TStructDataStorage<::cpp2::MyStructNestedAnnotation>::fields_names = { {
  "name"sv,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int16_t, 1> TStructDataStorage<::cpp2::MyStructNestedAnnotation>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<protocol::TType, 1> TStructDataStorage<::cpp2::MyStructNestedAnnotation>::fields_types = { {
  TType::T_STRING,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int, 1> TStructDataStorage<::cpp2::MyStructNestedAnnotation>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::string_view TStructDataStorage<::cpp2::detail::YourUnion>::name = "MyUnion";
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<std::string_view, 0> TStructDataStorage<::cpp2::detail::YourUnion>::fields_names = { {
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int16_t, 0> TStructDataStorage<::cpp2::detail::YourUnion>::fields_ids = { {
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<protocol::TType, 0> TStructDataStorage<::cpp2::detail::YourUnion>::fields_types = { {
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int, 0> TStructDataStorage<::cpp2::detail::YourUnion>::isset_indexes = { {
}};

THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::string_view TStructDataStorage<::cpp2::detail::YourException>::name = "MyException";
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<std::string_view, 0> TStructDataStorage<::cpp2::detail::YourException>::fields_names = { {
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int16_t, 0> TStructDataStorage<::cpp2::detail::YourException>::fields_ids = { {
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<protocol::TType, 0> TStructDataStorage<::cpp2::detail::YourException>::fields_types = { {
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int, 0> TStructDataStorage<::cpp2::detail::YourException>::isset_indexes = { {
}};

THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::string_view TStructDataStorage<::cpp2::detail::YourStruct>::name = "MyStruct";
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<std::string_view, 9> TStructDataStorage<::cpp2::detail::YourStruct>::fields_names = { {
  "major"sv,
  "abstract"sv,
  "annotation_with_quote"sv,
  "class_"sv,
  "annotation_with_trailing_comma"sv,
  "empty_annotations"sv,
  "my_enum"sv,
  "cpp_type_annotation"sv,
  "my_union"sv,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int16_t, 9> TStructDataStorage<::cpp2::detail::YourStruct>::fields_ids = { {
  2,
  1,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<protocol::TType, 9> TStructDataStorage<::cpp2::detail::YourStruct>::fields_types = { {
  TType::T_I64,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_I32,
  TType::T_LIST,
  TType::T_STRUCT,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int, 9> TStructDataStorage<::cpp2::detail::YourStruct>::isset_indexes = { {
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
}};

THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::string_view TStructDataStorage<::cpp2::SecretStruct>::name = "SecretStruct";
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<std::string_view, 2> TStructDataStorage<::cpp2::SecretStruct>::fields_names = { {
  "id"sv,
  "password"sv,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int16_t, 2> TStructDataStorage<::cpp2::SecretStruct>::fields_ids = { {
  1,
  2,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<protocol::TType, 2> TStructDataStorage<::cpp2::SecretStruct>::fields_types = { {
  TType::T_I64,
  TType::T_STRING,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int, 2> TStructDataStorage<::cpp2::SecretStruct>::isset_indexes = { {
  0,
  1,
}};

namespace detail {







template <> struct TSchemaAssociation<::cpp2::MyService, false> {
  static constexpr ::folly::Range<const ::std::string_view*>(*bundle)() = nullptr;
  static constexpr int64_t programId = 5752107916518885951;
  static constexpr ::std::string_view definitionKey = {"\x57\x4c\xec\xbc\xf7\x3d\xb7\x35\xa4\x7e\x74\x0c\xd9\x9e\x91\xa4", 16};
};
template <> struct TSchemaAssociation<::cpp2::MyServicePrioParent, false> {
  static constexpr ::folly::Range<const ::std::string_view*>(*bundle)() = nullptr;
  static constexpr int64_t programId = 5752107916518885951;
  static constexpr ::std::string_view definitionKey = {"\x0c\xa0\x3c\xda\x6a\x09\xbe\xfb\x37\xc2\x73\x0a\x4f\xd7\x63\xa1", 16};
};
template <> struct TSchemaAssociation<::cpp2::MyServicePrioChild, false> {
  static constexpr ::folly::Range<const ::std::string_view*>(*bundle)() = nullptr;
  static constexpr int64_t programId = 5752107916518885951;
  static constexpr ::std::string_view definitionKey = {"\x4a\x05\x70\xd2\xda\xca\x0a\xc4\x93\x02\xc9\xac\xe2\x80\x7f\xa5", 16};
};
template <> struct TSchemaAssociation<::cpp2::GoodService, false> {
  static constexpr ::folly::Range<const ::std::string_view*>(*bundle)() = nullptr;
  static constexpr int64_t programId = 5752107916518885951;
  static constexpr ::std::string_view definitionKey = {"\x9f\x37\xc4\xd4\xa4\x30\xdc\x92\x05\xda\xf0\xef\xd9\xe9\xea\x12", 16};
};
template <> struct TSchemaAssociation<::cpp2::FooBarBazService, false> {
  static constexpr ::folly::Range<const ::std::string_view*>(*bundle)() = nullptr;
  static constexpr int64_t programId = 5752107916518885951;
  static constexpr ::std::string_view definitionKey = {"\xad\x36\xb0\xbf\x3e\x48\x12\xde\x1a\x6a\xb8\xcd\x2c\x57\xb0\x2e", 16};
};
} // namespace detail
} // namespace apache::thrift
