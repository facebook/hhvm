/**
 * Autogenerated by Thrift for thrift/compiler/test/fixtures/cpp2-struct-footprint/src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */

#include "thrift/compiler/test/fixtures/cpp2-struct-footprint/gen-cpp2/module_data.h"
#include "thrift/compiler/test/fixtures/cpp2-struct-footprint/gen-cpp2/module_constants.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

namespace cpp2_struct_footprint {
class FootprintTestService;
} // namespace cpp2_struct_footprint
namespace cpp2_struct_footprint {
class ExtendedFootprintService;
} // namespace cpp2_struct_footprint
namespace apache::thrift {

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::cpp2_struct_footprint::SimpleStruct>::name = "SimpleStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::cpp2_struct_footprint::SimpleStruct>::fields_names = { {
  "field"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::cpp2_struct_footprint::SimpleStruct>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::cpp2_struct_footprint::SimpleStruct>::fields_types = { {
  TType::T_I32,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::cpp2_struct_footprint::SimpleStruct>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::cpp2_struct_footprint::ComplexStruct>::name = "ComplexStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::cpp2_struct_footprint::ComplexStruct>::fields_names = { {
  "nested"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::cpp2_struct_footprint::ComplexStruct>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::cpp2_struct_footprint::ComplexStruct>::fields_types = { {
  TType::T_STRUCT,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::cpp2_struct_footprint::ComplexStruct>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::cpp2_struct_footprint::Struct1>::name = "Struct1";
THRIFT_DATA_MEMBER const std::array<std::string_view, 0> TStructDataStorage<::cpp2_struct_footprint::Struct1>::fields_names = { {
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 0> TStructDataStorage<::cpp2_struct_footprint::Struct1>::fields_ids = { {
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 0> TStructDataStorage<::cpp2_struct_footprint::Struct1>::fields_types = { {
}};
THRIFT_DATA_MEMBER const std::array<int, 0> TStructDataStorage<::cpp2_struct_footprint::Struct1>::isset_indexes = { {
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::cpp2_struct_footprint::Struct2>::name = "Struct2";
THRIFT_DATA_MEMBER const std::array<std::string_view, 0> TStructDataStorage<::cpp2_struct_footprint::Struct2>::fields_names = { {
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 0> TStructDataStorage<::cpp2_struct_footprint::Struct2>::fields_ids = { {
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 0> TStructDataStorage<::cpp2_struct_footprint::Struct2>::fields_types = { {
}};
THRIFT_DATA_MEMBER const std::array<int, 0> TStructDataStorage<::cpp2_struct_footprint::Struct2>::isset_indexes = { {
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::cpp2_struct_footprint::Struct3>::name = "Struct3";
THRIFT_DATA_MEMBER const std::array<std::string_view, 0> TStructDataStorage<::cpp2_struct_footprint::Struct3>::fields_names = { {
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 0> TStructDataStorage<::cpp2_struct_footprint::Struct3>::fields_ids = { {
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 0> TStructDataStorage<::cpp2_struct_footprint::Struct3>::fields_types = { {
}};
THRIFT_DATA_MEMBER const std::array<int, 0> TStructDataStorage<::cpp2_struct_footprint::Struct3>::isset_indexes = { {
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::cpp2_struct_footprint::Struct4>::name = "Struct4";
THRIFT_DATA_MEMBER const std::array<std::string_view, 0> TStructDataStorage<::cpp2_struct_footprint::Struct4>::fields_names = { {
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 0> TStructDataStorage<::cpp2_struct_footprint::Struct4>::fields_ids = { {
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 0> TStructDataStorage<::cpp2_struct_footprint::Struct4>::fields_types = { {
}};
THRIFT_DATA_MEMBER const std::array<int, 0> TStructDataStorage<::cpp2_struct_footprint::Struct4>::isset_indexes = { {
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::cpp2_struct_footprint::Struct5>::name = "Struct5";
THRIFT_DATA_MEMBER const std::array<std::string_view, 0> TStructDataStorage<::cpp2_struct_footprint::Struct5>::fields_names = { {
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 0> TStructDataStorage<::cpp2_struct_footprint::Struct5>::fields_ids = { {
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 0> TStructDataStorage<::cpp2_struct_footprint::Struct5>::fields_types = { {
}};
THRIFT_DATA_MEMBER const std::array<int, 0> TStructDataStorage<::cpp2_struct_footprint::Struct5>::isset_indexes = { {
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::cpp2_struct_footprint::ExStruct>::name = "ExStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::cpp2_struct_footprint::ExStruct>::fields_names = { {
  "message"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::cpp2_struct_footprint::ExStruct>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::cpp2_struct_footprint::ExStruct>::fields_types = { {
  TType::T_STRING,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::cpp2_struct_footprint::ExStruct>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::cpp2_struct_footprint::TestUnion>::name = "TestUnion";
THRIFT_DATA_MEMBER const std::array<std::string_view, 2> TStructDataStorage<::cpp2_struct_footprint::TestUnion>::fields_names = { {
  "int_value"sv,
  "struct_value"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 2> TStructDataStorage<::cpp2_struct_footprint::TestUnion>::fields_ids = { {
  1,
  2,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 2> TStructDataStorage<::cpp2_struct_footprint::TestUnion>::fields_types = { {
  TType::T_I32,
  TType::T_STRUCT,
}};
THRIFT_DATA_MEMBER const std::array<int, 2> TStructDataStorage<::cpp2_struct_footprint::TestUnion>::isset_indexes = { {
  0,
  1,
}};

namespace detail {










template <> struct TSchemaAssociation<::cpp2_struct_footprint::FootprintTestService, false> {
  static constexpr ::folly::Range<const ::std::string_view*>(*bundle)() = nullptr;
  static constexpr int64_t programId = -2016535262471784061;
  static constexpr ::std::string_view definitionKey = {"\xc5\x02\x98\x08\x5e\x2a\xc5\x07\xd6\x51\xe6\xd7\x0b\x48\x29\x80", 16};
};
template <> struct TSchemaAssociation<::cpp2_struct_footprint::ExtendedFootprintService, false> {
  static constexpr ::folly::Range<const ::std::string_view*>(*bundle)() = nullptr;
  static constexpr int64_t programId = -2016535262471784061;
  static constexpr ::std::string_view definitionKey = {"\x87\x7f\xce\xad\xc6\x08\x35\xe8\xc9\x7d\xe6\x96\xad\x65\xa6\xf4", 16};
};
} // namespace detail
} // namespace apache::thrift
