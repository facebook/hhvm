// @generated by hh_manual from manual/hack/08-arrays-and-collections/10-object-collections.md
// @codegen-command : buck run fbcode//hphp/hack/src/hh_manual:hh_manual extract fbcode/hphp/hack/manual/hack/
async function example_snippet_wrapper(): Awaitable<void> {
  $items = Vector {'a', 'b', 'c'};
  
  // Accessing items by index.
  $items[0]; // 'a'
  $items[3]; // throws OutOfBoundsException
  
  // Accessing items that might be out-of-bounds.
  idx($items, 0); // 'a'
  idx($items, 3); // null
  idx($items, 3, 'default'); // 'default'
  
  // Modifying items. This mutates the Vector in place.
  $items[0] = 'xx'; // Vector {'xx', 'b', 'c'}
  $items[] = 'd'; // Vector {'xx', 'b', 'c', 'd'}
  
  // Getting the length.
  C\count($items); // 4
  
  // Iterating.
  foreach ($items as $item) {
    echo $item;
  }
  // Iterating with the index.
  foreach ($items as $index => $item) {
    echo $index; // e.g. 0
    echo $item; // e.g. 'a'
  }
  
  // Equality checks compare references.
  $items === $items; // true
  Vector {} === Vector {}; // false
  
  // Converting from an Iterable.
  new Vector(vec[1, 2]); // Vector {1, 2}
  new Vector(Set {1, 2}); // Vector {1, 2}
  new Vector(dict['key1' => 'value1']); // Vector {'value1'}
  
  // Type checks
  $items is Vector<_>; // true
}
