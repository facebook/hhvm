# this is a skeletal test, with just some control-flow left over, for testing semdiff
# it's actually useful to test it against itself, to check that we don't get runaway
# handler stacks

.main {
  Int 1
  RetC
}

.function <"" N  > run() {
  .numiters 2;
  .declvars $test $assertion;
  IterInit 0 L0 $test
  .try_fault F15 {
    .try {
    L14:
      Nop
      JmpZ L7
    L8:
      Nop
      IterInit 1 L7 $assertion
      .try_fault F16 {
      L9:
        Nop
        IterNext 1 L9 $assertion
      }
    L7:
      Nop
      Jmp L10
    } .catch {
      Nop
      JmpZ L10
      Throw
    }
  L10:
    Nop
    IterNext 0 L14 $test
  }
 L0:
  Nop
  RetC
 F16:
  Nop
  Unwind
 F15:
  Nop
  Unwind
 }
