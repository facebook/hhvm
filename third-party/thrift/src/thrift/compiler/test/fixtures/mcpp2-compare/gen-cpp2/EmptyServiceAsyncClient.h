/**
 * Autogenerated by Thrift for thrift/compiler/test/fixtures/mcpp2-compare/src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */
#pragma once

#include <thrift/lib/cpp2/gen/client_h.h>

#include "thrift/compiler/test/fixtures/mcpp2-compare/gen-cpp2/module_types.h"
#include "thrift/compiler/test/fixtures/mcpp2-compare/gen-cpp2/includes_types.h"
#include "thrift/annotation/gen-cpp2/cpp_types.h"
#include <folly/small_vector.h>

namespace apache { namespace thrift {
  class Cpp2RequestContext;
  namespace detail { namespace ac { struct ClientRequestContext; }}
  namespace transport { class THeader; }
}}

namespace some { namespace valid { namespace ns {
class EmptyService;
}}} // some::valid::ns
namespace apache::thrift {

template <>
class Client<::some::valid::ns::EmptyService> : public apache::thrift::GeneratedAsyncClient {
 public:
  using apache::thrift::GeneratedAsyncClient::GeneratedAsyncClient;

  char const* getServiceName() const noexcept override {
    return "EmptyService";
  }


};

} // namespace apache::thrift

namespace some { namespace valid { namespace ns {
using EmptyServiceAsyncClient [[deprecated("Use apache::thrift::Client<EmptyService> instead")]] = ::apache::thrift::Client<EmptyService>;
}}} // some::valid::ns
