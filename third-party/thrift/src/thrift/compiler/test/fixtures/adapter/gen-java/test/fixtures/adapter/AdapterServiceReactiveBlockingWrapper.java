/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package test.fixtures.adapter;

import java.util.*;

public class AdapterServiceReactiveBlockingWrapper 
  implements AdapterService {
  private final AdapterService.Reactive _delegate;

  public AdapterServiceReactiveBlockingWrapper(AdapterService.Reactive _delegate) {
    
    this._delegate = _delegate;
  }

  public AdapterServiceReactiveBlockingWrapper(org.apache.thrift.ProtocolId _protocolId, reactor.core.publisher.Mono<? extends com.facebook.thrift.client.RpcClient> _rpcClient, Map<String, String> _headers, Map<String, String> _persistentHeaders) {
    this(new AdapterServiceReactiveClient(_protocolId, _rpcClient, _headers, _persistentHeaders));
  }

  @java.lang.Override
  public void close() {
    _delegate.dispose();
  }

  @java.lang.Override
  public test.fixtures.adapter.CountingStruct count() throws org.apache.thrift.TException {
      return countWrapper(com.facebook.thrift.client.RpcOptions.EMPTY).getData();
  }

  @java.lang.Override
  public test.fixtures.adapter.CountingStruct count(
        com.facebook.thrift.client.RpcOptions rpcOptions) throws org.apache.thrift.TException {
      return countWrapper(rpcOptions).getData();
  }

  @java.lang.Override
  public com.facebook.thrift.client.ResponseWrapper<test.fixtures.adapter.CountingStruct> countWrapper(
    com.facebook.thrift.client.RpcOptions rpcOptions) throws org.apache.thrift.TException {
      try {
        return _delegate.countWrapper(rpcOptions).block();
      } catch (Throwable t) {
        throw com.facebook.thrift.util.ExceptionUtil.wrap(t);
      }
  }
  @java.lang.Override
  public test.fixtures.adapter.HeapAllocated adaptedTypes( final test.fixtures.adapter.HeapAllocated arg) throws org.apache.thrift.TException {
      return adaptedTypesWrapper(arg, com.facebook.thrift.client.RpcOptions.EMPTY).getData();
  }

  @java.lang.Override
  public test.fixtures.adapter.HeapAllocated adaptedTypes(
        final test.fixtures.adapter.HeapAllocated arg,
        com.facebook.thrift.client.RpcOptions rpcOptions) throws org.apache.thrift.TException {
      return adaptedTypesWrapper(arg,rpcOptions).getData();
  }

  @java.lang.Override
  public com.facebook.thrift.client.ResponseWrapper<test.fixtures.adapter.HeapAllocated> adaptedTypesWrapper(
    final test.fixtures.adapter.HeapAllocated arg,
    com.facebook.thrift.client.RpcOptions rpcOptions) throws org.apache.thrift.TException {
      try {
        return _delegate.adaptedTypesWrapper(arg, rpcOptions).block();
      } catch (Throwable t) {
        throw com.facebook.thrift.util.ExceptionUtil.wrap(t);
      }
  }

}
