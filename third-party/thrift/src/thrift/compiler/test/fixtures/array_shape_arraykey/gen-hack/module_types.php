<?hh
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

/**
 * Original thrift enum:-
 * Enum
 */
enum Enum: int {
  ENUM = 1;
}

class Enum_TEnumStaticMetadata implements \IThriftEnumStaticMetadata {
  public static function getEnumMetadata()[]: \tmeta_ThriftEnum {
    return tmeta_ThriftEnum::fromShape(
      shape(
        "name" => "module.Enum",
        "elements" => dict[
          1 => "ENUM",
        ],
      )
    );
  }

  public static function getAllStructuredAnnotations()[write_props]: \TEnumAnnotations {
    return shape(
      'enum' => dict[],
      'constants' => dict[
      ],
    );
  }
}

/**
 * Original thrift struct:-
 * A
 */
class A implements \IThriftSyncStruct, \IThriftStructMetadata, \IThriftShapishSyncStruct {
  use \ThriftSerializationTrait;

  const \ThriftStructTypes::TSpec SPEC = dict[
    1 => shape(
      'var' => 'just_an_enum',
      'type' => \TType::I32,
      'enum' => Enum::class,
    ),
    2 => shape(
      'var' => 'a',
      'type' => \TType::STRING,
    ),
  ];
  const dict<string, int> FIELDMAP = dict[
    'just_an_enum' => 1,
    'a' => 2,
  ];

  const type TConstructorShape = shape(
    ?'just_an_enum' => ?Enum,
    ?'a' => ?string,
  );

  const type TShape = shape(
    ?'just_an_enum' => ?Enum,
    'a' => string,
  );
  const int STRUCTURAL_ID = 4307695496151664311;
  /**
   * Original thrift field:-
   * 1: module.Enum just_an_enum
   */
  public ?Enum $just_an_enum;
  /**
   * Original thrift field:-
   * 2: string a
   */
  public string $a;

  public function __construct(?Enum $just_an_enum = null, ?string $a = null)[] {
    $this->just_an_enum = $just_an_enum;
    $this->a = $a ?? '';
  }

  public static function withDefaultValues()[]: this {
    return new static();
  }

  public static function fromShape(self::TConstructorShape $shape)[]: this {
    return new static(
      Shapes::idx($shape, 'just_an_enum'),
      Shapes::idx($shape, 'a'),
    );
  }

  public function getName()[]: string {
    return 'A';
  }

  public function clearTerseFields()[write_props]: void {
  }

  public static function getStructMetadata()[]: \tmeta_ThriftStruct {
    return tmeta_ThriftStruct::fromShape(
      shape(
        "name" => "module.A",
        "fields" => vec[
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 1,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_enum" => tmeta_ThriftEnumType::fromShape(
                    shape(
                      "name" => "module.Enum",
                    )
                  ),
                )
              ),
              "name" => "just_an_enum",
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 2,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                )
              ),
              "name" => "a",
            )
          ),
        ],
        "is_union" => false,
      )
    );
  }

  public static function getAllStructuredAnnotations()[write_props]: \TStructAnnotations {
    return shape(
      'struct' => dict[],
      'fields' => dict[
      ],
    );
  }

  public static function __stringifyMapKeys<T>(dict<arraykey, T> $m)[]: dict<string, T> {
    return Dict\map_keys($m, $key ==> (string)$key);
  }

  public static function __fromShape(self::TShape $shape)[]: this {
    return new static(
      Shapes::idx($shape, 'just_an_enum'),
      $shape['a'],
    );
  }

  public function __toShape()[]: self::TShape {
    return shape(
      'just_an_enum' => $this->just_an_enum,
      'a' => $this->a,
    );
  }
  public function getInstanceKey()[write_props]: string {
    return \TCompactSerializer::serialize($this);
  }

}

/**
 * Original thrift struct:-
 * B
 */
class B implements \IThriftSyncStruct, \IThriftStructMetadata, \IThriftShapishSyncStruct {
  use \ThriftSerializationTrait;

  const \ThriftStructTypes::TSpec SPEC = dict[
    1 => shape(
      'var' => 'map_of_string_to_string',
      'type' => \TType::MAP,
      'ktype' => \TType::STRING,
      'vtype' => \TType::STRING,
      'key' => shape(
        'type' => \TType::STRING,
      ),
      'val' => shape(
        'type' => \TType::STRING,
      ),
      'format' => 'harray',
    ),
    2 => shape(
      'var' => 'map_of_string_to_i32',
      'type' => \TType::MAP,
      'ktype' => \TType::STRING,
      'vtype' => \TType::I32,
      'key' => shape(
        'type' => \TType::STRING,
      ),
      'val' => shape(
        'type' => \TType::I32,
      ),
      'format' => 'harray',
    ),
    3 => shape(
      'var' => 'map_of_string_to_A',
      'type' => \TType::MAP,
      'ktype' => \TType::STRING,
      'vtype' => \TType::STRUCT,
      'key' => shape(
        'type' => \TType::STRING,
      ),
      'val' => shape(
        'type' => \TType::STRUCT,
        'class' => A::class,
      ),
      'format' => 'harray',
    ),
    5 => shape(
      'var' => 'map_of_string_to_list_of_A',
      'type' => \TType::MAP,
      'ktype' => \TType::STRING,
      'vtype' => \TType::LST,
      'key' => shape(
        'type' => \TType::STRING,
      ),
      'val' => shape(
        'type' => \TType::LST,
        'etype' => \TType::STRUCT,
        'elem' => shape(
          'type' => \TType::STRUCT,
          'class' => A::class,
        ),
        'format' => 'harray',
      ),
      'format' => 'harray',
    ),
    6 => shape(
      'var' => 'map_of_string_to_map_of_string_to_i32',
      'type' => \TType::MAP,
      'ktype' => \TType::STRING,
      'vtype' => \TType::MAP,
      'key' => shape(
        'type' => \TType::STRING,
      ),
      'val' => shape(
        'type' => \TType::MAP,
        'ktype' => \TType::STRING,
        'vtype' => \TType::I32,
        'key' => shape(
          'type' => \TType::STRING,
        ),
        'val' => shape(
          'type' => \TType::I32,
        ),
        'format' => 'harray',
      ),
      'format' => 'harray',
    ),
    7 => shape(
      'var' => 'map_of_string_to_map_of_string_to_A',
      'type' => \TType::MAP,
      'ktype' => \TType::STRING,
      'vtype' => \TType::MAP,
      'key' => shape(
        'type' => \TType::STRING,
      ),
      'val' => shape(
        'type' => \TType::MAP,
        'ktype' => \TType::STRING,
        'vtype' => \TType::STRUCT,
        'key' => shape(
          'type' => \TType::STRING,
        ),
        'val' => shape(
          'type' => \TType::STRUCT,
          'class' => A::class,
        ),
        'format' => 'harray',
      ),
      'format' => 'harray',
    ),
    8 => shape(
      'var' => 'map_of_string_to_list_of_i32',
      'type' => \TType::MAP,
      'ktype' => \TType::STRING,
      'vtype' => \TType::LST,
      'key' => shape(
        'type' => \TType::STRING,
      ),
      'val' => shape(
        'type' => \TType::LST,
        'etype' => \TType::I32,
        'elem' => shape(
          'type' => \TType::I32,
        ),
        'format' => 'harray',
      ),
      'format' => 'harray',
    ),
    9 => shape(
      'var' => 'map_of_string_to_set_of_i32',
      'type' => \TType::MAP,
      'ktype' => \TType::STRING,
      'vtype' => \TType::SET,
      'key' => shape(
        'type' => \TType::STRING,
      ),
      'val' => shape(
        'type' => \TType::SET,
        'etype' => \TType::I32,
        'elem' => shape(
          'type' => \TType::I32,
        ),
        'format' => 'harray',
      ),
      'format' => 'harray',
    ),
    10 => shape(
      'var' => 'list_of_string',
      'type' => \TType::LST,
      'etype' => \TType::STRING,
      'elem' => shape(
        'type' => \TType::STRING,
      ),
      'format' => 'harray',
    ),
    11 => shape(
      'var' => 'list_of_i32',
      'type' => \TType::LST,
      'etype' => \TType::I32,
      'elem' => shape(
        'type' => \TType::I32,
      ),
      'format' => 'harray',
    ),
    14 => shape(
      'var' => 'list_of_set_of_i32',
      'type' => \TType::LST,
      'etype' => \TType::SET,
      'elem' => shape(
        'type' => \TType::SET,
        'etype' => \TType::I32,
        'elem' => shape(
          'type' => \TType::I32,
        ),
        'format' => 'harray',
      ),
      'format' => 'harray',
    ),
    15 => shape(
      'var' => 'list_of_map_of_string_to_list_of_A',
      'type' => \TType::LST,
      'etype' => \TType::MAP,
      'elem' => shape(
        'type' => \TType::MAP,
        'ktype' => \TType::STRING,
        'vtype' => \TType::LST,
        'key' => shape(
          'type' => \TType::STRING,
        ),
        'val' => shape(
          'type' => \TType::LST,
          'etype' => \TType::STRUCT,
          'elem' => shape(
            'type' => \TType::STRUCT,
            'class' => A::class,
          ),
          'format' => 'harray',
        ),
        'format' => 'harray',
      ),
      'format' => 'harray',
    ),
    16 => shape(
      'var' => 'list_of_map_of_string_to_A',
      'type' => \TType::LST,
      'etype' => \TType::MAP,
      'elem' => shape(
        'type' => \TType::MAP,
        'ktype' => \TType::STRING,
        'vtype' => \TType::STRUCT,
        'key' => shape(
          'type' => \TType::STRING,
        ),
        'val' => shape(
          'type' => \TType::STRUCT,
          'class' => A::class,
        ),
        'format' => 'harray',
      ),
      'format' => 'harray',
    ),
    17 => shape(
      'var' => 'set_of_i32',
      'type' => \TType::SET,
      'etype' => \TType::I32,
      'elem' => shape(
        'type' => \TType::I32,
      ),
      'format' => 'harray',
    ),
    18 => shape(
      'var' => 'set_of_string',
      'type' => \TType::SET,
      'etype' => \TType::STRING,
      'elem' => shape(
        'type' => \TType::STRING,
      ),
      'format' => 'harray',
    ),
  ];
  const dict<string, int> FIELDMAP = dict[
    'map_of_string_to_string' => 1,
    'map_of_string_to_i32' => 2,
    'map_of_string_to_A' => 3,
    'map_of_string_to_list_of_A' => 5,
    'map_of_string_to_map_of_string_to_i32' => 6,
    'map_of_string_to_map_of_string_to_A' => 7,
    'map_of_string_to_list_of_i32' => 8,
    'map_of_string_to_set_of_i32' => 9,
    'list_of_string' => 10,
    'list_of_i32' => 11,
    'list_of_set_of_i32' => 14,
    'list_of_map_of_string_to_list_of_A' => 15,
    'list_of_map_of_string_to_A' => 16,
    'set_of_i32' => 17,
    'set_of_string' => 18,
  ];

  const type TConstructorShape = shape(
    ?'map_of_string_to_string' => ?dict<string, string>,
    ?'map_of_string_to_i32' => ?dict<string, int>,
    ?'map_of_string_to_A' => ?dict<string, A>,
    ?'map_of_string_to_list_of_A' => ?dict<string, vec<A>>,
    ?'map_of_string_to_map_of_string_to_i32' => ?dict<string, dict<string, int>>,
    ?'map_of_string_to_map_of_string_to_A' => ?dict<string, dict<string, A>>,
    ?'map_of_string_to_list_of_i32' => ?dict<string, vec<int>>,
    ?'map_of_string_to_set_of_i32' => ?dict<string, keyset<int>>,
    ?'list_of_string' => ?vec<string>,
    ?'list_of_i32' => ?vec<int>,
    ?'list_of_set_of_i32' => ?vec<keyset<int>>,
    ?'list_of_map_of_string_to_list_of_A' => ?vec<dict<string, vec<A>>>,
    ?'list_of_map_of_string_to_A' => ?vec<dict<string, A>>,
    ?'set_of_i32' => ?keyset<int>,
    ?'set_of_string' => ?keyset<string>,
  );

  const type TShape = shape(
    'map_of_string_to_string' => dict<arraykey, string>,
    'map_of_string_to_i32' => dict<arraykey, int>,
    'map_of_string_to_A' => dict<arraykey, A::TShape>,
    'map_of_string_to_list_of_A' => dict<arraykey, vec<A::TShape>>,
    'map_of_string_to_map_of_string_to_i32' => dict<arraykey, dict<arraykey, int>>,
    'map_of_string_to_map_of_string_to_A' => dict<arraykey, dict<arraykey, A::TShape>>,
    'map_of_string_to_list_of_i32' => dict<arraykey, vec<int>>,
    'map_of_string_to_set_of_i32' => dict<arraykey, keyset<int>>,
    'list_of_string' => vec<string>,
    'list_of_i32' => vec<int>,
    'list_of_set_of_i32' => vec<keyset<int>>,
    'list_of_map_of_string_to_list_of_A' => vec<dict<arraykey, vec<A::TShape>>>,
    'list_of_map_of_string_to_A' => vec<dict<arraykey, A::TShape>>,
    'set_of_i32' => keyset<int>,
    'set_of_string' => keyset<string>,
  );
  const int STRUCTURAL_ID = 4382244206701168633;
  /**
   * Original thrift field:-
   * 1: map<string, string> map_of_string_to_string
   */
  public dict<string, string> $map_of_string_to_string;
  /**
   * Original thrift field:-
   * 2: map<string, i32> map_of_string_to_i32
   */
  public dict<string, int> $map_of_string_to_i32;
  /**
   * Original thrift field:-
   * 3: map<string, module.A> map_of_string_to_A
   */
  public dict<string, A> $map_of_string_to_A;
  /**
   * Original thrift field:-
   * 5: map<string, list<module.A>> map_of_string_to_list_of_A
   */
  public dict<string, vec<A>> $map_of_string_to_list_of_A;
  /**
   * Original thrift field:-
   * 6: map<string, map<string, i32>> map_of_string_to_map_of_string_to_i32
   */
  public dict<string, dict<string, int>> $map_of_string_to_map_of_string_to_i32;
  /**
   * Original thrift field:-
   * 7: map<string, map<string, module.A>> map_of_string_to_map_of_string_to_A
   */
  public dict<string, dict<string, A>> $map_of_string_to_map_of_string_to_A;
  /**
   * Original thrift field:-
   * 8: map<string, list<i32>> map_of_string_to_list_of_i32
   */
  public dict<string, vec<int>> $map_of_string_to_list_of_i32;
  /**
   * Original thrift field:-
   * 9: map<string, set<i32>> map_of_string_to_set_of_i32
   */
  public dict<string, keyset<int>> $map_of_string_to_set_of_i32;
  /**
   * Original thrift field:-
   * 10: list<string> list_of_string
   */
  public vec<string> $list_of_string;
  /**
   * Original thrift field:-
   * 11: list<i32> list_of_i32
   */
  public vec<int> $list_of_i32;
  /**
   * Original thrift field:-
   * 14: list<set<i32>> list_of_set_of_i32
   */
  public vec<keyset<int>> $list_of_set_of_i32;
  /**
   * Original thrift field:-
   * 15: list<map<string, list<module.A>>> list_of_map_of_string_to_list_of_A
   */
  public vec<dict<string, vec<A>>> $list_of_map_of_string_to_list_of_A;
  /**
   * Original thrift field:-
   * 16: list<map<string, module.A>> list_of_map_of_string_to_A
   */
  public vec<dict<string, A>> $list_of_map_of_string_to_A;
  /**
   * Original thrift field:-
   * 17: set<i32> set_of_i32
   */
  public keyset<int> $set_of_i32;
  /**
   * Original thrift field:-
   * 18: set<string> set_of_string
   */
  public keyset<string> $set_of_string;

  public function __construct(?dict<string, string> $map_of_string_to_string = null, ?dict<string, int> $map_of_string_to_i32 = null, ?dict<string, A> $map_of_string_to_A = null, ?dict<string, vec<A>> $map_of_string_to_list_of_A = null, ?dict<string, dict<string, int>> $map_of_string_to_map_of_string_to_i32 = null, ?dict<string, dict<string, A>> $map_of_string_to_map_of_string_to_A = null, ?dict<string, vec<int>> $map_of_string_to_list_of_i32 = null, ?dict<string, keyset<int>> $map_of_string_to_set_of_i32 = null, ?vec<string> $list_of_string = null, ?vec<int> $list_of_i32 = null, ?vec<keyset<int>> $list_of_set_of_i32 = null, ?vec<dict<string, vec<A>>> $list_of_map_of_string_to_list_of_A = null, ?vec<dict<string, A>> $list_of_map_of_string_to_A = null, ?keyset<int> $set_of_i32 = null, ?keyset<string> $set_of_string = null)[] {
    $this->map_of_string_to_string = $map_of_string_to_string ?? dict[];
    $this->map_of_string_to_i32 = $map_of_string_to_i32 ?? dict[];
    $this->map_of_string_to_A = $map_of_string_to_A ?? dict[];
    $this->map_of_string_to_list_of_A = $map_of_string_to_list_of_A ?? dict[];
    $this->map_of_string_to_map_of_string_to_i32 = $map_of_string_to_map_of_string_to_i32 ?? dict[];
    $this->map_of_string_to_map_of_string_to_A = $map_of_string_to_map_of_string_to_A ?? dict[];
    $this->map_of_string_to_list_of_i32 = $map_of_string_to_list_of_i32 ?? dict[];
    $this->map_of_string_to_set_of_i32 = $map_of_string_to_set_of_i32 ?? dict[];
    $this->list_of_string = $list_of_string ?? vec[];
    $this->list_of_i32 = $list_of_i32 ?? vec[];
    $this->list_of_set_of_i32 = $list_of_set_of_i32 ?? vec[];
    $this->list_of_map_of_string_to_list_of_A = $list_of_map_of_string_to_list_of_A ?? vec[];
    $this->list_of_map_of_string_to_A = $list_of_map_of_string_to_A ?? vec[];
    $this->set_of_i32 = $set_of_i32 ?? keyset[];
    $this->set_of_string = $set_of_string ?? keyset[];
  }

  public static function withDefaultValues()[]: this {
    return new static();
  }

  public static function fromShape(self::TConstructorShape $shape)[]: this {
    return new static(
      Shapes::idx($shape, 'map_of_string_to_string'),
      Shapes::idx($shape, 'map_of_string_to_i32'),
      Shapes::idx($shape, 'map_of_string_to_A'),
      Shapes::idx($shape, 'map_of_string_to_list_of_A'),
      Shapes::idx($shape, 'map_of_string_to_map_of_string_to_i32'),
      Shapes::idx($shape, 'map_of_string_to_map_of_string_to_A'),
      Shapes::idx($shape, 'map_of_string_to_list_of_i32'),
      Shapes::idx($shape, 'map_of_string_to_set_of_i32'),
      Shapes::idx($shape, 'list_of_string'),
      Shapes::idx($shape, 'list_of_i32'),
      Shapes::idx($shape, 'list_of_set_of_i32'),
      Shapes::idx($shape, 'list_of_map_of_string_to_list_of_A'),
      Shapes::idx($shape, 'list_of_map_of_string_to_A'),
      Shapes::idx($shape, 'set_of_i32'),
      Shapes::idx($shape, 'set_of_string'),
    );
  }

  public function getName()[]: string {
    return 'B';
  }

  public function clearTerseFields()[write_props]: void {
  }

  public static function getStructMetadata()[]: \tmeta_ThriftStruct {
    return tmeta_ThriftStruct::fromShape(
      shape(
        "name" => "module.B",
        "fields" => vec[
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 1,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_map" => tmeta_ThriftMapType::fromShape(
                    shape(
                      "keyType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "map_of_string_to_string",
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 2,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_map" => tmeta_ThriftMapType::fromShape(
                    shape(
                      "keyType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_I32_TYPE,
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "map_of_string_to_i32",
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 3,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_map" => tmeta_ThriftMapType::fromShape(
                    shape(
                      "keyType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_struct" => tmeta_ThriftStructType::fromShape(
                            shape(
                              "name" => "module.A",
                            )
                          ),
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "map_of_string_to_A",
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 5,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_map" => tmeta_ThriftMapType::fromShape(
                    shape(
                      "keyType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_list" => tmeta_ThriftListType::fromShape(
                            shape(
                              "valueType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_struct" => tmeta_ThriftStructType::fromShape(
                                    shape(
                                      "name" => "module.A",
                                    )
                                  ),
                                )
                              ),
                            )
                          ),
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "map_of_string_to_list_of_A",
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 6,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_map" => tmeta_ThriftMapType::fromShape(
                    shape(
                      "keyType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_map" => tmeta_ThriftMapType::fromShape(
                            shape(
                              "keyType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                                )
                              ),
                              "valueType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_I32_TYPE,
                                )
                              ),
                            )
                          ),
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "map_of_string_to_map_of_string_to_i32",
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 7,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_map" => tmeta_ThriftMapType::fromShape(
                    shape(
                      "keyType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_map" => tmeta_ThriftMapType::fromShape(
                            shape(
                              "keyType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                                )
                              ),
                              "valueType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_struct" => tmeta_ThriftStructType::fromShape(
                                    shape(
                                      "name" => "module.A",
                                    )
                                  ),
                                )
                              ),
                            )
                          ),
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "map_of_string_to_map_of_string_to_A",
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 8,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_map" => tmeta_ThriftMapType::fromShape(
                    shape(
                      "keyType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_list" => tmeta_ThriftListType::fromShape(
                            shape(
                              "valueType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_I32_TYPE,
                                )
                              ),
                            )
                          ),
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "map_of_string_to_list_of_i32",
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 9,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_map" => tmeta_ThriftMapType::fromShape(
                    shape(
                      "keyType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_set" => tmeta_ThriftSetType::fromShape(
                            shape(
                              "valueType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_I32_TYPE,
                                )
                              ),
                            )
                          ),
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "map_of_string_to_set_of_i32",
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 10,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_list" => tmeta_ThriftListType::fromShape(
                    shape(
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "list_of_string",
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 11,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_list" => tmeta_ThriftListType::fromShape(
                    shape(
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_I32_TYPE,
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "list_of_i32",
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 14,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_list" => tmeta_ThriftListType::fromShape(
                    shape(
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_set" => tmeta_ThriftSetType::fromShape(
                            shape(
                              "valueType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_I32_TYPE,
                                )
                              ),
                            )
                          ),
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "list_of_set_of_i32",
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 15,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_list" => tmeta_ThriftListType::fromShape(
                    shape(
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_map" => tmeta_ThriftMapType::fromShape(
                            shape(
                              "keyType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                                )
                              ),
                              "valueType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_list" => tmeta_ThriftListType::fromShape(
                                    shape(
                                      "valueType" => tmeta_ThriftType::fromShape(
                                        shape(
                                          "t_struct" => tmeta_ThriftStructType::fromShape(
                                            shape(
                                              "name" => "module.A",
                                            )
                                          ),
                                        )
                                      ),
                                    )
                                  ),
                                )
                              ),
                            )
                          ),
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "list_of_map_of_string_to_list_of_A",
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 16,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_list" => tmeta_ThriftListType::fromShape(
                    shape(
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_map" => tmeta_ThriftMapType::fromShape(
                            shape(
                              "keyType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                                )
                              ),
                              "valueType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_struct" => tmeta_ThriftStructType::fromShape(
                                    shape(
                                      "name" => "module.A",
                                    )
                                  ),
                                )
                              ),
                            )
                          ),
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "list_of_map_of_string_to_A",
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 17,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_set" => tmeta_ThriftSetType::fromShape(
                    shape(
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_I32_TYPE,
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "set_of_i32",
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 18,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_set" => tmeta_ThriftSetType::fromShape(
                    shape(
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "set_of_string",
            )
          ),
        ],
        "is_union" => false,
      )
    );
  }

  public static function getAllStructuredAnnotations()[write_props]: \TStructAnnotations {
    return shape(
      'struct' => dict[],
      'fields' => dict[
      ],
    );
  }

  public static function __stringifyMapKeys<T>(dict<arraykey, T> $m)[]: dict<string, T> {
    return Dict\map_keys($m, $key ==> (string)$key);
  }

  public static function __fromShape(self::TShape $shape)[]: this {
    return new static(
      $shape['map_of_string_to_string']
        |> self::__stringifyMapKeys($$),
      $shape['map_of_string_to_i32']
        |> self::__stringifyMapKeys($$),
      $shape['map_of_string_to_A']
        |> Dict\map(
          self::__stringifyMapKeys($$),
          $_val0 ==> $_val0
            |> A::__fromShape($$),
        ),
      $shape['map_of_string_to_list_of_A']
        |> Dict\map(
          self::__stringifyMapKeys($$),
          $_val2 ==> $_val2
            |> Vec\map(
              $$,
              $_val1 ==> $_val1
                |> A::__fromShape($$),
            ),
        ),
      $shape['map_of_string_to_map_of_string_to_i32']
        |> Dict\map(
          self::__stringifyMapKeys($$),
          $_val3 ==> $_val3
            |> self::__stringifyMapKeys($$),
        ),
      $shape['map_of_string_to_map_of_string_to_A']
        |> Dict\map(
          self::__stringifyMapKeys($$),
          $_val5 ==> $_val5
            |> Dict\map(
              self::__stringifyMapKeys($$),
              $_val4 ==> $_val4
                |> A::__fromShape($$),
            ),
        ),
      $shape['map_of_string_to_list_of_i32']
        |> self::__stringifyMapKeys($$),
      $shape['map_of_string_to_set_of_i32']
        |> self::__stringifyMapKeys($$),
      $shape['list_of_string'],
      $shape['list_of_i32'],
      $shape['list_of_set_of_i32'],
      $shape['list_of_map_of_string_to_list_of_A']
        |> Vec\map(
          $$,
          $_val8 ==> $_val8
            |> Dict\map(
              self::__stringifyMapKeys($$),
              $_val7 ==> $_val7
                |> Vec\map(
                  $$,
                  $_val6 ==> $_val6
                    |> A::__fromShape($$),
                ),
            ),
        ),
      $shape['list_of_map_of_string_to_A']
        |> Vec\map(
          $$,
          $_val10 ==> $_val10
            |> Dict\map(
              self::__stringifyMapKeys($$),
              $_val9 ==> $_val9
                |> A::__fromShape($$),
            ),
        ),
      $shape['set_of_i32'],
      $shape['set_of_string'],
    );
  }

  public function __toShape()[]: self::TShape {
    return shape(
      'map_of_string_to_string' => $this->map_of_string_to_string,
      'map_of_string_to_i32' => $this->map_of_string_to_i32,
      'map_of_string_to_A' => $this->map_of_string_to_A
        |> Dict\map(
          $$,
          ($_val0) ==> $_val0->__toShape(),
        ),
      'map_of_string_to_list_of_A' => $this->map_of_string_to_list_of_A
        |> Dict\map(
          $$,
          ($_val0) ==> $_val0
            |> Vec\map(
              $$,
              ($_val1) ==> $_val1->__toShape(),
            ),
        ),
      'map_of_string_to_map_of_string_to_i32' => $this->map_of_string_to_map_of_string_to_i32,
      'map_of_string_to_map_of_string_to_A' => $this->map_of_string_to_map_of_string_to_A
        |> Dict\map(
          $$,
          ($_val0) ==> $_val0
            |> Dict\map(
              $$,
              ($_val1) ==> $_val1->__toShape(),
            ),
        ),
      'map_of_string_to_list_of_i32' => $this->map_of_string_to_list_of_i32,
      'map_of_string_to_set_of_i32' => $this->map_of_string_to_set_of_i32,
      'list_of_string' => $this->list_of_string,
      'list_of_i32' => $this->list_of_i32,
      'list_of_set_of_i32' => $this->list_of_set_of_i32,
      'list_of_map_of_string_to_list_of_A' => $this->list_of_map_of_string_to_list_of_A
        |> Vec\map(
          $$,
          ($_val0) ==> $_val0
            |> Dict\map(
              $$,
              ($_val1) ==> $_val1
                |> Vec\map(
                  $$,
                  ($_val2) ==> $_val2->__toShape(),
                ),
            ),
        ),
      'list_of_map_of_string_to_A' => $this->list_of_map_of_string_to_A
        |> Vec\map(
          $$,
          ($_val0) ==> $_val0
            |> Dict\map(
              $$,
              ($_val1) ==> $_val1->__toShape(),
            ),
        ),
      'set_of_i32' => $this->set_of_i32,
      'set_of_string' => $this->set_of_string,
    );
  }
  public function getInstanceKey()[write_props]: string {
    return \TCompactSerializer::serialize($this);
  }

}

/**
 * Original thrift struct:-
 * C
 */
class C implements \IThriftSyncStruct, \IThriftStructMetadata, \IThriftShapishSyncStruct {
  use \ThriftSerializationTrait;

  const \ThriftStructTypes::TSpec SPEC = dict[
    1 => shape(
      'var' => 'just_an_A',
      'type' => \TType::STRUCT,
      'class' => A::class,
    ),
    2 => shape(
      'var' => 'just_an_enum',
      'type' => \TType::I32,
      'enum' => Enum::class,
    ),
    4 => shape(
      'var' => 'map_of_string_to_string',
      'type' => \TType::MAP,
      'ktype' => \TType::STRING,
      'vtype' => \TType::STRING,
      'key' => shape(
        'type' => \TType::STRING,
      ),
      'val' => shape(
        'type' => \TType::STRING,
      ),
      'format' => 'harray',
    ),
    5 => shape(
      'var' => 'map_of_string_to_i32',
      'type' => \TType::MAP,
      'ktype' => \TType::STRING,
      'vtype' => \TType::I32,
      'key' => shape(
        'type' => \TType::STRING,
      ),
      'val' => shape(
        'type' => \TType::I32,
      ),
      'format' => 'harray',
    ),
    6 => shape(
      'var' => 'map_of_string_to_A',
      'type' => \TType::MAP,
      'ktype' => \TType::STRING,
      'vtype' => \TType::STRUCT,
      'key' => shape(
        'type' => \TType::STRING,
      ),
      'val' => shape(
        'type' => \TType::STRUCT,
        'class' => A::class,
      ),
      'format' => 'harray',
    ),
    7 => shape(
      'var' => 'map_of_string_to_self',
      'type' => \TType::MAP,
      'ktype' => \TType::STRING,
      'vtype' => \TType::STRUCT,
      'key' => shape(
        'type' => \TType::STRING,
      ),
      'val' => shape(
        'type' => \TType::STRUCT,
        'class' => B::class,
      ),
      'format' => 'harray',
    ),
    8 => shape(
      'var' => 'map_of_string_to_list_of_A',
      'type' => \TType::MAP,
      'ktype' => \TType::STRING,
      'vtype' => \TType::LST,
      'key' => shape(
        'type' => \TType::STRING,
      ),
      'val' => shape(
        'type' => \TType::LST,
        'etype' => \TType::STRUCT,
        'elem' => shape(
          'type' => \TType::STRUCT,
          'class' => A::class,
        ),
        'format' => 'harray',
      ),
      'format' => 'harray',
    ),
    9 => shape(
      'var' => 'map_of_string_to_map_of_string_to_i32',
      'type' => \TType::MAP,
      'ktype' => \TType::STRING,
      'vtype' => \TType::MAP,
      'key' => shape(
        'type' => \TType::STRING,
      ),
      'val' => shape(
        'type' => \TType::MAP,
        'ktype' => \TType::STRING,
        'vtype' => \TType::I32,
        'key' => shape(
          'type' => \TType::STRING,
        ),
        'val' => shape(
          'type' => \TType::I32,
        ),
        'format' => 'harray',
      ),
      'format' => 'harray',
    ),
    10 => shape(
      'var' => 'map_of_string_to_map_of_string_to_A',
      'type' => \TType::MAP,
      'ktype' => \TType::STRING,
      'vtype' => \TType::MAP,
      'key' => shape(
        'type' => \TType::STRING,
      ),
      'val' => shape(
        'type' => \TType::MAP,
        'ktype' => \TType::STRING,
        'vtype' => \TType::STRUCT,
        'key' => shape(
          'type' => \TType::STRING,
        ),
        'val' => shape(
          'type' => \TType::STRUCT,
          'class' => A::class,
        ),
        'format' => 'harray',
      ),
      'format' => 'harray',
    ),
    11 => shape(
      'var' => 'map_of_string_to_list_of_i32',
      'type' => \TType::MAP,
      'ktype' => \TType::STRING,
      'vtype' => \TType::LST,
      'key' => shape(
        'type' => \TType::STRING,
      ),
      'val' => shape(
        'type' => \TType::LST,
        'etype' => \TType::I32,
        'elem' => shape(
          'type' => \TType::I32,
        ),
        'format' => 'harray',
      ),
      'format' => 'harray',
    ),
    12 => shape(
      'var' => 'map_of_string_to_set_of_i32',
      'type' => \TType::MAP,
      'ktype' => \TType::STRING,
      'vtype' => \TType::SET,
      'key' => shape(
        'type' => \TType::STRING,
      ),
      'val' => shape(
        'type' => \TType::SET,
        'etype' => \TType::I32,
        'elem' => shape(
          'type' => \TType::I32,
        ),
        'format' => 'harray',
      ),
      'format' => 'harray',
    ),
    13 => shape(
      'var' => 'list_of_string',
      'type' => \TType::LST,
      'etype' => \TType::STRING,
      'elem' => shape(
        'type' => \TType::STRING,
      ),
      'format' => 'harray',
    ),
    14 => shape(
      'var' => 'list_of_map_of_string_to_A',
      'type' => \TType::LST,
      'etype' => \TType::MAP,
      'elem' => shape(
        'type' => \TType::MAP,
        'ktype' => \TType::STRING,
        'vtype' => \TType::STRUCT,
        'key' => shape(
          'type' => \TType::STRING,
        ),
        'val' => shape(
          'type' => \TType::STRUCT,
          'class' => A::class,
        ),
        'format' => 'harray',
      ),
      'format' => 'harray',
    ),
    17 => shape(
      'var' => 'list_of_map_of_string_to_list_of_A',
      'type' => \TType::LST,
      'etype' => \TType::MAP,
      'elem' => shape(
        'type' => \TType::MAP,
        'ktype' => \TType::STRING,
        'vtype' => \TType::LST,
        'key' => shape(
          'type' => \TType::STRING,
        ),
        'val' => shape(
          'type' => \TType::LST,
          'etype' => \TType::STRUCT,
          'elem' => shape(
            'type' => \TType::STRUCT,
            'class' => A::class,
          ),
          'format' => 'harray',
        ),
        'format' => 'harray',
      ),
      'format' => 'harray',
    ),
    18 => shape(
      'var' => 'list_of_i32',
      'type' => \TType::LST,
      'etype' => \TType::I32,
      'elem' => shape(
        'type' => \TType::I32,
      ),
      'format' => 'harray',
    ),
    19 => shape(
      'var' => 'map_of_string_to_list_of_string',
      'type' => \TType::MAP,
      'ktype' => \TType::STRING,
      'vtype' => \TType::LST,
      'key' => shape(
        'type' => \TType::STRING,
      ),
      'val' => shape(
        'type' => \TType::LST,
        'etype' => \TType::STRING,
        'elem' => shape(
          'type' => \TType::STRING,
        ),
        'format' => 'harray',
      ),
      'format' => 'harray',
    ),
    20 => shape(
      'var' => 'set_of_i32',
      'type' => \TType::SET,
      'etype' => \TType::I32,
      'elem' => shape(
        'type' => \TType::I32,
      ),
      'format' => 'harray',
    ),
    21 => shape(
      'var' => 'set_of_string',
      'type' => \TType::SET,
      'etype' => \TType::STRING,
      'elem' => shape(
        'type' => \TType::STRING,
      ),
      'format' => 'harray',
    ),
  ];
  const dict<string, int> FIELDMAP = dict[
    'just_an_A' => 1,
    'just_an_enum' => 2,
    'map_of_string_to_string' => 4,
    'map_of_string_to_i32' => 5,
    'map_of_string_to_A' => 6,
    'map_of_string_to_self' => 7,
    'map_of_string_to_list_of_A' => 8,
    'map_of_string_to_map_of_string_to_i32' => 9,
    'map_of_string_to_map_of_string_to_A' => 10,
    'map_of_string_to_list_of_i32' => 11,
    'map_of_string_to_set_of_i32' => 12,
    'list_of_string' => 13,
    'list_of_map_of_string_to_A' => 14,
    'list_of_map_of_string_to_list_of_A' => 17,
    'list_of_i32' => 18,
    'map_of_string_to_list_of_string' => 19,
    'set_of_i32' => 20,
    'set_of_string' => 21,
  ];

  const type TConstructorShape = shape(
    ?'just_an_A' => ?A,
    ?'just_an_enum' => ?Enum,
    ?'map_of_string_to_string' => ?dict<string, string>,
    ?'map_of_string_to_i32' => ?dict<string, int>,
    ?'map_of_string_to_A' => ?dict<string, A>,
    ?'map_of_string_to_self' => ?dict<string, B>,
    ?'map_of_string_to_list_of_A' => ?dict<string, vec<A>>,
    ?'map_of_string_to_map_of_string_to_i32' => ?dict<string, dict<string, int>>,
    ?'map_of_string_to_map_of_string_to_A' => ?dict<string, dict<string, A>>,
    ?'map_of_string_to_list_of_i32' => ?dict<string, vec<int>>,
    ?'map_of_string_to_set_of_i32' => ?dict<string, keyset<int>>,
    ?'list_of_string' => ?vec<string>,
    ?'list_of_map_of_string_to_A' => ?vec<dict<string, A>>,
    ?'list_of_map_of_string_to_list_of_A' => ?vec<dict<string, vec<A>>>,
    ?'list_of_i32' => ?vec<int>,
    ?'map_of_string_to_list_of_string' => ?dict<string, vec<string>>,
    ?'set_of_i32' => ?keyset<int>,
    ?'set_of_string' => ?keyset<string>,
  );

  const type TShape = shape(
    ?'just_an_A' => ?A::TShape,
    ?'just_an_enum' => ?Enum,
    ?'map_of_string_to_string' => ?dict<arraykey, string>,
    ?'map_of_string_to_i32' => ?dict<arraykey, int>,
    ?'map_of_string_to_A' => ?dict<arraykey, A::TShape>,
    ?'map_of_string_to_self' => ?dict<arraykey, B::TShape>,
    ?'map_of_string_to_list_of_A' => ?dict<arraykey, vec<A::TShape>>,
    ?'map_of_string_to_map_of_string_to_i32' => ?dict<arraykey, dict<arraykey, int>>,
    ?'map_of_string_to_map_of_string_to_A' => ?dict<arraykey, dict<arraykey, A::TShape>>,
    ?'map_of_string_to_list_of_i32' => ?dict<arraykey, vec<int>>,
    ?'map_of_string_to_set_of_i32' => ?dict<arraykey, keyset<int>>,
    ?'list_of_string' => ?vec<string>,
    ?'list_of_map_of_string_to_A' => ?vec<dict<arraykey, A::TShape>>,
    ?'list_of_map_of_string_to_list_of_A' => ?vec<dict<arraykey, vec<A::TShape>>>,
    ?'list_of_i32' => ?vec<int>,
    ?'map_of_string_to_list_of_string' => ?dict<arraykey, vec<string>>,
    ?'set_of_i32' => ?keyset<int>,
    ?'set_of_string' => ?keyset<string>,
  );
  const int STRUCTURAL_ID = 7779248235937077517;
  /**
   * Original thrift field:-
   * 1: module.A just_an_A
   */
  public ?A $just_an_A;
  /**
   * Original thrift field:-
   * 2: module.Enum just_an_enum
   */
  public ?Enum $just_an_enum;
  /**
   * Original thrift field:-
   * 4: map<string, string> map_of_string_to_string
   */
  public ?dict<string, string> $map_of_string_to_string;
  /**
   * Original thrift field:-
   * 5: map<string, i32> map_of_string_to_i32
   */
  public ?dict<string, int> $map_of_string_to_i32;
  /**
   * Original thrift field:-
   * 6: map<string, module.A> map_of_string_to_A
   */
  public ?dict<string, A> $map_of_string_to_A;
  /**
   * Original thrift field:-
   * 7: map<string, module.B> map_of_string_to_self
   */
  public ?dict<string, B> $map_of_string_to_self;
  /**
   * Original thrift field:-
   * 8: map<string, list<module.A>> map_of_string_to_list_of_A
   */
  public ?dict<string, vec<A>> $map_of_string_to_list_of_A;
  /**
   * Original thrift field:-
   * 9: map<string, map<string, i32>> map_of_string_to_map_of_string_to_i32
   */
  public ?dict<string, dict<string, int>> $map_of_string_to_map_of_string_to_i32;
  /**
   * Original thrift field:-
   * 10: map<string, map<string, module.A>> map_of_string_to_map_of_string_to_A
   */
  public ?dict<string, dict<string, A>> $map_of_string_to_map_of_string_to_A;
  /**
   * Original thrift field:-
   * 11: map<string, list<i32>> map_of_string_to_list_of_i32
   */
  public ?dict<string, vec<int>> $map_of_string_to_list_of_i32;
  /**
   * Original thrift field:-
   * 12: map<string, set<i32>> map_of_string_to_set_of_i32
   */
  public ?dict<string, keyset<int>> $map_of_string_to_set_of_i32;
  /**
   * Original thrift field:-
   * 13: list<string> list_of_string
   */
  public ?vec<string> $list_of_string;
  /**
   * Original thrift field:-
   * 14: list<map<string, module.A>> list_of_map_of_string_to_A
   */
  public ?vec<dict<string, A>> $list_of_map_of_string_to_A;
  /**
   * Original thrift field:-
   * 17: list<map<string, list<module.A>>> list_of_map_of_string_to_list_of_A
   */
  public ?vec<dict<string, vec<A>>> $list_of_map_of_string_to_list_of_A;
  /**
   * Original thrift field:-
   * 18: list<i32> list_of_i32
   */
  public ?vec<int> $list_of_i32;
  /**
   * Original thrift field:-
   * 19: map<string, list<string>> map_of_string_to_list_of_string
   */
  public ?dict<string, vec<string>> $map_of_string_to_list_of_string;
  /**
   * Original thrift field:-
   * 20: set<i32> set_of_i32
   */
  public ?keyset<int> $set_of_i32;
  /**
   * Original thrift field:-
   * 21: set<string> set_of_string
   */
  public ?keyset<string> $set_of_string;

  public function __construct(?A $just_an_A = null, ?Enum $just_an_enum = null, ?dict<string, string> $map_of_string_to_string = null, ?dict<string, int> $map_of_string_to_i32 = null, ?dict<string, A> $map_of_string_to_A = null, ?dict<string, B> $map_of_string_to_self = null, ?dict<string, vec<A>> $map_of_string_to_list_of_A = null, ?dict<string, dict<string, int>> $map_of_string_to_map_of_string_to_i32 = null, ?dict<string, dict<string, A>> $map_of_string_to_map_of_string_to_A = null, ?dict<string, vec<int>> $map_of_string_to_list_of_i32 = null, ?dict<string, keyset<int>> $map_of_string_to_set_of_i32 = null, ?vec<string> $list_of_string = null, ?vec<dict<string, A>> $list_of_map_of_string_to_A = null, ?vec<dict<string, vec<A>>> $list_of_map_of_string_to_list_of_A = null, ?vec<int> $list_of_i32 = null, ?dict<string, vec<string>> $map_of_string_to_list_of_string = null, ?keyset<int> $set_of_i32 = null, ?keyset<string> $set_of_string = null)[] {
    $this->just_an_A = $just_an_A;
    $this->just_an_enum = $just_an_enum;
    $this->map_of_string_to_string = $map_of_string_to_string;
    $this->map_of_string_to_i32 = $map_of_string_to_i32;
    $this->map_of_string_to_A = $map_of_string_to_A;
    $this->map_of_string_to_self = $map_of_string_to_self;
    $this->map_of_string_to_list_of_A = $map_of_string_to_list_of_A;
    $this->map_of_string_to_map_of_string_to_i32 = $map_of_string_to_map_of_string_to_i32;
    $this->map_of_string_to_map_of_string_to_A = $map_of_string_to_map_of_string_to_A;
    $this->map_of_string_to_list_of_i32 = $map_of_string_to_list_of_i32;
    $this->map_of_string_to_set_of_i32 = $map_of_string_to_set_of_i32;
    $this->list_of_string = $list_of_string;
    $this->list_of_map_of_string_to_A = $list_of_map_of_string_to_A;
    $this->list_of_map_of_string_to_list_of_A = $list_of_map_of_string_to_list_of_A;
    $this->list_of_i32 = $list_of_i32;
    $this->map_of_string_to_list_of_string = $map_of_string_to_list_of_string;
    $this->set_of_i32 = $set_of_i32;
    $this->set_of_string = $set_of_string;
  }

  public static function withDefaultValues()[]: this {
    return new static();
  }

  public static function fromShape(self::TConstructorShape $shape)[]: this {
    return new static(
      Shapes::idx($shape, 'just_an_A'),
      Shapes::idx($shape, 'just_an_enum'),
      Shapes::idx($shape, 'map_of_string_to_string'),
      Shapes::idx($shape, 'map_of_string_to_i32'),
      Shapes::idx($shape, 'map_of_string_to_A'),
      Shapes::idx($shape, 'map_of_string_to_self'),
      Shapes::idx($shape, 'map_of_string_to_list_of_A'),
      Shapes::idx($shape, 'map_of_string_to_map_of_string_to_i32'),
      Shapes::idx($shape, 'map_of_string_to_map_of_string_to_A'),
      Shapes::idx($shape, 'map_of_string_to_list_of_i32'),
      Shapes::idx($shape, 'map_of_string_to_set_of_i32'),
      Shapes::idx($shape, 'list_of_string'),
      Shapes::idx($shape, 'list_of_map_of_string_to_A'),
      Shapes::idx($shape, 'list_of_map_of_string_to_list_of_A'),
      Shapes::idx($shape, 'list_of_i32'),
      Shapes::idx($shape, 'map_of_string_to_list_of_string'),
      Shapes::idx($shape, 'set_of_i32'),
      Shapes::idx($shape, 'set_of_string'),
    );
  }

  public function getName()[]: string {
    return 'C';
  }

  public function clearTerseFields()[write_props]: void {
  }

  public static function getStructMetadata()[]: \tmeta_ThriftStruct {
    return tmeta_ThriftStruct::fromShape(
      shape(
        "name" => "module.C",
        "fields" => vec[
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 1,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_struct" => tmeta_ThriftStructType::fromShape(
                    shape(
                      "name" => "module.A",
                    )
                  ),
                )
              ),
              "name" => "just_an_A",
              "is_optional" => true,
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 2,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_enum" => tmeta_ThriftEnumType::fromShape(
                    shape(
                      "name" => "module.Enum",
                    )
                  ),
                )
              ),
              "name" => "just_an_enum",
              "is_optional" => true,
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 4,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_map" => tmeta_ThriftMapType::fromShape(
                    shape(
                      "keyType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "map_of_string_to_string",
              "is_optional" => true,
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 5,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_map" => tmeta_ThriftMapType::fromShape(
                    shape(
                      "keyType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_I32_TYPE,
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "map_of_string_to_i32",
              "is_optional" => true,
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 6,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_map" => tmeta_ThriftMapType::fromShape(
                    shape(
                      "keyType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_struct" => tmeta_ThriftStructType::fromShape(
                            shape(
                              "name" => "module.A",
                            )
                          ),
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "map_of_string_to_A",
              "is_optional" => true,
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 7,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_map" => tmeta_ThriftMapType::fromShape(
                    shape(
                      "keyType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_struct" => tmeta_ThriftStructType::fromShape(
                            shape(
                              "name" => "module.B",
                            )
                          ),
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "map_of_string_to_self",
              "is_optional" => true,
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 8,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_map" => tmeta_ThriftMapType::fromShape(
                    shape(
                      "keyType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_list" => tmeta_ThriftListType::fromShape(
                            shape(
                              "valueType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_struct" => tmeta_ThriftStructType::fromShape(
                                    shape(
                                      "name" => "module.A",
                                    )
                                  ),
                                )
                              ),
                            )
                          ),
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "map_of_string_to_list_of_A",
              "is_optional" => true,
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 9,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_map" => tmeta_ThriftMapType::fromShape(
                    shape(
                      "keyType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_map" => tmeta_ThriftMapType::fromShape(
                            shape(
                              "keyType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                                )
                              ),
                              "valueType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_I32_TYPE,
                                )
                              ),
                            )
                          ),
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "map_of_string_to_map_of_string_to_i32",
              "is_optional" => true,
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 10,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_map" => tmeta_ThriftMapType::fromShape(
                    shape(
                      "keyType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_map" => tmeta_ThriftMapType::fromShape(
                            shape(
                              "keyType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                                )
                              ),
                              "valueType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_struct" => tmeta_ThriftStructType::fromShape(
                                    shape(
                                      "name" => "module.A",
                                    )
                                  ),
                                )
                              ),
                            )
                          ),
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "map_of_string_to_map_of_string_to_A",
              "is_optional" => true,
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 11,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_map" => tmeta_ThriftMapType::fromShape(
                    shape(
                      "keyType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_list" => tmeta_ThriftListType::fromShape(
                            shape(
                              "valueType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_I32_TYPE,
                                )
                              ),
                            )
                          ),
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "map_of_string_to_list_of_i32",
              "is_optional" => true,
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 12,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_map" => tmeta_ThriftMapType::fromShape(
                    shape(
                      "keyType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_set" => tmeta_ThriftSetType::fromShape(
                            shape(
                              "valueType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_I32_TYPE,
                                )
                              ),
                            )
                          ),
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "map_of_string_to_set_of_i32",
              "is_optional" => true,
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 13,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_list" => tmeta_ThriftListType::fromShape(
                    shape(
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "list_of_string",
              "is_optional" => true,
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 14,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_list" => tmeta_ThriftListType::fromShape(
                    shape(
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_map" => tmeta_ThriftMapType::fromShape(
                            shape(
                              "keyType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                                )
                              ),
                              "valueType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_struct" => tmeta_ThriftStructType::fromShape(
                                    shape(
                                      "name" => "module.A",
                                    )
                                  ),
                                )
                              ),
                            )
                          ),
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "list_of_map_of_string_to_A",
              "is_optional" => true,
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 17,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_list" => tmeta_ThriftListType::fromShape(
                    shape(
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_map" => tmeta_ThriftMapType::fromShape(
                            shape(
                              "keyType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                                )
                              ),
                              "valueType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_list" => tmeta_ThriftListType::fromShape(
                                    shape(
                                      "valueType" => tmeta_ThriftType::fromShape(
                                        shape(
                                          "t_struct" => tmeta_ThriftStructType::fromShape(
                                            shape(
                                              "name" => "module.A",
                                            )
                                          ),
                                        )
                                      ),
                                    )
                                  ),
                                )
                              ),
                            )
                          ),
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "list_of_map_of_string_to_list_of_A",
              "is_optional" => true,
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 18,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_list" => tmeta_ThriftListType::fromShape(
                    shape(
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_I32_TYPE,
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "list_of_i32",
              "is_optional" => true,
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 19,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_map" => tmeta_ThriftMapType::fromShape(
                    shape(
                      "keyType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_list" => tmeta_ThriftListType::fromShape(
                            shape(
                              "valueType" => tmeta_ThriftType::fromShape(
                                shape(
                                  "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                                )
                              ),
                            )
                          ),
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "map_of_string_to_list_of_string",
              "is_optional" => true,
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 20,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_set" => tmeta_ThriftSetType::fromShape(
                    shape(
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_I32_TYPE,
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "set_of_i32",
              "is_optional" => true,
            )
          ),
          tmeta_ThriftField::fromShape(
            shape(
              "id" => 21,
              "type" => tmeta_ThriftType::fromShape(
                shape(
                  "t_set" => tmeta_ThriftSetType::fromShape(
                    shape(
                      "valueType" => tmeta_ThriftType::fromShape(
                        shape(
                          "t_primitive" => tmeta_ThriftPrimitiveType::THRIFT_STRING_TYPE,
                        )
                      ),
                    )
                  ),
                )
              ),
              "name" => "set_of_string",
              "is_optional" => true,
            )
          ),
        ],
        "is_union" => false,
      )
    );
  }

  public static function getAllStructuredAnnotations()[write_props]: \TStructAnnotations {
    return shape(
      'struct' => dict[],
      'fields' => dict[
      ],
    );
  }

  public static function __stringifyMapKeys<T>(dict<arraykey, T> $m)[]: dict<string, T> {
    return Dict\map_keys($m, $key ==> (string)$key);
  }

  public static function __fromShape(self::TShape $shape)[]: this {
    return new static(
      Shapes::idx($shape, 'just_an_A') === null ? null : (A::__fromShape($shape['just_an_A'])),
      Shapes::idx($shape, 'just_an_enum'),
      Shapes::idx($shape, 'map_of_string_to_string') === null ? null : ($shape['map_of_string_to_string']
        |> self::__stringifyMapKeys($$)),
      Shapes::idx($shape, 'map_of_string_to_i32') === null ? null : ($shape['map_of_string_to_i32']
        |> self::__stringifyMapKeys($$)),
      Shapes::idx($shape, 'map_of_string_to_A') === null ? null : ($shape['map_of_string_to_A']
        |> Dict\map(
          self::__stringifyMapKeys($$),
          $_val0 ==> $_val0
            |> A::__fromShape($$),
        )),
      Shapes::idx($shape, 'map_of_string_to_self') === null ? null : ($shape['map_of_string_to_self']
        |> Dict\map(
          self::__stringifyMapKeys($$),
          $_val1 ==> $_val1
            |> B::__fromShape($$),
        )),
      Shapes::idx($shape, 'map_of_string_to_list_of_A') === null ? null : ($shape['map_of_string_to_list_of_A']
        |> Dict\map(
          self::__stringifyMapKeys($$),
          $_val3 ==> $_val3
            |> Vec\map(
              $$,
              $_val2 ==> $_val2
                |> A::__fromShape($$),
            ),
        )),
      Shapes::idx($shape, 'map_of_string_to_map_of_string_to_i32') === null ? null : ($shape['map_of_string_to_map_of_string_to_i32']
        |> Dict\map(
          self::__stringifyMapKeys($$),
          $_val4 ==> $_val4
            |> self::__stringifyMapKeys($$),
        )),
      Shapes::idx($shape, 'map_of_string_to_map_of_string_to_A') === null ? null : ($shape['map_of_string_to_map_of_string_to_A']
        |> Dict\map(
          self::__stringifyMapKeys($$),
          $_val6 ==> $_val6
            |> Dict\map(
              self::__stringifyMapKeys($$),
              $_val5 ==> $_val5
                |> A::__fromShape($$),
            ),
        )),
      Shapes::idx($shape, 'map_of_string_to_list_of_i32') === null ? null : ($shape['map_of_string_to_list_of_i32']
        |> self::__stringifyMapKeys($$)),
      Shapes::idx($shape, 'map_of_string_to_set_of_i32') === null ? null : ($shape['map_of_string_to_set_of_i32']
        |> self::__stringifyMapKeys($$)),
      Shapes::idx($shape, 'list_of_string'),
      Shapes::idx($shape, 'list_of_map_of_string_to_A') === null ? null : ($shape['list_of_map_of_string_to_A']
        |> Vec\map(
          $$,
          $_val8 ==> $_val8
            |> Dict\map(
              self::__stringifyMapKeys($$),
              $_val7 ==> $_val7
                |> A::__fromShape($$),
            ),
        )),
      Shapes::idx($shape, 'list_of_map_of_string_to_list_of_A') === null ? null : ($shape['list_of_map_of_string_to_list_of_A']
        |> Vec\map(
          $$,
          $_val11 ==> $_val11
            |> Dict\map(
              self::__stringifyMapKeys($$),
              $_val10 ==> $_val10
                |> Vec\map(
                  $$,
                  $_val9 ==> $_val9
                    |> A::__fromShape($$),
                ),
            ),
        )),
      Shapes::idx($shape, 'list_of_i32'),
      Shapes::idx($shape, 'map_of_string_to_list_of_string') === null ? null : ($shape['map_of_string_to_list_of_string']
        |> self::__stringifyMapKeys($$)),
      Shapes::idx($shape, 'set_of_i32'),
      Shapes::idx($shape, 'set_of_string'),
    );
  }

  public function __toShape()[]: self::TShape {
    return shape(
      'just_an_A' => $this->just_an_A?->__toShape(),
      'just_an_enum' => $this->just_an_enum,
      'map_of_string_to_string' => $this->map_of_string_to_string,
      'map_of_string_to_i32' => $this->map_of_string_to_i32,
      'map_of_string_to_A' => $this->map_of_string_to_A
        |> $$ === null 
          ? null 
          : Dict\map(
            $$,
            ($_val0) ==> $_val0->__toShape(),
          ),
      'map_of_string_to_self' => $this->map_of_string_to_self
        |> $$ === null 
          ? null 
          : Dict\map(
            $$,
            ($_val0) ==> $_val0->__toShape(),
          ),
      'map_of_string_to_list_of_A' => $this->map_of_string_to_list_of_A
        |> $$ === null 
          ? null 
          : Dict\map(
            $$,
            ($_val0) ==> $_val0
              |> Vec\map(
                $$,
                ($_val1) ==> $_val1->__toShape(),
              ),
          ),
      'map_of_string_to_map_of_string_to_i32' => $this->map_of_string_to_map_of_string_to_i32,
      'map_of_string_to_map_of_string_to_A' => $this->map_of_string_to_map_of_string_to_A
        |> $$ === null 
          ? null 
          : Dict\map(
            $$,
            ($_val0) ==> $_val0
              |> Dict\map(
                $$,
                ($_val1) ==> $_val1->__toShape(),
              ),
          ),
      'map_of_string_to_list_of_i32' => $this->map_of_string_to_list_of_i32,
      'map_of_string_to_set_of_i32' => $this->map_of_string_to_set_of_i32,
      'list_of_string' => $this->list_of_string,
      'list_of_map_of_string_to_A' => $this->list_of_map_of_string_to_A
        |> $$ === null 
          ? null 
          : Vec\map(
            $$,
            ($_val0) ==> $_val0
              |> Dict\map(
                $$,
                ($_val1) ==> $_val1->__toShape(),
              ),
          ),
      'list_of_map_of_string_to_list_of_A' => $this->list_of_map_of_string_to_list_of_A
        |> $$ === null 
          ? null 
          : Vec\map(
            $$,
            ($_val0) ==> $_val0
              |> Dict\map(
                $$,
                ($_val1) ==> $_val1
                  |> Vec\map(
                    $$,
                    ($_val2) ==> $_val2->__toShape(),
                  ),
              ),
          ),
      'list_of_i32' => $this->list_of_i32,
      'map_of_string_to_list_of_string' => $this->map_of_string_to_list_of_string,
      'set_of_i32' => $this->set_of_i32,
      'set_of_string' => $this->set_of_string,
    );
  }
  public function getInstanceKey()[write_props]: string {
    return \TCompactSerializer::serialize($this);
  }

}

