[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([3:10-11], "\\f");
      fd_fun =
      { f_span = [3:1-10:2]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_tparams = []; f_ret = ((), (Some ([3:23-27], (Hprim Tvoid))));
        f_params =
        [{ param_annotation = (); param_type_hint = ((), (Some ([3:12-17], (Happly (([3:12-17], "\\HH\\supportdyn"), [([3:12-17], Hmixed)]))))); 
           param_pos = [3:18-20]; param_name = "$v"; param_info = Param_required; 
           param_readonly = None; param_splat = None; param_callconv = Pnormal; 
           param_named = None; param_user_attributes = []; param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None;
        f_body =
        { fb_ast =
          [([4:3-9:4],
            (Match
               { sm_expr = ((), [4:10-12], (Lvar ([4:10-12], $v)));
                 sm_arms =
                 [{ sma_pat = (PRefinement { pr_pos = [5:5-12]; pr_id = (Some ([5:5-12], $i)); pr_hint = ([5:9-12], (Hprim Tint)) });
                    sma_body =
                    [([5:18-34],
                      (Expr
                         ((), [5:18-34],
                          (Call
                             { func = ((), [5:18-22], (Id ([5:18-22], "echo"))); 
                               targs = []; args = [(Anormal ((), [5:23-33], (String2 [((), [5:24-28], (String "int ")); ((), [5:28-30], (Lvar ([5:28-30], $i))); ((), [5:30-32], (String "\n"))])))];
                               unpacked_arg = None }))))
                      ]
                    };
                   { sma_pat = (PRefinement { pr_pos = [6:5-14]; pr_id = None; pr_hint = ([6:8-14], (Hprim Tstring)) });
                     sma_body =
                     [([6:20-39],
                       (Expr
                          ((), [6:20-39],
                           (Call
                              { func = ((), [6:20-24], (Id ([6:20-24], "echo"))); 
                                targs = [];
                                args = [(Anormal ((), [6:25-38], (String2 [((), [6:26-33], (String "string ")); ((), [6:33-35], (Lvar ([6:33-35], $v))); ((), [6:35-37], (String "\n"))])))];
                                unpacked_arg = None }))))
                       ]
                     };
                   { sma_pat = (PVar { pv_pos = [7:5-6]; pv_id = None });
                     sma_body =
                     [([7:12-29],
                       (Expr ((), [7:12-29], (Call { func = ((), [7:12-16], (Id ([7:12-16], "echo"))); targs = []; args = [(Anormal ((), [7:17-28], (String "unknown\n")))]; unpacked_arg = None }))))]
                     };
                   { sma_pat = (PVar { pv_pos = [8:5-7]; pv_id = (Some ([8:5-7], $x)) });
                     sma_body =
                     [([8:13-34],
                       (Expr
                          ((), [8:13-34], (Call { func = ((), [8:13-17], (Id ([8:13-17], "echo"))); targs = []; args = [(Anormal ((), [8:18-33], (String "unreachable\n")))]; unpacked_arg = None }))))
                       ]
                     }
                   ]
                 }))
            ]
          };
        f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([3:10-11], "__SupportDynamicType"); ua_params = [] }]; 
        f_external = false; f_doc_comment = None };
      fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
      fd_package = None })
  ]
