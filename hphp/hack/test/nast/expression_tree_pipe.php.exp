[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([3:10-14], "\\test");
      fd_fun =
      { f_span = [3:1-5:2]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_tparams = []; f_ret = ((), (Some ([3:18-22], (Hprim Tvoid)))); 
        f_params = []; f_ctxs = None; f_unsafe_ctxs = None;
        f_body =
        { fb_ast =
          [([4:3-40],
            (Expr
               ((), [4:3-39],
                (Pipe (([4:3-39], $$), ((), [4:3-4], (Int "1")),
                   ((), [4:8-39],
                    (ExpressionTree
                       { et_class = ([4:8-18], "\\ExampleDsl");
                         et_runtime_expr =
                         ((), [4:19-38],
                          (Call
                             { func =
                               ((), [4:19-38],
                                (Lfun (
                                   { f_span = [4:19-38]; f_readonly_this = None; 
                                     f_annotation = (); f_readonly_ret = None; 
                                     f_tparams = []; f_ret = ((), None);
                                     f_params =
                                     [{ param_annotation = (); param_type_hint = ((), None); 
                                        param_pos = [4:22-24]; param_name = "$0dollardollar"; 
                                        param_info = Param_required; 
                                        param_readonly = None; param_splat = None; 
                                        param_callconv = Pnormal; param_named = None; 
                                        param_user_attributes = []; param_visibility = None }
                                       ];
                                     f_ctxs = None; f_unsafe_ctxs = None;
                                     f_body =
                                     { fb_ast =
                                       [([4:22-36],
                                         (Expr
                                            ((), [4:22-36],
                                             (Assign (((), [4:22-36], (Lvar ([4:22-36], $0splice0))), None,
                                                ((), [4:22-36],
                                                 (ET_Splice
                                                    { extract_client_type = false; 
                                                      contains_await = false; 
                                                      macro_variables = None; 
                                                      temp_lid = (Some $0splice0);
                                                      spliced_expr =
                                                      ((), [4:22-36],
                                                       (Call
                                                          { func = ((), [4:22-36], (Class_const (((), [4:22-36], (CI ([4:22-36], "\\ExampleDsl"))), ([4:22-36], "lift")))); 
                                                            targs = [];
                                                            args =
                                                            [(Anormal
                                                                ((), [4:22-36],
                                                                 (Pipe ((
                                                                    [4:22-36], $$),
                                                                    (
                                                                    (), [4:22-30],
                                                                    (
                                                                    Pipe ((
                                                                    [4:22-30], $$), (
                                                                    (), [4:22-24], (Lvar ([4:22-24], $0dollardollar))), (
                                                                    (), [4:28-30], (Dollardollar ([4:28-30], $$))), false))), (
                                                                    (), [4:34-36], (Dollardollar ([4:34-36], $$))), false))))
                                                              ];
                                                            unpacked_arg = None }))
                                                      }))
                                                )))));
                                         ([4:19-38],
                                          (Return
                                             (Some ((), [4:8-18],
                                                    (Call
                                                       { func = ((), [4:8-18], (Class_const (((), [4:8-18], (CI ([4:8-18], "\\ExampleDsl"))), ([4:8-18], "makeTree")))); 
                                                         targs = [];
                                                         args =
                                                         [(Anormal
                                                             ((), [4:19-38],
                                                              (Shape
                                                                 [((SFlit_str ([4:19-38], "path")), ((), [4:19-38], (Id ([4:19-38], "\\__FILE__"))));
                                                                   ((SFlit_str ([4:19-38], "start_line")), ((), [4:19-38], (Int "4")));
                                                                   ((SFlit_str ([4:19-38], "end_line")), ((), [4:19-38], (Int "4")));
                                                                   ((SFlit_str ([4:19-38], "start_column")), ((), [4:19-38], (Int "18")));
                                                                   ((SFlit_str ([4:19-38], "end_column")), ((), [4:19-38], (Int "37")))])));
                                                           (Anormal
                                                              ((), [4:8-18],
                                                               (Shape
                                                                  [((
                                                                    SFlit_str ([4:8-18], "splices")),
                                                                    (
                                                                    (), [4:8-18],
                                                                    (
                                                                    KeyValCollection ((
                                                                    [4:8-18], Dict), None, 
                                                                    [(((), [4:22-36], (String "$0splice0")), ((), [4:22-36], (Lvar ([4:22-36], $0splice0))))]))));
                                                                    (
                                                                    (SFlit_str ([4:8-18], "functions")), ((), [4:8-18], (ValCollection (([4:8-18], Vec), None, []))));
                                                                    (
                                                                    (SFlit_str ([4:8-18], "static_methods")), ((), [4:8-18], (ValCollection (([4:8-18], Vec), None, []))));
                                                                    (
                                                                    (SFlit_str ([4:8-18], "variables")), ((), [4:8-18], (ValCollection (([4:8-18], Vec), None, []))));
                                                                    (
                                                                    (SFlit_str ([4:8-18], "lexically_enclosing_tree")), ((), [Pos.none], Null));
                                                                    (
                                                                    (
                                                                    SFlit_str ([4:8-18], "type")),
                                                                    (
                                                                    (), [4:19-38],
                                                                    (
                                                                    Efun
                                                                    { ef_fun =
                                                                    { f_span = [4:19-38]; 
                                                                    f_readonly_this = None; 
                                                                    f_annotation = (); 
                                                                    f_readonly_ret = None; 
                                                                    f_tparams = []; 
                                                                    f_ret = ((), None); 
                                                                    f_params = []; 
                                                                    f_ctxs = (Some ([4:19-38], [([4:19-38], (Happly (([4:19-38], "\\HH\\Contexts\\defaults"), [])))])); 
                                                                    f_unsafe_ctxs = None;
                                                                    f_body =
                                                                    { fb_ast =
                                                                    [([4:19-38],
                                                                    (Return
                                                                    (Some (
                                                                    (), [4:19-38],
                                                                    (
                                                                    ET_Splice
                                                                    { extract_client_type = true; 
                                                                    contains_await = false; 
                                                                    macro_variables = None; 
                                                                    temp_lid = (Some $0splice0); 
                                                                    spliced_expr = ((), [4:22-36], (Lvar ([4:22-36], $0splice0))) })))))] }; 
                                                                    f_fun_kind = FSync; 
                                                                    f_user_attributes = []; 
                                                                    f_external = false; 
                                                                    f_doc_comment = None }; 
                                                                    ef_use = [((), ([4:8-18], $0splice0))]; 
                                                                    ef_closure_class_name = None; 
                                                                    ef_is_expr_tree_virtual_expr = false })))])));
                                                           (Anormal
                                                              ((), [4:19-38],
                                                               (Lfun (
                                                                  { f_span = [4:19-38]; 
                                                                    f_readonly_this = None; 
                                                                    f_annotation = (); 
                                                                    f_readonly_ret = None; 
                                                                    f_tparams = []; 
                                                                    f_ret = ((), None);
                                                                    f_params =
                                                                    [{ param_annotation = (); 
                                                                    param_type_hint = ((), (Some ([4:8-18], (Happly (([4:8-18], "\\ExampleDsl"), []))))); 
                                                                    param_pos = [4:8-18]; 
                                                                    param_name = "$0v"; 
                                                                    param_info = Param_required; 
                                                                    param_readonly = None; 
                                                                    param_splat = None; 
                                                                    param_callconv = Pnormal; 
                                                                    param_named = None; 
                                                                    param_user_attributes = []; 
                                                                    param_visibility = None }]; 
                                                                    f_ctxs = None; 
                                                                    f_unsafe_ctxs = None;
                                                                    f_body =
                                                                    { fb_ast =
                                                                    [([4:19-38],
                                                                    (Return
                                                                    (Some (
                                                                    (), [4:19-38],
                                                                    (
                                                                    Call
                                                                    { func =
                                                                    ((), [4:19-38],
                                                                    (Obj_get (((), [4:19-38], (Lvar ([4:19-38], $0v))), ((), [4:19-38], (Id ([4:19-38], "splice"))), OG_nullthrows, Is_method)));
                                                                    targs = [];
                                                                    args =
                                                                    [(Anormal
                                                                    ((), [4:19-38],
                                                                    (Shape
                                                                    [((SFlit_str ([4:19-38], "path")), ((), [4:19-38], (Id ([4:19-38], "\\__FILE__"))));
                                                                    ((SFlit_str ([4:19-38], "start_line")), ((), [4:19-38], (Int "4")));
                                                                    ((SFlit_str ([4:19-38], "end_line")), ((), [4:19-38], (Int "4")));
                                                                    ((SFlit_str ([4:19-38], "start_column")), ((), [4:19-38], (Int "18")));
                                                                    ((SFlit_str ([4:19-38], "end_column")), ((), [4:19-38], (Int "37")))]))); (
                                                                    Anormal ((), [4:22-36], (String "$0splice0"))); (
                                                                    Anormal ((), [4:22-36], (Lvar ([4:22-36], $0splice0))))]; 
                                                                    unpacked_arg = None })))))] }; 
                                                                    f_fun_kind = FSync; 
                                                                    f_user_attributes = []; 
                                                                    f_external = false; 
                                                                    f_doc_comment = None },
                                                                  [((), ([4:22-36], $0splice0))]))))
                                                           ];
                                                         unpacked_arg = None })))))
                                         ]
                                       };
                                     f_fun_kind = FSync; f_user_attributes = []; 
                                     f_external = false; f_doc_comment = None },
                                   [((), ([4:22-36], $0splice0)); ((), ([4:34-36], $$))])));
                               targs = []; args = [(Anormal ((), [4:22-24], (Dollardollar ([4:22-24], $$))))]; 
                               unpacked_arg = None }));
                         et_free_vars = None })),
                   false)))))
            ]
          };
        f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([3:10-14], "__SupportDynamicType"); ua_params = [] }]; 
        f_external = false; f_doc_comment = None };
      fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
      fd_package = None })
  ]
