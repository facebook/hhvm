[(Fun
    { Aast.AnnotatedAST.f_annotation = (); f_mode = <opaque>;
      f_ret = (Some ([9:18-21], (Hprim Tint)));
      f_name = ([9:10-14], "\\test"); f_tparams = [];
      f_where_constraints = []; f_variadic = FVnonVariadic; f_params = [];
      f_body =
      (NamedBody
         { Aast.AnnotatedAST.fnb_nast =
           [(Expr
               (([10:3-9], int),
                (Binop ((Eq None), (([10:3-5], int), (Lvar ([10:3-5], $x))),
                   (([10:8-9], int), (Int "0"))))));
             (Expr
                (([11:21-50], _),
                 (Unsafe_expr
                    (([11:21-50], _),
                     (Call (Cnormal,
                        (([11:21-25], _), (Id ([11:21-25], "\\eval"))), 
                        [],
                        [(([11:26-49], _),
                          (Binop (Dot,
                             (([11:26-45], _),
                              (Binop (Dot,
                                 (([11:26-33], _), (String "$x = ")),
                                 (([11:34-45], _),
                                  (New (
                                     (([11:38-43], _),
                                      (CI (([11:38-43], "\\Three"), []))),
                                     [], [])))
                                 ))),
                             (([11:46-49], _), (String ";")))))
                          ],
                        []))))));
             (Return ([12:3-13],
                (Some (([12:10-12], int), (Lvar ([12:10-12], $x))))))
             ];
           fnb_unsafe = false });
      f_fun_kind = FSync; f_user_attributes = []; f_ret_by_ref = false;
      f_external = false });
  (Class
     { Aast.AnnotatedAST.c_annotation = (); c_mode = <opaque>;
       c_final = false; c_is_xhp = false; c_kind = Cnormal;
       c_name = ([3:7-12], "\\Three"); c_tparams = <opaque>; c_extends = [];
       c_uses = []; c_xhp_attr_uses = []; c_xhp_category = [];
       c_req_extends = []; c_req_implements = []; c_implements = [];
       c_consts = []; c_typeconsts = []; c_static_vars = []; c_vars = [];
       c_constructor = None; c_static_methods = [];
       c_methods =
       [{ Aast.AnnotatedAST.m_annotation = (); m_final = false;
          m_abstract = false; m_visibility = Public;
          m_name = ([4:19-29], "__toString"); m_tparams = [];
          m_where_constraints = []; m_variadic = FVnonVariadic;
          m_params = [];
          m_body =
          (NamedBody
             { Aast.AnnotatedAST.fnb_nast =
               [(Return ([5:5-16], (Some (([5:12-15], string), (String "3")))
                   ))
                 ];
               fnb_unsafe = false });
          m_fun_kind = FSync; m_user_attributes = [];
          m_ret = (Some ([4:33-39], (Hprim Tstring))); m_ret_by_ref = false;
          m_external = false }
         ];
       c_user_attributes = []; c_enum = None })
  ]
