File root|module_attr.php--here.php
--- legacy
+++ direct decl
@@ -1,32 +1,32 @@
 [("\\foo",
   (Shallow_decl_defs.Fun
      { Typing_defs.fe_deprecated = None;
        fe_module = (Some ([3:54-60], "here")); fe_internal = false;
        fe_type =
        (Rwitness_from_decl ([5:10-13]),
         (Tfun
            { ft_tparams = []; ft_where_constraints = []; ft_params = [];
              ft_implicit_params = { capability = (CapDefaults [5:10-13]) };
              ft_ret =
              { et_enforced = Typing_defs_core.Unenforced;
                et_type = (Rhint ([5:17-21]), (Tprim Tvoid)) };
              ft_flags =
              (make_ft_flags FSync ~return_disposable:false
                ~returns_readonly:false ~support_dynamic_type:false
                ~readonly_this:false ~is_memoized:false ~variadic:false);
              ft_ifc_decl = FDPolicied {PUBLIC} }));
        fe_pos = [5:10-13]; fe_php_std_lib = false;
        fe_support_dynamic_type = false }));
   ("\\Talias",
    (Shallow_decl_defs.Typedef
-      { Typing_defs.td_module = None; td_pos = [7:6-12];
-        td_vis = Transparent; td_tparams = []; td_constraint = None;
-        td_type = (Rhint ([7:15-18]), (Tprim Tint)); td_is_ctx = false;
-        td_attributes = [] }));
+      { Typing_defs.td_module = (Some ([3:54-60], "here"));
+        td_pos = [7:6-12]; td_vis = Transparent; td_tparams = [];
+        td_constraint = None; td_type = (Rhint ([7:15-18]), (Tprim Tint));
+        td_is_ctx = false; td_attributes = [] }));
   ("\\Tnew",
    (Shallow_decl_defs.Typedef
-      { Typing_defs.td_module = None; td_pos = [9:9-13]; td_vis = Opaque;
-        td_tparams = []; td_constraint = None;
-        td_type = (Rhint ([9:16-22]), (Tprim Tstring)); td_is_ctx = false;
-        td_attributes = [] }))
+      { Typing_defs.td_module = (Some ([3:54-60], "here"));
+        td_pos = [9:9-13]; td_vis = Opaque; td_tparams = [];
+        td_constraint = None; td_type = (Rhint ([9:16-22]), (Tprim Tstring));
+        td_is_ctx = false; td_attributes = [] }))
   ]

File root|module_attr.php--there.php
[("\\C",
  (Shallow_decl_defs.Class
     { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
       sc_abstract = false; sc_is_xhp = false; sc_has_xhp_keyword = false;
       sc_kind = (Cclass Concrete); sc_module = (Some ([3:54-61], "there"));
       sc_name = ([5:7-8], "\\C"); sc_tparams = [];
       sc_where_constraints = []; sc_extends = []; sc_uses = [];
       sc_xhp_attr_uses = []; sc_xhp_enum_values = {}; sc_req_extends = [];
       sc_req_implements = []; sc_implements = [];
       sc_support_dynamic_type = false; sc_consts = []; sc_typeconsts = [];
       sc_props = []; sc_sprops = []; sc_constructor = None;
       sc_static_methods = [];
       sc_methods =
       [{ Shallow_decl_defs.sm_name = ([6:19-22], "bar");
          sm_type =
          (Rwitness_from_decl ([6:19-22]),
           (Tfun
              { ft_tparams = []; ft_where_constraints = []; ft_params = [];
                ft_implicit_params = { capability = (CapDefaults [6:19-22]) };
                ft_ret =
                { et_enforced = Typing_defs_core.Unenforced;
                  et_type = (Rhint ([6:26-30]), (Tprim Tvoid)) };
                ft_flags =
                (make_ft_flags FSync ~return_disposable:false
                  ~returns_readonly:false ~support_dynamic_type:false
                  ~readonly_this:false ~is_memoized:false ~variadic:false);
                ft_ifc_decl = FDPolicied {PUBLIC} }));
          sm_visibility = Public; sm_deprecated = None; sm_flags = (empty);
          sm_attributes = [] }
         ];
       sc_user_attributes = []; sc_enum_type = None }))
  ]

File root|module_attr.php--another.php
[("\\E",
  (Shallow_decl_defs.Class
     { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
       sc_abstract = false; sc_is_xhp = false; sc_has_xhp_keyword = false;
       sc_kind = Cenum; sc_module = (Some ([3:54-63], "another"));
       sc_name = ([5:6-7], "\\E"); sc_tparams = [];
       sc_where_constraints = [];
       sc_extends =
       [(Rhint ([5:6-7]),
         (Tapply (([5:6-7], "\\HH\\BuiltinEnum"),
            [(Rhint ([5:6-7]), (Tapply (([5:6-7], "\\E"), [])))])))
         ];
       sc_uses = []; sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
       sc_req_extends = []; sc_req_implements = []; sc_implements = [];
       sc_support_dynamic_type = false;
       sc_consts =
       [{ Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
          scc_name = ([6:3-4], "A");
          scc_type = (Rwitness_from_decl ([6:7-8]), (Tprim Tint));
          scc_refs = [] }
         ];
       sc_typeconsts = []; sc_props = []; sc_sprops = [];
       sc_constructor = None; sc_static_methods = []; sc_methods = [];
       sc_user_attributes = [];
       sc_enum_type =
       (Some { Typing_defs.te_base = (Rhint ([5:10-13]), (Tprim Tint));
               te_constraint = None; te_includes = [] })
       }))
  ]
