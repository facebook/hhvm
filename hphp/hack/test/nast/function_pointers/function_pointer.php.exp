[(Fun
    { f_span = [5:1-24]; f_annotation = (); f_mode = Mstrict;
      f_ret = ((), (Some ([5:17-21], (Hprim Tvoid))));
      f_name = ([5:10-13], "\\Foo\\Bar\\qux"); f_tparams = [];
      f_where_constraints = []; f_variadic = FVnonVariadic; f_params = [];
      f_cap = ((), None); f_unsafe_cap = ((), None);
      f_body = { fb_ast = [([Pos.none], Noop)]; fb_annotation = Named };
      f_fun_kind = FSync; f_user_attributes = []; f_file_attributes = [];
      f_external = false;
      f_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
        ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
        ns_const_uses = <opaque>; ns_name = (Some "Foo\\Bar");
        ns_auto_ns_map = []; ns_is_codegen = false;
        ns_disable_xhp_element_mangling = false };
      f_doc_comment = None; f_static = false });
  (Fun
     { f_span = [7:1-14:2]; f_annotation = (); f_mode = Mstrict;
       f_ret = ((), (Some ([7:17-21], (Hprim Tvoid))));
       f_name = ([7:10-13], "\\Foo\\Bar\\baz"); f_tparams = [];
       f_where_constraints = []; f_variadic = FVnonVariadic; f_params = [];
       f_cap = ((), None); f_unsafe_cap = ((), None);
       f_body =
       { fb_ast =
         [([9:3-9],
           (Expr
              ([9:3-8],
               (FunctionPointer ((FP_id ([9:3-6], "\\Foo\\Bar\\qux")), [])))));
           ([11:3-17],
            (Expr
               ([11:3-16],
                (Binop ((Eq None), ([11:3-5], (Lvar ([11:3-5], $x))),
                   ([11:8-16],
                    (FunctionPointer ((FP_id ([11:8-14], "\\HH\\is_vec")), 
                       [])))
                   )))));
           ([13:3-14],
            (Expr
               ([13:3-13],
                (Binop ((Eq None), ([13:3-5], (Lvar ([13:3-5], $x))),
                   ([13:8-13],
                    (FunctionPointer ((FP_id ([13:8-11], "\\HH\\vec")), [])))
                   )))))
           ];
         fb_annotation = Named };
       f_fun_kind = FSync; f_user_attributes = []; f_file_attributes = [];
       f_external = false;
       f_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
         ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
         ns_const_uses = <opaque>; ns_name = (Some "Foo\\Bar");
         ns_auto_ns_map = []; ns_is_codegen = false;
         ns_disable_xhp_element_mangling = false };
       f_doc_comment = None; f_static = false })
  ]
