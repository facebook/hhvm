Parsed decls:

{ Direct_decl_parser.classes =
  { "\\Integer" ->
    { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
      sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
      sc_name = ([4:9-16], "\\Integer"); sc_tparams = [];
      sc_where_constraints = []; sc_extends = []; sc_uses = [];
      sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
      sc_implements = [];
      sc_consts =
      [{ Shallow_decl_defs.scc_abstract = false;
         scc_name = ([5:15-20], "MAX32");
         scc_type =
         (Rhint (root|class_const_referencing_global_const.php line 5, characters 11-13),
          (Tprim Tint))
         };
        { Shallow_decl_defs.scc_abstract = false;
          scc_name = ([6:15-20], "MAX64");
          scc_type =
          (Rhint (root|class_const_referencing_global_const.php line 6, characters 11-13),
           (Tprim Tint))
          }
        ];
      sc_typeconsts = []; sc_pu_enums = []; sc_props = []; sc_sprops = [];
      sc_constructor = None; sc_static_methods = []; sc_methods = [];
      sc_user_attributes = []; sc_enum_type = None; sc_decl_errors = <opaque>
      };
    "\\NS\\Integer" ->
    { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
      sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
      sc_name = ([10:11-18], "\\NS\\Integer"); sc_tparams = [];
      sc_where_constraints = []; sc_extends = []; sc_uses = [];
      sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
      sc_implements = [];
      sc_consts =
      [{ Shallow_decl_defs.scc_abstract = false;
         scc_name = ([11:17-22], "MAX32");
         scc_type =
         (Rhint (root|class_const_referencing_global_const.php line 11, characters 13-15),
          (Tprim Tint))
         };
        { Shallow_decl_defs.scc_abstract = false;
          scc_name = ([12:17-22], "MAX64");
          scc_type =
          (Rhint (root|class_const_referencing_global_const.php line 12, characters 13-15),
           (Tprim Tint))
          }
        ];
      sc_typeconsts = []; sc_pu_enums = []; sc_props = []; sc_sprops = [];
      sc_constructor = None; sc_static_methods = []; sc_methods = [];
      sc_user_attributes = []; sc_enum_type = None; sc_decl_errors = <opaque>
      } };
  funs = {}; typedefs = {}; consts = {} }

They matched!
