#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

import folly.iobuf as _fbthrift_iobuf
import thrift.py3.types
import thrift.py3.client
import thrift.py3.common
import typing as _typing
from types import TracebackType

import module.types as _module_types


_MyRootT = _typing.TypeVar('_MyRootT', bound='MyRoot')


class MyRoot(thrift.py3.client.Client):

    async def do_root(
        self,
        rpc_options: _typing.Optional[thrift.py3.common.RpcOptions]=None
    ) -> None: ...



_MyNodeT = _typing.TypeVar('_MyNodeT', bound='MyNode')


class MyNode(MyRoot):

    async def do_mid(
        self,
        rpc_options: _typing.Optional[thrift.py3.common.RpcOptions]=None
    ) -> None: ...



_MyLeafT = _typing.TypeVar('_MyLeafT', bound='MyLeaf')


class MyLeaf(MyNode):

    async def do_leaf(
        self,
        rpc_options: _typing.Optional[thrift.py3.common.RpcOptions]=None
    ) -> None: ...

