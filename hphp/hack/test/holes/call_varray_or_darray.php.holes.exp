[(Class
    { c_span = [3:1-5:2]; c_annotation = (); c_mode = Mstrict; c_final = false; 
      c_is_xhp = false; c_has_xhp_keyword = false; c_kind = (Cclass Concrete); 
      c_name = ([3:7-25], "\\TestVarrayOrDarray"); c_tparams = []; c_extends = []; 
      c_uses = []; c_xhp_attr_uses = []; c_xhp_category = None; c_reqs = []; 
      c_implements = []; c_where_constraints = []; c_consts = []; c_typeconsts = []; 
      c_vars = [];
      c_methods =
      [{ m_span = [4:3-55]; m_annotation = (); m_final = false; m_abstract = false; 
         m_static = false; m_readonly_this = false; m_visibility = Public; 
         m_name = ([4:19-20], "d"); m_tparams = []; m_where_constraints = [];
         m_params =
         [{ param_annotation = (vec_or_dict<arraykey, int>); param_type_hint = ((vec_or_dict<arraykey, int>), (Some ([4:21-42], (Hvec_or_dict (None, ([4:38-41], (Hprim Tint)))))));
            param_is_variadic = false; param_pos = [4:43-45]; param_name = "$d"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         m_ctxs = None; m_unsafe_ctxs = None; m_body = { fb_ast = [([Pos.none], Noop)] }; 
         m_fun_kind = FSync; m_user_attributes = []; m_readonly_ret = None; 
         m_ret = ((void), (Some ([4:48-52], (Hprim Tvoid)))); m_external = false; 
         m_doc_comment = None }
        ];
      c_xhp_children = []; c_xhp_attrs = [];
      c_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      c_user_attributes = []; c_file_attributes = []; c_docs_url = None; 
      c_enum = None; c_doc_comment = None; c_emit_id = None; c_internal = false; 
      c_module = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([7:10-11], "\\d");
       fd_fun =
       { f_span = [7:1-46]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([7:39-43], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = (vec_or_dict<arraykey, int>); param_type_hint = ((vec_or_dict<arraykey, int>), (Some ([7:12-33], (Hvec_or_dict (None, ([7:29-32], (Hprim Tint)))))));
            param_is_variadic = false; param_pos = [7:34-36]; param_name = "$d"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([Pos.none], Noop)] }; 
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([9:10-31], "\\call_varray_or_darray");
       fd_fun =
       { f_span = [9:1-19:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([11:4-8], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = (vec_or_dict<arraykey, float>); param_type_hint = ((vec_or_dict<arraykey, float>), (Some ([10:3-26], (Hvec_or_dict (None, ([10:20-25], (Hprim Tfloat)))))));
            param_is_variadic = false; param_pos = [10:27-29]; param_name = "$d"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([13:3-9],
             (Expr
                ((void), [13:3-8],
                 (Call ((((function(vec_or_dict<arraykey, int> $d): void)), [13:3-4], (Id ([13:3-4], "\\d"))), 
                    [],
                    [(Pnormal,
                      ((vec_or_dict<arraykey, float>), [13:5-7],
                       (Hole (((vec_or_dict<arraykey, float>), [13:5-7], (Lvar ([13:5-7], $d))), (vec_or_dict<arraykey, float>), (vec_or_dict<arraykey, int>), Typing))))
                      ],
                    None)))));
             ([15:3-35],
              (Expr
                 ((TestVarrayOrDarray), [15:3-34],
                  (Binop
                     { bop = (Eq None); lhs = ((TestVarrayOrDarray), [15:3-7], (Lvar ([15:3-7], $foo)));
                       rhs = ((TestVarrayOrDarray), [15:10-34], (New (((TestVarrayOrDarray), [15:14-32], (CI ([15:14-32], "\\TestVarrayOrDarray"))), [], [], None, ((function(): void))))) }))));
             ([18:3-15],
              (Expr
                 ((void), [18:3-14],
                  (Call (
                     (((function(vec_or_dict<arraykey, int> $d): void)), [18:3-10],
                      (Obj_get (((TestVarrayOrDarray), [18:3-7], (Lvar ([18:3-7], $foo))), (
                         ((function(vec_or_dict<arraykey, int> $d): void)), [18:9-10], (Id ([18:9-10], "d"))), OG_nullthrows, Is_method))),
                     [],
                     [(Pnormal,
                       ((vec_or_dict<arraykey, float>), [18:11-13],
                        (Hole (((vec_or_dict<arraykey, float>), [18:11-13], (Lvar ([18:11-13], $d))), (vec_or_dict<arraykey, float>), (vec_or_dict<arraykey, int>), Typing))))
                       ],
                     None)))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict; fd_name = ([21:10-36], "\\call_varray_or_darray_cast");
       fd_fun =
       { f_span = [21:1-31:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([23:4-8], (Hprim Tvoid))));
         f_params =
         [{ param_annotation = (vec_or_dict<arraykey, float>); param_type_hint = ((vec_or_dict<arraykey, float>), (Some ([22:3-26], (Hvec_or_dict (None, ([22:20-25], (Hprim Tfloat)))))));
            param_is_variadic = false; param_pos = [22:27-29]; param_name = "$d"; 
            param_expr = None; param_readonly = None; param_callconv = Pnormal; 
            param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([25:3-79],
             (Expr
                ((void), [25:3-78],
                 (Call ((((function(vec_or_dict<arraykey, int> $d): void)), [25:3-4], (Id ([25:3-4], "\\d"))), 
                    [],
                    [(Pnormal,
                      ((vec_or_dict<arraykey, int>), [25:5-77],
                       (Hole (((vec_or_dict<arraykey, float>), [25:74-76], (Lvar ([25:74-76], $d))), (vec_or_dict<arraykey, float>), (vec_or_dict<arraykey, int>),
                          (UnsafeCast [([25:27-50], (Hvec_or_dict (None, ([25:44-49], (Hprim Tfloat))))); ([25:51-72], (Hvec_or_dict (None, ([25:68-71], (Hprim Tint)))))])))))
                      ],
                    None)))));
             ([27:3-35],
              (Expr
                 ((TestVarrayOrDarray), [27:3-34],
                  (Binop
                     { bop = (Eq None); lhs = ((TestVarrayOrDarray), [27:3-7], (Lvar ([27:3-7], $foo)));
                       rhs = ((TestVarrayOrDarray), [27:10-34], (New (((TestVarrayOrDarray), [27:14-32], (CI ([27:14-32], "\\TestVarrayOrDarray"))), [], [], None, ((function(): void))))) }))));
             ([30:3-85],
              (Expr
                 ((void), [30:3-84],
                  (Call (
                     (((function(vec_or_dict<arraykey, int> $d): void)), [30:3-10],
                      (Obj_get (((TestVarrayOrDarray), [30:3-7], (Lvar ([30:3-7], $foo))), (
                         ((function(vec_or_dict<arraykey, int> $d): void)), [30:9-10], (Id ([30:9-10], "d"))), OG_nullthrows, Is_method))),
                     [],
                     [(Pnormal,
                       ((vec_or_dict<arraykey, int>), [30:11-83],
                        (Hole (((vec_or_dict<arraykey, float>), [30:80-82], (Lvar ([30:80-82], $d))), (vec_or_dict<arraykey, float>), (vec_or_dict<arraykey, int>),
                           (UnsafeCast [([30:33-56], (Hvec_or_dict (None, ([30:50-55], (Hprim Tfloat))))); ([30:57-78], (Hvec_or_dict (None, ([30:74-77], (Hprim Tint)))))])))))
                       ],
                     None)))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = [] })