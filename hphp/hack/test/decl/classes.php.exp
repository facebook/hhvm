[("\\MyClass",
  (Shallow_decl_defs.Class
     { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
       sc_abstract = false; sc_is_xhp = false; sc_internal = false;
       sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
       sc_module = None; sc_name = ([3:7-14], "\\MyClass"); sc_tparams = [];
       sc_where_constraints = []; sc_extends = []; sc_uses = [];
       sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
       sc_xhp_marked_empty = false; sc_req_extends = [];
       sc_req_implements = []; sc_req_class = []; sc_implements = [];
       sc_support_dynamic_type = false; sc_consts = []; sc_typeconsts = [];
       sc_props =
       [{ Shallow_decl_defs.sp_name = ([5:17-34], "instanceProperty");
          sp_xhp_attr = None; sp_type = (Rhint ([5:10-16]), (Tprim Tstring));
          sp_visibility = Public; sp_flags = needs_init };
         { Shallow_decl_defs.sp_name = ([6:17-35], "protectedProperty");
           sp_xhp_attr = None; sp_type = (Rhint ([6:13-16]), (Tprim Tint));
           sp_visibility = Protected; sp_flags = needs_init };
         { Shallow_decl_defs.sp_name = ([7:34-36], "p"); sp_xhp_attr = None;
           sp_type = (Rhint ([7:25-33]), (Tprim Tarraykey));
           sp_visibility = Public; sp_flags = lateinit | needs_init }
         ];
       sc_sprops =
       [{ Shallow_decl_defs.sp_name = ([4:25-40], "$staticProperty");
          sp_xhp_attr = None; sp_type = (Rhint ([4:18-24]), (Tprim Tstring));
          sp_visibility = Private; sp_flags = needs_init }
         ];
       sc_constructor =
       (Some { Shallow_decl_defs.sm_name = ([9:19-30], "__construct");
               sm_type =
               (Rwitness_from_decl ([9:19-30]),
                (Tfun
                   { ft_tparams = []; ft_where_constraints = [];
                     ft_params = [];
                     ft_implicit_params =
                     { capability = (CapDefaults [9:19-30]) };
                     ft_ret =
                     { et_enforced = Typing_defs_core.Unenforced;
                       et_type =
                       (Rwitness_from_decl ([9:19-30]), (Tprim Tvoid)) };
                     ft_flags =
                     (make_ft_flags FSync ~return_disposable:false
                       ~returns_readonly:false ~support_dynamic_type:false
                       ~readonly_this:false ~is_memoized:false
                       ~variadic:false);
                     ft_ifc_decl = FDPolicied {PUBLIC}ft_cross_package = None
                     }));
               sm_visibility = Public; sm_deprecated = None;
               sm_flags = (empty); sm_attributes = [] });
       sc_static_methods = [];
       sc_methods =
       [{ Shallow_decl_defs.sm_name = ([11:20-33], "privateMethod");
          sm_type =
          (Rwitness_from_decl ([11:20-33]),
           (Tfun
              { ft_tparams = []; ft_where_constraints = []; ft_params = [];
                ft_implicit_params =
                { capability = (CapDefaults [11:20-33]) };
                ft_ret =
                { et_enforced = Typing_defs_core.Unenforced;
                  et_type = (Rhint ([11:37-41]), (Tprim Tvoid)) };
                ft_flags =
                (make_ft_flags FSync ~return_disposable:false
                  ~returns_readonly:false ~support_dynamic_type:false
                  ~readonly_this:false ~is_memoized:false ~variadic:false);
                ft_ifc_decl = FDPolicied {PUBLIC}ft_cross_package = None }));
          sm_visibility = Private; sm_deprecated = None; sm_flags = (empty);
          sm_attributes = [] };
         { Shallow_decl_defs.sm_name = ([12:19-31], "publicMethod");
           sm_type =
           (Rwitness_from_decl ([12:19-31]),
            (Tfun
               { ft_tparams = []; ft_where_constraints = []; ft_params = [];
                 ft_implicit_params =
                 { capability = (CapDefaults [12:19-31]) };
                 ft_ret =
                 { et_enforced = Typing_defs_core.Unenforced;
                   et_type = (Rhint ([12:35-39]), (Tprim Tvoid)) };
                 ft_flags =
                 (make_ft_flags FSync ~return_disposable:false
                   ~returns_readonly:false ~support_dynamic_type:false
                   ~readonly_this:false ~is_memoized:false ~variadic:false);
                 ft_ifc_decl = FDPolicied {PUBLIC}ft_cross_package = None }));
           sm_visibility = Public; sm_deprecated = None; sm_flags = (empty);
           sm_attributes = [] };
         { Shallow_decl_defs.sm_name = ([13:22-37], "protectedMethod");
           sm_type =
           (Rwitness_from_decl ([13:22-37]),
            (Tfun
               { ft_tparams = []; ft_where_constraints = []; ft_params = [];
                 ft_implicit_params =
                 { capability = (CapDefaults [13:22-37]) };
                 ft_ret =
                 { et_enforced = Typing_defs_core.Unenforced;
                   et_type = (Rhint ([13:41-45]), (Tprim Tvoid)) };
                 ft_flags =
                 (make_ft_flags FSync ~return_disposable:false
                   ~returns_readonly:false ~support_dynamic_type:false
                   ~readonly_this:false ~is_memoized:false ~variadic:false);
                 ft_ifc_decl = FDPolicied {PUBLIC}ft_cross_package = None }));
           sm_visibility = Protected; sm_deprecated = None;
           sm_flags = (empty); sm_attributes = [] };
         { Shallow_decl_defs.sm_name = ([14:25-40], "async_generator");
           sm_type =
           (Rwitness_from_decl ([14:25-40]),
            (Tfun
               { ft_tparams = []; ft_where_constraints = [];
                 ft_params =
                 [{ fp_pos = [15:12-17]; fp_name = (Some "$arg1");
                    fp_type =
                    { et_enforced = Typing_defs_core.Unenforced;
                      et_type = (Rhint ([15:5-11]), (Tprim Tstring)) };
                    fp_flags =
                    (make_fp_flags ~accept_disposable:false
                      ~has_default:false ~mode:Typing_defs_core.FPnormal
                      ~ifc_external:false ~ifc_can_call:false
                      ~readonly:false);
                     };
                   { fp_pos = [16:9-14]; fp_name = (Some "$arg2");
                     fp_type =
                     { et_enforced = Typing_defs_core.Unenforced;
                       et_type = (Rhint ([16:5-8]), (Tprim Tint)) };
                     fp_flags =
                     (make_fp_flags ~accept_disposable:false
                       ~has_default:false ~mode:Typing_defs_core.FPnormal
                       ~ifc_external:false ~ifc_can_call:false
                       ~readonly:false);
                      }
                   ];
                 ft_implicit_params =
                 { capability = (CapDefaults [14:25-40]) };
                 ft_ret =
                 { et_enforced = Typing_defs_core.Unenforced;
                   et_type =
                   (Rhint ([17:6-42]),
                    (Tapply (([17:6-23], "\\HH\\AsyncGenerator"),
                       [(Rhint ([17:24-27]), (Tprim Tint));
                         (Rhint ([17:29-35]), (Tprim Tstring));
                         (Rhint ([17:37-41]), (Tprim Tvoid))]
                       )))
                   };
                 ft_flags =
                 (make_ft_flags FAsyncGenerator ~return_disposable:false
                   ~returns_readonly:false ~support_dynamic_type:false
                   ~readonly_this:false ~is_memoized:false ~variadic:false);
                 ft_ifc_decl = FDPolicied {PUBLIC}ft_cross_package = None }));
           sm_visibility = Public; sm_deprecated = None; sm_flags = (empty);
           sm_attributes = [] }
         ];
       sc_user_attributes = []; sc_enum_type = None; sc_docs_url = None }));
  ("\\MyAbstractClass",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = true; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Abstract);
        sc_module = None; sc_name = ([23:16-31], "\\MyAbstractClass");
        sc_tparams = []; sc_where_constraints = []; sc_extends = [];
        sc_uses = []; sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false; sc_req_extends = [];
        sc_req_implements = []; sc_req_class = []; sc_implements = [];
        sc_support_dynamic_type = false; sc_consts = []; sc_typeconsts = [];
        sc_props = []; sc_sprops = []; sc_constructor = None;
        sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
        sc_enum_type = None; sc_docs_url = None }));
  ("\\MyFinalClass",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = true;
        sc_abstract = false; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
        sc_module = None; sc_name = ([24:13-25], "\\MyFinalClass");
        sc_tparams = []; sc_where_constraints = []; sc_extends = [];
        sc_uses = []; sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false; sc_req_extends = [];
        sc_req_implements = []; sc_req_class = []; sc_implements = [];
        sc_support_dynamic_type = false; sc_consts = []; sc_typeconsts = [];
        sc_props = []; sc_sprops = []; sc_constructor = None;
        sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
        sc_enum_type = None; sc_docs_url = None }));
  ("\\MyStaticClass",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = true;
        sc_abstract = true; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Abstract);
        sc_module = None; sc_name = ([25:22-35], "\\MyStaticClass");
        sc_tparams = []; sc_where_constraints = []; sc_extends = [];
        sc_uses = []; sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false; sc_req_extends = [];
        sc_req_implements = []; sc_req_class = []; sc_implements = [];
        sc_support_dynamic_type = false; sc_consts = []; sc_typeconsts = [];
        sc_props = []; sc_sprops = []; sc_constructor = None;
        sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
        sc_enum_type = None; sc_docs_url = None }));
  ("\\MyConstructorPropertiesClass",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = false; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
        sc_module = None;
        sc_name = ([27:7-35], "\\MyConstructorPropertiesClass");
        sc_tparams = []; sc_where_constraints = []; sc_extends = [];
        sc_uses = []; sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false; sc_req_extends = [];
        sc_req_implements = []; sc_req_class = []; sc_implements = [];
        sc_support_dynamic_type = false; sc_consts = []; sc_typeconsts = [];
        sc_props =
        [{ Shallow_decl_defs.sp_name = ([29:20-28], "private");
           sp_xhp_attr = None;
           sp_type = (Rhint ([29:13-19]), (Tprim Tstring));
           sp_visibility = Private; sp_flags = needs_init };
          { Shallow_decl_defs.sp_name = ([30:22-32], "protected");
            sp_xhp_attr = None;
            sp_type = (Rhint ([30:15-21]), (Tprim Tstring));
            sp_visibility = Protected; sp_flags = needs_init };
          { Shallow_decl_defs.sp_name = ([31:19-26], "public");
            sp_xhp_attr = None;
            sp_type = (Rhint ([31:12-18]), (Tprim Tstring));
            sp_visibility = Public; sp_flags = needs_init };
          { Shallow_decl_defs.sp_name = ([32:19-30], "hasDefault");
            sp_xhp_attr = None;
            sp_type = (Rhint ([32:12-18]), (Tprim Tstring));
            sp_visibility = Public; sp_flags = needs_init }
          ];
        sc_sprops = [];
        sc_constructor =
        (Some { Shallow_decl_defs.sm_name = ([28:19-30], "__construct");
                sm_type =
                (Rwitness_from_decl ([28:19-30]),
                 (Tfun
                    { ft_tparams = []; ft_where_constraints = [];
                      ft_params =
                      [{ fp_pos = [29:20-28]; fp_name = (Some "$private");
                         fp_type =
                         { et_enforced = Typing_defs_core.Unenforced;
                           et_type = (Rhint ([29:13-19]), (Tprim Tstring)) };
                         fp_flags =
                         (make_fp_flags ~accept_disposable:false
                           ~has_default:false ~mode:Typing_defs_core.FPnormal
                           ~ifc_external:false ~ifc_can_call:false
                           ~readonly:false);
                          };
                        { fp_pos = [30:22-32]; fp_name = (Some "$protected");
                          fp_type =
                          { et_enforced = Typing_defs_core.Unenforced;
                            et_type = (Rhint ([30:15-21]), (Tprim Tstring)) };
                          fp_flags =
                          (make_fp_flags ~accept_disposable:false
                            ~has_default:false
                            ~mode:Typing_defs_core.FPnormal
                            ~ifc_external:false ~ifc_can_call:false
                            ~readonly:false);
                           };
                        { fp_pos = [31:19-26]; fp_name = (Some "$public");
                          fp_type =
                          { et_enforced = Typing_defs_core.Unenforced;
                            et_type = (Rhint ([31:12-18]), (Tprim Tstring)) };
                          fp_flags =
                          (make_fp_flags ~accept_disposable:false
                            ~has_default:false
                            ~mode:Typing_defs_core.FPnormal
                            ~ifc_external:false ~ifc_can_call:false
                            ~readonly:false);
                           };
                        { fp_pos = [32:19-30];
                          fp_name = (Some "$hasDefault");
                          fp_type =
                          { et_enforced = Typing_defs_core.Unenforced;
                            et_type = (Rhint ([32:12-18]), (Tprim Tstring)) };
                          fp_flags =
                          (make_fp_flags ~accept_disposable:false
                            ~has_default:true ~mode:Typing_defs_core.FPnormal
                            ~ifc_external:false ~ifc_can_call:false
                            ~readonly:false);
                           }
                        ];
                      ft_implicit_params =
                      { capability = (CapDefaults [28:19-30]) };
                      ft_ret =
                      { et_enforced = Typing_defs_core.Unenforced;
                        et_type =
                        (Rwitness_from_decl ([28:19-30]), (Tprim Tvoid)) };
                      ft_flags =
                      (make_ft_flags FSync ~return_disposable:false
                        ~returns_readonly:false ~support_dynamic_type:false
                        ~readonly_this:false ~is_memoized:false
                        ~variadic:false);
                      ft_ifc_decl = FDPolicied {PUBLIC}ft_cross_package =
                                                       None
                      }));
                sm_visibility = Public; sm_deprecated = None;
                sm_flags = (empty); sm_attributes = [] });
        sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
        sc_enum_type = None; sc_docs_url = None }))
  ]
