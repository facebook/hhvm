/**
 * Autogenerated by Thrift for thrift/compiler/test/fixtures/namespace_from_package_without_module_name/src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */

#include "thrift/compiler/test/fixtures/namespace_from_package_without_module_name/gen-cpp2/module_data.h"
#include "thrift/compiler/test/fixtures/namespace_from_package_without_module_name/gen-cpp2/module_constants.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

namespace test::namespace_from_package_without_module_name {
class TestService;
} // namespace test::namespace_from_package_without_module_name
namespace apache::thrift {

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::test::namespace_from_package_without_module_name::Foo>::name = "Foo";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::test::namespace_from_package_without_module_name::Foo>::fields_names = { {
  "MyInt"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::test::namespace_from_package_without_module_name::Foo>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::test::namespace_from_package_without_module_name::Foo>::fields_types = { {
  TType::T_I64,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::test::namespace_from_package_without_module_name::Foo>::isset_indexes = { {
  0,
}};

namespace detail {


template <> struct TSchemaAssociation<::test::namespace_from_package_without_module_name::TestService, false> {
  static constexpr ::folly::Range<const ::std::string_view*>(*bundle)() = nullptr;
  static constexpr int64_t programId = -3315706113137741452;
  static constexpr ::std::string_view definitionKey = {"\xf0\xe3\x68\x4d\x9b\xeb\x52\x71\x51\x4a\x8e\x32\xbb\x98\x9d\xf7", 16};
};
} // namespace detail
} // namespace apache::thrift
