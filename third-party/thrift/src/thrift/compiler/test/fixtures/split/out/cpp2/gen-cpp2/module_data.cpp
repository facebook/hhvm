/**
 * Autogenerated by Thrift for thrift/compiler/test/fixtures/split/src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */

#include "thrift/compiler/test/fixtures/split/gen-cpp2/module_data.h"
#include "thrift/compiler/test/fixtures/split/gen-cpp2/module_constants.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

namespace cpp2 {
class MyService;
} // namespace cpp2
namespace cpp2 {
class DbMixedStackArguments;
} // namespace cpp2
namespace apache::thrift {

THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::string_view TStructDataStorage<::cpp2::MyStruct>::name = "MyStruct";
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<std::string_view, 7> TStructDataStorage<::cpp2::MyStruct>::fields_names = { {
  "MyIntField"sv,
  "MyStringField"sv,
  "MyDataField"sv,
  "myEnum"sv,
  "oneway"sv,
  "readonly"sv,
  "idempotent"sv,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int16_t, 7> TStructDataStorage<::cpp2::MyStruct>::fields_ids = { {
  1,
  2,
  3,
  4,
  5,
  6,
  7,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<protocol::TType, 7> TStructDataStorage<::cpp2::MyStruct>::fields_types = { {
  TType::T_I64,
  TType::T_STRING,
  TType::T_STRUCT,
  TType::T_I32,
  TType::T_BOOL,
  TType::T_BOOL,
  TType::T_BOOL,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int, 7> TStructDataStorage<::cpp2::MyStruct>::isset_indexes = { {
  0,
  1,
  2,
  3,
  4,
  5,
  6,
}};

THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::string_view TStructDataStorage<::cpp2::MyDataItem>::name = "MyDataItem";
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<std::string_view, 0> TStructDataStorage<::cpp2::MyDataItem>::fields_names = { {
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int16_t, 0> TStructDataStorage<::cpp2::MyDataItem>::fields_ids = { {
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<protocol::TType, 0> TStructDataStorage<::cpp2::MyDataItem>::fields_types = { {
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int, 0> TStructDataStorage<::cpp2::MyDataItem>::isset_indexes = { {
}};

THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::string_view TStructDataStorage<::cpp2::MyUnion>::name = "MyUnion";
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<std::string_view, 3> TStructDataStorage<::cpp2::MyUnion>::fields_names = { {
  "myEnum"sv,
  "myStruct"sv,
  "myDataItem"sv,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int16_t, 3> TStructDataStorage<::cpp2::MyUnion>::fields_ids = { {
  1,
  2,
  3,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<protocol::TType, 3> TStructDataStorage<::cpp2::MyUnion>::fields_types = { {
  TType::T_I32,
  TType::T_STRUCT,
  TType::T_STRUCT,
}};
THRIFT_DATA_MEMBER FOLLY_ATTR_WEAK const std::array<int, 3> TStructDataStorage<::cpp2::MyUnion>::isset_indexes = { {
  0,
  1,
  2,
}};

namespace detail {





template <> struct TSchemaAssociation<::cpp2::MyService, false> {
  static constexpr ::folly::Range<const ::std::string_view*>(*bundle)() = nullptr;
  static constexpr int64_t programId = 1560411752922467026;
  static constexpr ::std::string_view definitionKey = {"\xf5\x63\xe0\x45\x58\xc2\x4d\x1b\xd0\xe9\x18\xf7\x59\x45\x2e\xd1", 16};
};
template <> struct TSchemaAssociation<::cpp2::DbMixedStackArguments, false> {
  static constexpr ::folly::Range<const ::std::string_view*>(*bundle)() = nullptr;
  static constexpr int64_t programId = 1560411752922467026;
  static constexpr ::std::string_view definitionKey = {"\x70\xcb\xbc\x37\x35\x91\x5d\x36\xfe\xb3\xf3\x60\x33\x91\x54\x88", 16};
};
} // namespace detail
} // namespace apache::thrift
