[("\\foo",
  (Shallow_decl_defs.Fun
     { Typing_defs.fe_deprecated = None; fe_module = None; fe_package = None;
       fe_internal = false;
       fe_type =
       (Rwitness_from_decl ([3:10-13]),
        (Tfun
           { ft_tparams = []; ft_where_constraints = [];
             ft_params =
             [{ fp_pos = [3:16-18]; fp_name = (Some "$x");
                fp_type = (Rhint ([3:14-15]), Twildcard);
                fp_flags =
                { Typing_defs_flags.FunParam.accept_disposable = false;
                  inout = false; is_optional = false; readonly = false;
                  ignore_readonly_error = false; splat = false; named = false
                  };
                fp_def_value = None }
               ];
             ft_implicit_params = { capability = (CapDefaults [3:10-13]) };
             ft_ret = (Rhint ([3:21-25]), (Tprim Tvoid));
             ft_flags =
             { Typing_defs_flags.Fun.return_disposable = false;
               async = false; generator = false; fun_kind = FSync;
               is_function_pointer = false; returns_readonly = false;
               readonly_this = false; support_dynamic_type = false;
               is_memoized = false; variadic = false };
             ft_require_package = None; ft_instantiated = true }));
       fe_pos = [3:10-13]; fe_php_std_lib = false;
       fe_support_dynamic_type = false; fe_no_auto_dynamic = false;
       fe_no_auto_likes = false }));
  ("\\bar",
   (Shallow_decl_defs.Fun
      { Typing_defs.fe_deprecated = None; fe_module = None;
        fe_package = None; fe_internal = false;
        fe_type =
        (Rwitness_from_decl ([6:10-13]),
         (Tfun
            { ft_tparams = []; ft_where_constraints = [];
              ft_params =
              [{ fp_pos = [6:20-22]; fp_name = (Some "$x");
                 fp_type = (Rhint ([6:14-19]), Tmixed);
                 fp_flags =
                 { Typing_defs_flags.FunParam.accept_disposable = false;
                   inout = false; is_optional = false; readonly = false;
                   ignore_readonly_error = false; splat = false;
                   named = false };
                 fp_def_value = None }
                ];
              ft_implicit_params = { capability = (CapDefaults [6:10-13]) };
              ft_ret = (Rhint ([6:25-26]), Twildcard);
              ft_flags =
              { Typing_defs_flags.Fun.return_disposable = false;
                async = false; generator = false; fun_kind = FSync;
                is_function_pointer = false; returns_readonly = false;
                readonly_this = false; support_dynamic_type = false;
                is_memoized = false; variadic = false };
              ft_require_package = None; ft_instantiated = true }));
        fe_pos = [6:10-13]; fe_php_std_lib = false;
        fe_support_dynamic_type = false; fe_no_auto_dynamic = false;
        fe_no_auto_likes = false }));
  ("\\C",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = true;
        sc_abstract = false; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
        sc_module = None; sc_name = ([9:13-14], "\\C"); sc_tparams = [];
        sc_extends = []; sc_uses = []; sc_xhp_attr_uses = [];
        sc_xhp_enum_values = {}; sc_xhp_marked_empty = false;
        sc_req_extends = []; sc_req_implements = []; sc_req_constraints = [];
        sc_implements = []; sc_support_dynamic_type = false; sc_consts = [];
        sc_typeconsts = [];
        sc_props =
        [{ Shallow_decl_defs.sp_name = ([10:41-45], "foo");
           sp_xhp_attr = None; sp_type = (Rhint ([10:39-40]), Twildcard);
           sp_visibility = Private;
           sp_flags =
           { Shallow_decl_defs.PropFlags.abstract = false; const = false;
             lateinit = false; lsb = false; needs_init = true;
             php_std_lib = false; readonly = false;
             safe_global_variable = false; no_auto_likes = false }
           }
          ];
        sc_sprops = [];
        sc_constructor =
        (Some { Shallow_decl_defs.sm_name = ([10:19-30], "__construct");
                sm_type =
                (Rwitness_from_decl ([10:19-30]),
                 (Tfun
                    { ft_tparams = []; ft_where_constraints = [];
                      ft_params =
                      [{ fp_pos = [10:41-45]; fp_name = (Some "$foo");
                         fp_type = (Rhint ([10:39-40]), Twildcard);
                         fp_flags =
                         { Typing_defs_flags.FunParam.accept_disposable =
                           false; inout = false; is_optional = false;
                           readonly = false; ignore_readonly_error = false;
                           splat = false; named = false };
                         fp_def_value = None }
                        ];
                      ft_implicit_params =
                      { capability = (CapDefaults [10:19-30]) };
                      ft_ret =
                      (Rwitness_from_decl ([10:19-30]), (Tprim Tvoid));
                      ft_flags =
                      { Typing_defs_flags.Fun.return_disposable = false;
                        async = false; generator = false; fun_kind = FSync;
                        is_function_pointer = false;
                        returns_readonly = false; readonly_this = false;
                        support_dynamic_type = false; is_memoized = false;
                        variadic = false };
                      ft_require_package = None; ft_instantiated = true }));
                sm_visibility = Public; sm_deprecated = None;
                sm_flags =
                { Shallow_decl_defs.MethodFlags.abstract = false;
                  final = false; override = false;
                  dynamicallycallable = false; php_std_lib = false;
                  support_dynamic_type = false; no_auto_likes = false;
                  needs_concrete = false };
                sm_attributes = []; sm_sort_text = None });
        sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
        sc_enum_type = None; sc_docs_url = None; sc_package = None }))
  ]
