#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

import folly.iobuf as _fbthrift_iobuf
import typing as _typing
from thrift.py3.server import RequestContext, ServiceInterface
from abc import abstractmethod, ABCMeta

import module.types as _module_types

_MyRootInterfaceT = _typing.TypeVar('_MyRootInterfaceT', bound='MyRootInterface')


class MyRootInterface(
    ServiceInterface,
    metaclass=ABCMeta,
):


    @abstractmethod
    async def do_root(
        self
    ) -> None: ...
    pass


_MyNodeInterfaceT = _typing.TypeVar('_MyNodeInterfaceT', bound='MyNodeInterface')


class MyNodeInterface(
MyRootInterface,
    metaclass=ABCMeta,
):


    @abstractmethod
    async def do_mid(
        self
    ) -> None: ...
    pass


_MyLeafInterfaceT = _typing.TypeVar('_MyLeafInterfaceT', bound='MyLeafInterface')


class MyLeafInterface(
MyNodeInterface,
    metaclass=ABCMeta,
):


    @abstractmethod
    async def do_leaf(
        self
    ) -> None: ...
    pass


