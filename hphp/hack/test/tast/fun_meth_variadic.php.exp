[(Fun
    { f_span = [3:1-42]; f_annotation = (); f_mode = Mpartial;
      f_ret = ((void), (Some ([3:35-39], (Hprim Tvoid))));
      f_name = ([3:10-22], "\\takes_string"); f_tparams = [];
      f_where_constraints = []; f_variadic = FVnonVariadic;
      f_params =
      [{ param_annotation = ([3:30-32], string);
         param_type_hint = ((string), (Some ([3:23-29], (Hprim Tstring))));
         param_is_variadic = false; param_pos = [3:30-32]; param_name = "$s";
         param_expr = None; param_callconv = None;
         param_user_attributes = []; param_visibility = None }
        ];
      f_body =
      { fb_ast = [([Pos.none], Noop)]; fb_annotation = No unsafe blocks };
      f_fun_kind = FSync; f_user_attributes = []; f_file_attributes = [];
      f_external = false;
      f_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
        ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
        ns_const_uses = <opaque>; ns_name = None; ns_auto_ns_map = [];
        ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      f_doc_comment = None; f_static = false });
  (Fun
     { f_span = [5:1-9:2]; f_annotation = (); f_mode = Mpartial;
       f_ret = ((void), (Some ([5:30-34], (Hprim Tvoid))));
       f_name = ([5:10-11], "\\f"); f_tparams = []; f_where_constraints = [];
       f_variadic =
       (FVvariadicArg
          { param_annotation = ([5:22-27], varray<string>);
            param_type_hint =
            ((varray<string>), (Some ([5:12-18], (Hprim Tstring))));
            param_is_variadic = true; param_pos = [5:22-27];
            param_name = "$args"; param_expr = None; param_callconv = None;
            param_user_attributes = []; param_visibility = None });
       f_params = [];
       f_body =
       { fb_ast =
         [([6:3-8:4],
           (Foreach (
              (([6:12-17], varray<string>), (Lvar ([6:12-17], $args))),
              (As_v (([6:21-25], string), (Lvar ([6:21-25], $arg)))),
              [([7:5-24],
                (Expr
                   (([7:5-23], void),
                    (Call (Cnormal,
                       (([7:5-17], (function(string $s): void)),
                        (Id ([7:5-17], "\\takes_string"))),
                       [], [(([7:18-22], string), (Lvar ([7:18-22], $arg)))],
                       None)))))
                ]
              )))
           ];
         fb_annotation = No unsafe blocks };
       f_fun_kind = FSync; f_user_attributes = []; f_file_attributes = [];
       f_external = false;
       f_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
         ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
         ns_const_uses = <opaque>; ns_name = None; ns_auto_ns_map = [];
         ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       f_doc_comment = None; f_static = false });
  (Class
     { c_span = [11:1-13:2]; c_annotation = (); c_mode = Mpartial;
       c_final = false; c_is_xhp = false; c_has_xhp_keyword = false;
       c_kind = Cnormal; c_name = ([11:7-9], "\\C1");
       c_tparams = { c_tparam_list = []; c_tparam_constraints = {} };
       c_extends = []; c_uses = []; c_use_as_alias = [];
       c_insteadof_alias = []; c_method_redeclarations = [];
       c_xhp_attr_uses = []; c_xhp_category = None; c_reqs = [];
       c_implements = []; c_where_constraints = []; c_consts = [];
       c_typeconsts = []; c_vars = [];
       c_methods =
       [{ m_span = [12:3-42]; m_annotation = (); m_final = false;
          m_abstract = false; m_static = false; m_visibility = Public;
          m_name = ([12:19-23], "meth"); m_tparams = [];
          m_where_constraints = [];
          m_variadic =
          (FVvariadicArg
             { param_annotation = ([12:27-32], varray<_>);
               param_type_hint = ((varray<_>), None);
               param_is_variadic = true; param_pos = [12:27-32];
               param_name = "$args"; param_expr = None;
               param_callconv = None; param_user_attributes = [];
               param_visibility = None });
          m_params = [];
          m_body =
          { fb_ast = [([Pos.none], Noop)]; fb_annotation = No unsafe blocks };
          m_fun_kind = FSync; m_user_attributes = [];
          m_ret = ((void), (Some ([12:35-39], (Hprim Tvoid))));
          m_external = false; m_doc_comment = None }
         ];
       c_attributes = []; c_xhp_children = []; c_xhp_attrs = [];
       c_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>;
         ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>;
         ns_const_uses = <opaque>; ns_name = None; ns_auto_ns_map = [];
         ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
       c_user_attributes = []; c_file_attributes = []; c_enum = None;
       c_pu_enums = []; c_doc_comment = None })
  ]
