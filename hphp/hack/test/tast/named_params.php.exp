[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
      fd_file_attributes =
      [{ fa_user_attributes =
         [{ ua_name = ([2:8-32], "__EnableUnstableFeatures"); ua_params = [((string), [2:33-51], (String "named_parameters")); ((string), [2:53-75], (String "named_parameters_use"))] }];
         fa_namespace =
         { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
           ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
           ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false }
         }
        ];
      fd_mode = Mstrict; fd_name = ([4:10-13], "\\foo");
      fd_fun =
      { f_span = [4:1-36]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_tparams = []; f_ret = ((void), (Some ([4:29-33], (Hprim Tvoid))));
        f_params =
        [{ param_annotation = (int); param_type_hint = ((int), (Some ([4:20-23], (Hprim Tint)))); 
           param_pos = [4:24-26]; param_name = "$x"; param_info = Param_required; 
           param_readonly = None; param_splat = None; param_callconv = Pnormal; 
           param_named = (Some Param_named); param_user_attributes = []; 
           param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([Pos.none], Noop)] }; 
        f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([4:10-13], "__SupportDynamicType"); ua_params = [] }]; 
        f_external = false; f_doc_comment = None };
      fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
      fd_package = None });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
       fd_file_attributes =
       [{ fa_user_attributes =
          [{ ua_name = ([2:8-32], "__EnableUnstableFeatures"); ua_params = [((string), [2:33-51], (String "named_parameters")); ((string), [2:53-75], (String "named_parameters_use"))] }];
          fa_namespace =
          { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
            ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
            ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false }
          }
         ];
       fd_mode = Mstrict; fd_name = ([6:10-14], "\\main");
       fd_fun =
       { f_span = [6:1-8:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_tparams = []; f_ret = ((void), (Some ([6:18-22], (Hprim Tvoid)))); 
         f_params = []; f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([7:3-12],
             (Expr
                ((void), [7:3-11],
                 (Call
                    { func = (((function(named int $x): void)), [7:3-6], (Id ([7:3-6], "\\foo"))); targs = []; args = [(Anamed (([7:7-8], "x"), ((int), [7:9-10], (Int "3"))))]; unpacked_arg = None }))))
             ]
           };
         f_fun_kind = FSync; f_user_attributes = [{ ua_name = ([6:10-14], "__SupportDynamicType"); ua_params = [] }]; 
         f_external = false; f_doc_comment = None };
       fd_internal = false; fd_module = None; fd_tparams = []; fd_where_constraints = []; 
       fd_package = None })