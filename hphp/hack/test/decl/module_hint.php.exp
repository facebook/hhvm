File root|module_hint.php--modules.php
[("here", (Shallow_decl_defs.Module { Typing_defs.mdt_pos = [4:8-12] }));
  ("there", (Shallow_decl_defs.Module { Typing_defs.mdt_pos = [5:8-13] }))]

File root|module_hint.php--here.php
[("\\C",
  (Shallow_decl_defs.Class
     { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
       sc_abstract = false; sc_is_xhp = false; sc_has_xhp_keyword = false;
       sc_kind = (Cclass Concrete); sc_module = (Some ([3:54-60], "here"));
       sc_name = ([6:7-8], "\\C"); sc_tparams = [];
       sc_where_constraints = []; sc_extends = []; sc_uses = [];
       sc_xhp_attr_uses = []; sc_xhp_enum_values = {}; sc_req_extends = [];
       sc_req_implements = []; sc_req_class = []; sc_implements = [];
       sc_support_dynamic_type = false; sc_consts = []; sc_typeconsts = [];
       sc_props = []; sc_sprops = []; sc_constructor = None;
       sc_static_methods = [];
       sc_methods =
       [{ Shallow_decl_defs.sm_name = ([7:19-22], "bar");
          sm_type =
          (Rwitness_from_decl ([7:19-22]),
           (Tfun
              { ft_tparams = []; ft_where_constraints = [];
                ft_params =
                [{ fp_pos = [7:29-31]; fp_name = (Some "$m");
                   fp_type =
                   { et_enforced = Typing_defs_core.Unenforced;
                     et_type = (Rhint ([7:23-28]), Tmixed) };
                   fp_flags =
                   (make_fp_flags ~accept_disposable:false ~has_default:false
                     ~mode:Typing_defs_core.FPnormal ~ifc_external:false
                     ~ifc_can_call:false ~readonly:false);
                    }
                  ];
                ft_implicit_params = { capability = (CapDefaults [7:19-22]) };
                ft_ret =
                { et_enforced = Typing_defs_core.Unenforced;
                  et_type = (Rhint ([7:33-37]), (Tprim Tvoid)) };
                ft_flags =
                (make_ft_flags FSync ~return_disposable:false
                  ~returns_readonly:false ~support_dynamic_type:false
                  ~readonly_this:false ~is_memoized:false ~variadic:false);
                ft_ifc_decl = FDPolicied {PUBLIC} }));
          sm_visibility = Public; sm_deprecated = None; sm_flags = (empty);
          sm_attributes = [] }
         ];
       sc_user_attributes =
       [{ Typing_defs_core.ua_name = ([5:21-31], "__Internal");
          ua_classname_params = [] };
         { Typing_defs_core.ua_name = ([5:3-11], "__Module");
           ua_classname_params = [] }
         ];
       sc_enum_type = None }))
  ]

File root|module_hint.php--there.php
[("\\D",
  (Shallow_decl_defs.Class
     { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
       sc_abstract = false; sc_is_xhp = false; sc_has_xhp_keyword = false;
       sc_kind = (Cclass Concrete); sc_module = (Some ([2:54-61], "there"));
       sc_name = ([5:7-8], "\\D"); sc_tparams = [];
       sc_where_constraints = []; sc_extends = []; sc_uses = [];
       sc_xhp_attr_uses = []; sc_xhp_enum_values = {}; sc_req_extends = [];
       sc_req_implements = []; sc_req_class = []; sc_implements = [];
       sc_support_dynamic_type = false; sc_consts = []; sc_typeconsts = [];
       sc_props = []; sc_sprops = []; sc_constructor = None;
       sc_static_methods = []; sc_methods = [];
       sc_user_attributes =
       [{ Typing_defs_core.ua_name = ([4:22-32], "__Internal");
          ua_classname_params = [] };
         { Typing_defs_core.ua_name = ([4:3-11], "__Module");
           ua_classname_params = [] }
         ];
       sc_enum_type = None }));
  ("\\G",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = false; sc_is_xhp = false; sc_has_xhp_keyword = false;
        sc_kind = (Cclass Concrete); sc_module = (Some ([2:54-61], "there"));
        sc_name = ([8:7-8], "\\G");
        sc_tparams =
        [{ Typing_defs_core.tp_variance = Invariant;
           tp_name = ([8:9-10], "T"); tp_tparams = []; tp_constraints = [];
           tp_reified = Erased; tp_user_attributes = [] }
          ];
        sc_where_constraints = []; sc_extends = []; sc_uses = [];
        sc_xhp_attr_uses = []; sc_xhp_enum_values = {}; sc_req_extends = [];
        sc_req_implements = []; sc_req_class = []; sc_implements = [];
        sc_support_dynamic_type = false; sc_consts = []; sc_typeconsts = [];
        sc_props = []; sc_sprops = []; sc_constructor = None;
        sc_static_methods = []; sc_methods = [];
        sc_user_attributes =
        [{ Typing_defs_core.ua_name = ([7:22-32], "__Internal");
           ua_classname_params = [] };
          { Typing_defs_core.ua_name = ([7:3-11], "__Module");
            ua_classname_params = [] }
          ];
        sc_enum_type = None }));
  ("\\E",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = false; sc_is_xhp = false; sc_has_xhp_keyword = false;
        sc_kind = Cenum; sc_module = (Some ([2:54-61], "there"));
        sc_name = ([11:6-7], "\\E"); sc_tparams = [];
        sc_where_constraints = [];
        sc_extends =
        [(Rhint ([11:6-7]),
          (Tapply (([11:6-7], "\\HH\\BuiltinEnum"),
             [(Rhint ([11:6-7]), (Tapply (([11:6-7], "\\E"), [])))])))
          ];
        sc_uses = []; sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_req_extends = []; sc_req_implements = []; sc_req_class = [];
        sc_implements = []; sc_support_dynamic_type = false;
        sc_consts =
        [{ Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
           scc_name = ([12:3-4], "A");
           scc_type = (Rwitness_from_decl ([12:7-8]), (Tprim Tint));
           scc_refs = [] }
          ];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = []; sc_methods = [];
        sc_user_attributes =
        [{ Typing_defs_core.ua_name = ([10:22-32], "__Internal");
           ua_classname_params = [] };
          { Typing_defs_core.ua_name = ([10:3-11], "__Module");
            ua_classname_params = [] }
          ];
        sc_enum_type =
        (Some { Typing_defs.te_base = (Rhint ([11:10-13]), (Tprim Tint));
                te_constraint = None; te_includes = [] })
        }))
  ]

File root|module_hint.php--everywhere.php
[("\\genfun",
  (Shallow_decl_defs.Fun
     { Typing_defs.fe_deprecated = None; fe_module = None;
       fe_internal = false;
       fe_type =
       (Rwitness_from_decl ([3:10-16]),
        (Tfun
           { ft_tparams =
             [{ Typing_defs_core.tp_variance = Invariant;
                tp_name = ([3:17-18], "T"); tp_tparams = [];
                tp_constraints = []; tp_reified = Erased;
                tp_user_attributes = [] }
               ];
             ft_where_constraints = [];
             ft_params =
             [{ fp_pos = [3:23-25]; fp_name = (Some "$x");
                fp_type =
                { et_enforced = Typing_defs_core.Unenforced;
                  et_type =
                  (Rhint ([3:20-22]),
                   (Toption (Rhint ([3:21-22]), (Tgeneric ("T", [])))))
                  };
                fp_flags =
                (make_fp_flags ~accept_disposable:false ~has_default:false
                  ~mode:Typing_defs_core.FPnormal ~ifc_external:false
                  ~ifc_can_call:false ~readonly:false);
                 }
               ];
             ft_implicit_params = { capability = (CapDefaults [3:10-16]) };
             ft_ret =
             { et_enforced = Typing_defs_core.Unenforced;
               et_type =
               (Rhint ([3:27-29]),
                (Toption (Rhint ([3:28-29]), (Tgeneric ("T", [])))))
               };
             ft_flags =
             (make_ft_flags FSync ~return_disposable:false
               ~returns_readonly:false ~support_dynamic_type:false
               ~readonly_this:false ~is_memoized:false ~variadic:false);
             ft_ifc_decl = FDPolicied {PUBLIC} }));
       fe_pos = [3:10-16]; fe_php_std_lib = false;
       fe_support_dynamic_type = false }));
  ("\\MyList",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = false; sc_is_xhp = false; sc_has_xhp_keyword = false;
        sc_kind = (Cclass Concrete); sc_module = None;
        sc_name = ([5:7-13], "\\MyList");
        sc_tparams =
        [{ Typing_defs_core.tp_variance = Invariant;
           tp_name = ([5:14-15], "T"); tp_tparams = []; tp_constraints = [];
           tp_reified = Erased; tp_user_attributes = [] }
          ];
        sc_where_constraints = []; sc_extends = []; sc_uses = [];
        sc_xhp_attr_uses = []; sc_xhp_enum_values = {}; sc_req_extends = [];
        sc_req_implements = []; sc_req_class = []; sc_implements = [];
        sc_support_dynamic_type = false; sc_consts = []; sc_typeconsts = [];
        sc_props = []; sc_sprops = []; sc_constructor = None;
        sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
        sc_enum_type = None }))
  ]

They matched!
