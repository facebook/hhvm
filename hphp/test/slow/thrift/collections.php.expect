---- real collections: compact ----
object(TestStruct)#7 (3) {
  ["aList"]=>
  object(HH\Vector)#8 (3) {
    [0]=>
    float(13.3)
    [1]=>
    float(23.4)
    [2]=>
    float(3576.2)
  }
  ["aMap"]=>
  object(HH\Map)#9 (2) {
    [10]=>
    float(1.2)
    [43]=>
    float(5.33)
  }
  ["aSet"]=>
  object(HH\Set)#10 (2) {
    int(10)
    int(11)
  }
}
---- real collections: binary ----
object(TestStruct)#12 (3) {
  ["aList"]=>
  object(HH\Vector)#13 (3) {
    [0]=>
    float(13.3)
    [1]=>
    float(23.4)
    [2]=>
    float(3576.2)
  }
  ["aMap"]=>
  object(HH\Map)#14 (2) {
    [10]=>
    float(1.2)
    [43]=>
    float(5.33)
  }
  ["aSet"]=>
  object(HH\Set)#15 (2) {
    int(10)
    int(11)
  }
}
---- hack arrays: compact ----
object(TestStruct)#18 (3) {
  ["aList"]=>
  object(HH\Vector)#19 (3) {
    [0]=>
    float(13.3)
    [1]=>
    float(23.4)
    [2]=>
    float(3576.2)
  }
  ["aMap"]=>
  object(HH\Map)#20 (2) {
    [10]=>
    float(1.2)
    [43]=>
    float(5.33)
  }
  ["aSet"]=>
  object(HH\Set)#21 (2) {
    int(10)
    int(11)
  }
}
---- hack arrays: binary ----
object(TestStruct)#23 (3) {
  ["aList"]=>
  object(HH\Vector)#24 (3) {
    [0]=>
    float(13.3)
    [1]=>
    float(23.4)
    [2]=>
    float(3576.2)
  }
  ["aMap"]=>
  object(HH\Map)#25 (2) {
    [10]=>
    float(1.2)
    [43]=>
    float(5.33)
  }
  ["aSet"]=>
  object(HH\Set)#26 (2) {
    int(10)
    int(11)
  }
}
---- php arrays: compact ----
object(TestStruct)#29 (3) {
  ["aList"]=>
  object(HH\Vector)#30 (3) {
    [0]=>
    float(13.3)
    [1]=>
    float(23.4)
    [2]=>
    float(3576.2)
  }
  ["aMap"]=>
  object(HH\Map)#31 (2) {
    [10]=>
    float(1.2)
    [43]=>
    float(5.33)
  }
  ["aSet"]=>
  object(HH\Set)#32 (2) {
    int(10)
    int(11)
  }
}
---- php arrays: binary ----
object(TestStruct)#34 (3) {
  ["aList"]=>
  object(HH\Vector)#35 (3) {
    [0]=>
    float(13.3)
    [1]=>
    float(23.4)
    [2]=>
    float(3576.2)
  }
  ["aMap"]=>
  object(HH\Map)#36 (2) {
    [10]=>
    float(1.2)
    [43]=>
    float(5.33)
  }
  ["aSet"]=>
  object(HH\Set)#37 (2) {
    int(10)
    int(11)
  }
}
---- sadly, this is legal: compact ----
object(TestStruct)#43 (3) {
  ["aList"]=>
  object(HH\Vector)#44 (3) {
    [0]=>
    float(13.3)
    [1]=>
    float(23.4)
    [2]=>
    float(3576.2)
  }
  ["aMap"]=>
  object(HH\Map)#45 (2) {
    [10]=>
    float(1.2)
    [43]=>
    float(5.33)
  }
  ["aSet"]=>
  object(HH\Set)#46 (2) {
    int(10)
    int(11)
  }
}
---- sadly, this is legal: binary ----
object(TestStruct)#48 (3) {
  ["aList"]=>
  object(HH\Vector)#49 (3) {
    [0]=>
    float(13.3)
    [1]=>
    float(23.4)
    [2]=>
    float(3576.2)
  }
  ["aMap"]=>
  object(HH\Map)#50 (2) {
    [10]=>
    float(1.2)
    [43]=>
    float(5.33)
  }
  ["aSet"]=>
  object(HH\Set)#51 (2) {
    int(10)
    int(11)
  }
}