# -*- makefile -*-

##############################################################################
# Prelude 
##############################################################################

# This file assumes the "includer" will have set a few variables and then do a
# include Makefile.common. Here are those variables:
#  - SRC
#  - INCLUDEDIRS

##############################################################################
# Generic variables
##############################################################################

INCLUDES?=$(INCLUDEDIRS:%=-I %) $(SYSINCLUDES)
OBJS?=    $(SRC:.ml=.cmo)
OPTOBJS?= $(SRC:.ml=.cmx)

##############################################################################
# Generic OCaml variables
##############################################################################

#dont use -custom, it makes the bytecode unportable.

#-w +9 is for better warning on records, needs ocaml 3.12
#-w +9
#DO NOT USE -thread, the runtime is already chaotic enough to debug, we 
# don't want to add an extra layer of complexity. In fact, we are not 
# even sure it would work with -thread ...
OCAMLCFLAGS?=-g -dtypes $(OCAMLCFLAGS_EXTRA) -w -21 -warn-error +a

# This flag is also used in subdirectories so don't change its name here.
OPTFLAGS?= $(OCAMLCFLAGS)
#TODO: -ccopt O3

OCAMLC=ocamlc$(OPTBIN) $(OCAMLCFLAGS)  $(INCLUDES)
OCAMLOPT=ocamlopt$(OPTBIN) $(OPTFLAGS) $(INCLUDES)
OCAMLLEX=ocamllex #-ml # -ml for debugging lexer, but slightly slower
OCAMLYACC=ocamlyacc -v
OCAMLDEP=ocamldep $(PP) $(INCLUDES)
OCAMLMKTOP=ocamlmktop -g -custom $(INCLUDES) -thread

# can also be set via 'make static'
#STATIC= #-ccopt -static

# can also be unset via 'make purebytecode'
#BYTECODE_STATIC=-custom

##############################################################################
# Top rules
##############################################################################
all::

##############################################################################
# Developer rules
##############################################################################

##############################################################################
# Generic ocaml rules
##############################################################################

.SUFFIXES: .ml .mli .cmo .cmi .cmx .cmt

.PHONY:: clean distclean beforedepend depend

.ml.cmo:
	$(OCAMLC)  -c $<
.mli.cmi:
	$(OCAMLC)  -c $<
.ml.cmx:
	$(OCAMLOPT)  -c $<

.ml.mldepend: 
	$(OCAMLC) -i $<

.c.o:
	$(OCAMLC) -c $^ -o $@

clean::
	rm -f *.cm[ioxa] *.cmt* *.o *.a *.so *.cmxa *.annot *.opt *.bc
	rm -f *~ .*~ *.exe gmon.out #*#

clean::
	rm -f *.aux *.toc *.log *.brf *.out

distclean::
	rm -f .depend

beforedepend::

depend:: beforedepend
	$(OCAMLDEP) *.mli *.ml > .depend

-include .depend
