[("\\C",
  (Shallow_decl_defs.Class
     { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
       sc_abstract = false; sc_is_xhp = false; sc_internal = false;
       sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
       sc_module = None; sc_name = ([4:7-8], "\\C");
       sc_tparams =
       [{ Typing_defs_core.tp_variance = Invariant;
          tp_name = ([4:15-17], "Tc"); tp_tparams = []; tp_constraints = [];
          tp_reified = Reified; tp_user_attributes = [] }
         ];
       sc_where_constraints = []; sc_extends = []; sc_uses = [];
       sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
       sc_xhp_marked_empty = false; sc_req_extends = [];
       sc_req_implements = []; sc_req_class = []; sc_implements = [];
       sc_support_dynamic_type = false; sc_consts = []; sc_typeconsts = [];
       sc_props = []; sc_sprops = []; sc_constructor = None;
       sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
       sc_enum_type = None; sc_docs_url = None }));
  ("\\D",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = false; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
        sc_module = None; sc_name = ([6:7-8], "\\D"); sc_tparams = [];
        sc_where_constraints = [];
        sc_extends =
        [(Rhint ([6:17-21]),
          (Tapply (([6:17-18], "\\C"),
             [(Rhint ([6:19-20]), (Tapply (([6:19-20], "\\_"), [])))])))
          ];
        sc_uses = []; sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false; sc_req_extends = [];
        sc_req_implements = []; sc_req_class = []; sc_implements = [];
        sc_support_dynamic_type = false; sc_consts = []; sc_typeconsts = [];
        sc_props = []; sc_sprops = []; sc_constructor = None;
        sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
        sc_enum_type = None; sc_docs_url = None }));
  ("\\E",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = false; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
        sc_module = None; sc_name = ([7:7-8], "\\E"); sc_tparams = [];
        sc_where_constraints = [];
        sc_extends =
        [(Rhint ([7:17-24]),
          (Tapply (([7:17-18], "\\C"),
             [(Rhint ([7:19-23]),
               (Tapply (([7:19-20], "\\C"),
                  [(Rhint ([7:21-22]), (Tapply (([7:21-22], "\\_"), [])))])))
               ]
             )))
          ];
        sc_uses = []; sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false; sc_req_extends = [];
        sc_req_implements = []; sc_req_class = []; sc_implements = [];
        sc_support_dynamic_type = false; sc_consts = []; sc_typeconsts = [];
        sc_props = []; sc_sprops = []; sc_constructor = None;
        sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
        sc_enum_type = None; sc_docs_url = None }));
  ("\\test",
   (Shallow_decl_defs.Fun
      { Typing_defs.fe_deprecated = None; fe_module = None;
        fe_internal = false;
        fe_type =
        (Rwitness_from_decl ([9:10-14]),
         (Tfun
            { ft_tparams = []; ft_where_constraints = [];
              ft_params =
              [{ fp_pos = [9:23-25]; fp_name = (Some "$c");
                 fp_type =
                 { et_enforced = Typing_defs_core.Unenforced;
                   et_type =
                   (Rhint ([9:15-22]),
                    (Tapply (([9:15-16], "\\C"),
                       [(Rhint ([9:17-21]),
                         (Tapply (([9:17-18], "\\C"),
                            [(Rhint ([9:19-20]),
                              (Tapply (([9:19-20], "\\_"), [])))]
                            )))
                         ]
                       )))
                   };
                 fp_flags =
                 (make_fp_flags ~accept_disposable:false ~has_default:false
                   ~mode:Typing_defs_core.FPnormal ~ifc_external:false
                   ~ifc_can_call:false ~readonly:false);
                  }
                ];
              ft_implicit_params = { capability = (CapDefaults [9:10-14]) };
              ft_ret =
              { et_enforced = Typing_defs_core.Unenforced;
                et_type =
                (Rhint ([9:28-32]),
                 (Tapply (([9:28-29], "\\C"),
                    [(Rhint ([9:30-31]), (Tapply (([9:30-31], "\\_"), [])))]
                    )))
                };
              ft_flags =
              (make_ft_flags FSync ~return_disposable:false
                ~returns_readonly:false ~support_dynamic_type:false
                ~readonly_this:false ~is_memoized:false ~variadic:false);
              ft_ifc_decl = FDPolicied {PUBLIC}ft_cross_package = None }));
        fe_pos = [9:10-14]; fe_php_std_lib = false;
        fe_support_dynamic_type = false; fe_no_auto_dynamic = false }))
  ]
