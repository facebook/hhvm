// Autogenerated by Thrift for thrift/compiler/test/fixtures/types/src/module.thrift
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//  @generated

package module

import (
    "maps"

    included "included"
    thrift "github.com/facebook/fbthrift/thrift/lib/go/thrift/types"
    metadata "github.com/facebook/fbthrift/thrift/lib/thrift/metadata"
)

// (needed to ensure safety because of naive import list construction)
var _ = included.GoUnusedProtection__
var _ = thrift.VOID
var _ = maps.Copy[map[int]int, map[int]int]
var _ = metadata.GoUnusedProtection__

// Premade Thrift types
var (
    premadeThriftType_module_has_bitwise_ops =
        &metadata.ThriftType{
            TEnum:
                &metadata.ThriftEnumType{
                    Name: "module.has_bitwise_ops",
                },
        }
    premadeThriftType_module_is_unscoped =
        &metadata.ThriftType{
            TEnum:
                &metadata.ThriftEnumType{
                    Name: "module.is_unscoped",
                },
        }
    premadeThriftType_module_MyForwardRefEnum =
        &metadata.ThriftType{
            TEnum:
                &metadata.ThriftEnumType{
                    Name: "module.MyForwardRefEnum",
                },
        }
    premadeThriftType_module_empty_struct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.empty_struct",
                },
        }
    premadeThriftType_string =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_STRING_TYPE),
        }
    premadeThriftType_module_decorated_struct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.decorated_struct",
                },
        }
    premadeThriftType_i32 =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_I32_TYPE),
        }
    premadeThriftType_list_i32 =
        &metadata.ThriftType{
            TList:
                &metadata.ThriftListType{
                    ValueType: premadeThriftType_i32,
                },
        }
    premadeThriftType_set_i32 =
        &metadata.ThriftType{
            TSet:
                &metadata.ThriftSetType{
                    ValueType: premadeThriftType_i32,
                },
        }
    premadeThriftType_module_set_i32_7194 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.set_i32_7194",
                    UnderlyingType: premadeThriftType_set_i32,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Type",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "template":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("folly::sorted_vector_set"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "rust.Type",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("sorted_vector_map::SortedVectorSet"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_map_i32_string =
        &metadata.ThriftType{
            TMap:
                &metadata.ThriftMapType{
                    KeyType:   premadeThriftType_i32,
                    ValueType: premadeThriftType_string,
                },
        }
    premadeThriftType_module_map_i32_string_1261 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.map_i32_string_1261",
                    UnderlyingType: premadeThriftType_map_i32_string,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "rust.Type",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("sorted_vector_map::SortedVectorMap"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_ContainerStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.ContainerStruct",
                },
        }
    premadeThriftType_module_CppTypeStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.CppTypeStruct",
                },
        }
    premadeThriftType_i64 =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_I64_TYPE),
        }
    premadeThriftType_module_VirtualStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.VirtualStruct",
                },
        }
    premadeThriftType_module_MyStructWithForwardRefEnum =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.MyStructWithForwardRefEnum",
                },
        }
    premadeThriftType_bool =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_BOOL_TYPE),
        }
    premadeThriftType_module_TrivialNumeric =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.TrivialNumeric",
                },
        }
    premadeThriftType_module_TrivialNestedWithDefault =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.TrivialNestedWithDefault",
                },
        }
    premadeThriftType_map_string_i32 =
        &metadata.ThriftType{
            TMap:
                &metadata.ThriftMapType{
                    KeyType:   premadeThriftType_string,
                    ValueType: premadeThriftType_i32,
                },
        }
    premadeThriftType_module_ComplexString =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.ComplexString",
                },
        }
    premadeThriftType_module_ComplexNestedWithDefault =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.ComplexNestedWithDefault",
                },
        }
    premadeThriftType_byte =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_BYTE_TYPE),
        }
    premadeThriftType_i16 =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_I16_TYPE),
        }
    premadeThriftType_module_MinPadding =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.MinPadding",
                },
        }
    premadeThriftType_module_MinPaddingWithCustomType =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.MinPaddingWithCustomType",
                },
        }
    premadeThriftType_module_MyDataItem =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.MyDataItem",
                },
        }
    premadeThriftType_module_MyStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.MyStruct",
                },
        }
    premadeThriftType_module_Renaming =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.Renaming",
                },
        }
    premadeThriftType_binary =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_BINARY_TYPE),
        }
    premadeThriftType_module_TBinary =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.TBinary",
                    UnderlyingType: premadeThriftType_binary,
                },
        }
    premadeThriftType_module_TBinary_8623 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.TBinary_8623",
                    UnderlyingType: premadeThriftType_module_TBinary,
                },
        }
    premadeThriftType_module_SomeListOfTypeMap_2468 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.SomeListOfTypeMap_2468",
                    UnderlyingType: included.GetMetadataThriftType("included.SomeListOfTypeMap"),
                },
        }
    premadeThriftType_module_AnnotatedTypes =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.AnnotatedTypes",
                },
        }
    premadeThriftType_module_ForwardUsageStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.ForwardUsageStruct",
                },
        }
    premadeThriftType_module_ForwardUsageByRef =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.ForwardUsageByRef",
                },
        }
    premadeThriftType_module_ForwardUsageRoot =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.ForwardUsageRoot",
                },
        }
    premadeThriftType_module_IncompleteMapDep =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.IncompleteMapDep",
                },
        }
    premadeThriftType_map_i32_module_IncompleteMapDep =
        &metadata.ThriftType{
            TMap:
                &metadata.ThriftMapType{
                    KeyType:   premadeThriftType_i32,
                    ValueType: premadeThriftType_module_IncompleteMapDep,
                },
        }
    premadeThriftType_module_IncompleteMap =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.IncompleteMap",
                },
        }
    premadeThriftType_module_CompleteMapDep =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.CompleteMapDep",
                },
        }
    premadeThriftType_map_i32_module_CompleteMapDep =
        &metadata.ThriftType{
            TMap:
                &metadata.ThriftMapType{
                    KeyType:   premadeThriftType_i32,
                    ValueType: premadeThriftType_module_CompleteMapDep,
                },
        }
    premadeThriftType_module_CompleteMap =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.CompleteMap",
                },
        }
    premadeThriftType_module_IncompleteListDep =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.IncompleteListDep",
                },
        }
    premadeThriftType_list_module_IncompleteListDep =
        &metadata.ThriftType{
            TList:
                &metadata.ThriftListType{
                    ValueType: premadeThriftType_module_IncompleteListDep,
                },
        }
    premadeThriftType_module_IncompleteList =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.IncompleteList",
                },
        }
    premadeThriftType_module_CompleteListDep =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.CompleteListDep",
                },
        }
    premadeThriftType_list_module_CompleteListDep =
        &metadata.ThriftType{
            TList:
                &metadata.ThriftListType{
                    ValueType: premadeThriftType_module_CompleteListDep,
                },
        }
    premadeThriftType_module_CompleteList =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.CompleteList",
                },
        }
    premadeThriftType_module_AdaptedListDep =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.AdaptedListDep",
                },
        }
    premadeThriftType_list_module_AdaptedListDep =
        &metadata.ThriftType{
            TList:
                &metadata.ThriftListType{
                    ValueType: premadeThriftType_module_AdaptedListDep,
                },
        }
    premadeThriftType_module_AdaptedList =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.AdaptedList",
                },
        }
    premadeThriftType_module_DependentAdaptedListDep =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.DependentAdaptedListDep",
                },
        }
    premadeThriftType_list_module_DependentAdaptedListDep =
        &metadata.ThriftType{
            TList:
                &metadata.ThriftListType{
                    ValueType: premadeThriftType_module_DependentAdaptedListDep,
                },
        }
    premadeThriftType_module_DependentAdaptedList =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.DependentAdaptedList",
                },
        }
    premadeThriftType_module_list_i32_9187 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.list_i32_9187",
                    UnderlyingType: premadeThriftType_list_i32,
                },
        }
    premadeThriftType_module_set_i32_7070 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.set_i32_7070",
                    UnderlyingType: premadeThriftType_set_i32,
                },
        }
    premadeThriftType_map_i32_i32 =
        &metadata.ThriftType{
            TMap:
                &metadata.ThriftMapType{
                    KeyType:   premadeThriftType_i32,
                    ValueType: premadeThriftType_i32,
                },
        }
    premadeThriftType_module_map_i32_i32_9565 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.map_i32_i32_9565",
                    UnderlyingType: premadeThriftType_map_i32_i32,
                },
        }
    premadeThriftType_module_string_5252 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.string_5252",
                    UnderlyingType: premadeThriftType_string,
                },
        }
    premadeThriftType_module_i32_9314 =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.i32_9314",
                    UnderlyingType: premadeThriftType_i32,
                },
        }
    premadeThriftType_module_AllocatorAware =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.AllocatorAware",
                },
        }
    premadeThriftType_module_AllocatorAware2 =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.AllocatorAware2",
                },
        }
    premadeThriftType_module_IntTypedef =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.IntTypedef",
                    UnderlyingType: premadeThriftType_i32,
                },
        }
    premadeThriftType_module_UintTypedef =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "module.UintTypedef",
                    UnderlyingType: premadeThriftType_module_IntTypedef,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Type",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("std::uint32_t"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_module_TypedefStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.TypedefStruct",
                },
        }
    premadeThriftType_module_StructWithDoubleUnderscores =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "module.StructWithDoubleUnderscores",
                },
        }
    premadeThriftType_map_module_TBinary_i64 =
        &metadata.ThriftType{
            TMap:
                &metadata.ThriftMapType{
                    KeyType:   premadeThriftType_module_TBinary,
                    ValueType: premadeThriftType_i64,
                },
        }
    premadeThriftType_list_i64 =
        &metadata.ThriftType{
            TList:
                &metadata.ThriftListType{
                    ValueType: premadeThriftType_i64,
                },
        }
)

// Premade struct metadatas
var (
    premadeStructMetadata_empty_struct =
        &metadata.ThriftStruct{
            Name:    "module.empty_struct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
            },
        }
    premadeStructMetadata_decorated_struct =
        &metadata.ThriftStruct{
            Name:    "module.decorated_struct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "field",
                    IsOptional: false,
                    Type:       premadeThriftType_string,
                },
            },
        }
    premadeStructMetadata_ContainerStruct =
        &metadata.ThriftStruct{
            Name:    "module.ContainerStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "fieldB",
                    IsOptional: false,
                    Type:       premadeThriftType_list_i32,
                },
                &metadata.ThriftField{
                    Id:         3,
                    Name:       "fieldC",
                    IsOptional: false,
                    Type:       premadeThriftType_list_i32,
                },
                &metadata.ThriftField{
                    Id:         4,
                    Name:       "fieldD",
                    IsOptional: false,
                    Type:       premadeThriftType_list_i32,
                },
                &metadata.ThriftField{
                    Id:         5,
                    Name:       "fieldE",
                    IsOptional: false,
                    Type:       premadeThriftType_list_i32,
                },
                &metadata.ThriftField{
                    Id:         6,
                    Name:       "fieldF",
                    IsOptional: false,
                    Type:       premadeThriftType_module_set_i32_7194,
                },
                &metadata.ThriftField{
                    Id:         7,
                    Name:       "fieldG",
                    IsOptional: false,
                    Type:       premadeThriftType_module_map_i32_string_1261,
                },
                &metadata.ThriftField{
                    Id:         8,
                    Name:       "fieldH",
                    IsOptional: false,
                    Type:       included.GetMetadataThriftType("included.SomeMap"),
                },
                &metadata.ThriftField{
                    Id:         12,
                    Name:       "fieldA",
                    IsOptional: false,
                    Type:       premadeThriftType_list_i32,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.EnableCustomTypeOrdering",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                    },
                },
            },
        }
    premadeStructMetadata_CppTypeStruct =
        &metadata.ThriftStruct{
            Name:    "module.CppTypeStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "fieldA",
                    IsOptional: false,
                    Type:       premadeThriftType_list_i32,
                },
            },
        }
    premadeStructMetadata_VirtualStruct =
        &metadata.ThriftStruct{
            Name:    "module.VirtualStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "MyIntField",
                    IsOptional: false,
                    Type:       premadeThriftType_i64,
                },
            },
        }
    premadeStructMetadata_MyStructWithForwardRefEnum =
        &metadata.ThriftStruct{
            Name:    "module.MyStructWithForwardRefEnum",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "a",
                    IsOptional: false,
                    Type:       premadeThriftType_module_MyForwardRefEnum,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "b",
                    IsOptional: false,
                    Type:       premadeThriftType_module_MyForwardRefEnum,
                },
            },
        }
    premadeStructMetadata_TrivialNumeric =
        &metadata.ThriftStruct{
            Name:    "module.TrivialNumeric",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "a",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "b",
                    IsOptional: false,
                    Type:       premadeThriftType_bool,
                },
            },
        }
    premadeStructMetadata_TrivialNestedWithDefault =
        &metadata.ThriftStruct{
            Name:    "module.TrivialNestedWithDefault",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "z",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "n",
                    IsOptional: false,
                    Type:       premadeThriftType_module_TrivialNumeric,
                },
            },
        }
    premadeStructMetadata_ComplexString =
        &metadata.ThriftStruct{
            Name:    "module.ComplexString",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "a",
                    IsOptional: false,
                    Type:       premadeThriftType_string,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "b",
                    IsOptional: false,
                    Type:       premadeThriftType_map_string_i32,
                },
            },
        }
    premadeStructMetadata_ComplexNestedWithDefault =
        &metadata.ThriftStruct{
            Name:    "module.ComplexNestedWithDefault",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "z",
                    IsOptional: false,
                    Type:       premadeThriftType_string,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "n",
                    IsOptional: false,
                    Type:       premadeThriftType_module_ComplexString,
                },
            },
        }
    premadeStructMetadata_MinPadding =
        &metadata.ThriftStruct{
            Name:    "module.MinPadding",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "small",
                    IsOptional: false,
                    Type:       premadeThriftType_byte,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "big",
                    IsOptional: false,
                    Type:       premadeThriftType_i64,
                },
                &metadata.ThriftField{
                    Id:         3,
                    Name:       "medium",
                    IsOptional: false,
                    Type:       premadeThriftType_i16,
                },
                &metadata.ThriftField{
                    Id:         4,
                    Name:       "biggish",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
                &metadata.ThriftField{
                    Id:         5,
                    Name:       "tiny",
                    IsOptional: false,
                    Type:       premadeThriftType_byte,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.MinimizePadding",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                    },
                },
            },
        }
    premadeStructMetadata_MinPaddingWithCustomType =
        &metadata.ThriftStruct{
            Name:    "module.MinPaddingWithCustomType",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "small",
                    IsOptional: false,
                    Type:       premadeThriftType_byte,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "biggish",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
                &metadata.ThriftField{
                    Id:         3,
                    Name:       "medium",
                    IsOptional: false,
                    Type:       premadeThriftType_i16,
                },
                &metadata.ThriftField{
                    Id:         4,
                    Name:       "big",
                    IsOptional: false,
                    Type:       premadeThriftType_i64,
                },
                &metadata.ThriftField{
                    Id:         5,
                    Name:       "tiny",
                    IsOptional: false,
                    Type:       premadeThriftType_byte,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "thrift.Experimental",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                    },
                },
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.MinimizePadding",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                    },
                },
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "thrift.TerseWrite",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                    },
                },
            },
        }
    premadeStructMetadata_MyStruct =
        &metadata.ThriftStruct{
            Name:    "module.MyStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "MyIntField",
                    IsOptional: false,
                    Type:       premadeThriftType_i64,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "MyStringField",
                    IsOptional: false,
                    Type:       premadeThriftType_string,
                },
                &metadata.ThriftField{
                    Id:         3,
                    Name:       "majorVer",
                    IsOptional: false,
                    Type:       premadeThriftType_i64,
                },
                &metadata.ThriftField{
                    Id:         4,
                    Name:       "data",
                    IsOptional: false,
                    Type:       premadeThriftType_module_MyDataItem,
                },
            },
        }
    premadeStructMetadata_MyDataItem =
        &metadata.ThriftStruct{
            Name:    "module.MyDataItem",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
            },
        }
    premadeStructMetadata_Renaming =
        &metadata.ThriftStruct{
            Name:    "module.Renaming",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "foo",
                    IsOptional: false,
                    Type:       premadeThriftType_i64,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.Name",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                        "value":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("Renamed"),
                            },
                    },
                },
            },
        }
    premadeStructMetadata_AnnotatedTypes =
        &metadata.ThriftStruct{
            Name:    "module.AnnotatedTypes",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "binary_field",
                    IsOptional: false,
                    Type:       premadeThriftType_module_TBinary_8623,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "list_field",
                    IsOptional: false,
                    Type:       premadeThriftType_module_SomeListOfTypeMap_2468,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.EnableCustomTypeOrdering",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                    },
                },
            },
        }
    premadeStructMetadata_ForwardUsageRoot =
        &metadata.ThriftStruct{
            Name:    "module.ForwardUsageRoot",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "ForwardUsageStruct",
                    IsOptional: true,
                    Type:       premadeThriftType_module_ForwardUsageStruct,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "ForwardUsageByRef",
                    IsOptional: true,
                    Type:       premadeThriftType_module_ForwardUsageByRef,
                },
            },
        }
    premadeStructMetadata_ForwardUsageStruct =
        &metadata.ThriftStruct{
            Name:    "module.ForwardUsageStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "foo",
                    IsOptional: true,
                    Type:       premadeThriftType_module_ForwardUsageRoot,
                },
            },
        }
    premadeStructMetadata_ForwardUsageByRef =
        &metadata.ThriftStruct{
            Name:    "module.ForwardUsageByRef",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "foo",
                    IsOptional: true,
                    Type:       premadeThriftType_module_ForwardUsageRoot,
                },
            },
        }
    premadeStructMetadata_IncompleteMap =
        &metadata.ThriftStruct{
            Name:    "module.IncompleteMap",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "field",
                    IsOptional: true,
                    Type:       premadeThriftType_map_i32_module_IncompleteMapDep,
                },
            },
        }
    premadeStructMetadata_IncompleteMapDep =
        &metadata.ThriftStruct{
            Name:    "module.IncompleteMapDep",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
            },
        }
    premadeStructMetadata_CompleteMap =
        &metadata.ThriftStruct{
            Name:    "module.CompleteMap",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "field",
                    IsOptional: true,
                    Type:       premadeThriftType_map_i32_module_CompleteMapDep,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.EnableCustomTypeOrdering",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                    },
                },
            },
        }
    premadeStructMetadata_CompleteMapDep =
        &metadata.ThriftStruct{
            Name:    "module.CompleteMapDep",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
            },
        }
    premadeStructMetadata_IncompleteList =
        &metadata.ThriftStruct{
            Name:    "module.IncompleteList",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "field",
                    IsOptional: true,
                    Type:       premadeThriftType_list_module_IncompleteListDep,
                },
            },
        }
    premadeStructMetadata_IncompleteListDep =
        &metadata.ThriftStruct{
            Name:    "module.IncompleteListDep",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
            },
        }
    premadeStructMetadata_CompleteList =
        &metadata.ThriftStruct{
            Name:    "module.CompleteList",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "field",
                    IsOptional: true,
                    Type:       premadeThriftType_list_module_CompleteListDep,
                },
            },
        }
    premadeStructMetadata_CompleteListDep =
        &metadata.ThriftStruct{
            Name:    "module.CompleteListDep",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
            },
        }
    premadeStructMetadata_AdaptedList =
        &metadata.ThriftStruct{
            Name:    "module.AdaptedList",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "field",
                    IsOptional: true,
                    Type:       premadeThriftType_list_module_AdaptedListDep,
                },
            },
        }
    premadeStructMetadata_AdaptedListDep =
        &metadata.ThriftStruct{
            Name:    "module.AdaptedListDep",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "field",
                    IsOptional: false,
                    Type:       premadeThriftType_module_AdaptedList,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.Adapter",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                        "name":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("IdentityAdapter<detail::AdaptedListDep>"),
                            },
                        "adaptedType":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("detail::AdaptedListDep"),
                            },
                    },
                },
            },
        }
    premadeStructMetadata_DependentAdaptedList =
        &metadata.ThriftStruct{
            Name:    "module.DependentAdaptedList",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "field",
                    IsOptional: true,
                    Type:       premadeThriftType_list_module_DependentAdaptedListDep,
                },
            },
        }
    premadeStructMetadata_DependentAdaptedListDep =
        &metadata.ThriftStruct{
            Name:    "module.DependentAdaptedListDep",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "field",
                    IsOptional: true,
                    Type:       premadeThriftType_i16,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "cpp.Adapter",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                        "name":
                            &metadata.ThriftConstValue{
                                CvString: thrift.Pointerize("IdentityAdapter<detail::DependentAdaptedListDep>"),
                            },
                    },
                },
            },
        }
    premadeStructMetadata_AllocatorAware =
        &metadata.ThriftStruct{
            Name:    "module.AllocatorAware",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "aa_list",
                    IsOptional: false,
                    Type:       premadeThriftType_module_list_i32_9187,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "aa_set",
                    IsOptional: false,
                    Type:       premadeThriftType_module_set_i32_7070,
                },
                &metadata.ThriftField{
                    Id:         3,
                    Name:       "aa_map",
                    IsOptional: false,
                    Type:       premadeThriftType_module_map_i32_i32_9565,
                },
                &metadata.ThriftField{
                    Id:         4,
                    Name:       "aa_string",
                    IsOptional: false,
                    Type:       premadeThriftType_module_string_5252,
                },
                &metadata.ThriftField{
                    Id:         5,
                    Name:       "not_a_container",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
                &metadata.ThriftField{
                    Id:         6,
                    Name:       "aa_unique",
                    IsOptional: false,
                    Type:       premadeThriftType_module_i32_9314,
                },
                &metadata.ThriftField{
                    Id:         7,
                    Name:       "aa_shared",
                    IsOptional: false,
                    Type:       premadeThriftType_module_i32_9314,
                },
            },
        }
    premadeStructMetadata_AllocatorAware2 =
        &metadata.ThriftStruct{
            Name:    "module.AllocatorAware2",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "not_a_container",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "box_field",
                    IsOptional: true,
                    Type:       premadeThriftType_i32,
                },
            },
        }
    premadeStructMetadata_TypedefStruct =
        &metadata.ThriftStruct{
            Name:    "module.TypedefStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "i32_field",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "IntTypedef_field",
                    IsOptional: false,
                    Type:       premadeThriftType_module_IntTypedef,
                },
                &metadata.ThriftField{
                    Id:         3,
                    Name:       "UintTypedef_field",
                    IsOptional: false,
                    Type:       premadeThriftType_module_UintTypedef,
                },
            },
        }
    premadeStructMetadata_StructWithDoubleUnderscores =
        &metadata.ThriftStruct{
            Name:    "module.StructWithDoubleUnderscores",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "__field",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
            },
        }
)

var premadeThriftTypesMap = func() map[string]*metadata.ThriftType {
    fbthriftThriftTypesMap := make(map[string]*metadata.ThriftType)
    fbthriftThriftTypesMap["module.has_bitwise_ops"] = premadeThriftType_module_has_bitwise_ops
    fbthriftThriftTypesMap["module.is_unscoped"] = premadeThriftType_module_is_unscoped
    fbthriftThriftTypesMap["module.MyForwardRefEnum"] = premadeThriftType_module_MyForwardRefEnum
    fbthriftThriftTypesMap["module.empty_struct"] = premadeThriftType_module_empty_struct
    fbthriftThriftTypesMap["string"] = premadeThriftType_string
    fbthriftThriftTypesMap["module.decorated_struct"] = premadeThriftType_module_decorated_struct
    fbthriftThriftTypesMap["i32"] = premadeThriftType_i32
    fbthriftThriftTypesMap["module.set_i32_7194"] = premadeThriftType_module_set_i32_7194
    fbthriftThriftTypesMap["module.map_i32_string_1261"] = premadeThriftType_module_map_i32_string_1261
    fbthriftThriftTypesMap["module.ContainerStruct"] = premadeThriftType_module_ContainerStruct
    fbthriftThriftTypesMap["module.CppTypeStruct"] = premadeThriftType_module_CppTypeStruct
    fbthriftThriftTypesMap["i64"] = premadeThriftType_i64
    fbthriftThriftTypesMap["module.VirtualStruct"] = premadeThriftType_module_VirtualStruct
    fbthriftThriftTypesMap["module.MyStructWithForwardRefEnum"] = premadeThriftType_module_MyStructWithForwardRefEnum
    fbthriftThriftTypesMap["bool"] = premadeThriftType_bool
    fbthriftThriftTypesMap["module.TrivialNumeric"] = premadeThriftType_module_TrivialNumeric
    fbthriftThriftTypesMap["module.TrivialNestedWithDefault"] = premadeThriftType_module_TrivialNestedWithDefault
    fbthriftThriftTypesMap["module.ComplexString"] = premadeThriftType_module_ComplexString
    fbthriftThriftTypesMap["module.ComplexNestedWithDefault"] = premadeThriftType_module_ComplexNestedWithDefault
    fbthriftThriftTypesMap["byte"] = premadeThriftType_byte
    fbthriftThriftTypesMap["i16"] = premadeThriftType_i16
    fbthriftThriftTypesMap["module.MinPadding"] = premadeThriftType_module_MinPadding
    fbthriftThriftTypesMap["module.MinPaddingWithCustomType"] = premadeThriftType_module_MinPaddingWithCustomType
    fbthriftThriftTypesMap["module.MyDataItem"] = premadeThriftType_module_MyDataItem
    fbthriftThriftTypesMap["module.MyStruct"] = premadeThriftType_module_MyStruct
    fbthriftThriftTypesMap["module.Renaming"] = premadeThriftType_module_Renaming
    fbthriftThriftTypesMap["binary"] = premadeThriftType_binary
    fbthriftThriftTypesMap["module.TBinary"] = premadeThriftType_module_TBinary
    fbthriftThriftTypesMap["module.TBinary_8623"] = premadeThriftType_module_TBinary_8623
    fbthriftThriftTypesMap["module.SomeListOfTypeMap_2468"] = premadeThriftType_module_SomeListOfTypeMap_2468
    fbthriftThriftTypesMap["module.AnnotatedTypes"] = premadeThriftType_module_AnnotatedTypes
    fbthriftThriftTypesMap["module.ForwardUsageStruct"] = premadeThriftType_module_ForwardUsageStruct
    fbthriftThriftTypesMap["module.ForwardUsageByRef"] = premadeThriftType_module_ForwardUsageByRef
    fbthriftThriftTypesMap["module.ForwardUsageRoot"] = premadeThriftType_module_ForwardUsageRoot
    fbthriftThriftTypesMap["module.IncompleteMapDep"] = premadeThriftType_module_IncompleteMapDep
    fbthriftThriftTypesMap["module.IncompleteMap"] = premadeThriftType_module_IncompleteMap
    fbthriftThriftTypesMap["module.CompleteMapDep"] = premadeThriftType_module_CompleteMapDep
    fbthriftThriftTypesMap["module.CompleteMap"] = premadeThriftType_module_CompleteMap
    fbthriftThriftTypesMap["module.IncompleteListDep"] = premadeThriftType_module_IncompleteListDep
    fbthriftThriftTypesMap["module.IncompleteList"] = premadeThriftType_module_IncompleteList
    fbthriftThriftTypesMap["module.CompleteListDep"] = premadeThriftType_module_CompleteListDep
    fbthriftThriftTypesMap["module.CompleteList"] = premadeThriftType_module_CompleteList
    fbthriftThriftTypesMap["module.AdaptedListDep"] = premadeThriftType_module_AdaptedListDep
    fbthriftThriftTypesMap["module.AdaptedList"] = premadeThriftType_module_AdaptedList
    fbthriftThriftTypesMap["module.DependentAdaptedListDep"] = premadeThriftType_module_DependentAdaptedListDep
    fbthriftThriftTypesMap["module.DependentAdaptedList"] = premadeThriftType_module_DependentAdaptedList
    fbthriftThriftTypesMap["module.list_i32_9187"] = premadeThriftType_module_list_i32_9187
    fbthriftThriftTypesMap["module.set_i32_7070"] = premadeThriftType_module_set_i32_7070
    fbthriftThriftTypesMap["module.map_i32_i32_9565"] = premadeThriftType_module_map_i32_i32_9565
    fbthriftThriftTypesMap["module.string_5252"] = premadeThriftType_module_string_5252
    fbthriftThriftTypesMap["module.i32_9314"] = premadeThriftType_module_i32_9314
    fbthriftThriftTypesMap["module.AllocatorAware"] = premadeThriftType_module_AllocatorAware
    fbthriftThriftTypesMap["module.AllocatorAware2"] = premadeThriftType_module_AllocatorAware2
    fbthriftThriftTypesMap["module.IntTypedef"] = premadeThriftType_module_IntTypedef
    fbthriftThriftTypesMap["module.UintTypedef"] = premadeThriftType_module_UintTypedef
    fbthriftThriftTypesMap["module.TypedefStruct"] = premadeThriftType_module_TypedefStruct
    fbthriftThriftTypesMap["module.StructWithDoubleUnderscores"] = premadeThriftType_module_StructWithDoubleUnderscores
    return fbthriftThriftTypesMap
}()

var structMetadatas = func() []*metadata.ThriftStruct {
    fbthriftResults := make([]*metadata.ThriftStruct, 0)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_empty_struct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_decorated_struct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_ContainerStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_CppTypeStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_VirtualStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_MyStructWithForwardRefEnum)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_TrivialNumeric)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_TrivialNestedWithDefault)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_ComplexString)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_ComplexNestedWithDefault)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_MinPadding)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_MinPaddingWithCustomType)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_MyStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_MyDataItem)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_Renaming)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_AnnotatedTypes)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_ForwardUsageRoot)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_ForwardUsageStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_ForwardUsageByRef)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_IncompleteMap)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_IncompleteMapDep)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_CompleteMap)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_CompleteMapDep)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_IncompleteList)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_IncompleteListDep)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_CompleteList)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_CompleteListDep)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_AdaptedList)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_AdaptedListDep)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_DependentAdaptedList)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_DependentAdaptedListDep)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_AllocatorAware)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_AllocatorAware2)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_TypedefStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_StructWithDoubleUnderscores)
    return fbthriftResults
}()

var exceptionMetadatas = func() []*metadata.ThriftException {
    fbthriftResults := make([]*metadata.ThriftException, 0)
    return fbthriftResults
}()

var enumMetadatas = func() []*metadata.ThriftEnum {
    fbthriftResults := make([]*metadata.ThriftEnum, 0)
    fbthriftResults = append(fbthriftResults,
        &metadata.ThriftEnum{
            Name:     "module.has_bitwise_ops",
            Elements: map[int32]string{
                0: "none",
                1: "zero",
                2: "one",
                4: "two",
                8: "three",
            },
        },
    )
    fbthriftResults = append(fbthriftResults,
        &metadata.ThriftEnum{
            Name:     "module.is_unscoped",
            Elements: map[int32]string{
                0: "hello",
                1: "world",
            },
        },
    )
    fbthriftResults = append(fbthriftResults,
        &metadata.ThriftEnum{
            Name:     "module.MyForwardRefEnum",
            Elements: map[int32]string{
                0: "ZERO",
                12: "NONZERO",
            },
        },
    )
    return fbthriftResults
}()

var serviceMetadatas = func() []*metadata.ThriftService {
    fbthriftResults := make([]*metadata.ThriftService, 0)
    fbthriftResults = append(fbthriftResults,
        &metadata.ThriftService{
            Name:      "module.SomeService",
            Functions: []*metadata.ThriftFunction{
                &metadata.ThriftFunction{
                    Name:       "bounce_map",
                    IsOneway:   false,
                    ReturnType: included.GetMetadataThriftType("included.SomeMap"),
                    Arguments:  []*metadata.ThriftField{
                        &metadata.ThriftField{
                            Id:         1,
                            Name:       "m",
                            IsOptional: false,
                            Type:       included.GetMetadataThriftType("included.SomeMap"),
                        },
                    },
                },
                &metadata.ThriftFunction{
                    Name:       "binary_keyed_map",
                    IsOneway:   false,
                    ReturnType: premadeThriftType_map_module_TBinary_i64,
                    Arguments:  []*metadata.ThriftField{
                        &metadata.ThriftField{
                            Id:         1,
                            Name:       "r",
                            IsOptional: false,
                            Type:       premadeThriftType_list_i64,
                        },
                    },
                },
            },
        },
    )
    return fbthriftResults
}()

// Thrift metadata for this package, as well as all of its recursive imports.
var packageThriftMetadata = func() *metadata.ThriftMetadata {
    allEnumsMap := make(map[string]*metadata.ThriftEnum)
    allStructsMap := make(map[string]*metadata.ThriftStruct)
    allExceptionsMap := make(map[string]*metadata.ThriftException)
    allServicesMap := make(map[string]*metadata.ThriftService)

    // Add enum metadatas from the current program...
    for _, enumMetadata := range enumMetadatas {
        allEnumsMap[enumMetadata.GetName()] = enumMetadata
    }
    // Add struct metadatas from the current program...
    for _, structMetadata := range structMetadatas {
        allStructsMap[structMetadata.GetName()] = structMetadata
    }
    // Add exception metadatas from the current program...
    for _, exceptionMetadata := range exceptionMetadatas {
        allExceptionsMap[exceptionMetadata.GetName()] = exceptionMetadata
    }
    // Add service metadatas from the current program...
    for _, serviceMetadata := range serviceMetadatas {
        allServicesMap[serviceMetadata.GetName()] = serviceMetadata
    }

    // Obtain Thrift metadatas from recursively included programs...
    var recursiveThriftMetadatas []*metadata.ThriftMetadata
    recursiveThriftMetadatas = append(recursiveThriftMetadatas, included.GetThriftMetadata())

    // ...now merge metadatas from recursively included programs.
    for _, thriftMetadata := range recursiveThriftMetadatas {
        maps.Copy(allEnumsMap, thriftMetadata.GetEnums())
        maps.Copy(allStructsMap, thriftMetadata.GetStructs())
        maps.Copy(allExceptionsMap, thriftMetadata.GetExceptions())
        maps.Copy(allServicesMap, thriftMetadata.GetServices())
    }

    return metadata.NewThriftMetadata().
        SetEnums(allEnumsMap).
        SetStructs(allStructsMap).
        SetExceptions(allExceptionsMap).
        SetServices(allServicesMap)
}()

// GetMetadataThriftType (INTERNAL USE ONLY).
// Returns metadata ThriftType for a given full type name.
func GetMetadataThriftType(fullName string) *metadata.ThriftType {
    return premadeThriftTypesMap[fullName]
}

// GetThriftMetadata returns complete Thrift metadata for current and imported packages.
func GetThriftMetadata() *metadata.ThriftMetadata {
    return packageThriftMetadata
}

// GetThriftMetadataForService returns Thrift metadata for the given service.
func GetThriftMetadataForService(scopedServiceName string) *metadata.ThriftMetadata {
    allServicesMap := packageThriftMetadata.GetServices()
    relevantServicesMap := make(map[string]*metadata.ThriftService)

    serviceMetadata := allServicesMap[scopedServiceName]
    // Visit and record all recursive parents of the target service.
    for serviceMetadata != nil {
        relevantServicesMap[serviceMetadata.GetName()] = serviceMetadata
        if serviceMetadata.IsSetParent() {
            serviceMetadata = allServicesMap[serviceMetadata.GetParent()]
        } else {
            serviceMetadata = nil
        }
    }

    return metadata.NewThriftMetadata().
        SetEnums(packageThriftMetadata.GetEnums()).
        SetStructs(packageThriftMetadata.GetStructs()).
        SetExceptions(packageThriftMetadata.GetExceptions()).
        SetServices(relevantServicesMap)
}
