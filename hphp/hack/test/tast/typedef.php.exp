[(Class
    { c_span = [3:1-89]; c_annotation = (); c_mode = Mstrict; c_final = false; 
      c_is_xhp = false; c_has_xhp_keyword = false; c_kind = (Cclass Concrete); 
      c_name = ([3:7-10], "\\Foo"); c_tparams = []; c_extends = []; c_uses = []; 
      c_xhp_attr_uses = []; c_xhp_category = None; c_reqs = []; c_implements = [([3:22-43], (Happly (([3:22-43], "\\HH\\TypeAliasAttribute"), [])))]; 
      c_consts = []; c_typeconsts = []; c_vars = [];
      c_methods =
      [{ m_span = [3:46-87]; m_annotation = (); m_final = false; m_abstract = false; 
         m_static = false; m_readonly_this = false; m_visibility = Public; 
         m_name = ([3:62-73], "__construct"); m_tparams = []; m_where_constraints = [];
         m_params =
         [{ param_annotation = (vec<int>); param_type_hint = ((vec<int>), (Some ([3:74-77], (Hprim Tint)))); 
            param_pos = [3:81-83]; param_name = "$x"; param_info = Param_variadic; 
            param_readonly = None; param_splat = None; param_callconv = Pnormal; 
            param_named = None; param_user_attributes = []; param_visibility = None }
           ];
         m_ctxs = None; m_unsafe_ctxs = None; m_body = { fb_ast = [([Pos.none], Noop)] }; 
         m_fun_kind = FSync; m_user_attributes = []; m_readonly_ret = None; 
         m_ret = ((void), (Some ([3:62-73], (Hprim Tvoid)))); m_external = false; 
         m_doc_comment = None }
        ];
      c_xhp_children = []; c_xhp_attrs = [];
      c_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
        ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
      c_user_attributes = [{ ua_name = ([3:7-10], "__SupportDynamicType"); ua_params = [] }]; 
      c_file_attributes = []; c_docs_url = None; c_enum = None; c_doc_comment = None; 
      c_emit_id = None; c_internal = false; c_module = None; c_package = None });
  (Class
     { c_span = [4:1-46]; c_annotation = (); c_mode = Mstrict; c_final = false; 
       c_is_xhp = false; c_has_xhp_keyword = false; c_kind = (Cclass Concrete); 
       c_name = ([4:7-10], "\\Bar"); c_tparams = []; c_extends = []; 
       c_uses = []; c_xhp_attr_uses = []; c_xhp_category = None; c_reqs = []; 
       c_implements = [([4:22-43], (Happly (([4:22-43], "\\HH\\TypeAliasAttribute"), [])))]; 
       c_consts = []; c_typeconsts = []; c_vars = []; c_methods = []; 
       c_xhp_children = []; c_xhp_attrs = [];
       c_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
       c_user_attributes = [{ ua_name = ([4:7-10], "__SupportDynamicType"); ua_params = [] }]; 
       c_file_attributes = []; c_docs_url = None; c_enum = None; c_doc_comment = None; 
       c_emit_id = None; c_internal = false; c_module = None; c_package = None });
  (Class
     { c_span = [5:1-58]; c_annotation = (); c_mode = Mstrict; c_final = false; 
       c_is_xhp = false; c_has_xhp_keyword = false; c_kind = (Cclass Concrete); 
       c_name = ([5:7-22], "\\SingleAttribute"); c_tparams = []; c_extends = []; 
       c_uses = []; c_xhp_attr_uses = []; c_xhp_category = None; c_reqs = []; 
       c_implements = [([5:34-55], (Happly (([5:34-55], "\\HH\\TypeAliasAttribute"), [])))]; 
       c_consts = []; c_typeconsts = []; c_vars = []; c_methods = []; 
       c_xhp_children = []; c_xhp_attrs = [];
       c_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
       c_user_attributes = [{ ua_name = ([5:7-22], "__SupportDynamicType"); ua_params = [] }]; 
       c_file_attributes = []; c_docs_url = None; c_enum = None; c_doc_comment = None; 
       c_emit_id = None; c_internal = false; c_module = None; c_package = None });
  (Typedef
     { t_annotation = (); t_name = ([8:6-8], "\\T1"); t_tparams = []; 
       t_as_constraint = None; t_super_constraint = None; t_assignment = (SimpleTypeDef { tvh_vis = Transparent; tvh_hint = ([8:11-14], (Hprim Tint)) }); 
       t_runtime_type = ([8:11-14], (Hprim Tint));
       t_user_attributes =
       [{ ua_name = ([7:3-6], "\\Foo"); ua_params = [((int), [7:7-8], (Int "1")); ((int), [7:9-10], (Int "2")); ((int), [7:11-12], (Int "3"))] }; { ua_name = ([7:15-18], "\\Bar"); ua_params = [] }];
       t_file_attributes = []; t_mode = Mstrict;
       t_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
       t_span = [7:1-8:15]; t_emit_id = None; t_is_ctx = false; t_internal = false; 
       t_module = None; t_docs_url = None; t_doc_comment = None; t_package = None });
  (Typedef
     { t_annotation = (); t_name = ([11:6-8], "\\T2"); t_tparams = []; 
       t_as_constraint = None; t_super_constraint = None; t_assignment = (SimpleTypeDef { tvh_vis = Transparent; tvh_hint = ([11:11-18], (Hoption ([11:12-18], (Hprim Tstring)))) });
       t_runtime_type = ([11:11-18], (Hoption ([11:12-18], (Hprim Tstring)))); 
       t_user_attributes = [{ ua_name = ([10:3-18], "\\SingleAttribute"); ua_params = [] }]; 
       t_file_attributes = []; t_mode = Mstrict;
       t_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
       t_span = [10:1-11:19]; t_emit_id = None; t_is_ctx = false; t_internal = false; 
       t_module = None; t_docs_url = None; t_doc_comment = None; t_package = None });
  (Typedef
     { t_annotation = (); t_name = ([13:6-23], "\\Serialized_contra");
       t_tparams =
       [{ tp_variance = Contravariant; tp_name = ([13:25-26], "T"); tp_constraints = [(Constraint_as, ([13:25-26], (Happly (([13:25-26], "\\HH\\supportdyn"), [([13:25-26], Hmixed)]))))];
          tp_reified = Erased; tp_user_attributes = [] }
         ];
       t_as_constraint = None; t_super_constraint = None; t_assignment = (SimpleTypeDef { tvh_vis = Transparent; tvh_hint = ([13:30-36], (Hprim Tstring)) });
       t_runtime_type = ([13:30-36], (Hprim Tstring)); t_user_attributes = []; 
       t_file_attributes = []; t_mode = Mstrict;
       t_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
       t_span = [13:1-37]; t_emit_id = None; t_is_ctx = false; t_internal = false; 
       t_module = None; t_docs_url = None; t_doc_comment = None; t_package = None });
  (Typedef
     { t_annotation = (); t_name = ([14:6-19], "\\Serialized_co");
       t_tparams =
       [{ tp_variance = Covariant; tp_name = ([14:21-22], "T"); tp_constraints = [(Constraint_as, ([14:21-22], (Happly (([14:21-22], "\\HH\\supportdyn"), [([14:21-22], Hmixed)]))))];
          tp_reified = Erased; tp_user_attributes = [] }
         ];
       t_as_constraint = None; t_super_constraint = None; t_assignment = (SimpleTypeDef { tvh_vis = Transparent; tvh_hint = ([14:26-32], (Hprim Tstring)) });
       t_runtime_type = ([14:26-32], (Hprim Tstring)); t_user_attributes = []; 
       t_file_attributes = []; t_mode = Mstrict;
       t_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_fun_uses = <opaque>; ns_const_uses = <opaque>; ns_name = None; 
         ns_mode = Namespace_env.ForTypecheck; ns_disable_xhp_element_mangling = false };
       t_span = [14:1-33]; t_emit_id = None; t_is_ctx = false; t_internal = false; 
       t_module = None; t_docs_url = None; t_doc_comment = None; t_package = None })