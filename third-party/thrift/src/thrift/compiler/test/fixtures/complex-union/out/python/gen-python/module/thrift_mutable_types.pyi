#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from __future__ import annotations

import typing as _typing
import builtins


import enum

import folly.iobuf as _fbthrift_iobuf
import module.thrift_abstract_types as _fbthrift_python_abstract_types
import thrift.python.types as _fbthrift_python_types
import thrift.python.mutable_types as _fbthrift_python_mutable_types
import thrift.python.mutable_exceptions as _fbthrift_python_mutable_exceptions
import thrift.python.mutable_containers as _fbthrift_python_mutable_containers


@_typing.final
class ComplexUnion(_fbthrift_python_mutable_types.MutableUnion, _fbthrift_python_abstract_types.ComplexUnion):
    @property
    def intValue(self) -> builtins.int: ...
    @intValue.setter
    def intValue(self, value: builtins.int) -> None: ...

    @property
    def intListValue(self) -> _fbthrift_python_mutable_containers.MutableList[builtins.int]: ...
    @intListValue.setter
    def intListValue(self, value: _fbthrift_python_mutable_containers.MutableList[builtins.int] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    @property
    def stringListValue(self) -> _fbthrift_python_mutable_containers.MutableList[builtins.str]: ...
    @stringListValue.setter
    def stringListValue(self, value: _fbthrift_python_mutable_containers.MutableList[builtins.str] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    @property
    def stringValue(self) -> builtins.str: ...
    @stringValue.setter
    def stringValue(self, value: builtins.str) -> None: ...

    @property
    def typedefValue(self) -> _fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.str]: ...
    @typedefValue.setter
    def typedefValue(self, value: _fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.str] | _fbthrift_python_mutable_types._ThriftMapWrapper) -> None: ...

    @property
    def stringRef(self) -> builtins.str: ...
    @stringRef.setter
    def stringRef(self, value: builtins.str) -> None: ...

    def __init__(
        self, *,
        intValue: _typing.Optional[builtins.int]=...,
        intListValue: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.int] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        stringListValue: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.str] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        stringValue: _typing.Optional[builtins.str]=...,
        typedefValue: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.str] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        stringRef: _typing.Optional[builtins.str]=...
    ) -> None: ...



    class FbThriftUnionFieldEnum(enum.Enum):
        EMPTY: ComplexUnion.FbThriftUnionFieldEnum = ...
        intValue: ComplexUnion.FbThriftUnionFieldEnum = ...
        intListValue: ComplexUnion.FbThriftUnionFieldEnum = ...
        stringListValue: ComplexUnion.FbThriftUnionFieldEnum = ...
        stringValue: ComplexUnion.FbThriftUnionFieldEnum = ...
        typedefValue: ComplexUnion.FbThriftUnionFieldEnum = ...
        stringRef: ComplexUnion.FbThriftUnionFieldEnum = ...

    fbthrift_current_value: _typing.Final[_typing.Union[None, builtins.int, _fbthrift_python_mutable_containers.MutableList[builtins.int], _fbthrift_python_mutable_containers.MutableList[builtins.str], builtins.str, _fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.str], builtins.str]]
    # pyre-ignore[15]: `fbthrift_current_field` overrides attribute defined in `_fbthrift_python_abstract_types.ComplexUnion` inconsistently. Type `ComplexUnion.FbThriftUnionFieldEnum` is not a subtype of the overridden attribute `_fbthrift_python_abstract_types.ComplexUnion.FbThriftUnionFieldEnum`
    fbthrift_current_field: _typing.Final[FbThriftUnionFieldEnum]
    def get_type(self) -> FbThriftUnionFieldEnum: ...
    def _to_python(self) -> "module.thrift_types.ComplexUnion": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "module.types.ComplexUnion": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.ComplexUnion": ...  # type: ignore
_fbthrift_ComplexUnion = ComplexUnion

@_typing.final
class ListUnion(_fbthrift_python_mutable_types.MutableUnion, _fbthrift_python_abstract_types.ListUnion):
    @property
    def intListValue(self) -> _fbthrift_python_mutable_containers.MutableList[builtins.int]: ...
    @intListValue.setter
    def intListValue(self, value: _fbthrift_python_mutable_containers.MutableList[builtins.int] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    @property
    def stringListValue(self) -> _fbthrift_python_mutable_containers.MutableList[builtins.str]: ...
    @stringListValue.setter
    def stringListValue(self, value: _fbthrift_python_mutable_containers.MutableList[builtins.str] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    def __init__(
        self, *,
        intListValue: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.int] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        stringListValue: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.str] | _fbthrift_python_mutable_types._ThriftListWrapper]=...
    ) -> None: ...



    class FbThriftUnionFieldEnum(enum.Enum):
        EMPTY: ListUnion.FbThriftUnionFieldEnum = ...
        intListValue: ListUnion.FbThriftUnionFieldEnum = ...
        stringListValue: ListUnion.FbThriftUnionFieldEnum = ...

    fbthrift_current_value: _typing.Final[_typing.Union[None, _fbthrift_python_mutable_containers.MutableList[builtins.int], _fbthrift_python_mutable_containers.MutableList[builtins.str]]]
    # pyre-ignore[15]: `fbthrift_current_field` overrides attribute defined in `_fbthrift_python_abstract_types.ListUnion` inconsistently. Type `ListUnion.FbThriftUnionFieldEnum` is not a subtype of the overridden attribute `_fbthrift_python_abstract_types.ListUnion.FbThriftUnionFieldEnum`
    fbthrift_current_field: _typing.Final[FbThriftUnionFieldEnum]
    def get_type(self) -> FbThriftUnionFieldEnum: ...
    def _to_python(self) -> "module.thrift_types.ListUnion": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "module.types.ListUnion": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.ListUnion": ...  # type: ignore
_fbthrift_ListUnion = ListUnion

@_typing.final
class DataUnion(_fbthrift_python_mutable_types.MutableUnion, _fbthrift_python_abstract_types.DataUnion):
    @property
    def binaryData(self) -> builtins.bytes: ...
    @binaryData.setter
    def binaryData(self, value: builtins.bytes) -> None: ...

    @property
    def stringData(self) -> builtins.str: ...
    @stringData.setter
    def stringData(self, value: builtins.str) -> None: ...

    def __init__(
        self, *,
        binaryData: _typing.Optional[builtins.bytes]=...,
        stringData: _typing.Optional[builtins.str]=...
    ) -> None: ...



    class FbThriftUnionFieldEnum(enum.Enum):
        EMPTY: DataUnion.FbThriftUnionFieldEnum = ...
        binaryData: DataUnion.FbThriftUnionFieldEnum = ...
        stringData: DataUnion.FbThriftUnionFieldEnum = ...

    fbthrift_current_value: _typing.Final[_typing.Union[None, builtins.bytes, builtins.str]]
    # pyre-ignore[15]: `fbthrift_current_field` overrides attribute defined in `_fbthrift_python_abstract_types.DataUnion` inconsistently. Type `DataUnion.FbThriftUnionFieldEnum` is not a subtype of the overridden attribute `_fbthrift_python_abstract_types.DataUnion.FbThriftUnionFieldEnum`
    fbthrift_current_field: _typing.Final[FbThriftUnionFieldEnum]
    def get_type(self) -> FbThriftUnionFieldEnum: ...
    def _to_python(self) -> "module.thrift_types.DataUnion": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "module.types.DataUnion": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.DataUnion": ...  # type: ignore
_fbthrift_DataUnion = DataUnion

@_typing.final
class Val(_fbthrift_python_mutable_types.MutableStruct, _fbthrift_python_abstract_types.Val):
    @property
    def strVal(self) -> builtins.str: ...
    @strVal.setter
    def strVal(self, value: builtins.str) -> None: ...

    @property
    def intVal(self) -> builtins.int: ...
    @intVal.setter
    def intVal(self, value: builtins.int) -> None: ...

    @property
    def typedefValue(self) -> _fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.str]: ...
    @typedefValue.setter
    def typedefValue(self, value: _fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.str] | _fbthrift_python_mutable_types._ThriftMapWrapper) -> None: ...

    def __init__(
        self, *,
        strVal: _typing.Optional[builtins.str]=...,
        intVal: _typing.Optional[builtins.int]=...,
        typedefValue: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.str] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...
    ) -> None: ...

    def __call__(
        self, *,
        strVal: _typing.Optional[builtins.str]=...,
        intVal: _typing.Optional[builtins.int]=...,
        typedefValue: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.str] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[builtins.str, builtins.int, _fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.str]]]]: ...
    def _to_python(self) -> "module.thrift_types.Val": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "module.types.Val": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.Val": ...  # type: ignore
_fbthrift_Val = Val

@_typing.final
class ValUnion(_fbthrift_python_mutable_types.MutableUnion, _fbthrift_python_abstract_types.ValUnion):
    @property
    def v1(self) -> _fbthrift_Val: ...
    @v1.setter
    def v1(self, value: _fbthrift_Val) -> None: ...

    @property
    def v2(self) -> _fbthrift_Val: ...
    @v2.setter
    def v2(self, value: _fbthrift_Val) -> None: ...

    def __init__(
        self, *,
        v1: _typing.Optional[_fbthrift_Val]=...,
        v2: _typing.Optional[_fbthrift_Val]=...
    ) -> None: ...



    class FbThriftUnionFieldEnum(enum.Enum):
        EMPTY: ValUnion.FbThriftUnionFieldEnum = ...
        v1: ValUnion.FbThriftUnionFieldEnum = ...
        v2: ValUnion.FbThriftUnionFieldEnum = ...

    fbthrift_current_value: _typing.Final[_typing.Union[None, _fbthrift_Val, _fbthrift_Val]]
    # pyre-ignore[15]: `fbthrift_current_field` overrides attribute defined in `_fbthrift_python_abstract_types.ValUnion` inconsistently. Type `ValUnion.FbThriftUnionFieldEnum` is not a subtype of the overridden attribute `_fbthrift_python_abstract_types.ValUnion.FbThriftUnionFieldEnum`
    fbthrift_current_field: _typing.Final[FbThriftUnionFieldEnum]
    def get_type(self) -> FbThriftUnionFieldEnum: ...
    def _to_python(self) -> "module.thrift_types.ValUnion": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "module.types.ValUnion": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.ValUnion": ...  # type: ignore
_fbthrift_ValUnion = ValUnion

@_typing.final
class VirtualComplexUnion(_fbthrift_python_mutable_types.MutableUnion, _fbthrift_python_abstract_types.VirtualComplexUnion):
    @property
    def thingOne(self) -> builtins.str: ...
    @thingOne.setter
    def thingOne(self, value: builtins.str) -> None: ...

    @property
    def thingTwo(self) -> builtins.str: ...
    @thingTwo.setter
    def thingTwo(self, value: builtins.str) -> None: ...

    def __init__(
        self, *,
        thingOne: _typing.Optional[builtins.str]=...,
        thingTwo: _typing.Optional[builtins.str]=...
    ) -> None: ...



    class FbThriftUnionFieldEnum(enum.Enum):
        EMPTY: VirtualComplexUnion.FbThriftUnionFieldEnum = ...
        thingOne: VirtualComplexUnion.FbThriftUnionFieldEnum = ...
        thingTwo: VirtualComplexUnion.FbThriftUnionFieldEnum = ...

    fbthrift_current_value: _typing.Final[_typing.Union[None, builtins.str, builtins.str]]
    # pyre-ignore[15]: `fbthrift_current_field` overrides attribute defined in `_fbthrift_python_abstract_types.VirtualComplexUnion` inconsistently. Type `VirtualComplexUnion.FbThriftUnionFieldEnum` is not a subtype of the overridden attribute `_fbthrift_python_abstract_types.VirtualComplexUnion.FbThriftUnionFieldEnum`
    fbthrift_current_field: _typing.Final[FbThriftUnionFieldEnum]
    def get_type(self) -> FbThriftUnionFieldEnum: ...
    def _to_python(self) -> "module.thrift_types.VirtualComplexUnion": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "module.types.VirtualComplexUnion": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.VirtualComplexUnion": ...  # type: ignore
_fbthrift_VirtualComplexUnion = VirtualComplexUnion

@_typing.final
class NonCopyableStruct(_fbthrift_python_mutable_types.MutableStruct, _fbthrift_python_abstract_types.NonCopyableStruct):
    @property
    def num(self) -> builtins.int: ...
    @num.setter
    def num(self, value: builtins.int) -> None: ...

    def __init__(
        self, *,
        num: _typing.Optional[builtins.int]=...
    ) -> None: ...

    def __call__(
        self, *,
        num: _typing.Optional[builtins.int]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[builtins.int]]]: ...
    def _to_python(self) -> "module.thrift_types.NonCopyableStruct": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "module.types.NonCopyableStruct": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.NonCopyableStruct": ...  # type: ignore
_fbthrift_NonCopyableStruct = NonCopyableStruct

@_typing.final
class NonCopyableUnion(_fbthrift_python_mutable_types.MutableUnion, _fbthrift_python_abstract_types.NonCopyableUnion):
    @property
    def s(self) -> _fbthrift_NonCopyableStruct: ...
    @s.setter
    def s(self, value: _fbthrift_NonCopyableStruct) -> None: ...

    def __init__(
        self, *,
        s: _typing.Optional[_fbthrift_NonCopyableStruct]=...
    ) -> None: ...



    class FbThriftUnionFieldEnum(enum.Enum):
        EMPTY: NonCopyableUnion.FbThriftUnionFieldEnum = ...
        s: NonCopyableUnion.FbThriftUnionFieldEnum = ...

    fbthrift_current_value: _typing.Final[_typing.Union[None, _fbthrift_NonCopyableStruct]]
    # pyre-ignore[15]: `fbthrift_current_field` overrides attribute defined in `_fbthrift_python_abstract_types.NonCopyableUnion` inconsistently. Type `NonCopyableUnion.FbThriftUnionFieldEnum` is not a subtype of the overridden attribute `_fbthrift_python_abstract_types.NonCopyableUnion.FbThriftUnionFieldEnum`
    fbthrift_current_field: _typing.Final[FbThriftUnionFieldEnum]
    def get_type(self) -> FbThriftUnionFieldEnum: ...
    def _to_python(self) -> "module.thrift_types.NonCopyableUnion": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "module.types.NonCopyableUnion": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.NonCopyableUnion": ...  # type: ignore
_fbthrift_NonCopyableUnion = NonCopyableUnion

containerTypedef = _fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.str]
