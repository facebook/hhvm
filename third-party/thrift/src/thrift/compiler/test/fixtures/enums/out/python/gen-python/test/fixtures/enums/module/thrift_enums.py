#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from __future__ import annotations
import builtins

import apache.thrift.metadata.thrift_types as _fbthrift_metadata
import thrift.python.types as _fbthrift_python_types
import typing as _std_python_typing



class Metasyntactic(_fbthrift_python_types.Enum, int):
    FOO = 1
    BAR = 2
    BAZ = 3
    BAX = 4
    @staticmethod
    def __get_thrift_name__() -> builtins.str:
        return "module.Metasyntactic"

    @staticmethod
    def __get_thrift_uri__() -> _std_python_typing.Optional[builtins.str]:
        return "test.dev/fixtures/enums/Metasyntactic"

    @staticmethod
    def __get_metadata__() -> _fbthrift_metadata.ThriftMetadata:
        return gen_metadata_enum_Metasyntactic()

    def _to_python(self) -> "Metasyntactic":
        return self

    def _to_py3(self) -> "Metasyntactic":
        return self

    # pyre-ignore[11]: Annotation `module.ttypes.Metasyntactic` is not defined as a type.
    def _to_py_deprecated(self) -> "module.ttypes.Metasyntactic":
        return self.value
import typing as _std_python_typing



class MyEnum1(_fbthrift_python_types.Enum, int):
    ME1_0 = 0
    ME1_1 = 1
    ME1_2 = 2
    ME1_3 = 3
    ME1_5 = 5
    ME1_6 = 6
    @staticmethod
    def __get_thrift_name__() -> builtins.str:
        return "module.MyEnum1"

    @staticmethod
    def __get_thrift_uri__() -> _std_python_typing.Optional[builtins.str]:
        return "test.dev/fixtures/enums/MyEnum1"

    @staticmethod
    def __get_metadata__() -> _fbthrift_metadata.ThriftMetadata:
        return gen_metadata_enum_MyEnum1()

    def _to_python(self) -> "MyEnum1":
        return self

    def _to_py3(self) -> "MyEnum1":
        return self

    # pyre-ignore[11]: Annotation `module.ttypes.MyEnum1` is not defined as a type.
    def _to_py_deprecated(self) -> "module.ttypes.MyEnum1":
        return self.value
import typing as _std_python_typing



class MyEnum2(_fbthrift_python_types.Enum, int):
    ME2_0 = 0
    ME2_1 = 1
    ME2_2 = 2
    @staticmethod
    def __get_thrift_name__() -> builtins.str:
        return "module.MyEnum2"

    @staticmethod
    def __get_thrift_uri__() -> _std_python_typing.Optional[builtins.str]:
        return "test.dev/fixtures/enums/MyEnum2"

    @staticmethod
    def __get_metadata__() -> _fbthrift_metadata.ThriftMetadata:
        return gen_metadata_enum_MyEnum2()

    def _to_python(self) -> "MyEnum2":
        return self

    def _to_py3(self) -> "MyEnum2":
        return self

    # pyre-ignore[11]: Annotation `module.ttypes.MyEnum2` is not defined as a type.
    def _to_py_deprecated(self) -> "module.ttypes.MyEnum2":
        return self.value
import typing as _std_python_typing



class MyEnum3(_fbthrift_python_types.Enum, int):
    ME3_0 = 0
    ME3_1 = 1
    ME3_N2 = -2
    ME3_N1 = -1
    ME3_9 = 9
    ME3_10 = 10
    @staticmethod
    def __get_thrift_name__() -> builtins.str:
        return "module.MyEnum3"

    @staticmethod
    def __get_thrift_uri__() -> _std_python_typing.Optional[builtins.str]:
        return "test.dev/fixtures/enums/MyEnum3"

    @staticmethod
    def __get_metadata__() -> _fbthrift_metadata.ThriftMetadata:
        return gen_metadata_enum_MyEnum3()

    def _to_python(self) -> "MyEnum3":
        return self

    def _to_py3(self) -> "MyEnum3":
        return self

    # pyre-ignore[11]: Annotation `module.ttypes.MyEnum3` is not defined as a type.
    def _to_py_deprecated(self) -> "module.ttypes.MyEnum3":
        return self.value
import typing as _std_python_typing



class MyEnum4(_fbthrift_python_types.Enum, int):
    ME4_A = 2147483645
    ME4_B = 2147483646
    ME4_C = 2147483647
    ME4_D = -2147483648
    @staticmethod
    def __get_thrift_name__() -> builtins.str:
        return "module.MyEnum4"

    @staticmethod
    def __get_thrift_uri__() -> _std_python_typing.Optional[builtins.str]:
        return "test.dev/fixtures/enums/MyEnum4"

    @staticmethod
    def __get_metadata__() -> _fbthrift_metadata.ThriftMetadata:
        return gen_metadata_enum_MyEnum4()

    def _to_python(self) -> "MyEnum4":
        return self

    def _to_py3(self) -> "MyEnum4":
        return self

    # pyre-ignore[11]: Annotation `module.ttypes.MyEnum4` is not defined as a type.
    def _to_py_deprecated(self) -> "module.ttypes.MyEnum4":
        return self.value
import typing as _std_python_typing



class MyBitmaskEnum1(_fbthrift_python_types.Enum, int):
    ONE = 1
    TWO = 2
    FOUR = 4
    @staticmethod
    def __get_thrift_name__() -> builtins.str:
        return "module.MyBitmaskEnum1"

    @staticmethod
    def __get_thrift_uri__() -> _std_python_typing.Optional[builtins.str]:
        return "test.dev/fixtures/enums/MyBitmaskEnum1"

    @staticmethod
    def __get_metadata__() -> _fbthrift_metadata.ThriftMetadata:
        return gen_metadata_enum_MyBitmaskEnum1()

    def _to_python(self) -> "MyBitmaskEnum1":
        return self

    def _to_py3(self) -> "MyBitmaskEnum1":
        return self

    # pyre-ignore[11]: Annotation `module.ttypes.MyBitmaskEnum1` is not defined as a type.
    def _to_py_deprecated(self) -> "module.ttypes.MyBitmaskEnum1":
        return self.value
import typing as _std_python_typing



class MyBitmaskEnum2(_fbthrift_python_types.Enum, int):
    ONE = 1
    TWO = 2
    FOUR = 4
    @staticmethod
    def __get_thrift_name__() -> builtins.str:
        return "module.MyBitmaskEnum2"

    @staticmethod
    def __get_thrift_uri__() -> _std_python_typing.Optional[builtins.str]:
        return "test.dev/fixtures/enums/MyBitmaskEnum2"

    @staticmethod
    def __get_metadata__() -> _fbthrift_metadata.ThriftMetadata:
        return gen_metadata_enum_MyBitmaskEnum2()

    def _to_python(self) -> "MyBitmaskEnum2":
        return self

    def _to_py3(self) -> "MyBitmaskEnum2":
        return self

    # pyre-ignore[11]: Annotation `module.ttypes.MyBitmaskEnum2` is not defined as a type.
    def _to_py_deprecated(self) -> "module.ttypes.MyBitmaskEnum2":
        return self.value

def _fbthrift_gen_metadata_enum_Metasyntactic(metadata_struct: _fbthrift_metadata.ThriftMetadata) -> _fbthrift_metadata.ThriftMetadata:
    qualified_name = "module.Metasyntactic"

    if qualified_name in metadata_struct.enums:
        return metadata_struct
    elements = {
        1: "FOO",
        2: "BAR",
        3: "BAZ",
        4: "BAX",
    }
    structured_annotations = [
    ]
    enum_dict = dict(metadata_struct.enums)
    enum_dict[qualified_name] = _fbthrift_metadata.ThriftEnum(name=qualified_name, elements=elements, structured_annotations=structured_annotations)
    new_struct = metadata_struct(enums=enum_dict)

    return new_struct

def gen_metadata_enum_Metasyntactic() -> _fbthrift_metadata.ThriftMetadata:
    return _fbthrift_gen_metadata_enum_Metasyntactic(
        _fbthrift_metadata.ThriftMetadata(structs={}, enums={}, exceptions={}, services={})
    )

def _fbthrift_gen_metadata_enum_MyEnum1(metadata_struct: _fbthrift_metadata.ThriftMetadata) -> _fbthrift_metadata.ThriftMetadata:
    qualified_name = "module.MyEnum1"

    if qualified_name in metadata_struct.enums:
        return metadata_struct
    elements = {
        0: "ME1_0",
        1: "ME1_1",
        2: "ME1_2",
        3: "ME1_3",
        5: "ME1_5",
        6: "ME1_6",
    }
    structured_annotations = [
    ]
    enum_dict = dict(metadata_struct.enums)
    enum_dict[qualified_name] = _fbthrift_metadata.ThriftEnum(name=qualified_name, elements=elements, structured_annotations=structured_annotations)
    new_struct = metadata_struct(enums=enum_dict)

    return new_struct

def gen_metadata_enum_MyEnum1() -> _fbthrift_metadata.ThriftMetadata:
    return _fbthrift_gen_metadata_enum_MyEnum1(
        _fbthrift_metadata.ThriftMetadata(structs={}, enums={}, exceptions={}, services={})
    )

def _fbthrift_gen_metadata_enum_MyEnum2(metadata_struct: _fbthrift_metadata.ThriftMetadata) -> _fbthrift_metadata.ThriftMetadata:
    qualified_name = "module.MyEnum2"

    if qualified_name in metadata_struct.enums:
        return metadata_struct
    elements = {
        0: "ME2_0",
        1: "ME2_1",
        2: "ME2_2",
    }
    structured_annotations = [
    ]
    enum_dict = dict(metadata_struct.enums)
    enum_dict[qualified_name] = _fbthrift_metadata.ThriftEnum(name=qualified_name, elements=elements, structured_annotations=structured_annotations)
    new_struct = metadata_struct(enums=enum_dict)

    return new_struct

def gen_metadata_enum_MyEnum2() -> _fbthrift_metadata.ThriftMetadata:
    return _fbthrift_gen_metadata_enum_MyEnum2(
        _fbthrift_metadata.ThriftMetadata(structs={}, enums={}, exceptions={}, services={})
    )

def _fbthrift_gen_metadata_enum_MyEnum3(metadata_struct: _fbthrift_metadata.ThriftMetadata) -> _fbthrift_metadata.ThriftMetadata:
    qualified_name = "module.MyEnum3"

    if qualified_name in metadata_struct.enums:
        return metadata_struct
    elements = {
        0: "ME3_0",
        1: "ME3_1",
        -2: "ME3_N2",
        -1: "ME3_N1",
        9: "ME3_9",
        10: "ME3_10",
    }
    structured_annotations = [
    ]
    enum_dict = dict(metadata_struct.enums)
    enum_dict[qualified_name] = _fbthrift_metadata.ThriftEnum(name=qualified_name, elements=elements, structured_annotations=structured_annotations)
    new_struct = metadata_struct(enums=enum_dict)

    return new_struct

def gen_metadata_enum_MyEnum3() -> _fbthrift_metadata.ThriftMetadata:
    return _fbthrift_gen_metadata_enum_MyEnum3(
        _fbthrift_metadata.ThriftMetadata(structs={}, enums={}, exceptions={}, services={})
    )

def _fbthrift_gen_metadata_enum_MyEnum4(metadata_struct: _fbthrift_metadata.ThriftMetadata) -> _fbthrift_metadata.ThriftMetadata:
    qualified_name = "module.MyEnum4"

    if qualified_name in metadata_struct.enums:
        return metadata_struct
    elements = {
        2147483645: "ME4_A",
        2147483646: "ME4_B",
        2147483647: "ME4_C",
        -2147483648: "ME4_D",
    }
    structured_annotations = [
    ]
    enum_dict = dict(metadata_struct.enums)
    enum_dict[qualified_name] = _fbthrift_metadata.ThriftEnum(name=qualified_name, elements=elements, structured_annotations=structured_annotations)
    new_struct = metadata_struct(enums=enum_dict)

    return new_struct

def gen_metadata_enum_MyEnum4() -> _fbthrift_metadata.ThriftMetadata:
    return _fbthrift_gen_metadata_enum_MyEnum4(
        _fbthrift_metadata.ThriftMetadata(structs={}, enums={}, exceptions={}, services={})
    )

def _fbthrift_gen_metadata_enum_MyBitmaskEnum1(metadata_struct: _fbthrift_metadata.ThriftMetadata) -> _fbthrift_metadata.ThriftMetadata:
    qualified_name = "module.MyBitmaskEnum1"

    if qualified_name in metadata_struct.enums:
        return metadata_struct
    elements = {
        1: "ONE",
        2: "TWO",
        4: "FOUR",
    }
    structured_annotations = [
        _fbthrift_metadata.ThriftConstStruct(type=_fbthrift_metadata.ThriftStructType(name="thrift.BitmaskEnum"), fields= {  }),
    ]
    enum_dict = dict(metadata_struct.enums)
    enum_dict[qualified_name] = _fbthrift_metadata.ThriftEnum(name=qualified_name, elements=elements, structured_annotations=structured_annotations)
    new_struct = metadata_struct(enums=enum_dict)

    return new_struct

def gen_metadata_enum_MyBitmaskEnum1() -> _fbthrift_metadata.ThriftMetadata:
    return _fbthrift_gen_metadata_enum_MyBitmaskEnum1(
        _fbthrift_metadata.ThriftMetadata(structs={}, enums={}, exceptions={}, services={})
    )

def _fbthrift_gen_metadata_enum_MyBitmaskEnum2(metadata_struct: _fbthrift_metadata.ThriftMetadata) -> _fbthrift_metadata.ThriftMetadata:
    qualified_name = "module.MyBitmaskEnum2"

    if qualified_name in metadata_struct.enums:
        return metadata_struct
    elements = {
        1: "ONE",
        2: "TWO",
        4: "FOUR",
    }
    structured_annotations = [
        _fbthrift_metadata.ThriftConstStruct(type=_fbthrift_metadata.ThriftStructType(name="thrift.BitmaskEnum"), fields= {  }),
    ]
    enum_dict = dict(metadata_struct.enums)
    enum_dict[qualified_name] = _fbthrift_metadata.ThriftEnum(name=qualified_name, elements=elements, structured_annotations=structured_annotations)
    new_struct = metadata_struct(enums=enum_dict)

    return new_struct

def gen_metadata_enum_MyBitmaskEnum2() -> _fbthrift_metadata.ThriftMetadata:
    return _fbthrift_gen_metadata_enum_MyBitmaskEnum2(
        _fbthrift_metadata.ThriftMetadata(structs={}, enums={}, exceptions={}, services={})
    )

