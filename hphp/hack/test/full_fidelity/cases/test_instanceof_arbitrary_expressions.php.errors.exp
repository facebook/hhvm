(14,22)-(14,43) Use of the '{}' subscript operator is deprecated;  use '[]' instead.
(24,22)-(24,33) Only classnames and variables are allowed before '::'.
(25,22)-(25,32) Only classnames and variables are allowed before '::'.
(27,22)-(27,47) Only classnames and variables are allowed before '::'.
(28,22)-(28,46) Only classnames and variables are allowed before '::'.
(29,22)-(29,43) Use of the '{}' subscript operator is deprecated;  use '[]' instead.
(29,22)-(29,47) Only classnames and variables are allowed before '::'.
(30,22)-(30,42) Use of the '{}' subscript operator is deprecated;  use '[]' instead.
(30,22)-(30,46) Only classnames and variables are allowed before '::'.
(47,22)-(47,43) A scope resolution (::) on the right side of an instanceof operator cannot contain a member selection (->)
(47,22)-(47,47) Only classnames and variables are allowed before '::'.
(50,22)-(50,35) A subscript expression ([]) on the right side of an instanceof operator must have an index
(55,22)-(55,22) Unexpected node on right hand side of new or instanceof: literal
(56,22)-(56,26) Unexpected node on right hand side of new or instanceof: literal
(58,22)-(58,31) A scope resolution (::) on the right side of an instanceof operator must start with a class name, `self`, `parent`, or `static`, and end with a variable
(60,8)-(60,26) `instanceof (Foo)` is not allowed because it is ambiguous. Is `Foo` a class or a constant?
(61,22)-(61,28) Unexpected node on right hand side of new or instanceof: function_call_expression
(65,22)-(65,29) A scope resolution (::) on the right side of an instanceof operator must start with a class name, `self`, `parent`, or `static`, and end with a variable
(65,22)-(65,40) Only classnames and variables are allowed before '::'.
(67,22)-(67,24) Unexpected node on right hand side of new or instanceof: token
(68,22)-(68,24) Unexpected node on right hand side of new or instanceof: token
(68,27)-(68,27) A name or variable name is expected here.
(69,22)-(69,24) Unexpected node on right hand side of new or instanceof: token
