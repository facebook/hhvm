#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#
import typing as __T

from module.ttypes import *

myInt: int
name: str
multi_line_string: str
states: __T.List[__T.Dict[str, int]]
x: float
y: float
z: float
zeroDoubleValue: float
longDoubleValue: float
my_company: Company
foo: str
bar: int
mymap: __T.Dict[str, str]
instagram: Internship
partial_const: Internship
kRanges: __T.List[Range]
internList: __T.List[Internship]
pod_0: struct1
pod_s_0: struct1
pod_1: struct1
pod_s_1: struct1
pod_2: struct2
pod_trailing_commas: struct2
pod_s_2: struct2
pod_3: struct3
pod_s_3: struct3
pod_4: struct4
u_1_1: union1
u_1_2: union1
u_1_3: union1
u_2_1: union2
u_2_2: union2
u_2_3: union2
u_2_4: union2
u_2_5: union2
u_2_6: union2
apostrophe: str
tripleApostrophe: str
quotationMark: str
backslash: str
escaped_a: str
char2ascii: __T.Dict[str, int]
escaped_strings: __T.List[str]
false_c: bool
true_c: bool
zero_byte: int
zero16: int
zero32: int
zero64: int
zero_dot_zero: float
empty_string: str
empty_int_list: __T.List[int]
empty_string_list: __T.List[str]
empty_int_set: __T.Set[int]
empty_string_set: __T.Set[str]
empty_int_int_map: __T.Dict[int, int]
empty_int_string_map: __T.Dict[int, str]
empty_string_int_map: __T.Dict[str, int]
empty_string_string_map: __T.Dict[str, str]
maxIntDec: int
maxIntOct: int
maxIntHex: int
maxIntBin: int
maxDub: float
minDub: float
minSDub: float
maxPIntDec: int
maxPIntOct: int
maxPIntHex: int
maxPIntBin: int
maxPDub: float
minPDub: float
minPSDub: float
minIntDec: int
minIntOct: int
minIntHex: int
minIntBin: int
maxNDub: float
minNDub: float
minNSDub: float
