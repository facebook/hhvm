diff --git a/mbfl_memory_device.c b/mbfl_memory_device.c
index 1836298..76baf07 100644
--- a/third-party/libmbfl/mbfl/mbfl_memory_device.c
+++ b/third-party/libmbfl/mbfl/mbfl_memory_device.c
@@ -36,6 +36,7 @@
 #include <stddef.h>
 #endif
 
+#include <string.h>
 #include "mbfl_allocators.h"
 #include "mbfl_string.h"
 #include "mbfl_memory_device.h"
@@ -48,9 +49,9 @@ mbfl_memory_device_init(mbfl_memory_device *device, int initsz, int allocsz)
 {
 	if (device) {
 		device->length = 0;
-		device->buffer = (unsigned char *)0;
+		device->buffer = NULL;
 		if (initsz > 0) {
-			device->buffer = (unsigned char *)mbfl_malloc(initsz*sizeof(unsigned char));
+			device->buffer = (unsigned char *)mbfl_malloc(initsz);
 			if (device->buffer != NULL) {
 				device->length = initsz;
 			}
@@ -71,7 +72,7 @@ mbfl_memory_device_realloc(mbfl_memory_device *device, int initsz, int allocsz)
 
 	if (device) {
 		if (initsz > device->length) {
-			tmp = (unsigned char *)mbfl_realloc((void *)device->buffer, initsz*sizeof(unsigned char));
+			tmp = (unsigned char *)mbfl_realloc((void *)device->buffer, initsz);
 			if (tmp != NULL) {
 				device->buffer = tmp;
 				device->length = initsz;
@@ -92,7 +93,7 @@ mbfl_memory_device_clear(mbfl_memory_device *device)
 		if (device->buffer) {
 			mbfl_free(device->buffer);
 		}
-		device->buffer = (unsigned char *)0;
+		device->buffer = NULL;
 		device->length = 0;
 		device->pos = 0;
 	}
@@ -121,7 +122,7 @@ mbfl_memory_device_result(mbfl_memory_device *device, mbfl_string *result)
 		result->len = device->pos;
 		mbfl_memory_device_output4('\0', device);
 		result->val = device->buffer;
-		device->buffer = (unsigned char *)0;
+		device->buffer = NULL;
 		device->length = 0;
 		device->pos= 0;
 		if (result->val == NULL) {
@@ -145,12 +146,13 @@ mbfl_memory_device_output(int c, void *data)
 		int newlen;
 		unsigned char *tmp;
 
-		newlen = device->length + device->allocsz;
-		if (newlen <= 0) {
+		if (device->length > SIZE_MAX - device->allocsz) {
 			/* overflow */
 			return -1;
 		}
-		tmp = (unsigned char *)mbfl_realloc((void *)device->buffer, newlen*sizeof(unsigned char));
+
+		newlen = device->length + device->allocsz;
+		tmp = (unsigned char *)mbfl_realloc((void *)device->buffer, newlen);
 		if (tmp == NULL) {
 			return -1;
 		}
@@ -167,17 +169,18 @@ mbfl_memory_device_output2(int c, void *data)
 {
 	mbfl_memory_device *device = (mbfl_memory_device *)data;
 
-	if ((device->pos + 2) >= device->length) {
+	if (2 > device->length - device->pos) {
 		/* reallocate buffer */
 		int newlen;
 		unsigned char *tmp;
 
-		newlen = device->length + device->allocsz;
-		if (newlen <= 0) {
+		if (device->length > SIZE_MAX - device->allocsz) {
 			/* overflow */
 			return -1;
 		}
-		tmp = (unsigned char *)mbfl_realloc((void *)device->buffer, newlen*sizeof(unsigned char));
+
+		newlen = device->length + device->allocsz;
+		tmp = (unsigned char *)mbfl_realloc((void *)device->buffer, newlen);
 		if (tmp == NULL) {
 			return -1;
 		}
@@ -196,17 +199,19 @@ mbfl_memory_device_output4(int c, void* data)
 {
 	mbfl_memory_device *device = (mbfl_memory_device *)data;
 
-	if ((device->pos + 4) >= device->length) {
+	if (4 > device->length - device->pos) {
 		/* reallocate buffer */
 		int newlen;
 		unsigned char *tmp;
 
-		newlen = device->length + device->allocsz;
-		if (newlen <= 0) {
+
+		if (device->length > SIZE_MAX - device->allocsz) {
 			/* overflow */
 			return -1;
 		}
-		tmp = (unsigned char *)mbfl_realloc((void *)device->buffer, newlen*sizeof(unsigned char));
+
+		newlen = device->length + device->allocsz;
+		tmp = (unsigned char *)mbfl_realloc((void *)device->buffer, newlen);
 		if (tmp == NULL) {
 			return -1;
 		}
@@ -225,56 +230,27 @@ mbfl_memory_device_output4(int c, void* data)
 int
 mbfl_memory_device_strcat(mbfl_memory_device *device, const char *psrc)
 {
-	int len;
-	unsigned char *w;
-	const unsigned char *p;
-
-	len = 0;
-	p = (const unsigned char*)psrc;
-	while (*p) {
-		p++;
-		len++;
-	}
-
-	if ((device->pos + len) >= device->length) {
-		/* reallocate buffer */
-		int newlen = device->length + (len + MBFL_MEMORY_DEVICE_ALLOC_SIZE)*sizeof(unsigned char);
-		if (newlen <= 0) {
-			/* overflow */
-			return -1;
-		}
-		unsigned char *tmp = (unsigned char *)mbfl_realloc((void *)device->buffer, newlen*sizeof(unsigned char));
-		if (tmp == NULL) {
-			return -1;
-		}
-		device->length = newlen;
-		device->buffer = tmp;
-	}
-
-	p = (const unsigned char*)psrc;
-	w = &device->buffer[device->pos];
-	device->pos += len;
-	while (len > 0) {
-		*w++ = *p++;
-		len--;
-	}
-
-	return len;
+	return mbfl_memory_device_strncat(device, psrc, strlen(psrc));
 }
 
 int
 mbfl_memory_device_strncat(mbfl_memory_device *device, const char *psrc, int len)
 {
 	unsigned char *w;
+	unsigned char *tmp;
 
-	if ((device->pos + len) >= device->length) {
+	if (len > device->length - device->pos) {
 		/* reallocate buffer */
-		int newlen = device->length + len + MBFL_MEMORY_DEVICE_ALLOC_SIZE;
-		if (newlen <= 0) {
+		int newlen;
+
+		if (len > SIZE_MAX - MBFL_MEMORY_DEVICE_ALLOC_SIZE
+				|| device->length > SIZE_MAX - (len + MBFL_MEMORY_DEVICE_ALLOC_SIZE)) {
 			/* overflow */
 			return -1;
 		}
-		unsigned char *tmp = (unsigned char *)mbfl_realloc((void *)device->buffer, newlen*sizeof(unsigned char));
+
+		newlen = device->length + len + MBFL_MEMORY_DEVICE_ALLOC_SIZE;
+		tmp = (unsigned char *)mbfl_realloc((void *)device->buffer, newlen);
 		if (tmp == NULL) {
 			return -1;
 		}
@@ -283,11 +259,8 @@ mbfl_memory_device_strncat(mbfl_memory_device *device, const char *psrc, int len
 	}
 
 	w = &device->buffer[device->pos];
+	memcpy(w, psrc, len);
 	device->pos += len;
-	while (len > 0) {
-		*w++ = *psrc++;
-		len--;
-	}
 
 	return len;
 }
@@ -295,41 +268,14 @@ mbfl_memory_device_strncat(mbfl_memory_device *device, const char *psrc, int len
 int
 mbfl_memory_device_devcat(mbfl_memory_device *dest, mbfl_memory_device *src)
 {
-	int n;
-	unsigned char *p, *w;
-
-	if ((dest->pos + src->pos) >= dest->length) {
-		/* reallocate buffer */
-		int newlen = dest->length + src->pos + MBFL_MEMORY_DEVICE_ALLOC_SIZE;
-		if (newlen <= 0) {
-			/* overflow */
-			return -1;
-		}
-		unsigned char *tmp = (unsigned char *)mbfl_realloc((void *)dest->buffer, newlen*sizeof(unsigned char));
-		if (tmp == NULL) {
-			return -1;
-		}
-		dest->length = newlen;
-		dest->buffer = tmp;
-	}
-
-	p = src->buffer;
-	w = &dest->buffer[dest->pos];
-	n = src->pos;
-	dest->pos += n;
-	while (n > 0) {
-		*w++ = *p++;
-		n--;
-	}
-
-	return n;
+	return mbfl_memory_device_strncat(dest, (const char *) src->buffer, src->pos);
 }
 
 void
 mbfl_wchar_device_init(mbfl_wchar_device *device)
 {
 	if (device) {
-		device->buffer = (unsigned int *)0;
+		device->buffer = NULL;
 		device->length = 0;
 		device->pos= 0;
 		device->allocsz = MBFL_MEMORY_DEVICE_ALLOC_SIZE;
@@ -343,7 +289,7 @@ mbfl_wchar_device_clear(mbfl_wchar_device *device)
 		if (device->buffer) {
 			mbfl_free(device->buffer);
 		}
-		device->buffer = (unsigned int*)0;
+		device->buffer = NULL;
 		device->length = 0;
 		device->pos = 0;
 	}
@@ -359,8 +305,13 @@ mbfl_wchar_device_output(int c, void *data)
 		int newlen;
 		unsigned int *tmp;
 
+		if (device->length > SIZE_MAX - device->allocsz) {
+			/* overflow */
+			return -1;
+		}
+
 		newlen = device->length + device->allocsz;
-		if (newlen <= 0) {
+		if (newlen > SIZE_MAX / sizeof(int)) {
 			/* overflow */
 			return -1;
 		}
diff --git a/mbfl_memory_device.h b/mbfl_memory_device.h
index a2c1c40..d8d721e 100644
--- a/third-party/libmbfl/mbfl/mbfl_memory_device.h
+++ b/third-party/libmbfl/mbfl/mbfl_memory_device.h
@@ -33,9 +33,15 @@
 
 #include "mbfl_defs.h"
 #include "mbfl_string.h"
+#include <limits.h>
 
 #define MBFL_MEMORY_DEVICE_ALLOC_SIZE	64
 
+#ifndef SIZE_MAX
+#define SIZE_MAX	INT_MAX
+#endif
+
+
 typedef struct _mbfl_memory_device {
 	unsigned char *buffer;
 	int length;
