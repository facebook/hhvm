[("\\DictConsts",
  (Shallow_decl_defs.Class
     { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
       sc_abstract = false; sc_is_xhp = false; sc_internal = false;
       sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
       sc_module = None; sc_name = ([4:7-17], "\\DictConsts");
       sc_tparams = []; sc_where_constraints = []; sc_extends = [];
       sc_uses = []; sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
       sc_xhp_marked_empty = false; sc_req_extends = [];
       sc_req_implements = []; sc_req_class = []; sc_implements = [];
       sc_support_dynamic_type = false;
       sc_consts =
       [{ Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
          scc_name = ([5:27-32], "CDICT");
          scc_type =
          (Rhint ([5:9-26]),
           (Tapply (([5:9-13], "\\HH\\dict"),
              [(Rhint ([5:14-17]), (Tprim Tint));
                (Rhint ([5:19-25]), (Tprim Tstring))]
              )));
          scc_refs = [] };
         { Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
           scc_name = ([6:38-50], "CNESTED_DICT");
           scc_type =
           (Rhint ([6:9-37]),
            (Tapply (([6:9-13], "\\HH\\dict"),
               [(Rhint ([6:14-17]), (Tprim Tint));
                 (Rhint ([6:19-36]),
                  (Tapply (([6:19-23], "\\HH\\dict"),
                     [(Rhint ([6:24-27]), (Tprim Tint));
                       (Rhint ([6:29-35]), (Tprim Tstring))]
                     )))
                 ]
               )));
           scc_refs = [] };
         { Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
           scc_name = ([8:37-55], "CNESTED_DICT_FLOAT");
           scc_type =
           (Rhint ([8:9-36]),
            (Tapply (([8:9-13], "\\HH\\dict"),
               [(Rhint ([8:14-17]), (Tprim Tint));
                 (Rhint ([8:19-35]),
                  (Tapply (([8:19-23], "\\HH\\dict"),
                     [(Rhint ([8:24-27]), (Tprim Tint));
                       (Rhint ([8:29-34]), (Tprim Tfloat))]
                     )))
                 ]
               )));
           scc_refs = [] }
         ];
       sc_typeconsts = []; sc_props = []; sc_sprops = [];
       sc_constructor = None; sc_static_methods = []; sc_methods = [];
       sc_user_attributes = []; sc_enum_type = None; sc_docs_url = None }));
  ("\\AbstractConsts",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = true; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Abstract);
        sc_module = None; sc_name = ([12:16-30], "\\AbstractConsts");
        sc_tparams = []; sc_where_constraints = []; sc_extends = [];
        sc_uses = []; sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false; sc_req_extends = [];
        sc_req_implements = []; sc_req_class = []; sc_implements = [];
        sc_support_dynamic_type = false;
        sc_consts =
        [{ Shallow_decl_defs.scc_abstract = (Typing_defs.CCAbstract false);
           scc_name = ([13:22-35], "CABSTRACT_INT");
           scc_type = (Rhint ([13:18-21]), (Tprim Tint)); scc_refs = [] }
          ];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = []; sc_methods = [];
        sc_user_attributes = []; sc_enum_type = None; sc_docs_url = None }));
  ("\\VecConsts",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = false; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
        sc_module = None; sc_name = ([16:7-16], "\\VecConsts");
        sc_tparams = []; sc_where_constraints = []; sc_extends = [];
        sc_uses = []; sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false; sc_req_extends = [];
        sc_req_implements = []; sc_req_class = []; sc_implements = [];
        sc_support_dynamic_type = false;
        sc_consts =
        [{ Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
           scc_name = ([17:18-22], "CVEC");
           scc_type =
           (Rhint ([17:9-17]),
            (Tapply (([17:9-12], "\\HH\\vec"),
               [(Rhint ([17:13-16]), (Tprim Tint))])));
           scc_refs = [] };
          { Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
            scc_name = ([18:23-34], "CNESTED_VEC");
            scc_type =
            (Rhint ([18:9-22]),
             (Tapply (([18:9-12], "\\HH\\vec"),
                [(Rhint ([18:13-21]),
                  (Tapply (([18:13-16], "\\HH\\vec"),
                     [(Rhint ([18:17-20]), (Tprim Tint))])))
                  ]
                )));
            scc_refs = [] }
          ];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = []; sc_methods = [];
        sc_user_attributes = []; sc_enum_type = None; sc_docs_url = None }));
  ("\\ArrayConsts",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = false; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
        sc_module = None; sc_name = ([21:7-18], "\\ArrayConsts");
        sc_tparams = []; sc_where_constraints = []; sc_extends = [];
        sc_uses = []; sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false; sc_req_extends = [];
        sc_req_implements = []; sc_req_class = []; sc_implements = [];
        sc_support_dynamic_type = false;
        sc_consts =
        [{ Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
           scc_name = ([22:29-36], "CDARRAY");
           scc_type =
           (Rhint ([22:9-28]),
            (Tapply (([22:9-15], "\\HH\\dict"),
               [(Rhint ([22:16-22]), (Tprim Tstring));
                 (Rhint ([22:24-27]), (Tprim Tint))]
               )));
           scc_refs = [] };
          { Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
            scc_name = ([23:24-31], "CKEYSET");
            scc_type =
            (Rhint ([23:9-23]),
             (Tapply (([23:9-15], "\\HH\\keyset"),
                [(Rhint ([23:16-22]), (Tprim Tstring))])));
            scc_refs = [] };
          { Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
            scc_name = ([24:27-44], "CCLASSNAME_KEYSET");
            scc_type =
            (Rhint ([24:9-26]),
             (Tapply (([24:9-15], "\\HH\\keyset"),
                [(Rhint ([24:16-25]), (Tprim Tstring))])));
            scc_refs = [] };
          { Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
            scc_name = ([25:24-31], "CVARRAY");
            scc_type =
            (Rhint ([25:9-23]),
             (Tapply (([25:9-15], "\\HH\\vec"),
                [(Rhint ([25:16-22]), (Tprim Tstring))])));
            scc_refs = [] }
          ];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = []; sc_methods = [];
        sc_user_attributes = []; sc_enum_type = None; sc_docs_url = None }));
  ("\\BinopConsts",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = false; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
        sc_module = None; sc_name = ([28:7-18], "\\BinopConsts");
        sc_tparams = []; sc_where_constraints = []; sc_extends = [];
        sc_uses = []; sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false; sc_req_extends = [];
        sc_req_implements = []; sc_req_class = []; sc_implements = [];
        sc_support_dynamic_type = false;
        sc_consts =
        [{ Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
           scc_name = ([29:13-17], "CINT");
           scc_type = (Rhint ([29:9-12]), (Tprim Tint)); scc_refs = [] };
          { Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
            scc_name = ([30:15-21], "CFLOAT");
            scc_type = (Rhint ([30:9-14]), (Tprim Tfloat)); scc_refs = [] };
          { Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
            scc_name = ([31:16-23], "CSTRING");
            scc_type = (Rhint ([31:9-15]), (Tprim Tstring)); scc_refs = [] };
          { Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
            scc_name = ([32:14-19], "CBOOL");
            scc_type = (Rhint ([32:9-13]), (Tprim Tbool)); scc_refs = [] }
          ];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = []; sc_methods = [];
        sc_user_attributes = []; sc_enum_type = None; sc_docs_url = None }));
  ("\\ShapeConsts",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = false; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
        sc_module = None; sc_name = ([35:7-18], "\\ShapeConsts");
        sc_tparams = []; sc_where_constraints = []; sc_extends = [];
        sc_uses = []; sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false; sc_req_extends = [];
        sc_req_implements = []; sc_req_class = []; sc_implements = [];
        sc_support_dynamic_type = false;
        sc_consts =
        [{ Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
           scc_name = ([36:47-53], "CSHAPE");
           scc_type =
           (Rhint ([36:9-46]),
            (Tshape ((Rhint ([36:42-45]), Tmixed),
               { (Typing_defs_core.TSFlit_str ([36:15-18], "a")) ->
                 { sft_optional = false;
                   sft_ty = (Rhint ([36:22-25]), (Tprim Tint)) };
                 (Typing_defs_core.TSFlit_str ([36:27-30], "b")) ->
                 { sft_optional = false;
                   sft_ty = (Rhint ([36:34-40]), (Tprim Tstring)) } }
               )));
           scc_refs = [] }
          ];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = []; sc_methods = [];
        sc_user_attributes = []; sc_enum_type = None; sc_docs_url = None }));
  ("\\TupleConsts",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = false; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
        sc_module = None; sc_name = ([40:7-18], "\\TupleConsts");
        sc_tparams = []; sc_where_constraints = []; sc_extends = [];
        sc_uses = []; sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false; sc_req_extends = [];
        sc_req_implements = []; sc_req_class = []; sc_implements = [];
        sc_support_dynamic_type = false;
        sc_consts =
        [{ Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
           scc_name = ([41:33-40], "COPTION");
           scc_type =
           (Rhint ([41:9-32]),
            (Ttuple
               [(Rhint ([41:10-13]), (Tprim Tint));
                 (Rhint ([41:15-31]),
                  (Toption
                     (Rhint ([41:16-31]),
                      (Ttuple
                         [(Rhint ([41:17-23]), (Tprim Tstring));
                           (Rhint ([41:25-30]), (Tprim Tfloat))]))))
                 ]));
           scc_refs = [] }
          ];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = []; sc_methods = [];
        sc_user_attributes = []; sc_enum_type = None; sc_docs_url = None }));
  ("\\ClassnameConsts",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_abstract = false; sc_is_xhp = false; sc_internal = false;
        sc_has_xhp_keyword = false; sc_kind = (Cclass Concrete);
        sc_module = None; sc_name = ([44:7-22], "\\ClassnameConsts");
        sc_tparams = []; sc_where_constraints = []; sc_extends = [];
        sc_uses = []; sc_xhp_attr_uses = []; sc_xhp_enum_values = {};
        sc_xhp_marked_empty = false; sc_req_extends = [];
        sc_req_implements = []; sc_req_class = []; sc_implements = [];
        sc_support_dynamic_type = false;
        sc_consts =
        [{ Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
           scc_name = ([45:32-42], "CCLASSNAME");
           scc_type =
           (Rhint ([45:9-31]),
            (Tapply (([45:9-18], "\\HH\\classname"),
               [(Rhint ([45:19-30]),
                 (Tapply (([45:19-30], "\\TupleConsts"), [])))]
               )));
           scc_refs = [((Typing_defs.From "\\TupleConsts"), "class")] };
          { Shallow_decl_defs.scc_abstract = Typing_defs.CCConcrete;
            scc_name = ([46:36-47], "CCLASSNAME2");
            scc_type =
            (Rhint ([46:9-35]),
             (Tapply (([46:9-18], "\\HH\\classname"),
                [(Rhint ([46:19-34]),
                  (Tapply (([46:19-34], "\\ClassnameConsts"), [])))]
                )));
            scc_refs = [(Typing_defs.Self, "class")] }
          ];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = []; sc_methods = [];
        sc_user_attributes = []; sc_enum_type = None; sc_docs_url = None }))
  ]
