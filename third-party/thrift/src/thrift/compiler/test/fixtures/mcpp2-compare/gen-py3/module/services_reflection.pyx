#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

from thrift.py3.reflection cimport (
  MethodSpec as __MethodSpec,
  ArgumentSpec as __ArgumentSpec,
  NumberType as __NumberType,
)

import folly.iobuf as _fbthrift_iobuf

cimport facebook.thrift.annotation.cpp.types as _facebook_thrift_annotation_cpp_types
cimport includes.types as _includes_types

cimport module.types as _module_types


cdef __InterfaceSpec get_reflection__EmptyService(bint for_clients):
    cdef __InterfaceSpec spec = __InterfaceSpec._fbthrift_create(
        name="EmptyService",
        annotations={
        },
    )
    return spec


cdef __InterfaceSpec get_reflection__ReturnService(bint for_clients):
    cdef __InterfaceSpec spec = __InterfaceSpec._fbthrift_create(
        name="ReturnService",
        annotations={
        },
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="noReturn",
            arguments=(
            ),
            result=None,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
                """thread""": """eb""",            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="boolReturn",
            arguments=(
            ),
            result=bool,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="i16Return",
            arguments=(
            ),
            result=int,
            result_kind=__NumberType.I16,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="i32Return",
            arguments=(
            ),
            result=int,
            result_kind=__NumberType.I32,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="i64Return",
            arguments=(
            ),
            result=int,
            result_kind=__NumberType.I64,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="floatReturn",
            arguments=(
            ),
            result=float,
            result_kind=__NumberType.FLOAT,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="doubleReturn",
            arguments=(
            ),
            result=float,
            result_kind=__NumberType.DOUBLE,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="stringReturn",
            arguments=(
            ),
            result=str,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
                """thread""": """eb""",            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="binaryReturn",
            arguments=(
            ),
            result=bytes,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="mapReturn",
            arguments=(
            ),
            result=_module_types.Map__string_i64,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="simpleTypedefReturn",
            arguments=(
            ),
            result=int,
            result_kind=__NumberType.I32,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="complexTypedefReturn",
            arguments=(
            ),
            result=_module_types.List__Map__Empty_MyStruct,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="list_mostComplexTypedefReturn",
            arguments=(
            ),
            result=_module_types.List__List__List__Map__Empty_MyStruct,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="enumReturn",
            arguments=(
            ),
            result=_module_types.MyEnumA,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
                """thread""": """eb""",            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="list_EnumReturn",
            arguments=(
            ),
            result=_module_types.List__MyEnumA,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
                """thread""": """eb""",            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="structReturn",
            arguments=(
            ),
            result=_module_types.MyStruct,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="set_StructReturn",
            arguments=(
            ),
            result=_module_types.Set__MyStruct,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="unionReturn",
            arguments=(
            ),
            result=_module_types.ComplexUnion,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
                """thread""": """eb""",            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="list_UnionReturn",
            arguments=(
            ),
            result=_module_types.List__ComplexUnion,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="readDataEb",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="size",
                    type=int,
                    kind=__NumberType.I64,
                    annotations={
                    },
                ),
            ),
            result=_fbthrift_iobuf.IOBuf,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
                """thread""": """eb""",            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="readData",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="size",
                    type=int,
                    kind=__NumberType.I64,
                    annotations={
                    },
                ),
            ),
            result=_fbthrift_iobuf.IOBuf,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    return spec


cdef __InterfaceSpec get_reflection__ParamService(bint for_clients):
    cdef __InterfaceSpec spec = __InterfaceSpec._fbthrift_create(
        name="ParamService",
        annotations={
        },
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="void_ret_i16_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=int,
                    kind=__NumberType.I16,
                    annotations={
                    },
                ),
            ),
            result=None,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
                """thread""": """eb""",            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="void_ret_byte_i16_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=int,
                    kind=__NumberType.BYTE,
                    annotations={
                    },
                ),
                __ArgumentSpec._fbthrift_create(
                    name="param2",
                    type=int,
                    kind=__NumberType.I16,
                    annotations={
                    },
                ),
            ),
            result=None,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="void_ret_map_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=_module_types.Map__string_i64,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
            ),
            result=None,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="void_ret_map_setlist_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=_module_types.Map__string_i64,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
                __ArgumentSpec._fbthrift_create(
                    name="param2",
                    type=_module_types.Set__List__string,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
            ),
            result=None,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="void_ret_map_typedef_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=int,
                    kind=__NumberType.I32,
                    annotations={
                    },
                ),
            ),
            result=None,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="void_ret_enum_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=_module_types.MyEnumA,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
            ),
            result=None,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="void_ret_struct_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=_module_types.MyStruct,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
            ),
            result=None,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="void_ret_listunion_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=_module_types.List__ComplexUnion,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
            ),
            result=None,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="bool_ret_i32_i64_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=int,
                    kind=__NumberType.I32,
                    annotations={
                    },
                ),
                __ArgumentSpec._fbthrift_create(
                    name="param2",
                    type=int,
                    kind=__NumberType.I64,
                    annotations={
                    },
                ),
            ),
            result=bool,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="bool_ret_map_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=_module_types.Map__string_i64,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
            ),
            result=bool,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="bool_ret_union_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=_module_types.ComplexUnion,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
            ),
            result=bool,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="i64_ret_float_double_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=float,
                    kind=__NumberType.FLOAT,
                    annotations={
                    },
                ),
                __ArgumentSpec._fbthrift_create(
                    name="param2",
                    type=float,
                    kind=__NumberType.DOUBLE,
                    annotations={
                    },
                ),
            ),
            result=int,
            result_kind=__NumberType.I64,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="i64_ret_string_typedef_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=str,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
                __ArgumentSpec._fbthrift_create(
                    name="param2",
                    type=_module_types.Set__List__List__Map__Empty_MyStruct,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
            ),
            result=int,
            result_kind=__NumberType.I64,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="i64_ret_i32_i32_i32_i32_i32_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=int,
                    kind=__NumberType.I32,
                    annotations={
                    },
                ),
                __ArgumentSpec._fbthrift_create(
                    name="param2",
                    type=int,
                    kind=__NumberType.I32,
                    annotations={
                    },
                ),
                __ArgumentSpec._fbthrift_create(
                    name="param3",
                    type=int,
                    kind=__NumberType.I32,
                    annotations={
                    },
                ),
                __ArgumentSpec._fbthrift_create(
                    name="param4",
                    type=int,
                    kind=__NumberType.I32,
                    annotations={
                    },
                ),
                __ArgumentSpec._fbthrift_create(
                    name="param5",
                    type=int,
                    kind=__NumberType.I32,
                    annotations={
                    },
                ),
            ),
            result=int,
            result_kind=__NumberType.I64,
            exceptions=(
            ),
            annotations={
                """thread""": """eb""",            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="double_ret_setstruct_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=_module_types.Set__MyStruct,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
            ),
            result=float,
            result_kind=__NumberType.DOUBLE,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="string_ret_string_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=str,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
            ),
            result=str,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="binary_ret_binary_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=bytes,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
            ),
            result=bytes,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="map_ret_bool_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=bool,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
            ),
            result=_module_types.Map__string_i64,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="list_ret_map_setlist_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=_module_types.Map__i32_List__string,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
                __ArgumentSpec._fbthrift_create(
                    name="param2",
                    type=_module_types.List__string,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
            ),
            result=_module_types.List__bool,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="mapsetlistmapliststring_ret_listlistlist_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=_module_types.List__List__List__List__i32,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
            ),
            result=_module_types.Map__Set__List__i32_Map__List__Set__string_string,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="typedef_ret_i32_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=int,
                    kind=__NumberType.I32,
                    annotations={
                    },
                ),
            ),
            result=int,
            result_kind=__NumberType.I32,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="listtypedef_ret_typedef_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=_module_types.List__Map__Empty_MyStruct,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
            ),
            result=_module_types.List__i32,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
                """thread""": """eb""",            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="enum_ret_double_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=float,
                    kind=__NumberType.DOUBLE,
                    annotations={
                    },
                ),
            ),
            result=_module_types.MyEnumA,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="enum_ret_double_enum_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=float,
                    kind=__NumberType.DOUBLE,
                    annotations={
                    },
                ),
                __ArgumentSpec._fbthrift_create(
                    name="param2",
                    type=_module_types.MyEnumA,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
            ),
            result=_module_types.MyEnumA,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="listenum_ret_map_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=_module_types.Map__string_i64,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
            ),
            result=_module_types.List__MyEnumA,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="struct_ret_i16_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=int,
                    kind=__NumberType.I16,
                    annotations={
                    },
                ),
            ),
            result=_module_types.MyStruct,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
                """thread""": """eb""",            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="setstruct_ret_set_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=_module_types.Set__string,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
            ),
            result=_module_types.Set__MyStruct,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="union_ret_i32_i32_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=int,
                    kind=__NumberType.I32,
                    annotations={
                    },
                ),
                __ArgumentSpec._fbthrift_create(
                    name="param2",
                    type=int,
                    kind=__NumberType.I32,
                    annotations={
                    },
                ),
            ),
            result=_module_types.ComplexUnion,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="listunion_string_param",
            arguments=(
                __ArgumentSpec._fbthrift_create(
                    name="param1",
                    type=str,
                    kind=__NumberType.NOT_A_NUMBER,
                    annotations={
                    },
                ),
            ),
            result=_module_types.List__ComplexUnion,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    return spec
