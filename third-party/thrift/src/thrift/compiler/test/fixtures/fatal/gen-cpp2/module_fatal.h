/**
 * Autogenerated by Thrift for thrift/compiler/test/fixtures/fatal/src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */
#pragma once

#include <thrift/lib/cpp2/reflection/reflection.h>

#include <fatal/type/list.h>
#include <fatal/type/pair.h>
#include <fatal/type/sequence.h>

#include "thrift/compiler/test/fixtures/fatal/gen-cpp2/module_types.h"
namespace test_cpp2 { namespace cpp_reflection {

namespace __fbthrift_refl {

struct __fbthrift_strings_module {
  using StructWithFieldAdapter = ::fatal::sequence<char, 'S', 't', 'r', 'u', 'c', 't', 'W', 'i', 't', 'h', 'F', 'i', 'e', 'l', 'd', 'A', 'd', 'a', 'p', 't', 'e', 'r'>;
  using Type = ::fatal::sequence<char, 'T', 'y', 'p', 'e'>;
  using UnionWithTypedefFieldAdapter = ::fatal::sequence<char, 'U', 'n', 'i', 'o', 'n', 'W', 'i', 't', 'h', 'T', 'y', 'p', 'e', 'd', 'e', 'f', 'F', 'i', 'e', 'l', 'd', 'A', 'd', 'a', 'p', 't', 'e', 'r'>;
  using __fbthrift_hash_015f7e6bc5aeaf483724089e9252cc13b50951a6b69412522765cff4d780306e = ::fatal::sequence<char, 'k', '2'>;
  using __fbthrift_hash_043a718774c572bd8a25adbeb1bfcd5c0256ae11cecf9f9c3f925d0e52beaf89 = ::fatal::sequence<char, 's'>;
  using __fbthrift_hash_0480a93d2e9b094b89e08e01976089ac18193af802c66b631cc8d2dc1bae8c88 = ::fatal::sequence<char, 'n', '2'>;
  using __fbthrift_hash_05fc173fce220658b5bcbb4db4d54a10fa01e55da3cf70b3f67891243db6141d = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '5'>;
  using __fbthrift_hash_08243666f926aa4e5b884b8ef1fc3b93d19e191a793581530616bd2e032c4761 = ::fatal::sequence<char, 'j', '1'>;
  using __fbthrift_hash_0863b4211874566cc69f5bc086858904a886f7fb53ca14065f36a1316318a746 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'N'>;
  using __fbthrift_hash_0a93067560e454e387c1e19b575eb2786edd2457adcecc15d06593fb509a44fe = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', '2'>;
  using __fbthrift_hash_0c7d02e77b69e64478888bde6c36431c34c69317e783b302b7b09b6c32e55f6f = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'I'>;
  using __fbthrift_hash_10dacdccfe877dc064d57442e6fa7a4e3085dc94e11a29819c2290fc3d788724 = ::fatal::sequence<char, 'l', '3'>;
  using __fbthrift_hash_12886f9d00055adf24c40579e22d31b2b45f2023f892954ffd5567beb60825f8 = ::fatal::sequence<char, 'n', 'u', 'm', 'b', 'e', 'r'>;
  using __fbthrift_hash_12b2fdc0a0ffd6ce4b7d74d080cd8dcb1c60b6e8f365fb46ac511c46cc31f1c1 = ::fatal::sequence<char, 'd', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 's'>;
  using __fbthrift_hash_13009491225878db05f406520b14390fe348bed9c4c2f8de4ef0a6f2932b6b74 = ::fatal::sequence<char, 'u', 'e', '_', '2'>;
  using __fbthrift_hash_1303c06b0b014d0ce7b988ab173a13f31227d417058ff4bbe6f8c222b4ad913c = ::fatal::sequence<char, 't', 'y', 'p', 'e'>;
  using __fbthrift_hash_144043bd95cdcc1f080ed3a117286f0b33b4738179cbcd0384c6ba14f086965e = ::fatal::sequence<char, 'v', 'a', 'l', 'u', 'e', '_', 't', 'o', '_', 'n', 'a', 'm', 'e'>;
  using __fbthrift_hash_153812ae5fea0b73a011bf28bd7cea93644437c3fe3260b7b2d7e1e2f9f46bde = ::fatal::sequence<char, 'm', '3'>;
  using __fbthrift_hash_16660941460027f94468b82213f3fcc07225e46e88b6aa2b65f59212f086250c = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '0', '_', '2'>;
  using __fbthrift_hash_16de57742832737feafa33405ab34237a35ec9a1e21352b537807b397574da5c = ::fatal::sequence<char, 'S', 't', 'r', 'u', 'c', 't', 'W', 'i', 't', 'h', 'F', 'i', 'e', 'l', 'd', 'A', 'd', 'a', 'p', 't', 'e', 'r'>;
  using __fbthrift_hash_17077c52034434f78be6854473ea471e8beaf774b570e98314cff5da93610a61 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '1', '_', '3'>;
  using __fbthrift_hash_17373ca1c7634a4be4a13861a891abd975ec916caab8f3dcf5142fa4997d0b96 = ::fatal::sequence<char, 'm', 'e', 'm', 'b', 'e', 'r', 's'>;
  using __fbthrift_hash_189f40034be7a199f1fa9891668ee3ab6049f82d38c68be70f596eab2e1857b7 = ::fatal::sequence<char, 'j'>;
  using __fbthrift_hash_18ac3e7343f016890c510e93f935261169d9e3f565436429830faf0934f4f8e4 = ::fatal::sequence<char, 'd'>;
  using __fbthrift_hash_1908eeb78bf39d5e5575e2199920d0b207c23854de609cf2c562d8f1dbb14f26 = ::fatal::sequence<char, 'd', 'e', 'p', '_', 'B', '_', 's', 't', 'r', 'u', 'c', 't'>;
  using __fbthrift_hash_194b520dc30384b3fc233e123778835e2adc362d91c6e33015ed3db2379d7ea1 = ::fatal::sequence<char, 'd', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r'>;
  using __fbthrift_hash_22ec6192f6a8118a3b6c9676d657ca661c7526233aeb9d65fbb13471eba460b3 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'P'>;
  using __fbthrift_hash_23466067f626bf8a3ae1a39cdf81f31303220b331b5064c6e00662dcc34deaaf = ::fatal::sequence<char, 'i', 'd', 's'>;
  using __fbthrift_hash_2352da7280f1decc3acf1ba84eb945c9fc2b7b541094e1d0992dbffd1b6664cc = ::fatal::sequence<char, 'o', '1'>;
  using __fbthrift_hash_24e4c71c3e94323fda93b59b046ad6ff6fbccf2ed84c4c7d458750c9e013ecd1 = ::fatal::sequence<char, 'u', 'n', 'i', 'o', 'n', '3'>;
  using __fbthrift_hash_252f10c83610ebca1a059c0bae8255eba2f95be4d1d7bcfa89d7248a82d9f111 = ::fatal::sequence<char, 'f'>;
  using __fbthrift_hash_2804bad6fe94a55f18b2b37e300919a5fd517b95aa81e95db574c0ba069a3740 = ::fatal::sequence<char, 'l', '1'>;
  using __fbthrift_hash_288818c9d54e484891298abb3d7ff3ff82bbe28a2843cad955f902e943623b1e = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', '_', 'w', 'i', 't', 'h', '_', 's', 'p', 'e', 'c', 'i', 'a', 'l', '_', 'n', 'a', 'm', 'e', 's'>;
  using __fbthrift_hash_295df243c6a33994c30b6e16aea7ce6155a24b44514ec956d7a09ae0a4cb0411 = ::fatal::sequence<char, 'a', 'n', 'n', 'o', 't', 'a', 't', 'i', 'o', 'n', 's'>;
  using __fbthrift_hash_2998b3232d29e8dc5a78d97a32ce83f556f3ed31b057077503df05641dd79158 = ::fatal::sequence<char, 'g', 'e', 't'>;
  using __fbthrift_hash_29c1b289e7522195b362e44f54e05470b69ad20540ab60a18a05e5bf6951f13d = ::fatal::sequence<char, 'm', '2'>;
  using __fbthrift_hash_2c70e12b7a0646f92279f427c7b38e7334d8e5389cff167a1dc30e73f826b683 = ::fatal::sequence<char, 'k', 'e', 'y'>;
  using __fbthrift_hash_2e7d2c03a9507ae265ecf5b5356885a53393a2029d241394997265a1a25aefc6 = ::fatal::sequence<char, 'c'>;
  using __fbthrift_hash_2f5052c9fd15b19a18c584d01363568198613f0c34e84409ef7938709a159ec2 = ::fatal::sequence<char, 'k', '3'>;
  using __fbthrift_hash_3160d2273fcdbfe191813af3e3cf756d6d5d59d7684b5da84be46e2f57c6a314 = ::fatal::sequence<char, 'u', 'n', 'i', 'o', 'n', '1'>;
  using __fbthrift_hash_325392e8dd2826a53a9a35b7a7f8d71683cd27ebc2c73fee85dab673bc909b67 = ::fatal::sequence<char, 'm', 'a', 'p', 's'>;
  using __fbthrift_hash_3e23e8160039594a33894f6564e1b1348bbd7a0088d42c4acb73eeaed59c009d = ::fatal::sequence<char, 'b'>;
  using __fbthrift_hash_3f79bb7b435b05321651daefd374cdc681dc06faa65e374e38337b88ca046dea = ::fatal::sequence<char, 'e'>;
  using __fbthrift_hash_4464387ab75f475736f593bef52d209f79d14984f38a95111fffa7933a0aa652 = ::fatal::sequence<char, 'u', 'n', 'i', 'o', 'n', '2'>;
  using __fbthrift_hash_478f684d093fcf2921427c15946ee81c7ca19e9398eb84b4e897d20077392460 = ::fatal::sequence<char, 'U', 'n', 'i', 'o', 'n', 'W', 'i', 't', 'h', 'T', 'y', 'p', 'e', 'd', 'e', 'f', 'F', 'i', 'e', 'l', 'd', 'A', 'd', 'a', 'p', 't', 'e', 'r'>;
  using __fbthrift_hash_48a53f0774c8ceff574a1fdcb0d470dbd382b3db273cff4344b6d39d5379c923 = ::fatal::sequence<char, 'k', 'e', 'y', 's'>;
  using __fbthrift_hash_497628310b36454ee3c06bb4744bfbf5c3cebf94d600e9a1620d67fd4b61d850 = ::fatal::sequence<char, 'u', 'i', '_', '2'>;
  using __fbthrift_hash_4c14c4a453f98de4bd1c972fea7850adb52822c5823e5da287085165afcf2020 = ::fatal::sequence<char, 'l', 'i', 's', 't', 's'>;
  using __fbthrift_hash_4c4f1be7384da0ab8e9483a59b7018f4671e228da38fa30ee8eabe777bc24cda = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'G'>;
  using __fbthrift_hash_4cb122443fdcc93ce02d0854f1bcf045042abde666a2a2cb80ca70374f4a0930 = ::fatal::sequence<char, 'u', 'd', '_', '2'>;
  using __fbthrift_hash_55e6591542e7a11d1d233d42fe6e5109de1934b51437189b76f440f9667b2d6c = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', '_', 'w', 'i', 't', 'h', '_', 'i', 'n', 'd', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 's'>;
  using __fbthrift_hash_5a2908eb2945bee309afb7d78397a237ba234d4799ea8ab6d82676de3a36c405 = ::fatal::sequence<char, 'd', 'e', 'p', '_', 'A', '_', 's', 't', 'r', 'u', 'c', 't'>;
  using __fbthrift_hash_63d2f586a734f5278e0744cfc648e9f7c35e3d26b0d5b6489478844d5eedffdd = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'K'>;
  using __fbthrift_hash_676b8bb84ce7267dd520deca4811c8f10a53e636352f06987f42fe425acedd80 = ::fatal::sequence<char, 'n', '1'>;
  using __fbthrift_hash_68f4d40289380c5c6536b552d834e0a1e0df88fddcd39d4a6d7f3a0b1cf22012 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'F'>;
  using __fbthrift_hash_6ab9f1eb8f7d3388f4f9d586f66e99fd54080df2c446f0e58668b09c08a16dd0 = ::fatal::sequence<char, 'k', '1'>;
  using __fbthrift_hash_73e6f38f012472999e156878234ad5221469eb764ff0d39af613e045fdfe8c1e = ::fatal::sequence<char, 'p', 'r', 'e', 'f', 'i', 'x', '_', 't', 'r', 'e', 'e'>;
  using __fbthrift_hash_7829368593e3b9447417533a3a4e6889f618e7f0b9d7d36f5757bd8a6f0197ed = ::fatal::sequence<char, 'u', 'd', '_', '3'>;
  using __fbthrift_hash_79adb2a2fce5c6ba215fe5f27f532d4e7edbac4b6a5e09e1ef3a08084a904621 = ::fatal::sequence<char, 'u', 's'>;
  using __fbthrift_hash_7a60aa9f6a5416b61206a441ce84695a835326c0edc0c9b86b92b618f29eb9ed = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'C'>;
  using __fbthrift_hash_7b1f014558bce777f7220e162d17b859e1aac1062f8838e4efaf8da4e35d6d1c = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', 'A'>;
  using __fbthrift_hash_80bd95dcdc13bec67066fba5d2acd08024cc8ffd55f03138a4951bb85f354248 = ::fatal::sequence<char, 'u', 's', '_', '2'>;
  using __fbthrift_hash_82264186375a8f31cd4bf73c2862777622f7616b039abfb62fb7c7eea19f9d07 = ::fatal::sequence<char, 'a', 'n', 'n', 'o', 't', 'a', 't', 'i', 'o', 'n'>;
  using __fbthrift_hash_8254c329a92850f6d539dd376f4816ee2764517da5e0235514af433164480d7a = ::fatal::sequence<char, 'k'>;
  using __fbthrift_hash_82a3537ff0dbce7eec35d69edc3a189ee6f17d82f353a553f9aa96cb0be3ce89 = ::fatal::sequence<char, 'n', 'a', 'm', 'e'>;
  using __fbthrift_hash_82c6db3dbf4ab47132dfd1d9d1bf8525edccb48512c8647b7a2067e0417537c0 = ::fatal::sequence<char, 's', 'e', 't', 's'>;
  using __fbthrift_hash_859fcbf6d2d71ed300fa058619ed428a255580a9b1467395fcea973bf9ff3cee = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '2'>;
  using __fbthrift_hash_85acc813ca3f42681de514657891e97b6ebd7aa4bd2673d2b5f82694b40c6c8f = ::fatal::sequence<char, 'u', 'e'>;
  using __fbthrift_hash_8721d664ef60096aa559e1aa6c72caf1facf5ce08b03aa6921ed9af5645d5466 = ::fatal::sequence<char, 'n', '3'>;
  using __fbthrift_hash_8841d05aac4c5bad0b39a0f488a8cb61c0d273515073afde4b80ba3b758e687c = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'H'>;
  using __fbthrift_hash_89445ea08b55421faa49919a5fd272e9a520f701b479d6084847e161ca5b7711 = ::fatal::sequence<char, 'v', 'a', 'l', 'u', 'e', 's'>;
  using __fbthrift_hash_8a1cee436cbac1489a1883c9d886fcfc46f302c55ed4106ae31729e4f4eb9041 = ::fatal::sequence<char, 'l', '2'>;
  using __fbthrift_hash_8c25cb3686462e9a86d2883c5688a22fe738b0bbc85f458d2d2b5f3f667c6d5a = ::fatal::sequence<char, 's', 't', 'r'>;
  using __fbthrift_hash_90420d76ba5049e82c972a00c6576924930978cae958d3413e3b7dd837854998 = ::fatal::sequence<char, 'u', 'n', 'i', 'o', 'n', 'A'>;
  using __fbthrift_hash_9250b9912ee91d6b46e23299459ecd6eb8154451d62558a3a0a708a77926ad04 = ::fatal::sequence<char, 'o', '2'>;
  using __fbthrift_hash_9403917303f1fef761d1fd094c11435b5213c3e94e3ff052a3b19f844542471a = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '4'>;
  using __fbthrift_hash_95b847a003725331b30e1a1bca1cd3d6d42408e2c0f4625e09d94161d47ed475 = ::fatal::sequence<char, 'e', 'n', 'u', 'm', '3'>;
  using __fbthrift_hash_993f2ba38c662fb322e28e3e2662f1ea6fe5ca2c2532d5f2717d548d22670fdf = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', '5'>;
  using __fbthrift_hash_9966a0dc08b77f066be3203881ef34b19eb5ccfeb244ec08e667b4bdaff44601 = ::fatal::sequence<char, 'e', 'n', 'u', 'm', '1'>;
  using __fbthrift_hash_9982619222fccd8fa42f33f444d9218ca275a8d38f15ec00f4fc30b3a1aa3875 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'L'>;
  using __fbthrift_hash_99f9d962c593c34662e80187d7259f83331f619f278917a347d2921b3be29fbe = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'Q'>;
  using __fbthrift_hash_9bc94ffbc36014c622262b48d5fb80c41a47088628855413d6c61dca06bd17ff = ::fatal::sequence<char, 'i', '_', 'a'>;
  using __fbthrift_hash_a003c1938a10c7729197e235918bdad7bc795ec24b19f24c66e4f24374526ad8 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'A'>;
  using __fbthrift_hash_a10609471500bbd1ea553c7c52359c10f98a225667900b5959e20513935074e9 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '0'>;
  using __fbthrift_hash_a194aa34e029b01f10fff28e6f405720b31fb3bd8b82458b4c712a040112ecff = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'R'>;
  using __fbthrift_hash_a45fbb9137f93ac661f724228d1bbdd9ed2d5ab13d29b40a21a6b43813eb1463 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '2', '_', '2'>;
  using __fbthrift_hash_a499068b8f456a03adaf1064efe8fb54c8f0fd204468f27e168642eab19d883b = ::fatal::sequence<char, 'j', '2'>;
  using __fbthrift_hash_a56145270ce6b3bebd1dd012b73948677dd618d496488bc608a3cb43ce3547dd = ::fatal::sequence<char, 'i', 'd'>;
  using __fbthrift_hash_a73c4974ccb5981437f75c22da908dd553c1389729210c7d554a65e1b0f4045a = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'D'>;
  using __fbthrift_hash_aa33996d60e89311b4d1a920dae03c6d7fa3ae1956c52662e273aad4683e577f = ::fatal::sequence<char, 'r', 'e', 'a', 'l'>;
  using __fbthrift_hash_aaa9402664f1a41f40ebbc52c9993eb66aeb366602958fdfaa283b71e64db123 = ::fatal::sequence<char, 'h'>;
  using __fbthrift_hash_ac72b2f5d1e514309dfd006f7c838e821485cd0c32d23dd24078a969d72dfb01 = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', 'C'>;
  using __fbthrift_hash_acac86c0e609ca906f632b0e2dacccb2b77d22b0621f20ebece1a4835b93f6f0 = ::fatal::sequence<char, 'l'>;
  using __fbthrift_hash_aeb24056810d3d1f1e8afee61a0bc0028556eb0fb49a215ae5eb1b970cad0315 = ::fatal::sequence<char, 'n', 'a', 'm', 'e', 's'>;
  using __fbthrift_hash_aee2ad14bcf09f5bd7bc15e9c3e69ed37514d588a766b457545dca7382ace91e = ::fatal::sequence<char, 'e', 'n', 'u', 'm', '_', 'w', 'i', 't', 'h', '_', 's', 'p', 'e', 'c', 'i', 'a', 'l', '_', 'n', 'a', 'm', 'e', 's'>;
  using __fbthrift_hash_b5d54c39e66671c9731b9f471e585d8262cd4f54963f0c93082d8dcf334d4c78 = ::fatal::sequence<char, 'f', 'a', 'k', 'e'>;
  using __fbthrift_hash_ba17c9f00788cd9472d21de4fa490d6c91123ad11eb2afbf159648a6843947d5 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'M'>;
  using __fbthrift_hash_ba2a88de7258832d40bb04e70c8d37d66141754f3561ecfa366dc9496c9a7704 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'E'>;
  using __fbthrift_hash_bab6f4cdfe399488eecf37176422c2f336b814c3b5f3d174987098ebb289f1fc = ::fatal::sequence<char, 's', 'e', 't', 't', 'e', 'r'>;
  using __fbthrift_hash_bbef32808794fbb533b862e9a380aab6cf6d813201c2c0d0ee2447e172d50bb7 = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', 'B'>;
  using __fbthrift_hash_bc85f9ac8aa1b4db9610ee0f87ee0427abda47659de9f369b220e96bb7fdbfa6 = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', '1'>;
  using __fbthrift_hash_bfe5d697162d90298c67c1933908741be8395838aa230408e04710909c576806 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 's'>;
  using __fbthrift_hash_c00062f7ec9c80e2e77abc65b046049364054299a26cba17c81067b4d37552a2 = ::fatal::sequence<char, 'p', 'h', 'r', 'a', 's', 'e'>;
  using __fbthrift_hash_c0d2856b74d0df05b9d4456b177950351bd88e98b77f12574dfb7a911acee0d0 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd'>;
  using __fbthrift_hash_c0d4170793132df761051fd1289ecc194f697747aeb47dde230d60e619fb3570 = ::fatal::sequence<char, 'e', 'n', 'u', 'm', '2'>;
  using __fbthrift_hash_c33849b4e01fee9484569654c522b031dd13986d15225cd70e29ec883629fc30 = ::fatal::sequence<char, 'u', 's', '_', '3'>;
  using __fbthrift_hash_c6860db74ab2c01bef741314b0a5f12527840b703a81e93f11d7dbf4775086fa = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '1'>;
  using __fbthrift_hash_c79397b882513814c71f6918e4f63978c6f2f98c46fe9be1428f35d0dd8e6260 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'J'>;
  using __fbthrift_hash_c7e10d053d5c1a0a0743c1dfc0a38c439cd181cc30829f18cc684e286d0baf27 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'B'>;
  using __fbthrift_hash_ca0df2c95aa144c1d0ff2ff3c8f967fdc1de9ef0c4120b3726416701b519d619 = ::fatal::sequence<char, 'm', '1'>;
  using __fbthrift_hash_ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb = ::fatal::sequence<char, 'a'>;
  using __fbthrift_hash_cd0aa9856147b6c5b4ff2b7dfee5da20aa38253099ef1b4a64aced233c9afe29 = ::fatal::sequence<char, 'g'>;
  using __fbthrift_hash_cd42404d52ad55ccfa9aca4adc828aa5800ad9d385a0671fbcbf724118320619 = ::fatal::sequence<char, 'v', 'a', 'l', 'u', 'e'>;
  using __fbthrift_hash_d3ef7de562f9a4a34a9a0b05a112955fdecdd0102c3faae5eeb03a195091a5e4 = ::fatal::sequence<char, 'u', 'i'>;
  using __fbthrift_hash_d41376c43861639db2ca279ddb2f7954772a666a9606ce6eac17a6b243dd4876 = ::fatal::sequence<char, 'u', 'i', '_', '3'>;
  using __fbthrift_hash_d42a293e6dc492de0855906f6b68ace3b25d537533dca2db940d0624a5162e13 = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', '4'>;
  using __fbthrift_hash_d665a09c95ebbc703485c7ba5384857536ca16f6c11fdd054e61c7dd81780731 = ::fatal::sequence<char, 'g', 'e', 't', 't', 'e', 'r'>;
  using __fbthrift_hash_d78156e5127942886c65b291d2afe7152eca4710213c1cd05a5d78d6213a5842 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'O'>;
  using __fbthrift_hash_d9065d6da185ec28758619fc14b755f740043e1060d342aacef26f459fae8d9d = ::fatal::sequence<char, 'b', 'i'>;
  using __fbthrift_hash_dc9768b7a6782334501adac488a8ece7aa62fc6dc559b27817d4a72dc13b818e = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '1', '_', '2'>;
  using __fbthrift_hash_de2d91dc0a2580414e9a70f7dfc76af727b69cac0838f2cbe0a88d12642efcbf = ::fatal::sequence<char, 'o', '3'>;
  using __fbthrift_hash_de7d1b721a1e0632b7cf04edf5032c8ecffa9f9a08492152b926f1a5a7e765d7 = ::fatal::sequence<char, 'i'>;
  using __fbthrift_hash_e14166046acce7f6048512fe844fd5124ecc9c7e51294112502c1fab9a6fcb57 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '3'>;
  using __fbthrift_hash_e31ab643c44f7a0ec824b59d1194d60dac334200d845e61d2d289daa0f087ea4 = ::fatal::sequence<char, 'm', 'e', 'm', 'b', 'e', 'r'>;
  using __fbthrift_hash_e5fec08b647c2ff2233c3b2beac96b38cd76a6d9baba07a35c27786104a69b58 = ::fatal::sequence<char, 'u', 'e', '_', '3'>;
  using __fbthrift_hash_e60b7897f690caef14763b0e4491713773846e1964758f3aa5112976b1c49def = ::fatal::sequence<char, 'u', 'n', 'i', 'o', 'n', '_', 'w', 'i', 't', 'h', '_', 's', 'p', 'e', 'c', 'i', 'a', 'l', '_', 'n', 'a', 'm', 'e', 's'>;
  using __fbthrift_hash_e73d2c69dab6b3798a4ba95017040d6bb669333591e6d717b349baddddb8b3b3 = ::fatal::sequence<char, 'j', '3'>;
  using __fbthrift_hash_e967d16dae74a49b5e0e051225c5dac0d76e5e38f13dd1628028cbce108c25b6 = ::fatal::sequence<char, 's', 't', 'r', 'i', 'n', 'g', 's'>;
  using __fbthrift_hash_e9c3e4e32969bb7516eeedd14823e86dd42831bf5d78259841df4fec18219998 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '0', '_', '3'>;
  using __fbthrift_hash_ebae87887fcdb8e762ca95a71b09e6c46e67a1d9d5c9cc9cd7f1e8e5d061245a = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', '3'>;
  using __fbthrift_hash_f0a85e81a4cdc5b0ffa6b6bae7015c00d3cc730d040c955859d3b797aaba3ce9 = ::fatal::sequence<char, 'u', 'd'>;
  using __fbthrift_hash_f1fe8005943a7730e9a95f7262952d9717a6f43a21d1b55daeb44de82fe4aac6 = ::fatal::sequence<char, 'n', 'a', 'm', 'e', '_', 't', 'o', '_', 'v', 'a', 'l', 'u', 'e'>;
  using __fbthrift_hash_f6a214f7a5fcda0c2cee9660b7fc29f5649e3c68aad48e20e950137c98913a68 = ::fatal::sequence<char, 'r', 'e', 's', 'u', 'l', 't'>;
  using __fbthrift_hash_f80a57fdbe26b4535c30a520859c2fbc28d29944e1afa486a8c2c9e5d76aaecc = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', '_', 'b', 'i', 'n', 'a', 'r', 'y'>;
  using __fbthrift_hash_f98ad21069f8dc0dcbaedd5a3ae3b3691de33b5e37d1a4c945707c8bd9a491bb = ::fatal::sequence<char, 'a', 'n', 'n', 'o', 't', 'a', 't', 'e', 'd'>;
  using _now_with_an_underscore = ::fatal::sequence<char, '_', 'n', 'o', 'w', '.', 'w', 'i', 't', 'h', '.', 'a', 'n', '.', 'u', 'n', 'd', 'e', 'r', 's', 'c', 'o', 'r', 'e'>;
  using a = ::fatal::sequence<char, 'a'>;
  using annotate_here = ::fatal::sequence<char, 'a', 'n', 'n', 'o', 't', 'a', 't', 'e', '_', 'h', 'e', 'r', 'e'>;
  using annotated = ::fatal::sequence<char, 'a', 'n', 'n', 'o', 't', 'a', 't', 'e', 'd'>;
  using annotation = ::fatal::sequence<char, 'a', 'n', 'n', 'o', 't', 'a', 't', 'i', 'o', 'n'>;
  using annotations = ::fatal::sequence<char, 'a', 'n', 'n', 'o', 't', 'a', 't', 'i', 'o', 'n', 's'>;
  using another_annotation = ::fatal::sequence<char, 'a', 'n', 'o', 't', 'h', 'e', 'r', '.', 'a', 'n', 'n', 'o', 't', 'a', 't', 'i', 'o', 'n'>;
  using another_there = ::fatal::sequence<char, 'a', 'n', 'o', 't', 'h', 'e', 'r', '.', 't', 'h', 'e', 'r', 'e'>;
  using b = ::fatal::sequence<char, 'b'>;
  using bi = ::fatal::sequence<char, 'b', 'i'>;
  using c = ::fatal::sequence<char, 'c'>;
  using constant1 = ::fatal::sequence<char, 'c', 'o', 'n', 's', 't', 'a', 'n', 't', '1'>;
  using constant2 = ::fatal::sequence<char, 'c', 'o', 'n', 's', 't', 'a', 'n', 't', '2'>;
  using constant3 = ::fatal::sequence<char, 'c', 'o', 'n', 's', 't', 'a', 'n', 't', '3'>;
  using constant_with_special_name = ::fatal::sequence<char, 'c', 'o', 'n', 's', 't', 'a', 'n', 't', '_', 'w', 'i', 't', 'h', '_', 's', 'p', 'e', 'c', 'i', 'a', 'l', '_', 'n', 'a', 'm', 'e'>;
  using cpp = ::fatal::sequence<char, 'c', 'p', 'p'>;
  using cpp2 = ::fatal::sequence<char, 'c', 'p', 'p', '2'>;
  using d = ::fatal::sequence<char, 'd'>;
  using dep_A_struct = ::fatal::sequence<char, 'd', 'e', 'p', '_', 'A', '_', 's', 't', 'r', 'u', 'c', 't'>;
  using dep_B_struct = ::fatal::sequence<char, 'd', 'e', 'p', '_', 'B', '_', 's', 't', 'r', 'u', 'c', 't'>;
  using descriptor = ::fatal::sequence<char, 'd', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r'>;
  using descriptors = ::fatal::sequence<char, 'd', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 's'>;
  using duplicate_id_annotation_1 = ::fatal::sequence<char, 'd', 'u', 'p', 'l', 'i', 'c', 'a', 't', 'e', '_', 'i', 'd', '_', 'a', 'n', 'n', 'o', 't', 'a', 't', 'i', 'o', 'n', '_', '1'>;
  using duplicate_id_annotation_2 = ::fatal::sequence<char, 'd', 'u', 'p', 'l', 'i', 'c', 'a', 't', 'e', '_', 'i', 'd', '_', 'a', 'n', 'n', 'o', 't', 'a', 't', 'i', 'o', 'n', '_', '2'>;
  using e = ::fatal::sequence<char, 'e'>;
  using enum1 = ::fatal::sequence<char, 'e', 'n', 'u', 'm', '1'>;
  using enum2 = ::fatal::sequence<char, 'e', 'n', 'u', 'm', '2'>;
  using enum3 = ::fatal::sequence<char, 'e', 'n', 'u', 'm', '3'>;
  using enum_with_special_names = ::fatal::sequence<char, 'e', 'n', 'u', 'm', '_', 'w', 'i', 't', 'h', '_', 's', 'p', 'e', 'c', 'i', 'a', 'l', '_', 'n', 'a', 'm', 'e', 's'>;
  using f = ::fatal::sequence<char, 'f'>;
  using fake = ::fatal::sequence<char, 'f', 'a', 'k', 'e'>;
  using field = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd'>;
  using field0 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '0'>;
  using field0_2 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '0', '_', '2'>;
  using field0_3 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '0', '_', '3'>;
  using field1 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '1'>;
  using field1_2 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '1', '_', '2'>;
  using field1_3 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '1', '_', '3'>;
  using field2 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '2'>;
  using field2_2 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '2', '_', '2'>;
  using field3 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '3'>;
  using field4 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '4'>;
  using field5 = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '5'>;
  using fieldA = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'A'>;
  using fieldB = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'B'>;
  using fieldC = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'C'>;
  using fieldD = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'D'>;
  using fieldE = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'E'>;
  using fieldF = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'F'>;
  using fieldG = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'G'>;
  using fieldH = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'H'>;
  using fieldI = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'I'>;
  using fieldJ = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'J'>;
  using fieldK = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'K'>;
  using fieldL = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'L'>;
  using fieldM = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'M'>;
  using fieldN = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'N'>;
  using fieldO = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'O'>;
  using fieldP = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'P'>;
  using fieldQ = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'Q'>;
  using fieldR = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'R'>;
  using field_annotation = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', '_', 'a', 'n', 'n', 'o', 't', 'a', 't', 'i', 'o', 'n'>;
  using fields = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 's'>;
  using g = ::fatal::sequence<char, 'g'>;
  using get = ::fatal::sequence<char, 'g', 'e', 't'>;
  using getter = ::fatal::sequence<char, 'g', 'e', 't', 't', 'e', 'r'>;
  using h = ::fatal::sequence<char, 'h'>;
  using i = ::fatal::sequence<char, 'i'>;
  using i_a = ::fatal::sequence<char, 'i', '_', 'a'>;
  using id = ::fatal::sequence<char, 'i', 'd'>;
  using ids = ::fatal::sequence<char, 'i', 'd', 's'>;
  using j = ::fatal::sequence<char, 'j'>;
  using j1 = ::fatal::sequence<char, 'j', '1'>;
  using j2 = ::fatal::sequence<char, 'j', '2'>;
  using j3 = ::fatal::sequence<char, 'j', '3'>;
  using java = ::fatal::sequence<char, 'j', 'a', 'v', 'a'>;
  using java_swift = ::fatal::sequence<char, 'j', 'a', 'v', 'a', '.', 's', 'w', 'i', 'f', 't'>;
  using k = ::fatal::sequence<char, 'k'>;
  using k1 = ::fatal::sequence<char, 'k', '1'>;
  using k2 = ::fatal::sequence<char, 'k', '2'>;
  using k3 = ::fatal::sequence<char, 'k', '3'>;
  using key = ::fatal::sequence<char, 'k', 'e', 'y'>;
  using keys = ::fatal::sequence<char, 'k', 'e', 'y', 's'>;
  using l = ::fatal::sequence<char, 'l'>;
  using l1 = ::fatal::sequence<char, 'l', '1'>;
  using l2 = ::fatal::sequence<char, 'l', '2'>;
  using l3 = ::fatal::sequence<char, 'l', '3'>;
  using lists = ::fatal::sequence<char, 'l', 'i', 's', 't', 's'>;
  using m = ::fatal::sequence<char, 'm'>;
  using m1 = ::fatal::sequence<char, 'm', '1'>;
  using m2 = ::fatal::sequence<char, 'm', '2'>;
  using m3 = ::fatal::sequence<char, 'm', '3'>;
  using m_b_false = ::fatal::sequence<char, 'm', '_', 'b', '_', 'f', 'a', 'l', 's', 'e'>;
  using m_b_true = ::fatal::sequence<char, 'm', '_', 'b', '_', 't', 'r', 'u', 'e'>;
  using m_int = ::fatal::sequence<char, 'm', '_', 'i', 'n', 't'>;
  using m_int_list = ::fatal::sequence<char, 'm', '_', 'i', 'n', 't', '_', 'l', 'i', 's', 't'>;
  using m_int_map = ::fatal::sequence<char, 'm', '_', 'i', 'n', 't', '_', 'm', 'a', 'p'>;
  using m_mixed_list = ::fatal::sequence<char, 'm', '_', 'm', 'i', 'x', 'e', 'd', '_', 'l', 'i', 's', 't'>;
  using m_mixed_map = ::fatal::sequence<char, 'm', '_', 'm', 'i', 'x', 'e', 'd', '_', 'm', 'a', 'p'>;
  using m_str_list = ::fatal::sequence<char, 'm', '_', 's', 't', 'r', '_', 'l', 'i', 's', 't'>;
  using m_str_map = ::fatal::sequence<char, 'm', '_', 's', 't', 'r', '_', 'm', 'a', 'p'>;
  using m_string = ::fatal::sequence<char, 'm', '_', 's', 't', 'r', 'i', 'n', 'g'>;
  using maps = ::fatal::sequence<char, 'm', 'a', 'p', 's'>;
  using member = ::fatal::sequence<char, 'm', 'e', 'm', 'b', 'e', 'r'>;
  using members = ::fatal::sequence<char, 'm', 'e', 'm', 'b', 'e', 'r', 's'>;
  using method1 = ::fatal::sequence<char, 'm', 'e', 't', 'h', 'o', 'd', '1'>;
  using method2 = ::fatal::sequence<char, 'm', 'e', 't', 'h', 'o', 'd', '2'>;
  using method3 = ::fatal::sequence<char, 'm', 'e', 't', 'h', 'o', 'd', '3'>;
  using method4 = ::fatal::sequence<char, 'm', 'e', 't', 'h', 'o', 'd', '4'>;
  using method5 = ::fatal::sequence<char, 'm', 'e', 't', 'h', 'o', 'd', '5'>;
  using method6 = ::fatal::sequence<char, 'm', 'e', 't', 'h', 'o', 'd', '6'>;
  using methodA = ::fatal::sequence<char, 'm', 'e', 't', 'h', 'o', 'd', 'A'>;
  using methodB = ::fatal::sequence<char, 'm', 'e', 't', 'h', 'o', 'd', 'B'>;
  using methodC = ::fatal::sequence<char, 'm', 'e', 't', 'h', 'o', 'd', 'C'>;
  using methodD = ::fatal::sequence<char, 'm', 'e', 't', 'h', 'o', 'd', 'D'>;
  using methodE = ::fatal::sequence<char, 'm', 'e', 't', 'h', 'o', 'd', 'E'>;
  using methodF = ::fatal::sequence<char, 'm', 'e', 't', 'h', 'o', 'd', 'F'>;
  using module = ::fatal::sequence<char, 'm', 'o', 'd', 'u', 'l', 'e'>;
  using multi_line_annotation = ::fatal::sequence<char, 'm', 'u', 'l', 't', 'i', '_', 'l', 'i', 'n', 'e', '_', 'a', 'n', 'n', 'o', 't', 'a', 't', 'i', 'o', 'n'>;
  using my_structA = ::fatal::sequence<char, 'm', 'y', '_', 's', 't', 'r', 'u', 'c', 't', 'A'>;
  using n = ::fatal::sequence<char, 'n'>;
  using n1 = ::fatal::sequence<char, 'n', '1'>;
  using n2 = ::fatal::sequence<char, 'n', '2'>;
  using n3 = ::fatal::sequence<char, 'n', '3'>;
  using name = ::fatal::sequence<char, 'n', 'a', 'm', 'e'>;
  using name_to_value = ::fatal::sequence<char, 'n', 'a', 'm', 'e', '_', 't', 'o', '_', 'v', 'a', 'l', 'u', 'e'>;
  using names = ::fatal::sequence<char, 'n', 'a', 'm', 'e', 's'>;
  using number = ::fatal::sequence<char, 'n', 'u', 'm', 'b', 'e', 'r'>;
  using o1 = ::fatal::sequence<char, 'o', '1'>;
  using o2 = ::fatal::sequence<char, 'o', '2'>;
  using o3 = ::fatal::sequence<char, 'o', '3'>;
  using one_here = ::fatal::sequence<char, 'o', 'n', 'e', '.', 'h', 'e', 'r', 'e'>;
  using php = ::fatal::sequence<char, 'p', 'h', 'p'>;
  using phrase = ::fatal::sequence<char, 'p', 'h', 'r', 'a', 's', 'e'>;
  using prefix_tree = ::fatal::sequence<char, 'p', 'r', 'e', 'f', 'i', 'x', '_', 't', 'r', 'e', 'e'>;
  using py3 = ::fatal::sequence<char, 'p', 'y', '3'>;
  using real = ::fatal::sequence<char, 'r', 'e', 'a', 'l'>;
  using result = ::fatal::sequence<char, 'r', 'e', 's', 'u', 'l', 't'>;
  using s = ::fatal::sequence<char, 's'>;
  using s_b_false = ::fatal::sequence<char, 's', '_', 'b', '_', 'f', 'a', 'l', 's', 'e'>;
  using s_b_true = ::fatal::sequence<char, 's', '_', 'b', '_', 't', 'r', 'u', 'e'>;
  using s_int = ::fatal::sequence<char, 's', '_', 'i', 'n', 't'>;
  using s_int_list = ::fatal::sequence<char, 's', '_', 'i', 'n', 't', '_', 'l', 'i', 's', 't'>;
  using s_int_map = ::fatal::sequence<char, 's', '_', 'i', 'n', 't', '_', 'm', 'a', 'p'>;
  using s_mixed_list = ::fatal::sequence<char, 's', '_', 'm', 'i', 'x', 'e', 'd', '_', 'l', 'i', 's', 't'>;
  using s_mixed_map = ::fatal::sequence<char, 's', '_', 'm', 'i', 'x', 'e', 'd', '_', 'm', 'a', 'p'>;
  using s_str_list = ::fatal::sequence<char, 's', '_', 's', 't', 'r', '_', 'l', 'i', 's', 't'>;
  using s_str_map = ::fatal::sequence<char, 's', '_', 's', 't', 'r', '_', 'm', 'a', 'p'>;
  using s_string = ::fatal::sequence<char, 's', '_', 's', 't', 'r', 'i', 'n', 'g'>;
  using sample_annotation = ::fatal::sequence<char, 's', 'a', 'm', 'p', 'l', 'e', '.', 'a', 'n', 'n', 'o', 't', 'a', 't', 'i', 'o', 'n'>;
  using service1 = ::fatal::sequence<char, 's', 'e', 'r', 'v', 'i', 'c', 'e', '1'>;
  using service2 = ::fatal::sequence<char, 's', 'e', 'r', 'v', 'i', 'c', 'e', '2'>;
  using service3 = ::fatal::sequence<char, 's', 'e', 'r', 'v', 'i', 'c', 'e', '3'>;
  using service_with_special_names = ::fatal::sequence<char, 's', 'e', 'r', 'v', 'i', 'c', 'e', '_', 'w', 'i', 't', 'h', '_', 's', 'p', 'e', 'c', 'i', 'a', 'l', '_', 'n', 'a', 'm', 'e', 's'>;
  using sets = ::fatal::sequence<char, 's', 'e', 't', 's'>;
  using setter = ::fatal::sequence<char, 's', 'e', 't', 't', 'e', 'r'>;
  using some_annotation = ::fatal::sequence<char, 's', 'o', 'm', 'e', '.', 'a', 'n', 'n', 'o', 't', 'a', 't', 'i', 'o', 'n'>;
  using some_other_annotation = ::fatal::sequence<char, 's', 'o', 'm', 'e', '.', 'o', 't', 'h', 'e', 'r', '.', 'a', 'n', 'n', 'o', 't', 'a', 't', 'i', 'o', 'n'>;
  using str = ::fatal::sequence<char, 's', 't', 'r'>;
  using strings = ::fatal::sequence<char, 's', 't', 'r', 'i', 'n', 'g', 's'>;
  using struct1 = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', '1'>;
  using struct2 = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', '2'>;
  using struct3 = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', '3'>;
  using struct4 = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', '4'>;
  using struct5 = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', '5'>;
  using structA = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', 'A'>;
  using structB = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', 'B'>;
  using structC = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', 'C'>;
  using struct_binary = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', '_', 'b', 'i', 'n', 'a', 'r', 'y'>;
  using struct_with_indirections = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', '_', 'w', 'i', 't', 'h', '_', 'i', 'n', 'd', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 's'>;
  using struct_with_special_names = ::fatal::sequence<char, 's', 't', 'r', 'u', 'c', 't', '_', 'w', 'i', 't', 'h', '_', 's', 'p', 'e', 'c', 'i', 'a', 'l', '_', 'n', 'a', 'm', 'e', 's'>;
  using test_cpp1__cpp_reflection = ::fatal::sequence<char, 't', 'e', 's', 't', '_', 'c', 'p', 'p', '1', ':', ':', 'c', 'p', 'p', '_', 'r', 'e', 'f', 'l', 'e', 'c', 't', 'i', 'o', 'n'>;
  using test_cpp2__cpp_reflection = ::fatal::sequence<char, 't', 'e', 's', 't', '_', 'c', 'p', 'p', '2', ':', ':', 'c', 'p', 'p', '_', 'r', 'e', 'f', 'l', 'e', 'c', 't', 'i', 'o', 'n'>;
  using test_d_cpp_reflection = ::fatal::sequence<char, 't', 'e', 's', 't', '_', 'd', '.', 'c', 'p', 'p', '_', 'r', 'e', 'f', 'l', 'e', 'c', 't', 'i', 'o', 'n'>;
  using test_java_cpp_reflection = ::fatal::sequence<char, 't', 'e', 's', 't', '_', 'j', 'a', 'v', 'a', '.', 'c', 'p', 'p', '_', 'r', 'e', 'f', 'l', 'e', 'c', 't', 'i', 'o', 'n'>;
  using test_php_cpp_reflection = ::fatal::sequence<char, 't', 'e', 's', 't', '_', 'p', 'h', 'p', '_', 'c', 'p', 'p', '_', 'r', 'e', 'f', 'l', 'e', 'c', 't', 'i', 'o', 'n'>;
  using test_py_cpp_reflection = ::fatal::sequence<char, 't', 'e', 's', 't', '_', 'p', 'y', '.', 'c', 'p', 'p', '_', 'r', 'e', 'f', 'l', 'e', 'c', 't', 'i', 'o', 'n'>;
  using test_swift_cpp_reflection = ::fatal::sequence<char, 't', 'e', 's', 't', '_', 's', 'w', 'i', 'f', 't', '.', 'c', 'p', 'p', '_', 'r', 'e', 'f', 'l', 'e', 'c', 't', 'i', 'o', 'n'>;
  using thrift_uri = ::fatal::sequence<char, 't', 'h', 'r', 'i', 'f', 't', '.', 'u', 'r', 'i'>;
  using type = ::fatal::sequence<char, 't', 'y', 'p', 'e'>;
  using ud = ::fatal::sequence<char, 'u', 'd'>;
  using ud_2 = ::fatal::sequence<char, 'u', 'd', '_', '2'>;
  using ud_3 = ::fatal::sequence<char, 'u', 'd', '_', '3'>;
  using ue = ::fatal::sequence<char, 'u', 'e'>;
  using ue_2 = ::fatal::sequence<char, 'u', 'e', '_', '2'>;
  using ue_3 = ::fatal::sequence<char, 'u', 'e', '_', '3'>;
  using ui = ::fatal::sequence<char, 'u', 'i'>;
  using ui_2 = ::fatal::sequence<char, 'u', 'i', '_', '2'>;
  using ui_3 = ::fatal::sequence<char, 'u', 'i', '_', '3'>;
  using union1 = ::fatal::sequence<char, 'u', 'n', 'i', 'o', 'n', '1'>;
  using union2 = ::fatal::sequence<char, 'u', 'n', 'i', 'o', 'n', '2'>;
  using union3 = ::fatal::sequence<char, 'u', 'n', 'i', 'o', 'n', '3'>;
  using unionA = ::fatal::sequence<char, 'u', 'n', 'i', 'o', 'n', 'A'>;
  using union_with_special_names = ::fatal::sequence<char, 'u', 'n', 'i', 'o', 'n', '_', 'w', 'i', 't', 'h', '_', 's', 'p', 'e', 'c', 'i', 'a', 'l', '_', 'n', 'a', 'm', 'e', 's'>;
  using us = ::fatal::sequence<char, 'u', 's'>;
  using us_2 = ::fatal::sequence<char, 'u', 's', '_', '2'>;
  using us_3 = ::fatal::sequence<char, 'u', 's', '_', '3'>;
  using value = ::fatal::sequence<char, 'v', 'a', 'l', 'u', 'e'>;
  using value_to_name = ::fatal::sequence<char, 'v', 'a', 'l', 'u', 'e', '_', 't', 'o', '_', 'n', 'a', 'm', 'e'>;
  using values = ::fatal::sequence<char, 'v', 'a', 'l', 'u', 'e', 's'>;
  using x = ::fatal::sequence<char, 'x'>;
  using y = ::fatal::sequence<char, 'y'>;
  using yet_another = ::fatal::sequence<char, 'y', 'e', 't', '.', 'a', 'n', 'o', 't', 'h', 'e', 'r'>;
  using z = ::fatal::sequence<char, 'z'>;
};

struct module_module_traits {
  using strings = __fbthrift_strings_module;
  using name = strings::module;
  using namespaces = ::fatal::list<
      ::fatal::pair<strings::cpp, strings::test_cpp1__cpp_reflection>,
      ::fatal::pair<strings::cpp2, strings::test_cpp2__cpp_reflection>,
      ::fatal::pair<strings::d, strings::test_d_cpp_reflection>,
      ::fatal::pair<strings::java, strings::test_java_cpp_reflection>,
      ::fatal::pair<strings::java_swift, strings::test_swift_cpp_reflection>,
      ::fatal::pair<strings::php, strings::test_php_cpp_reflection>,
      ::fatal::pair<strings::py3, strings::test_py_cpp_reflection>
  >;
  using enums = ::fatal::list<
      ::fatal::pair<::test_cpp2::cpp_reflection::enum1, strings::enum1>,
      ::fatal::pair<::test_cpp2::cpp_reflection::enum2, strings::enum2>,
      ::fatal::pair<::test_cpp2::cpp_reflection::enum3, strings::enum3>,
      ::fatal::pair<::test_cpp2::cpp_reflection::enum_with_special_names, strings::enum_with_special_names>
  >;
  using unions = ::fatal::list<
      ::fatal::pair<::test_cpp2::cpp_reflection::union1, strings::union1>,
      ::fatal::pair<::test_cpp2::cpp_reflection::union2, strings::union2>,
      ::fatal::pair<::test_cpp2::cpp_reflection::union3, strings::union3>,
      ::fatal::pair<::test_cpp2::cpp_reflection::unionA, strings::unionA>,
      ::fatal::pair<::test_cpp2::cpp_reflection::union_with_special_names, strings::union_with_special_names>,
      ::fatal::pair<::test_cpp2::cpp_reflection::UnionWithTypedefFieldAdapter, strings::UnionWithTypedefFieldAdapter>
  >;
  using structs = ::fatal::list<
      ::fatal::pair<::test_cpp2::cpp_reflection::structA, strings::structA>,
      ::fatal::pair<::test_cpp2::cpp_reflection::structB, strings::structB>,
      ::fatal::pair<::test_cpp2::cpp_reflection::structC, strings::structC>,
      ::fatal::pair<::test_cpp2::cpp_reflection::struct1, strings::struct1>,
      ::fatal::pair<::test_cpp2::cpp_reflection::struct2, strings::struct2>,
      ::fatal::pair<::test_cpp2::cpp_reflection::struct3, strings::struct3>,
      ::fatal::pair<::test_cpp2::cpp_reflection::struct4, strings::struct4>,
      ::fatal::pair<::test_cpp2::cpp_reflection::struct5, strings::struct5>,
      ::fatal::pair<::test_cpp2::cpp_reflection::struct_binary, strings::struct_binary>,
      ::fatal::pair<::test_cpp2::cpp_reflection::dep_A_struct, strings::dep_A_struct>,
      ::fatal::pair<::test_cpp2::cpp_reflection::dep_B_struct, strings::dep_B_struct>,
      ::fatal::pair<::test_cpp2::cpp_reflection::annotated, strings::annotated>,
      ::fatal::pair<::test_cpp2::cpp_reflection::struct_with_special_names, strings::struct_with_special_names>,
      ::fatal::pair<::test_cpp2::cpp_reflection::struct_with_indirections, strings::struct_with_indirections>,
      ::fatal::pair<::test_cpp2::cpp_reflection::StructWithFieldAdapter, strings::StructWithFieldAdapter>,
      ::fatal::pair<::test_cpp2::cpp_reflection::my_structA, strings::my_structA>
  >;
  using constants = ::fatal::list<
      strings::constant1,
      strings::constant2,
      strings::constant3,
      strings::constant_with_special_name
  >;
  using services = ::fatal::list<
      strings::service1,
      strings::service2,
      strings::service3,
      strings::service_with_special_names
  >;
};

} // __fbthrift_refl

class module_tags {
  using __fbthrift_strings = __fbthrift_refl::__fbthrift_strings_module;
  struct __fbthrift_languages {
    using cpp = __fbthrift_strings::cpp;
    using cpp2 = __fbthrift_strings::cpp2;
    using d = __fbthrift_strings::d;
    using java = __fbthrift_strings::java;
    using java_swift = __fbthrift_strings::java_swift;
    using php = __fbthrift_strings::php;
    using py3 = __fbthrift_strings::py3;
  };
  struct __fbthrift_enums {
    using enum1 = __fbthrift_strings::enum1;
    using enum2 = __fbthrift_strings::enum2;
    using enum3 = __fbthrift_strings::enum3;
    using enum_with_special_names = __fbthrift_strings::enum_with_special_names;
  };
  struct __fbthrift_unions {
    using union1 = __fbthrift_strings::union1;
    using union2 = __fbthrift_strings::union2;
    using union3 = __fbthrift_strings::union3;
    using unionA = __fbthrift_strings::unionA;
    using union_with_special_names = __fbthrift_strings::union_with_special_names;
    using UnionWithTypedefFieldAdapter = __fbthrift_strings::UnionWithTypedefFieldAdapter;
  };
  struct __fbthrift_structs {
    using structA = __fbthrift_strings::structA;
    using structB = __fbthrift_strings::structB;
    using structC = __fbthrift_strings::structC;
    using struct1 = __fbthrift_strings::struct1;
    using struct2 = __fbthrift_strings::struct2;
    using struct3 = __fbthrift_strings::struct3;
    using struct4 = __fbthrift_strings::struct4;
    using struct5 = __fbthrift_strings::struct5;
    using struct_binary = __fbthrift_strings::struct_binary;
    using dep_A_struct = __fbthrift_strings::dep_A_struct;
    using dep_B_struct = __fbthrift_strings::dep_B_struct;
    using annotated = __fbthrift_strings::annotated;
    using struct_with_special_names = __fbthrift_strings::struct_with_special_names;
    using struct_with_indirections = __fbthrift_strings::struct_with_indirections;
    using StructWithFieldAdapter = __fbthrift_strings::StructWithFieldAdapter;
    using my_structA = __fbthrift_strings::my_structA;
  };
  struct __fbthrift_constants {
    using constant1 = __fbthrift_strings::constant1;
    using constant2 = __fbthrift_strings::constant2;
    using constant3 = __fbthrift_strings::constant3;
    using constant_with_special_name = __fbthrift_strings::constant_with_special_name;
  };
  struct __fbthrift_services {
    using service1 = __fbthrift_strings::service1;
    using service2 = __fbthrift_strings::service2;
    using service3 = __fbthrift_strings::service3;
    using service_with_special_names = __fbthrift_strings::service_with_special_names;
  };
 public:
  struct module {};

  using strings = __fbthrift_strings;
  using languages = __fbthrift_languages;
  using enums = __fbthrift_enums;
  using unions = __fbthrift_unions;
  using structs = __fbthrift_structs;
  using constants = __fbthrift_constants;
  using services = __fbthrift_services;
};

THRIFT_REGISTER_REFLECTION_METADATA(module_tags::module, __fbthrift_refl::module_module_traits);

}} // test_cpp2::cpp_reflection
