/**
 * Autogenerated by Thrift for thrift/compiler/test/fixtures/int_limits/src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */

#include "thrift/compiler/test/fixtures/int_limits/gen-cpp2/module_data.h"
#include "thrift/compiler/test/fixtures/int_limits/gen-cpp2/module_constants.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

namespace apache::thrift {

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::cpp2::Limits>::name = "Limits";
THRIFT_DATA_MEMBER const std::array<std::string_view, 8> TStructDataStorage<::cpp2::Limits>::fields_names = { {
  "max_i64_field"sv,
  "min_i64_field"sv,
  "max_i32_field"sv,
  "min_i32_field"sv,
  "max_i16_field"sv,
  "min_i16_field"sv,
  "max_byte_field"sv,
  "min_byte_field"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 8> TStructDataStorage<::cpp2::Limits>::fields_ids = { {
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 8> TStructDataStorage<::cpp2::Limits>::fields_types = { {
  TType::T_I64,
  TType::T_I64,
  TType::T_I32,
  TType::T_I32,
  TType::T_I16,
  TType::T_I16,
  TType::T_BYTE,
  TType::T_BYTE,
}};
THRIFT_DATA_MEMBER const std::array<int, 8> TStructDataStorage<::cpp2::Limits>::isset_indexes = { {
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
}};

namespace detail {


} // namespace detail
} // namespace apache::thrift
