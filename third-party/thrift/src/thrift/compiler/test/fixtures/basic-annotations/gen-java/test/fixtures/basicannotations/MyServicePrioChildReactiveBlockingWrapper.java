/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package test.fixtures.basicannotations;

import java.util.*;

public class MyServicePrioChildReactiveBlockingWrapper  extends test.fixtures.basicannotations.MyServicePrioParentReactiveBlockingWrapper
  implements MyServicePrioChild {
  private final MyServicePrioChild.Reactive _delegate;

  public MyServicePrioChildReactiveBlockingWrapper(MyServicePrioChild.Reactive _delegate) {
    super(_delegate);
    this._delegate = _delegate;
  }

  public MyServicePrioChildReactiveBlockingWrapper(org.apache.thrift.ProtocolId _protocolId, reactor.core.publisher.Mono<? extends com.facebook.thrift.client.RpcClient> _rpcClient, Map<String, String> _headers, Map<String, String> _persistentHeaders) {
    this(new MyServicePrioChildReactiveClient(_protocolId, _rpcClient, _headers, _persistentHeaders));
  }

  @java.lang.Override
  public void close() {
    _delegate.dispose();
  }

  @java.lang.Override
  public void pang() throws org.apache.thrift.TException {
      pangWrapper(com.facebook.thrift.client.RpcOptions.EMPTY);
  }

  @java.lang.Override
  public void pang(
        com.facebook.thrift.client.RpcOptions rpcOptions) throws org.apache.thrift.TException {
      pangWrapper(rpcOptions);
  }

  @java.lang.Override
  public com.facebook.thrift.client.ResponseWrapper<Void> pangWrapper(
    com.facebook.thrift.client.RpcOptions rpcOptions) throws org.apache.thrift.TException {
      try {
        return _delegate.pangWrapper(rpcOptions).block();
      } catch (Throwable t) {
        throw com.facebook.thrift.util.ExceptionUtil.wrap(t);
      }
  }

}
