(* -*- tuareg -*- *)

let find_hphp_parent dir =
  let path = String.split_on_char '/' dir in
  let rec reconstruct_till_hphp path acc =
    match path with
    | [] -> acc
    | "hphp" :: path ->
      if List.mem "hphp" path
      then reconstruct_till_hphp path (acc ^ "hphp/")
      else acc
    | dir :: path ->
      let acc = acc ^ dir ^ "/" in
      reconstruct_till_hphp path acc in
  reconstruct_till_hphp path ""

let find_root =
  match Sys.getenv "CMAKE_SOURCE_DIR" with
  | t -> t^"/"
  | exception Not_found ->
    let workingdir = Sys.getcwd () in
    find_hphp_parent workingdir

(* HSL HHI generation:
  - the script generates a stamp file in the current build dir as dune will only
    allow custom rules to reference or use files in the current directory
  - the generated HHIs are not in *dune's* build directory, as dune will delete
    any files it's not expecting; if you have a top-level cmake/buck build
    directory, that should be used instead, but if you're building in source,
    it'll dump in the source tree, so they're in .gitignore
  - `-hsl-dir` is relative to `%{workspace_root}` - however, the workspace root
    is itself a relative path, so it must be omitted
*)

let () =
  Printf.ksprintf Jbuild_plugin.V1.send "\
(rule
  (targets hsl_generated_hhis.stamp)
  (deps
    (file \"%s/hphp/hsl/src\")
    (file \"%%{workspace_root}/scripts/generate_hhis.sh\")
    ../hh_parse.exe)
  (action (run
    %%{workspace_root}/scripts/generate_hhis.sh
    %%{exe:../hh_parse.exe}
    \"%s/hphp/hsl/src\"
    \"%%{workspace_root}/../../hsl/hhi\"
    \"hsl_generated_hhis.stamp\")))

(alias
  (name generate_hhis)
  (deps (file \"hsl_generated_hhis.stamp\")))

(library
  (name hhi)
  (wrapped false)
  (libraries
    global_config
    relative_path
    sys_utils)
  (preprocessor_deps (source_tree %%{workspace_root}/hhi) (alias generate_hhis))
  (preprocess (pps ppx_gen_hhi --
    -hhi-dir \"%s/hphp/hack/hhi\"
    -hsl-dir \"../../hsl/hhi/\")))
" find_root find_root find_root
