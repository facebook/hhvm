{{!

  Copyright (c) Meta Platforms, Inc. and affiliates.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

}}

{{!
  param_type - For params that are nontrivial, decorators will read them by
  const ref, Otherwise for trivially copyable params like int64_t we pass them
  by value.
}}
{{#let export partial param_type |param|}}
{{#pragma ignore-newlines}}
{{#if param.type.resolves_to_complex_return?}}{{!
}}const {{param.type.cpp_type}}&
{{#else}}
{{param.type.cpp_type}}
{{/if param.type.resolves_to_complex_return?}}
{{/let partial}}

{{!
  param_name_unused - Commented out param name.
}}
{{#let partial param_name_unused |param|}}
{{#pragma ignore-newlines}}
/*p_{{param.cpp_name}}*/
{{/let partial}}

{{!
  param_name - this one is used when the param name is actually used
}}
{{#let export partial param_name |param|}}
{{#pragma ignore-newlines}}
p_{{param.cpp_name}}
{{/let partial}}

{{!
  return_param_type - Decorators after_* methods have const-ref access to the method
  return type.
}}
{{#let export partial return_param_type |function|}}
{{#pragma ignore-newlines}}
{{#if function.return_type.void?}}
{{#else}}
{{#if function.return_type.resolves_to_complex_return?}}
const {{function.return_type.cpp_type}}&
{{#else}}
{{function.return_type.cpp_type}}
{{/if function.return_type.resolves_to_complex_return?}}
{{/if function.return_type.void?}}
{{/let partial}}
