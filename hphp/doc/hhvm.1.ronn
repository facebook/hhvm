<!--
Use ronn to convert this markdown file into the appropriate troff man syntax.

% ronn --roff hhvm.1.ronn

will create hhvm.1 man page.

Then this can be copied into /usr/share/man/man1 and then

% man hhvm
-->

hhvm(1) -- run PHP and Hack files
=============================================

## SYNOPSIS

`hhvm` [options] [ `-f` ] file [[--] args...]<br>

`hhvm` `--php` [options] [`-f`] file [[--] args...]

## DESCRIPTION

**HHVM** (aka the HipHop Virtual Machine) is an open-source virtual machine
designed for executing programs written in **Hack** and **PHP**. HHVM uses a
just-in-time compilation approach to run programs. HHVM should be used
standalone for command line (CLI) scripts or together with a FastCGI-based
webserver like nginx or apache to serve websites.

This is the command line interface to HHVM.

The simplest way to parse and execute a program is providing a single
parameter of a filename. Specifying `-f` before the filename does this
in a more explicit fashion, and allows other options to follow.

HHVM has its own set of options, but also has the ability to behave like
php (1) as well. When the `--php` flag is specified to HHVM (or the binary
is named `php`), options available to php (1) can be used.

You may use:

`sudo /usr/bin/update-alternatives --install /usr/bin/php php /usr/bin/hhvm 60`

to force HHVM to be used even if php (1) is installed on the system.

## FILES

These are the default configuration files for HHVM. Right now both `.ini` and
`.hdf` are supported as HHVM continues to migrate completely to `.ini`.

  * `php.ini`:
    The default ini settings for HHVM found in `/etc/hhvm/php.ini`

  * `config.hdf`:
    The default hdf options for HHVM found in `/etc/hhvm/config.hdf`

## OPTIONS

These are the options you can specify to the HHVM executable.

  * `-a`, `--interactive`:
    shortcut for --mode debug

  * `--admin-port`, arg (=-1):
    start admin listener at a specified port

   * `--arg` arg:
    arguments

  * `--build-id` arg:
    unique identifier to compiled server code

  * `-c`, `--config`:
    load specified config (.hdf or .ini) file. Use multiple `-c` for
    multiple config files

  * `--compiler-id`:
    display the git hash for the compiler

  * `--count` arg (=1):
    how many times to repeat execution

  * `--debug-cmd` arg:
    executes this debugger command and returns its output in stdout

  * `--debug-config` arg:
    load specified debugger config file

  * `--debug-extension` arg:
    PHP file that extends command 'arg'

  * `--debug-port` arg:
    connect to debugger server at specified port

  * `--debug-sandbox` arg (=default):
    initial sandbox to attach to when debugger is started

  * `--extra-header` arg:
    extra-header to add to log lines

  * `-f`, `--file` arg:
    execute specified file

  * `-h`, `--debug-host` [=arg(=localhost)]:
    connect to debugger server at specified address

  * `--help`:
    display the hhvm help page (this message)

  * `instance-id` arg:
    unique identifier of server instance

  * `-l`, `--lint` arg:
    lint specified file

  * `-m`, `--mode` arg (=run):
    run | debug (d) | server (s) | daemon | replay | translate (t)

  * `--no-config`:
    don't use the default php.ini

  * `--no-safe-access-check` arg (=0):
    whether to ignore safe file access check

  * `-p`, `--port` arg (=-1):
    start an HTTP server at the specified port

  * `--php`:
    emulate the standards php(1) command line

  * `--port-fd` arg (=-1):
    use specified fd instead of creating a socket

  * `--ssl-port-fd` arg (=-1):
    use specified fd for SSL instead of creating a socket

  * `--repo-schema`:
    display the repository schema id

  * `--tempfile`:
    file specified is temporary and removed after execution

  * `-u`, `--user` arg:
    run server under this user account

  * `-v`, `--config-value` arg:
    individual configuration string in a format of name=value, where name can
    be any valid configuration for a config file

  * `--version`:
    display the hhvm version number

  * `-w`, `--show` arg:
    output specified file and do nothing else

  * `--xhprof-flags` arg (=0):
    set XHProf flags

## EXAMPLES

* Execute a PHP file:
  `% hhvm foo.php`

* Execute a PHP file given a certain configuration:
  `% hhvm -c custom.ini foo.php`

* Execute code from the command line using the `--php` option and `-r`:
  `% hhvm --php -r 'echo "Hello Everyone!";'`

* Execute HHVM in server mode using a specified port:
  `% hhvm -m server --port 9090`

## BUGS

The list of current known HHVM issues are found at: `https://github.com/facebook/hhvm/issues`

## AUTHORS

The contributors to HHVM can be found here: `https://github.com/facebook/hhvm/graphs/contributors`

## VERSION INFORMATION

This manpage describes **HHVM**, version 3.0 and greater

## COPYRIGHT

HHVM is licensed under the PHP and Zend licenses except as otherwise noted. The full license can be found at: `https://github.com/facebook/hhvm`

## SEE ALSO

php (1), `http://docs.hhvm.com`
