*** Testing array_intersect_assoc() : passing two dimensional array to both $arr1 and $arr2 arguments ***
-- Passing the entire 2-D array to $arr1 and $arr2 --
- With default arguments -
HipHop Notice: %a
HipHop Notice: %a
HipHop Notice: %a
HipHop Notice: %a
array(2) {
  [0]=>
  array(4) {
    [0]=>
    int(1)
    [1]=>
    int(2)
    [2]=>
    string(5) "hello"
    [3]=>
    string(5) "world"
  }
  [1]=>
  array(4) {
    [0]=>
    int(1)
    [1]=>
    int(2)
    [2]=>
    int(3)
    [3]=>
    int(4)
  }
}
- With more arguments -
HipHop Notice: %a
HipHop Notice: %a
HipHop Notice: %a
HipHop Notice: %a
HipHop Notice: %a
HipHop Notice: %a
HipHop Notice: %a
HipHop Notice: %a
array(2) {
  [0]=>
  array(4) {
    [0]=>
    int(1)
    [1]=>
    int(2)
    [2]=>
    string(5) "hello"
    [3]=>
    string(5) "world"
  }
  [1]=>
  array(4) {
    [0]=>
    int(1)
    [1]=>
    int(2)
    [2]=>
    int(3)
    [3]=>
    int(4)
  }
}
-- Passing the sub-array to $arr1 and $arr2 --
- With default arguments -
array(2) {
  [0]=>
  int(1)
  [1]=>
  int(2)
}
- With more arguments -
array(2) {
  [0]=>
  int(1)
  [1]=>
  int(2)
}
Done