#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

from thrift.py3.reflection cimport (
  MethodSpec as __MethodSpec,
  ArgumentSpec as __ArgumentSpec,
  NumberType as __NumberType,
)

import folly.iobuf as _fbthrift_iobuf


cimport module.types as _module_types


cdef __InterfaceSpec get_reflection__MyRoot(bint for_clients):
    cdef __InterfaceSpec spec = __InterfaceSpec._fbthrift_create(
        name="MyRoot",
        annotations={
        },
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="do_root",
            arguments=(
            ),
            result=None,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    return spec


cdef __InterfaceSpec get_reflection__MyNode(bint for_clients):
    cdef __InterfaceSpec spec = __InterfaceSpec._fbthrift_create(
        name="MyNode",
        annotations={
        },
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="do_mid",
            arguments=(
            ),
            result=None,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    return spec


cdef __InterfaceSpec get_reflection__MyLeaf(bint for_clients):
    cdef __InterfaceSpec spec = __InterfaceSpec._fbthrift_create(
        name="MyLeaf",
        annotations={
        },
    )
    spec.add_method(
        __MethodSpec._fbthrift_create(
            name="do_leaf",
            arguments=(
            ),
            result=None,
            result_kind=__NumberType.NOT_A_NUMBER,
            exceptions=(
            ),
            annotations={
            },
        )
    )
    return spec
