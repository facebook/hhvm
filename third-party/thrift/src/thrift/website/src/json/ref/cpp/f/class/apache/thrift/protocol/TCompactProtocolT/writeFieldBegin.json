{
  "kind": "overloadset",
  "name_html": "writeFieldBegin",
  "compoundname_html": "apache::thrift::protocol::TCompactProtocolT::writeFieldBegin",
  "functions": [
    {
      "refid": "classapache_1_1thrift_1_1protocol_1_1TCompactProtocolT_1a438999fe313d09ee064419533bab8358",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "no",
      "virtual": "non-virtual",
      "type_html": "uint32_t",
      "definition_html": "uint32_t apache::thrift::protocol::TCompactProtocolT&lt; Transport_ &gt;::writeFieldBegin",
      "argsstring_html": "(const char *name, const TType fieldType, const int16_t fieldId)",
      "name_html": "writeFieldBegin",
      "param": [
        {
          "type_html": "const char *",
          "declname_html": "name"
        },
        {
          "type_html": "const TType",
          "declname_html": "fieldType"
        },
        {
          "type_html": "const int16_t",
          "declname_html": "fieldId"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp/protocol/TCompactProtocol.h",
        "line": "150",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp/protocol/TCompactProtocol-inl.h",
        "bodystart": "107",
        "bodyend": "117"
      },
      "definition": {
        "simple_html": "uint32_t writeFieldBegin(\n    const char* name, const TType fieldType, const int16_t fieldId)",
        "simple_raw": "uint32_t writeFieldBegin(\n    const char* name, const TType fieldType, const int16_t fieldId)",
        "detailed_html": "uint32_t writeFieldBegin(\n    const char* name, const TType fieldType, const int16_t fieldId)",
        "detailed_raw": "uint32_t writeFieldBegin(\n    const char* name, const TType fieldType, const int16_t fieldId)",
        "original_definition_html": "uint32_t apache::thrift::protocol::TCompactProtocolT&lt; Transport_ &gt;::writeFieldBegin",
        "original_argsstring_html": "(const char *name, const TType fieldType, const int16_t fieldId)"
      },
      "description": {
        "detailed_html": "<p>Write a field header containing the field id and field type. If the difference between the current field id and the last one is small (&lt; 15), then the field id will be encoded in the 4 MSB as a delta. Otherwise, the field id will follow the type header as a zigzag varint. </p>"
      },
      "filepath": "fns/class/apache/thrift/protocol/TCompactProtocolT/writeFieldBegin",
      "href": "/ref/cpp/fns/class/apache/thrift/protocol/TCompactProtocolT/writeFieldBegin",
      "parentid": "classapache_1_1thrift_1_1protocol_1_1TCompactProtocolT",
      "compoundname_html": "apache::thrift::protocol::TCompactProtocolT::writeFieldBegin"
    }
  ],
  "filepath": "f/class/apache/thrift/protocol/TCompactProtocolT/writeFieldBegin",
  "minprot": "public",
  "displayname_html": "writeFieldBegin",
  "brief_html": "<p>Write a field header containing the field id and field type. If the difference between the current field id and the last one is small (&lt; 15), then the field id will be encoded in the 4 MSB as a delta. Otherwise, the field id will follow the type header as a zigzag varint. </p>",
  "groupname_html": "",
  "href": "/ref/cpp/f/class/apache/thrift/protocol/TCompactProtocolT/writeFieldBegin",
  "refid": "/ref/cpp/f/class/apache/thrift/protocol/TCompactProtocolT/writeFieldBegin"
}