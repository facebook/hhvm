[("\\single",
  (Shallow_decl_defs.Fun
     { Typing_defs.fe_deprecated =
       (Some "The function single is deprecated: can't write an apostrophe without escaping in single quotes");
       fe_module = None; fe_internal = false;
       fe_type =
       (Rwitness_from_decl ([4:10-16]),
        (Tfun
           { ft_tparams = []; ft_where_constraints = []; ft_params = [];
             ft_implicit_params = { capability = (CapDefaults [4:10-16]) };
             ft_ret =
             { et_enforced = Typing_defs_core.Unenforced;
               et_type = (Rhint ([4:20-24]), (Tprim Tvoid)) };
             ft_flags =
             (make_ft_flags FSync ~return_disposable:false
               ~returns_readonly:false ~support_dynamic_type:false
               ~readonly_this:false ~is_memoized:false ~variadic:false);
             ft_ifc_decl = FDPolicied {PUBLIC}ft_cross_package = None }));
       fe_pos = [4:10-16]; fe_php_std_lib = false;
       fe_support_dynamic_type = false; fe_no_auto_dynamic = false }));
  ("\\double",
   (Shallow_decl_defs.Fun
      { Typing_defs.fe_deprecated =
        (Some "The function double is deprecated: other escapes like \n and \t available in double quotes");
        fe_module = None; fe_internal = false;
        fe_type =
        (Rwitness_from_decl ([7:10-16]),
         (Tfun
            { ft_tparams = []; ft_where_constraints = []; ft_params = [];
              ft_implicit_params = { capability = (CapDefaults [7:10-16]) };
              ft_ret =
              { et_enforced = Typing_defs_core.Unenforced;
                et_type = (Rhint ([7:20-24]), (Tprim Tvoid)) };
              ft_flags =
              (make_ft_flags FSync ~return_disposable:false
                ~returns_readonly:false ~support_dynamic_type:false
                ~readonly_this:false ~is_memoized:false ~variadic:false);
              ft_ifc_decl = FDPolicied {PUBLIC}ft_cross_package = None }));
        fe_pos = [7:10-16]; fe_php_std_lib = false;
        fe_support_dynamic_type = false; fe_no_auto_dynamic = false }))
  ]
