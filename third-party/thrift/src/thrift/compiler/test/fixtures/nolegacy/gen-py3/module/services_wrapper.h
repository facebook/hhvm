/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#pragma once
#if __has_include(<thrift/compiler/test/fixtures/nolegacy/src/gen-cpp2/MyService.h>)
#include <thrift/compiler/test/fixtures/nolegacy/src/gen-cpp2/MyService.h>
#else
#include <thrift/compiler/test/fixtures/nolegacy/src/gen-cpp2/module_handlers.h>
#endif
#include <folly/python/futures.h>
#include <Python.h>

#include <memory>

namespace test {
namespace fixtures {
namespace nolegacy {

class MyServiceWrapper : virtual public MyServiceSvIf {
  protected:
    PyObject *if_object;
    folly::Executor *executor;
  public:
    explicit MyServiceWrapper(PyObject *if_object, folly::Executor *exc);
    void async_tm_query(std::unique_ptr<apache::thrift::HandlerCallback<std::unique_ptr<::test::fixtures::nolegacy::TestStruct>>> callback
        , std::unique_ptr<::test::fixtures::nolegacy::TestUnion> val
    ) override;
folly::SemiFuture<folly::Unit> semifuture_onStartServing() override;
folly::SemiFuture<folly::Unit> semifuture_onStopRequested() override;
};

std::shared_ptr<apache::thrift::ServerInterface> MyServiceInterface(PyObject *if_object, folly::Executor *exc);
} // namespace test
} // namespace fixtures
} // namespace nolegacy
