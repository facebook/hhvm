#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from __future__ import annotations

import folly.iobuf as _fbthrift_iobuf

from abc import ABCMeta as _fbthrift_ABCMeta
import module.thrift_abstract_types as _fbthrift_abstract_types
from thrift.python.protocol import RpcKind as _fbthrift__RpcKind
from thrift.python.protocol import Protocol as _fbthrift__Protocol
from thrift.python.streaming.python_user_exception import PythonUserException as _fbthrift__PythonUserException
from typing import AsyncGenerator as _typing_AsyncGenerator
from thrift.python.serializer import serialize_iobuf, deserialize
import thrift.python.types as _fbthrift_python_types
import thrift.python.exceptions as _fbthrift_python_exceptions



class BiDiSinkException(metaclass=_fbthrift_python_exceptions.GeneratedErrorMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "message",  # name
            "message",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            8, # IDL type (see BaseTypeEnum)
        ),
    )

    _fbthrift_abstract_base_class = _fbthrift_abstract_types.BiDiSinkException


    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.BiDiSinkException"

    @staticmethod
    def __get_thrift_uri__():
        return None

    @classmethod
    def _fbthrift_auto_migrate_enabled(cls):
        return False

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__exception_BiDiSinkException()

    def _to_python(self):
        return self

    def _to_mutable_python(self):
        from thrift.python import mutable_converter
        import importlib
        mutable_types = importlib.import_module("module.thrift_mutable_types")
        return mutable_converter.to_mutable_python_struct_or_union(mutable_types.BiDiSinkException, self)

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("module.types")
        from thrift.py3 import converter
        return converter.to_py3_struct(py3_types.BiDiSinkException, self)

    def _to_py_deprecated(self):
        import importlib
        from thrift.util import converter
        try:
            py_deprecated_types = importlib.import_module("module.ttypes")
            return converter.to_py_struct(py_deprecated_types.BiDiSinkException, self)
        except ModuleNotFoundError:
            py_asyncio_types = importlib.import_module("module.ttypes")
            return converter.to_py_struct(py_asyncio_types.BiDiSinkException, self)
_fbthrift_BiDiSinkException = BiDiSinkException

class BiDiStreamException(metaclass=_fbthrift_python_exceptions.GeneratedErrorMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "message",  # name
            "message",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            8, # IDL type (see BaseTypeEnum)
        ),
    )

    _fbthrift_abstract_base_class = _fbthrift_abstract_types.BiDiStreamException


    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.BiDiStreamException"

    @staticmethod
    def __get_thrift_uri__():
        return None

    @classmethod
    def _fbthrift_auto_migrate_enabled(cls):
        return False

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__exception_BiDiStreamException()

    def _to_python(self):
        return self

    def _to_mutable_python(self):
        from thrift.python import mutable_converter
        import importlib
        mutable_types = importlib.import_module("module.thrift_mutable_types")
        return mutable_converter.to_mutable_python_struct_or_union(mutable_types.BiDiStreamException, self)

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("module.types")
        from thrift.py3 import converter
        return converter.to_py3_struct(py3_types.BiDiStreamException, self)

    def _to_py_deprecated(self):
        import importlib
        from thrift.util import converter
        try:
            py_deprecated_types = importlib.import_module("module.ttypes")
            return converter.to_py_struct(py_deprecated_types.BiDiStreamException, self)
        except ModuleNotFoundError:
            py_asyncio_types = importlib.import_module("module.ttypes")
            return converter.to_py_struct(py_asyncio_types.BiDiStreamException, self)
_fbthrift_BiDiStreamException = BiDiStreamException

class BiDiMethodException(metaclass=_fbthrift_python_exceptions.GeneratedErrorMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "message",  # name
            "message",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            8, # IDL type (see BaseTypeEnum)
        ),
    )

    _fbthrift_abstract_base_class = _fbthrift_abstract_types.BiDiMethodException


    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.BiDiMethodException"

    @staticmethod
    def __get_thrift_uri__():
        return None

    @classmethod
    def _fbthrift_auto_migrate_enabled(cls):
        return False

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__exception_BiDiMethodException()

    def _to_python(self):
        return self

    def _to_mutable_python(self):
        from thrift.python import mutable_converter
        import importlib
        mutable_types = importlib.import_module("module.thrift_mutable_types")
        return mutable_converter.to_mutable_python_struct_or_union(mutable_types.BiDiMethodException, self)

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("module.types")
        from thrift.py3 import converter
        return converter.to_py3_struct(py3_types.BiDiMethodException, self)

    def _to_py_deprecated(self):
        import importlib
        from thrift.util import converter
        try:
            py_deprecated_types = importlib.import_module("module.ttypes")
            return converter.to_py_struct(py_deprecated_types.BiDiMethodException, self)
        except ModuleNotFoundError:
            py_asyncio_types = importlib.import_module("module.ttypes")
            return converter.to_py_struct(py_asyncio_types.BiDiMethodException, self)
_fbthrift_BiDiMethodException = BiDiMethodException

# This unfortunately has to be down here to prevent circular imports
import module.thrift_metadata as _fbthrift__module__thrift_metadata

_fbthrift_all_enums = [
]


def _fbthrift_metadata__exception_BiDiSinkException():
    return _fbthrift__module__thrift_metadata.gen_metadata_exception_BiDiSinkException()


def _fbthrift_metadata__exception_BiDiStreamException():
    return _fbthrift__module__thrift_metadata.gen_metadata_exception_BiDiStreamException()


def _fbthrift_metadata__exception_BiDiMethodException():
    return _fbthrift__module__thrift_metadata.gen_metadata_exception_BiDiMethodException()


_fbthrift_all_structs = [
    BiDiSinkException,
    BiDiStreamException,
    BiDiMethodException,
]
_fbthrift_python_types.fill_specs(*_fbthrift_all_structs)



class _fbthrift_BiDiService_simple_args(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
    )


class _fbthrift_BiDiService_simple_result(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
    )


class _fbthrift_BiDiService_simple_result_stream_elem(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift__rpc_kind = _fbthrift__RpcKind.BIDIRECTIONAL_STREAM
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            0,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "success",  # name
            "success", # name
            _fbthrift_python_types.typeinfo_i16,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
    )


class _fbthrift_BiDiService_simple_result_sink_elem(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift__rpc_kind = _fbthrift__RpcKind.BIDIRECTIONAL_STREAM
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            0,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "success",  # name
            "success", # name
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
    )

    @classmethod
    async def _fbthrift__sink_elem_handler(
        cls,
        sink_agen: _typing_AsyncGenerator[builtins.int, None],
        protocol: _fbthrift__Protocol,
    ) -> _typing_AsyncGenerator[_fbthrift_iobuf, None]:
        async for item in sink_agen:
            yield serialize_iobuf(cls(success=item), protocol)




class _fbthrift_BiDiService_response_args(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
    )


class _fbthrift_BiDiService_response_result(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            0,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "success",  # name
            "success", # name
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
    )


class _fbthrift_BiDiService_response_result_stream_elem(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift__rpc_kind = _fbthrift__RpcKind.BIDIRECTIONAL_STREAM
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            0,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "success",  # name
            "success", # name
            _fbthrift_python_types.typeinfo_i16,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
    )


class _fbthrift_BiDiService_response_result_sink_elem(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift__rpc_kind = _fbthrift__RpcKind.BIDIRECTIONAL_STREAM
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            0,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "success",  # name
            "success", # name
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
    )

    @classmethod
    async def _fbthrift__sink_elem_handler(
        cls,
        sink_agen: _typing_AsyncGenerator[builtins.int, None],
        protocol: _fbthrift__Protocol,
    ) -> _typing_AsyncGenerator[_fbthrift_iobuf, None]:
        async for item in sink_agen:
            yield serialize_iobuf(cls(success=item), protocol)




class _fbthrift_BiDiService_canThrow_args(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
    )


class _fbthrift_BiDiService_canThrow_result(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "_ex0__ex",  # name
            "_ex0__ex",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.StructTypeInfo(BiDiMethodException),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            11, # IDL type (see BaseTypeEnum)
        ),
    )


class _fbthrift_BiDiService_canThrow_result_stream_elem(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift__rpc_kind = _fbthrift__RpcKind.BIDIRECTIONAL_STREAM
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            0,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "success",  # name
            "success", # name
            _fbthrift_python_types.typeinfo_i64,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "_ex0__ex",  # name
            "_ex0__ex",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.StructTypeInfo(BiDiStreamException),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            11, # IDL type (see BaseTypeEnum)
        ),
    )


class _fbthrift_BiDiService_canThrow_result_sink_elem(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift__rpc_kind = _fbthrift__RpcKind.BIDIRECTIONAL_STREAM
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            0,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "success",  # name
            "success", # name
            _fbthrift_python_types.typeinfo_i64,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "_ex0__ex",  # name
            "_ex0__ex",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.StructTypeInfo(BiDiSinkException),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            11, # IDL type (see BaseTypeEnum)
        ),
    )

    @classmethod
    async def _fbthrift__sink_elem_handler(
        cls,
        sink_agen: _typing_AsyncGenerator[builtins.int, None],
        protocol: _fbthrift__Protocol,
    ) -> _typing_AsyncGenerator[_fbthrift_iobuf, None]:
        try:
            async for item in sink_agen:
                yield serialize_iobuf(cls(success=item), protocol)
        except BiDiSinkException as e:
            return_struct = cls(_ex0__ex=e)
            buf = serialize_iobuf(return_struct, protocol)
            exp = _fbthrift__PythonUserException("module.thrift_types.BiDiSinkException", str(e), buf)
            raise exp





_fbthrift_python_types.fill_specs(
    _fbthrift_BiDiService_simple_args,
    _fbthrift_BiDiService_simple_result,
    _fbthrift_BiDiService_simple_result_stream_elem,
    _fbthrift_BiDiService_simple_result_sink_elem,
    _fbthrift_BiDiService_response_args,
    _fbthrift_BiDiService_response_result,
    _fbthrift_BiDiService_response_result_stream_elem,
    _fbthrift_BiDiService_response_result_sink_elem,
    _fbthrift_BiDiService_canThrow_args,
    _fbthrift_BiDiService_canThrow_result,
    _fbthrift_BiDiService_canThrow_result_stream_elem,
    _fbthrift_BiDiService_canThrow_result_sink_elem,
)
