#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from __future__ import annotations

import typing as _typing
import builtins


import enum

import folly.iobuf as _fbthrift_iobuf
import test.fixtures.basic.module.thrift_abstract_types as _fbthrift_python_abstract_types
import thrift.python.types as _fbthrift_python_types
import thrift.python.mutable_types as _fbthrift_python_mutable_types
import thrift.python.mutable_exceptions as _fbthrift_python_mutable_exceptions
import thrift.python.mutable_containers as _fbthrift_python_mutable_containers

from test.fixtures.basic.module.thrift_enums import (
    MyEnum as _fbthrift_MyEnum,
    HackEnum as _fbthrift_HackEnum,
)
MyEnum = _fbthrift_MyEnum
HackEnum = _fbthrift_HackEnum


@_typing.final
class MyStruct(_fbthrift_python_mutable_types.MutableStruct, _fbthrift_python_abstract_types.MyStruct):
    @property
    def MyIntField(self) -> builtins.int: ...
    @MyIntField.setter
    def MyIntField(self, value: builtins.int) -> None: ...

    @property
    def MyStringField(self) -> builtins.str: ...
    @MyStringField.setter
    def MyStringField(self, value: builtins.str) -> None: ...

    @property
    def MyDataField(self) -> _fbthrift_MyDataItem: ...
    @MyDataField.setter
    def MyDataField(self, value: _fbthrift_MyDataItem) -> None: ...

    @property
    def myEnum(self) -> _fbthrift_MyEnum: ...
    @myEnum.setter
    def myEnum(self, value: _fbthrift_MyEnum) -> None: ...

    @property
    def oneway(self) -> builtins.bool: ...
    @oneway.setter
    def oneway(self, value: builtins.bool) -> None: ...

    @property
    def readonly(self) -> builtins.bool: ...
    @readonly.setter
    def readonly(self, value: builtins.bool) -> None: ...

    @property
    def idempotent(self) -> builtins.bool: ...
    @idempotent.setter
    def idempotent(self, value: builtins.bool) -> None: ...

    @property
    def floatSet(self) -> _fbthrift_python_mutable_containers.MutableSet[builtins.float]: ...
    @floatSet.setter
    def floatSet(self, value: _fbthrift_python_mutable_containers.MutableSet[builtins.float] | _fbthrift_python_mutable_types._ThriftSetWrapper) -> None: ...

    @property
    def no_hack_codegen_field(self) -> builtins.str: ...
    @no_hack_codegen_field.setter
    def no_hack_codegen_field(self, value: builtins.str) -> None: ...

    def __init__(
        self, *,
        MyIntField: _typing.Optional[builtins.int]=...,
        MyStringField: _typing.Optional[builtins.str]=...,
        MyDataField: _typing.Optional[_fbthrift_MyDataItem]=...,
        myEnum: _typing.Optional[_fbthrift_MyEnum]=...,
        oneway: _typing.Optional[builtins.bool]=...,
        readonly: _typing.Optional[builtins.bool]=...,
        idempotent: _typing.Optional[builtins.bool]=...,
        floatSet: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.float] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...,
        no_hack_codegen_field: _typing.Optional[builtins.str]=...
    ) -> None: ...

    def __call__(
        self, *,
        MyIntField: _typing.Optional[builtins.int]=...,
        MyStringField: _typing.Optional[builtins.str]=...,
        MyDataField: _typing.Optional[_fbthrift_MyDataItem]=...,
        myEnum: _typing.Optional[_fbthrift_MyEnum]=...,
        oneway: _typing.Optional[builtins.bool]=...,
        readonly: _typing.Optional[builtins.bool]=...,
        idempotent: _typing.Optional[builtins.bool]=...,
        floatSet: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.float] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...,
        no_hack_codegen_field: _typing.Optional[builtins.str]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[builtins.int, builtins.str, _fbthrift_MyDataItem, _fbthrift_MyEnum, builtins.bool, builtins.bool, builtins.bool, _fbthrift_python_mutable_containers.MutableSet[builtins.float], builtins.str]]]: ...
    def _to_python(self) -> "test.fixtures.basic.module.thrift_types.MyStruct": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.basic.module.types.MyStruct": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyStruct": ...  # type: ignore
_fbthrift_MyStruct = MyStruct

@_typing.final
class Containers(_fbthrift_python_mutable_types.MutableStruct, _fbthrift_python_abstract_types.Containers):
    @property
    def I32List(self) -> _fbthrift_python_mutable_containers.MutableList[builtins.int]: ...
    @I32List.setter
    def I32List(self, value: _fbthrift_python_mutable_containers.MutableList[builtins.int] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    @property
    def StringSet(self) -> _fbthrift_python_mutable_containers.MutableSet[builtins.str]: ...
    @StringSet.setter
    def StringSet(self, value: _fbthrift_python_mutable_containers.MutableSet[builtins.str] | _fbthrift_python_mutable_types._ThriftSetWrapper) -> None: ...

    @property
    def StringToI64Map(self) -> _fbthrift_python_mutable_containers.MutableMap[builtins.str, builtins.int]: ...
    @StringToI64Map.setter
    def StringToI64Map(self, value: _fbthrift_python_mutable_containers.MutableMap[builtins.str, builtins.int] | _fbthrift_python_mutable_types._ThriftMapWrapper) -> None: ...

    def __init__(
        self, *,
        I32List: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.int] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        StringSet: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.str] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...,
        StringToI64Map: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.str, builtins.int] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...
    ) -> None: ...

    def __call__(
        self, *,
        I32List: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.int] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        StringSet: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.str] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...,
        StringToI64Map: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.str, builtins.int] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[_fbthrift_python_mutable_containers.MutableList[builtins.int], _fbthrift_python_mutable_containers.MutableSet[builtins.str], _fbthrift_python_mutable_containers.MutableMap[builtins.str, builtins.int]]]]: ...
    def _to_python(self) -> "test.fixtures.basic.module.thrift_types.Containers": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.basic.module.types.Containers": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.Containers": ...  # type: ignore
_fbthrift_Containers = Containers

@_typing.final
class MyDataItem(_fbthrift_python_mutable_types.MutableStruct, _fbthrift_python_abstract_types.MyDataItem):
    def __init__(
        self,
    ) -> None: ...

    def __call__(
        self,
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[None]]]: ...
    def _to_python(self) -> "test.fixtures.basic.module.thrift_types.MyDataItem": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.basic.module.types.MyDataItem": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyDataItem": ...  # type: ignore
_fbthrift_MyDataItem = MyDataItem

@_typing.final
class MyUnion(_fbthrift_python_mutable_types.MutableUnion, _fbthrift_python_abstract_types.MyUnion):
    @property
    def myEnum(self) -> _fbthrift_MyEnum: ...
    @myEnum.setter
    def myEnum(self, value: _fbthrift_MyEnum) -> None: ...

    @property
    def myStruct(self) -> _fbthrift_MyStruct: ...
    @myStruct.setter
    def myStruct(self, value: _fbthrift_MyStruct) -> None: ...

    @property
    def myDataItem(self) -> _fbthrift_MyDataItem: ...
    @myDataItem.setter
    def myDataItem(self, value: _fbthrift_MyDataItem) -> None: ...

    @property
    def floatSet(self) -> _fbthrift_python_mutable_containers.MutableSet[builtins.float]: ...
    @floatSet.setter
    def floatSet(self, value: _fbthrift_python_mutable_containers.MutableSet[builtins.float] | _fbthrift_python_mutable_types._ThriftSetWrapper) -> None: ...

    def __init__(
        self, *,
        myEnum: _typing.Optional[_fbthrift_MyEnum]=...,
        myStruct: _typing.Optional[_fbthrift_MyStruct]=...,
        myDataItem: _typing.Optional[_fbthrift_MyDataItem]=...,
        floatSet: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.float] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...
    ) -> None: ...



    class FbThriftUnionFieldEnum(enum.Enum):
        EMPTY: MyUnion.FbThriftUnionFieldEnum = ...
        myEnum: MyUnion.FbThriftUnionFieldEnum = ...
        myStruct: MyUnion.FbThriftUnionFieldEnum = ...
        myDataItem: MyUnion.FbThriftUnionFieldEnum = ...
        floatSet: MyUnion.FbThriftUnionFieldEnum = ...

    fbthrift_current_value: _typing.Final[_typing.Union[None, _fbthrift_MyEnum, _fbthrift_MyStruct, _fbthrift_MyDataItem, _fbthrift_python_mutable_containers.MutableSet[builtins.float]]]
    # pyre-ignore[15]: `fbthrift_current_field` overrides attribute defined in `_fbthrift_python_abstract_types.MyUnion` inconsistently. Type `MyUnion.FbThriftUnionFieldEnum` is not a subtype of the overridden attribute `_fbthrift_python_abstract_types.MyUnion.FbThriftUnionFieldEnum`
    fbthrift_current_field: _typing.Final[FbThriftUnionFieldEnum]
    def get_type(self) -> FbThriftUnionFieldEnum: ...
    def _to_python(self) -> "test.fixtures.basic.module.thrift_types.MyUnion": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.basic.module.types.MyUnion": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyUnion": ...  # type: ignore
_fbthrift_MyUnion = MyUnion

@_typing.final
class MyException(_fbthrift_python_mutable_exceptions.MutableGeneratedError, _fbthrift_python_abstract_types.MyException):
    @property
    def MyIntField(self) -> builtins.int: ...
    @MyIntField.setter
    def MyIntField(self, value: builtins.int) -> None: ...

    @property
    def MyStringField(self) -> builtins.str: ...
    @MyStringField.setter
    def MyStringField(self, value: builtins.str) -> None: ...

    @property
    def myStruct(self) -> _fbthrift_MyStruct: ...
    @myStruct.setter
    def myStruct(self, value: _fbthrift_MyStruct) -> None: ...

    @property
    def myUnion(self) -> _fbthrift_MyUnion: ...
    @myUnion.setter
    def myUnion(self, value: _fbthrift_MyUnion) -> None: ...

    def __init__(
        self, *,
        MyIntField: _typing.Optional[builtins.int]=...,
        MyStringField: _typing.Optional[builtins.str]=...,
        myStruct: _typing.Optional[_fbthrift_MyStruct]=...,
        myUnion: _typing.Optional[_fbthrift_MyUnion]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[builtins.int, builtins.str, _fbthrift_MyStruct, _fbthrift_MyUnion]]]: ...
    def _to_python(self) -> "test.fixtures.basic.module.thrift_types.MyException": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.basic.module.types.MyException": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyException": ...  # type: ignore
_fbthrift_MyException = MyException

@_typing.final
class MyExceptionWithMessage(_fbthrift_python_mutable_exceptions.MutableGeneratedError, _fbthrift_python_abstract_types.MyExceptionWithMessage):
    @property
    def MyIntField(self) -> builtins.int: ...
    @MyIntField.setter
    def MyIntField(self, value: builtins.int) -> None: ...

    @property
    def MyStringField(self) -> builtins.str: ...
    @MyStringField.setter
    def MyStringField(self, value: builtins.str) -> None: ...

    @property
    def myStruct(self) -> _fbthrift_MyStruct: ...
    @myStruct.setter
    def myStruct(self, value: _fbthrift_MyStruct) -> None: ...

    @property
    def myUnion(self) -> _fbthrift_MyUnion: ...
    @myUnion.setter
    def myUnion(self, value: _fbthrift_MyUnion) -> None: ...

    def __init__(
        self, *,
        MyIntField: _typing.Optional[builtins.int]=...,
        MyStringField: _typing.Optional[builtins.str]=...,
        myStruct: _typing.Optional[_fbthrift_MyStruct]=...,
        myUnion: _typing.Optional[_fbthrift_MyUnion]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[builtins.int, builtins.str, _fbthrift_MyStruct, _fbthrift_MyUnion]]]: ...
    def _to_python(self) -> "test.fixtures.basic.module.thrift_types.MyExceptionWithMessage": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.basic.module.types.MyExceptionWithMessage": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyExceptionWithMessage": ...  # type: ignore
_fbthrift_MyExceptionWithMessage = MyExceptionWithMessage

@_typing.final
class ReservedKeyword(_fbthrift_python_mutable_types.MutableStruct, _fbthrift_python_abstract_types.ReservedKeyword):
    @property
    def reserved_field(self) -> builtins.int: ...
    @reserved_field.setter
    def reserved_field(self, value: builtins.int) -> None: ...

    def __init__(
        self, *,
        reserved_field: _typing.Optional[builtins.int]=...
    ) -> None: ...

    def __call__(
        self, *,
        reserved_field: _typing.Optional[builtins.int]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[builtins.int]]]: ...
    def _to_python(self) -> "test.fixtures.basic.module.thrift_types.ReservedKeyword": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.basic.module.types.ReservedKeyword": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.ReservedKeyword": ...  # type: ignore
_fbthrift_ReservedKeyword = ReservedKeyword

@_typing.final
class UnionToBeRenamed(_fbthrift_python_mutable_types.MutableUnion, _fbthrift_python_abstract_types.UnionToBeRenamed):
    @property
    def reserved_field(self) -> builtins.int: ...
    @reserved_field.setter
    def reserved_field(self, value: builtins.int) -> None: ...

    def __init__(
        self, *,
        reserved_field: _typing.Optional[builtins.int]=...
    ) -> None: ...



    class FbThriftUnionFieldEnum(enum.Enum):
        EMPTY: UnionToBeRenamed.FbThriftUnionFieldEnum = ...
        reserved_field: UnionToBeRenamed.FbThriftUnionFieldEnum = ...

    fbthrift_current_value: _typing.Final[_typing.Union[None, builtins.int]]
    # pyre-ignore[15]: `fbthrift_current_field` overrides attribute defined in `_fbthrift_python_abstract_types.UnionToBeRenamed` inconsistently. Type `UnionToBeRenamed.FbThriftUnionFieldEnum` is not a subtype of the overridden attribute `_fbthrift_python_abstract_types.UnionToBeRenamed.FbThriftUnionFieldEnum`
    fbthrift_current_field: _typing.Final[FbThriftUnionFieldEnum]
    def get_type(self) -> FbThriftUnionFieldEnum: ...
    def _to_python(self) -> "test.fixtures.basic.module.thrift_types.UnionToBeRenamed": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.basic.module.types.UnionToBeRenamed": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.UnionToBeRenamed": ...  # type: ignore
_fbthrift_UnionToBeRenamed = UnionToBeRenamed


FLAG: builtins.bool = ...

OFFSET: builtins.int = ...

COUNT: builtins.int = ...

MASK: builtins.int = ...

E: builtins.float = ...

DATE: builtins.str = ...

AList: _typing.Sequence[builtins.int] = ...

ASet: _typing.AbstractSet[builtins.str] = ...

AMap: _typing.Mapping[builtins.str, _fbthrift_python_mutable_containers.MutableList[builtins.int]] = ...

MyEnumAlias = _fbthrift_MyEnum
MyDataItemAlias = _fbthrift_MyDataItem


class _fbthrift_FooService_simple_rpc_args(_fbthrift_python_mutable_types.MutableStruct):

    def __init__(
        self,
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None]]]: ...


class _fbthrift_FooService_simple_rpc_result(_fbthrift_python_mutable_types.MutableStruct):
    success: _typing.Final[None]

    def __init__(
        self, *, success: _typing.Optional[None] = ...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[
            None,
        ]]]: ...


class _fbthrift_FB303Service_simple_rpc_args(_fbthrift_python_mutable_types.MutableStruct):
    int_parameter: _typing.Final[builtins.int] = ...

    def __init__(
        self, *,
        int_parameter: _typing.Optional[builtins.int]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None, builtins.int]]]: ...


class _fbthrift_FB303Service_simple_rpc_result(_fbthrift_python_mutable_types.MutableStruct):
    success: _typing.Final[_fbthrift_ReservedKeyword]

    def __init__(
        self, *, success: _typing.Optional[_fbthrift_ReservedKeyword] = ...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[
            _fbthrift_ReservedKeyword,
        ]]]: ...


class _fbthrift_MyService_ping_args(_fbthrift_python_mutable_types.MutableStruct):

    def __init__(
        self,
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None]]]: ...


class _fbthrift_MyService_ping_result(_fbthrift_python_mutable_types.MutableStruct):
    success: _typing.Final[None]

    def __init__(
        self, *, success: _typing.Optional[None] = ...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[
            None,
        ]]]: ...


class _fbthrift_MyService_getRandomData_args(_fbthrift_python_mutable_types.MutableStruct):

    def __init__(
        self,
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None]]]: ...


class _fbthrift_MyService_getRandomData_result(_fbthrift_python_mutable_types.MutableStruct):
    success: _typing.Final[builtins.str]

    def __init__(
        self, *, success: _typing.Optional[builtins.str] = ...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[
            builtins.str,
        ]]]: ...


class _fbthrift_MyService_sink_args(_fbthrift_python_mutable_types.MutableStruct):
    sink: _typing.Final[builtins.int] = ...

    def __init__(
        self, *,
        sink: _typing.Optional[builtins.int]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None, builtins.int]]]: ...


class _fbthrift_MyService_sink_result(_fbthrift_python_mutable_types.MutableStruct):
    success: _typing.Final[None]

    def __init__(
        self, *, success: _typing.Optional[None] = ...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[
            None,
        ]]]: ...


class _fbthrift_MyService_putDataById_args(_fbthrift_python_mutable_types.MutableStruct):
    id: _typing.Final[builtins.int] = ...
    data: _typing.Final[builtins.str] = ...

    def __init__(
        self, *,
        id: _typing.Optional[builtins.int]=...,
        data: _typing.Optional[builtins.str]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None, builtins.int, builtins.str]]]: ...


class _fbthrift_MyService_putDataById_result(_fbthrift_python_mutable_types.MutableStruct):
    success: _typing.Final[None]

    def __init__(
        self, *, success: _typing.Optional[None] = ...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[
            None,
        ]]]: ...


class _fbthrift_MyService_hasDataById_args(_fbthrift_python_mutable_types.MutableStruct):
    id: _typing.Final[builtins.int] = ...

    def __init__(
        self, *,
        id: _typing.Optional[builtins.int]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None, builtins.int]]]: ...


class _fbthrift_MyService_hasDataById_result(_fbthrift_python_mutable_types.MutableStruct):
    success: _typing.Final[builtins.bool]

    def __init__(
        self, *, success: _typing.Optional[builtins.bool] = ...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[
            builtins.bool,
        ]]]: ...


class _fbthrift_MyService_getDataById_args(_fbthrift_python_mutable_types.MutableStruct):
    id: _typing.Final[builtins.int] = ...

    def __init__(
        self, *,
        id: _typing.Optional[builtins.int]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None, builtins.int]]]: ...


class _fbthrift_MyService_getDataById_result(_fbthrift_python_mutable_types.MutableStruct):
    success: _typing.Final[builtins.str]

    def __init__(
        self, *, success: _typing.Optional[builtins.str] = ...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[
            builtins.str,
        ]]]: ...


class _fbthrift_MyService_deleteDataById_args(_fbthrift_python_mutable_types.MutableStruct):
    id: _typing.Final[builtins.int] = ...

    def __init__(
        self, *,
        id: _typing.Optional[builtins.int]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None, builtins.int]]]: ...


class _fbthrift_MyService_deleteDataById_result(_fbthrift_python_mutable_types.MutableStruct):
    success: _typing.Final[None]

    def __init__(
        self, *, success: _typing.Optional[None] = ...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[
            None,
        ]]]: ...


class _fbthrift_MyService_lobDataById_args(_fbthrift_python_mutable_types.MutableStruct):
    id: _typing.Final[builtins.int] = ...
    data: _typing.Final[builtins.str] = ...

    def __init__(
        self, *,
        id: _typing.Optional[builtins.int]=...,
        data: _typing.Optional[builtins.str]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None, builtins.int, builtins.str]]]: ...


class _fbthrift_MyService_invalid_return_for_hack_args(_fbthrift_python_mutable_types.MutableStruct):

    def __init__(
        self,
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None]]]: ...


class _fbthrift_MyService_invalid_return_for_hack_result(_fbthrift_python_mutable_types.MutableStruct):
    success: _typing.Final[_fbthrift_python_mutable_containers.MutableSet[builtins.float]]

    def __init__(
        self, *, success: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.float]] = ...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[
            _fbthrift_python_mutable_containers.MutableSet[builtins.float],
        ]]]: ...


class _fbthrift_MyService_rpc_skipped_codegen_args(_fbthrift_python_mutable_types.MutableStruct):

    def __init__(
        self,
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None]]]: ...


class _fbthrift_MyService_rpc_skipped_codegen_result(_fbthrift_python_mutable_types.MutableStruct):
    success: _typing.Final[None]

    def __init__(
        self, *, success: _typing.Optional[None] = ...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[
            None,
        ]]]: ...


class _fbthrift_DbMixedStackArguments_getDataByKey0_args(_fbthrift_python_mutable_types.MutableStruct):
    key: _typing.Final[builtins.str] = ...

    def __init__(
        self, *,
        key: _typing.Optional[builtins.str]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None, builtins.str]]]: ...


class _fbthrift_DbMixedStackArguments_getDataByKey0_result(_fbthrift_python_mutable_types.MutableStruct):
    success: _typing.Final[builtins.bytes]

    def __init__(
        self, *, success: _typing.Optional[builtins.bytes] = ...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[
            builtins.bytes,
        ]]]: ...


class _fbthrift_DbMixedStackArguments_getDataByKey1_args(_fbthrift_python_mutable_types.MutableStruct):
    key: _typing.Final[builtins.str] = ...

    def __init__(
        self, *,
        key: _typing.Optional[builtins.str]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None, builtins.str]]]: ...


class _fbthrift_DbMixedStackArguments_getDataByKey1_result(_fbthrift_python_mutable_types.MutableStruct):
    success: _typing.Final[builtins.bytes]

    def __init__(
        self, *, success: _typing.Optional[builtins.bytes] = ...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[
            builtins.bytes,
        ]]]: ...
