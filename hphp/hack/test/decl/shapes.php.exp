[("\\Coordinate",
  (Shallow_decl_defs.Typedef
     { Typing_defs.td_module = None; td_pos = [3:6-16]; td_tparams = [];
       td_as_constraint = None; td_super_constraint = None;
       td_type_assignment =
       (Typing_defs.SimpleTypeDef (Transparent,
          (Rhint ([3:19-57]),
           (Tshape
              { s_origin = Typing_defs_core.Missing_origin;
                s_fields =
                { (Typing_defs_core.TSFlit_str ([3:25-28], "x")) ->
                  { sft_optional = false;
                    sft_ty = (Rhint ([3:32-37]), (Tprim Tfloat)) };
                  (Typing_defs_core.TSFlit_str ([3:39-42], "y")) ->
                  { sft_optional = false;
                    sft_ty = (Rhint ([3:46-51]), (Tprim Tfloat)) } };
                s_unknown_value = (Rhint ([3:53-56]), Tmixed) }))
          ));
       td_is_ctx = false; td_attributes = []; td_internal = false;
       td_docs_url = None; td_package = None }));
  ("\\takes_shape",
   (Shallow_decl_defs.Fun
      { Typing_defs.fe_deprecated = None; fe_module = None;
        fe_package = None; fe_internal = false;
        fe_type =
        (Rwitness_from_decl ([5:10-21]),
         (Tfun
            { ft_tparams = []; ft_where_constraints = [];
              ft_params =
              [{ fp_pos = [5:56-61]; fp_name = (Some "$arg1");
                 fp_type =
                 (Rhint ([5:22-55]),
                  (Tshape
                     { s_origin = Typing_defs_core.Missing_origin;
                       s_fields =
                       { (Typing_defs_core.TSFlit_str ([5:28-31], "x")) ->
                         { sft_optional = false;
                           sft_ty = (Rhint ([5:35-40]), (Tprim Tfloat)) };
                         (Typing_defs_core.TSFlit_str ([5:42-45], "y")) ->
                         { sft_optional = false;
                           sft_ty = (Rhint ([5:49-54]), (Tprim Tfloat)) } };
                       s_unknown_value = (Rhint ([Pos.none]), (Tunion [])) }));
                 fp_flags =
                 { Typing_defs_flags.FunParam.accept_disposable = false;
                   inout = false; is_optional = false; readonly = false;
                   ignore_readonly_error = false; splat = false;
                   named = false };
                 fp_def_value = None }
                ];
              ft_implicit_params = { capability = (CapDefaults [5:10-21]) };
              ft_ret =
              (Rhint ([5:64-74]), (Tapply (([5:64-74], "\\Coordinate"), [])));
              ft_flags =
              { Typing_defs_flags.Fun.return_disposable = false;
                async = false; generator = false; fun_kind = FSync;
                is_function_pointer = false; returns_readonly = false;
                readonly_this = false; support_dynamic_type = false;
                is_memoized = false; variadic = false };
              ft_cross_package = None; ft_instantiated = true }));
        fe_pos = [5:10-21]; fe_php_std_lib = false;
        fe_support_dynamic_type = false; fe_no_auto_dynamic = false;
        fe_no_auto_likes = false }));
  ("\\returns_shape",
   (Shallow_decl_defs.Fun
      { Typing_defs.fe_deprecated = None; fe_module = None;
        fe_package = None; fe_internal = false;
        fe_type =
        (Rwitness_from_decl ([9:10-23]),
         (Tfun
            { ft_tparams = []; ft_where_constraints = [];
              ft_params =
              [{ fp_pos = [10:14-19]; fp_name = (Some "$arg1");
                 fp_type =
                 (Rhint ([10:3-13]),
                  (Tapply (([10:3-13], "\\Coordinate"), [])));
                 fp_flags =
                 { Typing_defs_flags.FunParam.accept_disposable = false;
                   inout = false; is_optional = false; readonly = false;
                   ignore_readonly_error = false; splat = false;
                   named = false };
                 fp_def_value = None }
                ];
              ft_implicit_params = { capability = (CapDefaults [9:10-23]) };
              ft_ret =
              (Rhint ([11:4-42]),
               (Tshape
                  { s_origin = Typing_defs_core.Missing_origin;
                    s_fields =
                    { (Typing_defs_core.TSFlit_str ([11:10-13], "x")) ->
                      { sft_optional = false;
                        sft_ty = (Rhint ([11:17-22]), (Tprim Tfloat)) };
                      (Typing_defs_core.TSFlit_str ([11:24-27], "y")) ->
                      { sft_optional = false;
                        sft_ty = (Rhint ([11:31-36]), (Tprim Tfloat)) } };
                    s_unknown_value = (Rhint ([11:38-41]), Tmixed) }));
              ft_flags =
              { Typing_defs_flags.Fun.return_disposable = false;
                async = false; generator = false; fun_kind = FSync;
                is_function_pointer = false; returns_readonly = false;
                readonly_this = false; support_dynamic_type = false;
                is_memoized = false; variadic = false };
              ft_cross_package = None; ft_instantiated = true }));
        fe_pos = [9:10-23]; fe_php_std_lib = false;
        fe_support_dynamic_type = false; fe_no_auto_dynamic = false;
        fe_no_auto_likes = false }));
  ("\\generic_shape",
   (Shallow_decl_defs.Fun
      { Typing_defs.fe_deprecated = None; fe_module = None;
        fe_package = None; fe_internal = false;
        fe_type =
        (Rwitness_from_decl ([15:10-23]),
         (Tfun
            { ft_tparams =
              [{ Typing_defs_core.tp_variance = Invariant;
                 tp_name = ([15:24-25], "T"); tp_constraints = [];
                 tp_reified = Erased; tp_user_attributes = [] }
                ];
              ft_where_constraints = [];
              ft_params =
              [{ fp_pos = [15:34-39]; fp_name = (Some "$arg1");
                 fp_type =
                 (Rhint ([15:27-33]),
                  (Ttuple
                     { t_required =
                       [(Rhint ([15:28-29]), (Tgeneric "T"));
                         (Rhint ([15:31-32]), (Tgeneric "T"))];
                       t_optional = [];
                       t_variadic = (Rhint ([15:27-33]), (Tunion [])) }));
                 fp_flags =
                 { Typing_defs_flags.FunParam.accept_disposable = false;
                   inout = false; is_optional = false; readonly = false;
                   ignore_readonly_error = false; splat = false;
                   named = false };
                 fp_def_value = None }
                ];
              ft_implicit_params = { capability = (CapDefaults [15:10-23]) };
              ft_ret =
              (Rhint ([15:42-48]),
               (Ttuple
                  { t_required =
                    [(Rhint ([15:43-44]), (Tgeneric "T"));
                      (Rhint ([15:46-47]), (Tgeneric "T"))];
                    t_optional = [];
                    t_variadic = (Rhint ([15:42-48]), (Tunion [])) }));
              ft_flags =
              { Typing_defs_flags.Fun.return_disposable = false;
                async = false; generator = false; fun_kind = FSync;
                is_function_pointer = false; returns_readonly = false;
                readonly_this = false; support_dynamic_type = false;
                is_memoized = false; variadic = false };
              ft_cross_package = None; ft_instantiated = true }));
        fe_pos = [15:10-23]; fe_php_std_lib = false;
        fe_support_dynamic_type = false; fe_no_auto_dynamic = false;
        fe_no_auto_likes = false }));
  ("\\TaggedCoordinate",
   (Shallow_decl_defs.Typedef
      { Typing_defs.td_module = None; td_pos = [19:6-22]; td_tparams = [];
        td_as_constraint = None; td_super_constraint = None;
        td_type_assignment =
        (Typing_defs.SimpleTypeDef (Transparent,
           (Rhint ([20:3-72]),
            (Tshape
               { s_origin = Typing_defs_core.Missing_origin;
                 s_fields =
                 { (Typing_defs_core.TSFlit_str ([20:27-34], "coord")) ->
                   { sft_optional = false;
                     sft_ty =
                     (Rhint ([20:38-71]),
                      (Tshape
                         { s_origin = Typing_defs_core.Missing_origin;
                           s_fields =
                           { (Typing_defs_core.TSFlit_str ([20:44-47], "x")) ->
                             { sft_optional = false;
                               sft_ty = (Rhint ([20:51-56]), (Tprim Tfloat))
                               };
                             (Typing_defs_core.TSFlit_str ([20:58-61], "y")) ->
                             { sft_optional = false;
                               sft_ty = (Rhint ([20:65-70]), (Tprim Tfloat))
                               } };
                           s_unknown_value =
                           (Rhint ([Pos.none]), (Tunion [])) }))
                     };
                   (Typing_defs_core.TSFlit_str ([20:10-15], "tag")) ->
                   { sft_optional = true;
                     sft_ty = (Rhint ([20:19-25]), (Tprim Tstring)) } };
                 s_unknown_value = (Rhint ([Pos.none]), (Tunion [])) }))
           ));
        td_is_ctx = false; td_attributes = []; td_internal = false;
        td_docs_url = None; td_package = None }))
  ]
