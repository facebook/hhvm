====================================================
array(0) {
}
----------------------------------------------------
vec(0) {
}
====================================================
====================================================
array(8) {
  [0]=>
  int(100)
  [1]=>
  string(4) "val1"
  [2]=>
  string(4) "val2"
  [3]=>
  int(400)
  [4]=>
  NULL
  [5]=>
  bool(true)
  [6]=>
  float(1.234)
  [7]=>
  object(stdClass) (0) {
  }
}
----------------------------------------------------
vec(8) {
  int(100)
  string(4) "val1"
  string(4) "val2"
  int(400)
  NULL
  bool(true)
  float(1.234)
  object(stdClass) (0) {
  }
}
====================================================
====================================================
array(8) {
  [1]=>
  int(10)
  ["key1"]=>
  string(4) "val1"
  [5]=>
  string(4) "val2"
  ["key2"]=>
  int(7)
  [10]=>
  NULL
  [15]=>
  bool(true)
  ["key3"]=>
  float(1.234)
  ["key4"]=>
  object(stdClass) (0) {
  }
}
----------------------------------------------------
vec(8) {
  int(10)
  string(4) "val1"
  string(4) "val2"
  int(7)
  NULL
  bool(true)
  float(1.234)
  object(stdClass) (0) {
  }
}
====================================================
====================================================
vec(0) {
}
----------------------------------------------------
vec(0) {
}
====================================================
====================================================
vec(10) {
  int(1)
  int(2)
  string(1) "a"
  string(1) "b"
  int(3)
  int(4)
  bool(false)
  NULL
  float(5.67)
  object(stdClass) (0) {
  }
}
----------------------------------------------------
vec(10) {
  int(1)
  int(2)
  string(1) "a"
  string(1) "b"
  int(3)
  int(4)
  bool(false)
  NULL
  float(5.67)
  object(stdClass) (0) {
  }
}
====================================================
====================================================
dict(0) {
}
----------------------------------------------------
vec(0) {
}
====================================================
====================================================
dict(8) {
  [1]=>
  int(10)
  ["key1"]=>
  string(4) "val1"
  [5]=>
  string(4) "val2"
  ["key2"]=>
  int(7)
  [10]=>
  NULL
  [15]=>
  bool(true)
  ["key3"]=>
  float(1.234)
  ["key4"]=>
  object(stdClass) (0) {
  }
}
----------------------------------------------------
vec(8) {
  int(10)
  string(4) "val1"
  string(4) "val2"
  int(7)
  NULL
  bool(true)
  float(1.234)
  object(stdClass) (0) {
  }
}
====================================================
====================================================
keyset(0) {
}
----------------------------------------------------
vec(0) {
}
====================================================
====================================================
keyset(5) {
  int(101)
  int(202)
  string(4) "val1"
  string(4) "val2"
  int(303)
}
----------------------------------------------------
vec(5) {
  int(101)
  int(202)
  string(4) "val1"
  string(4) "val2"
  int(303)
}
====================================================
====================================================
bool(false)
----------------------------------------------------
Exception: "Bool to vec conversion"
====================================================
====================================================
NULL
----------------------------------------------------
Exception: "Null to vec conversion"
====================================================
====================================================
int(123)
----------------------------------------------------
Exception: "Int to vec conversion"
====================================================
====================================================
float(1.23)
----------------------------------------------------
Exception: "Double to vec conversion"
====================================================
====================================================
string(4) "abcd"
----------------------------------------------------
Exception: "String to vec conversion"
====================================================
====================================================
object(IterableObj) (1) {
  ["position":"IterableObj":private]=>
  int(0)
}
----------------------------------------------------
vec(3) {
  string(3) "abc"
  string(3) "def"
  string(3) "ghi"
}
====================================================
====================================================
object(ThrowIterableObj) (1) {
  ["position":"ThrowIterableObj":private]=>
  int(0)
}
----------------------------------------------------
Exception: "ThrowIterableObj"
====================================================
====================================================
object(stdClass) (0) {
}
----------------------------------------------------
Exception: "Non-iterable object to vec conversion"
====================================================
====================================================
resource(1) of type (stream)
----------------------------------------------------
Exception: "Resource to vec conversion"
====================================================
====================================================
object(HH\Vector) (3) {
  [0]=>
  int(1)
  [1]=>
  int(2)
  [2]=>
  int(3)
}
----------------------------------------------------
vec(3) {
  int(1)
  int(2)
  int(3)
}
====================================================
====================================================
object(HH\Map) (2) {
  ["a"]=>
  int(100)
  [200]=>
  string(1) "b"
}
----------------------------------------------------
vec(2) {
  int(100)
  string(1) "b"
}
====================================================
====================================================
object(HH\Pair) (2) {
  [0]=>
  string(1) "a"
  [1]=>
  string(1) "b"
}
----------------------------------------------------
vec(2) {
  string(1) "a"
  string(1) "b"
}
====================================================
====================================================
object(HH\Set) (5) {
  int(5)
  int(4)
  int(3)
  int(2)
  int(1)
}
----------------------------------------------------
vec(5) {
  int(5)
  int(4)
  int(3)
  int(2)
  int(1)
}
====================================================
====================================================
object(AggregateObj) (0) {
}
----------------------------------------------------
vec(3) {
  string(3) "abc"
  string(3) "def"
  string(3) "ghi"
}
====================================================
====================================================
vec(0) {
}
----------------------------------------------------
array(0) {
}
dict(0) {
}
keyset(0) {
}
bool(false)
int(0)
float(0)

Notice: Vec to string conversion in %s on line %d
string(3) "Vec"
object(HH\Vector) (0) {
}
object(HH\Map) (0) {
}
object(HH\Set) (0) {
}
====================================================
====================================================
vec(4) {
  int(1)
  int(2)
  int(3)
  int(4)
}
----------------------------------------------------
array(4) {
  [0]=>
  int(1)
  [1]=>
  int(2)
  [2]=>
  int(3)
  [3]=>
  int(4)
}
dict(4) {
  [0]=>
  int(1)
  [1]=>
  int(2)
  [2]=>
  int(3)
  [3]=>
  int(4)
}
keyset(4) {
  int(1)
  int(2)
  int(3)
  int(4)
}
bool(true)
int(1)
float(1)

Notice: Vec to string conversion in %s on line %d
string(3) "Vec"
object(HH\Vector) (4) {
  [0]=>
  int(1)
  [1]=>
  int(2)
  [2]=>
  int(3)
  [3]=>
  int(4)
}
object(HH\Map) (4) {
  [0]=>
  int(1)
  [1]=>
  int(2)
  [2]=>
  int(3)
  [3]=>
  int(4)
}
object(HH\Set) (4) {
  int(1)
  int(2)
  int(3)
  int(4)
}
====================================================
====================================================
vec(3) {
  string(1) "z"
  string(1) "y"
  string(1) "x"
}
----------------------------------------------------
array(3) {
  [0]=>
  string(1) "z"
  [1]=>
  string(1) "y"
  [2]=>
  string(1) "x"
}
dict(3) {
  [0]=>
  string(1) "z"
  [1]=>
  string(1) "y"
  [2]=>
  string(1) "x"
}
keyset(3) {
  string(1) "z"
  string(1) "y"
  string(1) "x"
}
bool(true)
int(1)
float(1)

Notice: Vec to string conversion in %s on line %d
string(3) "Vec"
object(HH\Vector) (3) {
  [0]=>
  string(1) "z"
  [1]=>
  string(1) "y"
  [2]=>
  string(1) "x"
}
object(HH\Map) (3) {
  [0]=>
  string(1) "z"
  [1]=>
  string(1) "y"
  [2]=>
  string(1) "x"
}
object(HH\Set) (3) {
  string(1) "z"
  string(1) "y"
  string(1) "x"
}
====================================================
====================================================
vec(4) {
  int(1)
  string(1) "a"
  int(2)
  string(1) "b"
}
----------------------------------------------------
array(4) {
  [0]=>
  int(1)
  [1]=>
  string(1) "a"
  [2]=>
  int(2)
  [3]=>
  string(1) "b"
}
dict(4) {
  [0]=>
  int(1)
  [1]=>
  string(1) "a"
  [2]=>
  int(2)
  [3]=>
  string(1) "b"
}
keyset(4) {
  int(1)
  string(1) "a"
  int(2)
  string(1) "b"
}
bool(true)
int(1)
float(1)

Notice: Vec to string conversion in %s on line %d
string(3) "Vec"
object(HH\Vector) (4) {
  [0]=>
  int(1)
  [1]=>
  string(1) "a"
  [2]=>
  int(2)
  [3]=>
  string(1) "b"
}
object(HH\Map) (4) {
  [0]=>
  int(1)
  [1]=>
  string(1) "a"
  [2]=>
  int(2)
  [3]=>
  string(1) "b"
}
object(HH\Set) (4) {
  int(1)
  string(1) "a"
  int(2)
  string(1) "b"
}
====================================================
====================================================
vec(2) {
  vec(2) {
    int(1)
    int(2)
  }
  vec(3) {
    int(3)
    int(4)
    int(5)
  }
}
----------------------------------------------------
array(2) {
  [0]=>
  vec(2) {
    int(1)
    int(2)
  }
  [1]=>
  vec(3) {
    int(3)
    int(4)
    int(5)
  }
}
dict(2) {
  [0]=>
  vec(2) {
    int(1)
    int(2)
  }
  [1]=>
  vec(3) {
    int(3)
    int(4)
    int(5)
  }
}
Exception: "Invalid keyset key: expected a key of type int or string, vec given"
bool(true)
int(1)
float(1)

Notice: Vec to string conversion in %s on line %d
string(3) "Vec"
object(HH\Vector) (2) {
  [0]=>
  vec(2) {
    int(1)
    int(2)
  }
  [1]=>
  vec(3) {
    int(3)
    int(4)
    int(5)
  }
}
object(HH\Map) (2) {
  [0]=>
  vec(2) {
    int(1)
    int(2)
  }
  [1]=>
  vec(3) {
    int(3)
    int(4)
    int(5)
  }
}
Exception: "Only integer values and string values may be used with Sets"
====================================================
====================================================
vec(5) {
  int(1)
  int(2)
  bool(false)
  string(1) "a"
  string(1) "b"
}
----------------------------------------------------
array(5) {
  [0]=>
  int(1)
  [1]=>
  int(2)
  [2]=>
  bool(false)
  [3]=>
  string(1) "a"
  [4]=>
  string(1) "b"
}
dict(5) {
  [0]=>
  int(1)
  [1]=>
  int(2)
  [2]=>
  bool(false)
  [3]=>
  string(1) "a"
  [4]=>
  string(1) "b"
}
Exception: "Invalid keyset key: expected a key of type int or string, bool given"
bool(true)
int(1)
float(1)

Notice: Vec to string conversion in %s on line %d
string(3) "Vec"
object(HH\Vector) (5) {
  [0]=>
  int(1)
  [1]=>
  int(2)
  [2]=>
  bool(false)
  [3]=>
  string(1) "a"
  [4]=>
  string(1) "b"
}
object(HH\Map) (5) {
  [0]=>
  int(1)
  [1]=>
  int(2)
  [2]=>
  bool(false)
  [3]=>
  string(1) "a"
  [4]=>
  string(1) "b"
}
Exception: "Only integer values and string values may be used with Sets"
====================================================
====================================================
vec(2) {
  int(1)
  string(1) "1"
}
----------------------------------------------------
array(2) {
  [0]=>
  int(1)
  [1]=>
  string(1) "1"
}
dict(2) {
  [0]=>
  int(1)
  [1]=>
  string(1) "1"
}
keyset(2) {
  int(1)
  string(1) "1"
}
bool(true)
int(1)
float(1)

Notice: Vec to string conversion in %s on line %d
string(3) "Vec"
object(HH\Vector) (2) {
  [0]=>
  int(1)
  [1]=>
  string(1) "1"
}
object(HH\Map) (2) {
  [0]=>
  int(1)
  [1]=>
  string(1) "1"
}
object(HH\Set) (2) {
  int(1)
  string(1) "1"
}
====================================================
====================================================
vec(4) {
  string(3) "abc"
  int(123)
  int(123)
  string(3) "abc"
}
----------------------------------------------------
array(4) {
  [0]=>
  string(3) "abc"
  [1]=>
  int(123)
  [2]=>
  int(123)
  [3]=>
  string(3) "abc"
}
dict(4) {
  [0]=>
  string(3) "abc"
  [1]=>
  int(123)
  [2]=>
  int(123)
  [3]=>
  string(3) "abc"
}
keyset(2) {
  string(3) "abc"
  int(123)
}
bool(true)
int(1)
float(1)

Notice: Vec to string conversion in %s on line %d
string(3) "Vec"
object(HH\Vector) (4) {
  [0]=>
  string(3) "abc"
  [1]=>
  int(123)
  [2]=>
  int(123)
  [3]=>
  string(3) "abc"
}
object(HH\Map) (4) {
  [0]=>
  string(3) "abc"
  [1]=>
  int(123)
  [2]=>
  int(123)
  [3]=>
  string(3) "abc"
}
object(HH\Set) (2) {
  string(3) "abc"
  int(123)
}
====================================================
