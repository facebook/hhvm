// Autogenerated by Thrift for thrift/compiler/test/fixtures/terse_write/src/terse_write.thrift
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//  @generated

package terse_write

import (
    "maps"

    thrift "github.com/facebook/fbthrift/thrift/lib/go/thrift/types"
    metadata "github.com/facebook/fbthrift/thrift/lib/thrift/metadata"
)

// (needed to ensure safety because of naive import list construction)
var _ = thrift.VOID
var _ = maps.Copy[map[int]int, map[int]int]
var _ = metadata.GoUnusedProtection__

// Premade Thrift types
var (
    premadeThriftType_terse_write_MyEnum =
        &metadata.ThriftType{
            TEnum:
                &metadata.ThriftEnumType{
                    Name: "terse_write.MyEnum",
                },
        }
    premadeThriftType_terse_write_MyStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "terse_write.MyStruct",
                },
        }
    premadeThriftType_bool =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_BOOL_TYPE),
        }
    premadeThriftType_byte =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_BYTE_TYPE),
        }
    premadeThriftType_i16 =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_I16_TYPE),
        }
    premadeThriftType_i32 =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_I32_TYPE),
        }
    premadeThriftType_i64 =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_I64_TYPE),
        }
    premadeThriftType_float =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_FLOAT_TYPE),
        }
    premadeThriftType_double =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_DOUBLE_TYPE),
        }
    premadeThriftType_string =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_STRING_TYPE),
        }
    premadeThriftType_binary =
        &metadata.ThriftType{
            TPrimitive:
                thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_BINARY_TYPE),
        }
    premadeThriftType_list_i16 =
        &metadata.ThriftType{
            TList:
                &metadata.ThriftListType{
                    ValueType: premadeThriftType_i16,
                },
        }
    premadeThriftType_set_i16 =
        &metadata.ThriftType{
            TSet:
                &metadata.ThriftSetType{
                    ValueType: premadeThriftType_i16,
                },
        }
    premadeThriftType_map_i16_i16 =
        &metadata.ThriftType{
            TMap:
                &metadata.ThriftMapType{
                    KeyType:   premadeThriftType_i16,
                    ValueType: premadeThriftType_i16,
                },
        }
    premadeThriftType_terse_write_MyUnion =
        &metadata.ThriftType{
            TUnion:
                &metadata.ThriftUnionType{
                    Name: "terse_write.MyUnion",
                },
        }
    premadeThriftType_terse_write_MyStructWithCustomDefault =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "terse_write.MyStructWithCustomDefault",
                },
        }
    premadeThriftType_terse_write_StructLevelTerseStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "terse_write.StructLevelTerseStruct",
                },
        }
    premadeThriftType_terse_write_FieldLevelTerseStruct =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "terse_write.FieldLevelTerseStruct",
                },
        }
    premadeThriftType_terse_write_MyInteger =
        &metadata.ThriftType{
            TTypedef:
                &metadata.ThriftTypedefType{
                    Name:           "terse_write.MyInteger",
                    UnderlyingType: premadeThriftType_i32,
                    StructuredAnnotations: []*metadata.ThriftConstStruct{
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "hack.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("\\Adapter1"),
                                    },
                            },
                        },
                        &metadata.ThriftConstStruct{
                            Type: &metadata.ThriftStructType{
                                Name: "cpp.Adapter",
                            },
                            Fields: map[string]*metadata.ThriftConstValue{
                                "name":
                                    &metadata.ThriftConstValue{
                                        CvString: thrift.Pointerize("::my::Adapter"),
                                    },
                            },
                        },
                    },
                },
        }
    premadeThriftType_terse_write_AdaptedFields =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "terse_write.AdaptedFields",
                },
        }
    premadeThriftType_terse_write_TerseException =
        &metadata.ThriftType{
            TStruct:
                &metadata.ThriftStructType{
                    Name: "terse_write.TerseException",
                },
        }
)

// Premade struct metadatas
var (
    premadeStructMetadata_MyStruct =
        &metadata.ThriftStruct{
            Name:    "terse_write.MyStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
            },
        }
    premadeStructMetadata_MyUnion =
        &metadata.ThriftStruct{
            Name:    "terse_write.MyUnion",
            IsUnion: true,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "bool_field",
                    IsOptional: false,
                    Type:       premadeThriftType_bool,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "byte_field",
                    IsOptional: false,
                    Type:       premadeThriftType_byte,
                },
                &metadata.ThriftField{
                    Id:         3,
                    Name:       "short_field",
                    IsOptional: false,
                    Type:       premadeThriftType_i16,
                },
                &metadata.ThriftField{
                    Id:         4,
                    Name:       "int_field",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
                &metadata.ThriftField{
                    Id:         5,
                    Name:       "long_field",
                    IsOptional: false,
                    Type:       premadeThriftType_i64,
                },
                &metadata.ThriftField{
                    Id:         6,
                    Name:       "float_field",
                    IsOptional: false,
                    Type:       premadeThriftType_float,
                },
                &metadata.ThriftField{
                    Id:         7,
                    Name:       "double_field",
                    IsOptional: false,
                    Type:       premadeThriftType_double,
                },
                &metadata.ThriftField{
                    Id:         8,
                    Name:       "string_field",
                    IsOptional: false,
                    Type:       premadeThriftType_string,
                },
                &metadata.ThriftField{
                    Id:         9,
                    Name:       "binary_field",
                    IsOptional: false,
                    Type:       premadeThriftType_binary,
                },
                &metadata.ThriftField{
                    Id:         10,
                    Name:       "enum_field",
                    IsOptional: false,
                    Type:       premadeThriftType_terse_write_MyEnum,
                },
                &metadata.ThriftField{
                    Id:         11,
                    Name:       "list_field",
                    IsOptional: false,
                    Type:       premadeThriftType_list_i16,
                },
                &metadata.ThriftField{
                    Id:         12,
                    Name:       "set_field",
                    IsOptional: false,
                    Type:       premadeThriftType_set_i16,
                },
                &metadata.ThriftField{
                    Id:         13,
                    Name:       "map_field",
                    IsOptional: false,
                    Type:       premadeThriftType_map_i16_i16,
                },
                &metadata.ThriftField{
                    Id:         14,
                    Name:       "struct_field",
                    IsOptional: false,
                    Type:       premadeThriftType_terse_write_MyStruct,
                },
            },
        }
    premadeStructMetadata_MyStructWithCustomDefault =
        &metadata.ThriftStruct{
            Name:    "terse_write.MyStructWithCustomDefault",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "field1",
                    IsOptional: false,
                    Type:       premadeThriftType_i64,
                },
            },
        }
    premadeStructMetadata_StructLevelTerseStruct =
        &metadata.ThriftStruct{
            Name:    "terse_write.StructLevelTerseStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "bool_field",
                    IsOptional: false,
                    Type:       premadeThriftType_bool,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "byte_field",
                    IsOptional: false,
                    Type:       premadeThriftType_byte,
                },
                &metadata.ThriftField{
                    Id:         3,
                    Name:       "short_field",
                    IsOptional: false,
                    Type:       premadeThriftType_i16,
                },
                &metadata.ThriftField{
                    Id:         4,
                    Name:       "int_field",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
                &metadata.ThriftField{
                    Id:         5,
                    Name:       "long_field",
                    IsOptional: false,
                    Type:       premadeThriftType_i64,
                },
                &metadata.ThriftField{
                    Id:         6,
                    Name:       "float_field",
                    IsOptional: false,
                    Type:       premadeThriftType_float,
                },
                &metadata.ThriftField{
                    Id:         7,
                    Name:       "double_field",
                    IsOptional: false,
                    Type:       premadeThriftType_double,
                },
                &metadata.ThriftField{
                    Id:         8,
                    Name:       "string_field",
                    IsOptional: false,
                    Type:       premadeThriftType_string,
                },
                &metadata.ThriftField{
                    Id:         9,
                    Name:       "binary_field",
                    IsOptional: false,
                    Type:       premadeThriftType_binary,
                },
                &metadata.ThriftField{
                    Id:         10,
                    Name:       "enum_field",
                    IsOptional: false,
                    Type:       premadeThriftType_terse_write_MyEnum,
                },
                &metadata.ThriftField{
                    Id:         11,
                    Name:       "list_field",
                    IsOptional: false,
                    Type:       premadeThriftType_list_i16,
                },
                &metadata.ThriftField{
                    Id:         12,
                    Name:       "set_field",
                    IsOptional: false,
                    Type:       premadeThriftType_set_i16,
                },
                &metadata.ThriftField{
                    Id:         13,
                    Name:       "map_field",
                    IsOptional: false,
                    Type:       premadeThriftType_map_i16_i16,
                },
                &metadata.ThriftField{
                    Id:         14,
                    Name:       "struct_field",
                    IsOptional: false,
                    Type:       premadeThriftType_terse_write_MyStruct,
                },
                &metadata.ThriftField{
                    Id:         15,
                    Name:       "union_field",
                    IsOptional: false,
                    Type:       premadeThriftType_terse_write_MyUnion,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "thrift.TerseWrite",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                    },
                },
            },
        }
    premadeStructMetadata_FieldLevelTerseStruct =
        &metadata.ThriftStruct{
            Name:    "terse_write.FieldLevelTerseStruct",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "terse_bool_field",
                    IsOptional: false,
                    Type:       premadeThriftType_bool,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "terse_byte_field",
                    IsOptional: false,
                    Type:       premadeThriftType_byte,
                },
                &metadata.ThriftField{
                    Id:         3,
                    Name:       "terse_short_field",
                    IsOptional: false,
                    Type:       premadeThriftType_i16,
                },
                &metadata.ThriftField{
                    Id:         4,
                    Name:       "terse_int_field",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
                &metadata.ThriftField{
                    Id:         5,
                    Name:       "terse_long_field",
                    IsOptional: false,
                    Type:       premadeThriftType_i64,
                },
                &metadata.ThriftField{
                    Id:         6,
                    Name:       "terse_float_field",
                    IsOptional: false,
                    Type:       premadeThriftType_float,
                },
                &metadata.ThriftField{
                    Id:         7,
                    Name:       "terse_double_field",
                    IsOptional: false,
                    Type:       premadeThriftType_double,
                },
                &metadata.ThriftField{
                    Id:         8,
                    Name:       "terse_string_field",
                    IsOptional: false,
                    Type:       premadeThriftType_string,
                },
                &metadata.ThriftField{
                    Id:         9,
                    Name:       "terse_binary_field",
                    IsOptional: false,
                    Type:       premadeThriftType_binary,
                },
                &metadata.ThriftField{
                    Id:         10,
                    Name:       "terse_enum_field",
                    IsOptional: false,
                    Type:       premadeThriftType_terse_write_MyEnum,
                },
                &metadata.ThriftField{
                    Id:         11,
                    Name:       "terse_list_field",
                    IsOptional: false,
                    Type:       premadeThriftType_list_i16,
                },
                &metadata.ThriftField{
                    Id:         12,
                    Name:       "terse_set_field",
                    IsOptional: false,
                    Type:       premadeThriftType_set_i16,
                },
                &metadata.ThriftField{
                    Id:         13,
                    Name:       "terse_map_field",
                    IsOptional: false,
                    Type:       premadeThriftType_map_i16_i16,
                },
                &metadata.ThriftField{
                    Id:         14,
                    Name:       "terse_struct_field",
                    IsOptional: false,
                    Type:       premadeThriftType_terse_write_MyStruct,
                },
                &metadata.ThriftField{
                    Id:         15,
                    Name:       "bool_field",
                    IsOptional: false,
                    Type:       premadeThriftType_bool,
                },
                &metadata.ThriftField{
                    Id:         16,
                    Name:       "byte_field",
                    IsOptional: false,
                    Type:       premadeThriftType_byte,
                },
                &metadata.ThriftField{
                    Id:         17,
                    Name:       "short_field",
                    IsOptional: false,
                    Type:       premadeThriftType_i16,
                },
                &metadata.ThriftField{
                    Id:         18,
                    Name:       "int_field",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
                &metadata.ThriftField{
                    Id:         19,
                    Name:       "long_field",
                    IsOptional: false,
                    Type:       premadeThriftType_i64,
                },
                &metadata.ThriftField{
                    Id:         20,
                    Name:       "float_field",
                    IsOptional: false,
                    Type:       premadeThriftType_float,
                },
                &metadata.ThriftField{
                    Id:         21,
                    Name:       "double_field",
                    IsOptional: false,
                    Type:       premadeThriftType_double,
                },
                &metadata.ThriftField{
                    Id:         22,
                    Name:       "string_field",
                    IsOptional: false,
                    Type:       premadeThriftType_string,
                },
                &metadata.ThriftField{
                    Id:         23,
                    Name:       "binary_field",
                    IsOptional: false,
                    Type:       premadeThriftType_binary,
                },
                &metadata.ThriftField{
                    Id:         24,
                    Name:       "enum_field",
                    IsOptional: false,
                    Type:       premadeThriftType_terse_write_MyEnum,
                },
                &metadata.ThriftField{
                    Id:         25,
                    Name:       "list_field",
                    IsOptional: false,
                    Type:       premadeThriftType_list_i16,
                },
                &metadata.ThriftField{
                    Id:         26,
                    Name:       "set_field",
                    IsOptional: false,
                    Type:       premadeThriftType_set_i16,
                },
                &metadata.ThriftField{
                    Id:         27,
                    Name:       "map_field",
                    IsOptional: false,
                    Type:       premadeThriftType_map_i16_i16,
                },
                &metadata.ThriftField{
                    Id:         28,
                    Name:       "struct_field",
                    IsOptional: false,
                    Type:       premadeThriftType_terse_write_MyStruct,
                },
                &metadata.ThriftField{
                    Id:         29,
                    Name:       "terse_union_field",
                    IsOptional: false,
                    Type:       premadeThriftType_terse_write_MyUnion,
                },
                &metadata.ThriftField{
                    Id:         30,
                    Name:       "union_field",
                    IsOptional: false,
                    Type:       premadeThriftType_terse_write_MyUnion,
                },
            },
        }
    premadeStructMetadata_AdaptedFields =
        &metadata.ThriftStruct{
            Name:    "terse_write.AdaptedFields",
            IsUnion: false,
            Fields:  []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "field1",
                    IsOptional: false,
                    Type:       premadeThriftType_terse_write_MyInteger,
                },
                &metadata.ThriftField{
                    Id:         2,
                    Name:       "field2",
                    IsOptional: false,
                    Type:       premadeThriftType_i32,
                },
                &metadata.ThriftField{
                    Id:         3,
                    Name:       "field3",
                    IsOptional: false,
                    Type:       premadeThriftType_terse_write_MyInteger,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "thrift.TerseWrite",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                    },
                },
            },
        }
    premadeStructMetadata_TerseException =
        &metadata.ThriftException{
            Name: "terse_write.TerseException",
            Fields: []*metadata.ThriftField{
                &metadata.ThriftField{
                    Id:         1,
                    Name:       "msg",
                    IsOptional: false,
                    Type:       premadeThriftType_string,
                },
            },
            StructuredAnnotations: []*metadata.ThriftConstStruct{
                &metadata.ThriftConstStruct{
                    Type: &metadata.ThriftStructType{
                        Name: "thrift.TerseWrite",
                    },
                    Fields: map[string]*metadata.ThriftConstValue{
                    },
                },
            },
        }
)

var premadeThriftTypesMap = func() map[string]*metadata.ThriftType {
    fbthriftThriftTypesMap := make(map[string]*metadata.ThriftType)
    fbthriftThriftTypesMap["terse_write.MyEnum"] = premadeThriftType_terse_write_MyEnum
    fbthriftThriftTypesMap["terse_write.MyStruct"] = premadeThriftType_terse_write_MyStruct
    fbthriftThriftTypesMap["bool"] = premadeThriftType_bool
    fbthriftThriftTypesMap["byte"] = premadeThriftType_byte
    fbthriftThriftTypesMap["i16"] = premadeThriftType_i16
    fbthriftThriftTypesMap["i32"] = premadeThriftType_i32
    fbthriftThriftTypesMap["i64"] = premadeThriftType_i64
    fbthriftThriftTypesMap["float"] = premadeThriftType_float
    fbthriftThriftTypesMap["double"] = premadeThriftType_double
    fbthriftThriftTypesMap["string"] = premadeThriftType_string
    fbthriftThriftTypesMap["binary"] = premadeThriftType_binary
    fbthriftThriftTypesMap["terse_write.MyUnion"] = premadeThriftType_terse_write_MyUnion
    fbthriftThriftTypesMap["terse_write.MyStructWithCustomDefault"] = premadeThriftType_terse_write_MyStructWithCustomDefault
    fbthriftThriftTypesMap["terse_write.StructLevelTerseStruct"] = premadeThriftType_terse_write_StructLevelTerseStruct
    fbthriftThriftTypesMap["terse_write.FieldLevelTerseStruct"] = premadeThriftType_terse_write_FieldLevelTerseStruct
    fbthriftThriftTypesMap["terse_write.MyInteger"] = premadeThriftType_terse_write_MyInteger
    fbthriftThriftTypesMap["terse_write.AdaptedFields"] = premadeThriftType_terse_write_AdaptedFields
    fbthriftThriftTypesMap["terse_write.TerseException"] = premadeThriftType_terse_write_TerseException
    return fbthriftThriftTypesMap
}()

var structMetadatas = func() []*metadata.ThriftStruct {
    fbthriftResults := make([]*metadata.ThriftStruct, 0)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_MyStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_MyUnion)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_MyStructWithCustomDefault)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_StructLevelTerseStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_FieldLevelTerseStruct)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_AdaptedFields)
    return fbthriftResults
}()

var exceptionMetadatas = func() []*metadata.ThriftException {
    fbthriftResults := make([]*metadata.ThriftException, 0)
    fbthriftResults = append(fbthriftResults, premadeStructMetadata_TerseException)
    return fbthriftResults
}()

var enumMetadatas = func() []*metadata.ThriftEnum {
    fbthriftResults := make([]*metadata.ThriftEnum, 0)
    fbthriftResults = append(fbthriftResults,
        &metadata.ThriftEnum{
            Name:     "terse_write.MyEnum",
            Elements: map[int32]string{
                0: "ME0",
                1: "ME1",
            },
        },
    )
    return fbthriftResults
}()

var serviceMetadatas = func() []*metadata.ThriftService {
    fbthriftResults := make([]*metadata.ThriftService, 0)
    return fbthriftResults
}()

// Thrift metadata for this package, as well as all of its recursive imports.
var packageThriftMetadata = func() *metadata.ThriftMetadata {
    allEnumsMap := make(map[string]*metadata.ThriftEnum)
    allStructsMap := make(map[string]*metadata.ThriftStruct)
    allExceptionsMap := make(map[string]*metadata.ThriftException)
    allServicesMap := make(map[string]*metadata.ThriftService)

    // Add enum metadatas from the current program...
    for _, enumMetadata := range enumMetadatas {
        allEnumsMap[enumMetadata.GetName()] = enumMetadata
    }
    // Add struct metadatas from the current program...
    for _, structMetadata := range structMetadatas {
        allStructsMap[structMetadata.GetName()] = structMetadata
    }
    // Add exception metadatas from the current program...
    for _, exceptionMetadata := range exceptionMetadatas {
        allExceptionsMap[exceptionMetadata.GetName()] = exceptionMetadata
    }
    // Add service metadatas from the current program...
    for _, serviceMetadata := range serviceMetadatas {
        allServicesMap[serviceMetadata.GetName()] = serviceMetadata
    }

    // Obtain Thrift metadatas from recursively included programs...
    var recursiveThriftMetadatas []*metadata.ThriftMetadata

    // ...now merge metadatas from recursively included programs.
    for _, thriftMetadata := range recursiveThriftMetadatas {
        maps.Copy(allEnumsMap, thriftMetadata.GetEnums())
        maps.Copy(allStructsMap, thriftMetadata.GetStructs())
        maps.Copy(allExceptionsMap, thriftMetadata.GetExceptions())
        maps.Copy(allServicesMap, thriftMetadata.GetServices())
    }

    return metadata.NewThriftMetadata().
        SetEnums(allEnumsMap).
        SetStructs(allStructsMap).
        SetExceptions(allExceptionsMap).
        SetServices(allServicesMap)
}()

// GetMetadataThriftType (INTERNAL USE ONLY).
// Returns metadata ThriftType for a given full type name.
func GetMetadataThriftType(fullName string) *metadata.ThriftType {
    return premadeThriftTypesMap[fullName]
}

// GetThriftMetadata returns complete Thrift metadata for current and imported packages.
func GetThriftMetadata() *metadata.ThriftMetadata {
    return packageThriftMetadata
}

// GetThriftMetadataForService returns Thrift metadata for the given service.
func GetThriftMetadataForService(scopedServiceName string) *metadata.ThriftMetadata {
    allServicesMap := packageThriftMetadata.GetServices()
    relevantServicesMap := make(map[string]*metadata.ThriftService)

    serviceMetadata := allServicesMap[scopedServiceName]
    // Visit and record all recursive parents of the target service.
    for serviceMetadata != nil {
        relevantServicesMap[serviceMetadata.GetName()] = serviceMetadata
        if serviceMetadata.IsSetParent() {
            serviceMetadata = allServicesMap[serviceMetadata.GetParent()]
        } else {
            serviceMetadata = nil
        }
    }

    return metadata.NewThriftMetadata().
        SetEnums(packageThriftMetadata.GetEnums()).
        SetStructs(packageThriftMetadata.GetStructs()).
        SetExceptions(packageThriftMetadata.GetExceptions()).
        SetServices(relevantServicesMap)
}
